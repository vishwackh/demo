(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "./$$_lazy_route_resource lazy recursive":
/*!******************************************************!*\
  !*** ./$$_lazy_route_resource lazy namespace object ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/Reports/memberreport/memberreport.component.html":
/*!********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/Reports/memberreport/memberreport.component.html ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n    <div class=\"card\" style=\"margin: 10px 0px 10px 0px;\">\n        <div class=\"card-header\">Member Reports</div>\n        <form novalidate [formGroup]=\"MemberReportForm\" class=\"form-horizontal\">\n            <div style=\"padding: 1% 2%;\">\n                <div class=\"row\">\n                    <div class=\"col-md-1\">\n                        <div class=\"custom-control custom-radio\">\n                            <input type=\"radio\" class=\"custom-control-input\" id=\"All\" formControlName=\"adminFlag\"\n                                value=\"\" [(ngModel)]=\"MemberReport.adminFlag\" (change)=\"onItemChange($event.target.value)\">\n                            <label class=\"custom-control-label\" for=\"All\">All</label>\n                        </div>\n                    </div>\n                    <div class=\"col-md-2\">\n                        <div class=\"custom-control custom-radio\">\n                            <input type=\"radio\" class=\"custom-control-input\" id=\"selfregistered\"\n                                formControlName=\"adminFlag\" value=\"2\" [(ngModel)]=\"MemberReport.adminFlag\" (change)=\"onItemChange($event.target.value)\">\n                            <label class=\"custom-control-label\" for=\"selfregistered\">Self Registered Member</label>\n                        </div>\n                    </div>\n                    <div class=\"col-md-3\">\n                        <div class=\"custom-control custom-radio\">\n                            <input type=\"radio\" class=\"custom-control-input\" id=\"registeredbystaff\"\n                                formControlName=\"adminFlag\" value=\"1\" [(ngModel)]=\"MemberReport.adminFlag\" (change)=\"onItemChange($event.target.value)\">\n                            <label class=\"custom-control-label\" for=\"registeredbystaff\">Member Registered By Internal\n                                Staff</label>\n                        </div>\n                    </div>\n                    <div class=\"col-md-3\" *ngIf=\"showStaffList  == true\">\n                        <label>Staff</label>\n                        <select class=\"custom-select\" aria-label=\"Example select with button addon\" formControlName=\"staffUserId\" [(ngModel)]=\"MemberReport.staffUserId\">\n                            <option value=\"0\">---Select Staff----</option>\n                            <option *ngFor=\"let sd of staffdata\" value={{sd.userDto.userId}}>{{sd.name}}</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"row\" style=\"padding: 1% 0%;\">\n                    <div class=\"col-md-3\">\n                        <label for=\"exampleForm2\">Member Type</label>\n                        <select class=\"custom-select\" aria-label=\"Example select with button addon\" formControlName=\"remarks\" [(ngModel)]=\"MemberReport.remarks\">\n                            <option value=\"\" >-All-</option>\n                            <option value=\"REGISTRATION\">Basic Member</option>\n                            <option value=\"PROFILE\">Profile Member</option>\n                            <option value=\"MY WEB PAGE\">Premium Profile Members\n                            </option>\n                        </select>\n                    </div>\n\n                    <div class=\"col-md-2\">\n                        <label for=\"startDate\">From Date</label>\n                        <input id=\"startDate\" placeholder=\"DD-MM-YYYY\" formControlName=\"startDate\" autocomplete=\"off\"\n                            [(ngModel)]=\"MemberReport.startDate\" class=\"form-control\" [minDate]=\"minstartDate\"\n                            [maxDate]=\"maxstartDate\" class=\"form-control\" type=\"text\" bsDatepicker\n                            [bsConfig]=\"datePickerConfig\" (ngModelChange)=\"OndateChange($event)\" />\n                    </div>\n                    <div class=\"col-md-2\">\n                        <label for=\"endDate\">To Date</label>\n                        <input id=\"endDate\" placeholder=\"DD-MM-YYYY\" formControlName=\"endDate\" autocomplete=\"off\"\n                            [(ngModel)]=\"MemberReport.endDate\" class=\"form-control\" [minDate]=\"minendDate\"\n                            [maxDate]=\"maxendDate\" type=\"text\" class=\"form-control\" bsDatepicker\n                            [bsConfig]=\"datePickerConfig\" (ngModelChange)=\"OndateChange($event)\" />\n                    </div>\n                </div>\n                <div class=\"row\" style=\"padding: 1% 0%;\">\n                    <div class=\"col-md-12\" style=\"text-align:left;\">\n                        <button type=\"button\" class=\"btn btn-success\" style=\"margin-right: 13px;\" (click)=\"generateReport()\">Submit</button>\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"Clear();\">Clear </button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n\n<div class=\"container-fluid\">\n    <div class=\"card \">\n        <div class=\"card-header\">\n            Member Report Details\n        </div>\n        <div class=\"card-body\">\n            <div style=\"text-align: right;margin-bottom: 8px;\">\n                <button type=\"button \" class=\"btn btn-success\" mdbRippleRadius style=\"margin-right: 13px;\" (click)=\"printComponent('component1')\"><i\n                        class=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></i>\n                    Export To PDF</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"ExportToExcel()\"><i class=\"fa fa-file-excel-o\" aria-hidden=\"true\"\n                        ></i>Export To Excel</button>\n            </div>\n            <div id=\"component1\">\n                <div class=\"row\">\n                    <div class=\"col-md-1\">\n                        <img _ngcontent-qps-c4=\"\" src=\"./../../assets/images/logo/logo.png\"\n                            style=\"width: 100%;height: auto;margin: auto; display: block;\">\n                    </div>\n\n                    <div class=\"col-md-8\" style=\"text-align: center;\">\n                        <div>\n                            <p class=\"report-heading\">ಸಿನಿಘಮ|Sinighama</p>\n                            <p style=\"margin-top: -5px;\">Srinivasa Nagar, Bank colony, Bengaluru - 560050</p>\n                        </div>\n                        <div>\n                            <p class=\"report-name\">Report Name : Member Report</p>\n                        </div>\n                        <div>\n                            <p class=\"date\">From - {{MemberReport.startDate | date:'dd-MM-yyyy' }} &nbsp;To -&nbsp;\n                                {{MemberReport.endDate | date:'dd-MM-yyyy'}}\n                            </p>\n                        </div>\n                        <!-- <span style=\"font-weight: bold; font-size: 18px;\">Date:</span> -->\n                    </div>\n                    <div class=\"col-md-3\">\n                        <p> Report Generated Date : {{currentDate | date:'dd-MM-yyyy, h:mm a'}}</p>\n                    </div>\n                </div>\n\n                <table class=\"table table-striped table-bordered table-sm row-border hover\" #TABLE #table\n                    style=\"width: 100%\">\n                    <thead>\n                        <tr class=\"thead-dark\">\n                            <th>Sl No.</th>\n                            <th style=\"width:30%\">Member Name</th>\n                            <th>Mobile No.</th>\n                            <th>Email Id</th>\n                            <th>Member Type</th>\n                            <th>Registered Date</th>\n                            <th>Registered By</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let d of memberRecords; let i=index\">\n                            <td>{{i + 1}}</td>\n                            <td><img [src]=\"d.profileImage\" style=\"width: 10%;height: auto;\">&nbsp;{{d.firstName}}&nbsp;{{d.middleName}}&nbsp;{{d.lastName}}</td>\n                            <td>{{d.mobile}}</td>\n                            <td>{{d.email}}</td>\n                            <td>{{d.remarks}}</td>\n                            <td>{{d.createdDate | date:'dd-MM-yyyy'}}</td>\n                            <td>{{d.userName}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/Reports/usernotregistration/usernotregistration.component.html":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/Reports/usernotregistration/usernotregistration.component.html ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n  <div class=\"card\" style=\"margin: 10px 0px 10px 0px;\">\n    <div class=\"card-header\">User Not Registration Report</div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <form novalidate [formGroup]=\"UserReportForm\" class=\"form-horizontal\">\n          <div class=\"card-body\" style=\"padding-top: 0px\">\n            <div class=\"row\" style=\"margin-top: 10px;\">\n              <div class=\"col-md-2\">\n                <label for=\"startDate\">From Date</label><span style=\"color:red;\">*</span>\n                <input id=\"startDate\" formControlName=\"startDate\" placeholder=\"DD-MM-YYYY\" autocomplete=\"off\"\n                  [minDate]=\"minstartDate\" [maxDate]=\"maxstartDate\" [(ngModel)]=\"UserReport.startDate\"\n                  class=\"form-control\" type=\"text\" bsDatepicker [bsConfig]=\"datePickerConfig\"\n                  (ngModelChange)=\"OndateChange($event)\" />\n                <div class=\"alert alert-danger\" role=\"alert\"\n                  *ngIf=\"!UserReportForm.controls.startDate.valid && UserReportForm.controls.startDate.touched\">\n                  <div *ngIf=\"UserReportForm.get('startDate').hasError('required')\">From Date is required\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-2\">\n                <label for=\"endDate\">To Date</label><span style=\"color:red;\">*</span>\n                <input id=\"endDate\" formControlName=\"endDate\" placeholder=\"DD-MM-YYYY\" autocomplete=\"off\"\n                  [minDate]=\"minendDate\" [maxDate]=\"maxendDate\" [(ngModel)]=\"UserReport.endDate\" class=\"form-control\"\n                  type=\"text\" bsDatepicker [bsConfig]=\"datePickerConfig\" (ngModelChange)=\"OndateChange($event)\" />\n                <div class=\"alert alert-danger\" role=\"alert\"\n                  *ngIf=\"!UserReportForm.controls.endDate.valid && UserReportForm.controls.endDate.touched\">\n                  <div *ngIf=\"UserReportForm.get('endDate').hasError('required')\">To Date is required</div>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\" style=\"margin-top: 2%;\">\n              <div class=\"col-md-12\" style=\"text-align:left;\">\n                <button type=\"button\" class=\"btn btn-success\" style=\"margin-right: 13px;\"\n                  (click)=\"OnSubmit()\">Submit</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"Clear();\">Clear</button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"container-fluid\">\n  <div class=\"card \">\n    <div class=\"card-header\">\n      User Not Registration Report Details\n    </div>\n    <div class=\"card-body\">\n      <div style=\"text-align: right;margin-bottom: 8px;\">\n        <button type=\"button \" class=\"btn btn-success\" mdbRippleRadius style=\"margin-right: 13px;\"\n          (click)=\"printComponent('component1')\"><i class=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></i> Export To\n          PDF</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"ExportToExcel()\"><i class=\"fa fa-file-excel-o\"\n            aria-hidden=\"true\"></i>Export To Excel</button>\n      </div>\n      <div id=\"component1\">\n        <table class=\"table table-striped table-bordered table-sm row-border hover\" #TABLE #table style=\"width: 100%\">\n          <thead>\n            <tr>\n              <th colspan=\"11\">\n                <div class=\"row\">\n                  <div class=\"col-md-1\">\n                    <img _ngcontent-qps-c4=\"\" src=\"./../../assets/images/logo/logo.png\"\n                      style=\"width: 82px;margin: auto;\">\n                  </div>\n                  <div class=\"col-md-10\">\n                    <h3>SINIGHAMA</h3>\n                    <span>User Report&nbsp;&nbsp;</span><span>Date: {{UserReport.startDate | date:'dd-MM-yyyy' }}\n                      &nbsp;-&nbsp; {{UserReport.endDate | date:'dd-MM-yyyy'}}</span>\n                  </div>\n                </div>\n              </th>\n            </tr>\n            <tr class=\"thead-dark\">\n              <th>Sl No.</th>\n              <th>Photo</th>\n              <th>Name</th>\n              <th>Mobile No.</th>\n              <th>Email</th>\n              <th>Password</th>\n              <th>Created Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let d of Details; let i=index\">\n              <td>{{i + 1}}</td>\n              <td><img [src]=\"d.userImage\" width = \"40px\" height= \"auto\"></td>\n              <td>{{d.userName}}</td>\n              <td>{{d.mobile}}</td>\n              <td>{{d.emailId}}</td>\n              <td>{{d.password}}</td>\n              <td>{{d.createdDate | date:'dd-MM-yyyy'}}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/Reports/userregistration-new/userregistration-new.component.html":
/*!************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/Reports/userregistration-new/userregistration-new.component.html ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n    <div class=\"card\" style=\"margin: 10px 0px 10px 0px;\">\n        <div class=\"card-header\">User Report</div>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <form novalidate [formGroup]=\"UserReportForm\" class=\"form-horizontal\">\n                    <div class=\"card-body\" style=\"padding-top: 0px\">\n                        <div class=\"row\" style=\"margin-top: 10px;\">\n                            <div class=\"col-md-2\">\n                                <label for=\"startDate\">From Date</label><span style=\"color:red;\">*</span>\n                                <input id=\"startDate\" formControlName=\"startDate\" placeholder=\"DD-MM-YYYY\"\n                                    autocomplete=\"off\" [minDate]=\"minstartDate\" [maxDate]=\"maxstartDate\"\n                                    [(ngModel)]=\"UserReport.startDate\" class=\"form-control\" type=\"text\" bsDatepicker\n                                    [bsConfig]=\"datePickerConfig\" (ngModelChange)=\"OndateChange($event)\" />\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!UserReportForm.controls.startDate.valid && UserReportForm.controls.startDate.touched\">\n                                    <div *ngIf=\"UserReportForm.get('startDate').hasError('required')\">From Date is\n                                        required\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <label for=\"endDate\">To Date</label><span style=\"color:red;\">*</span>\n                                <input id=\"endDate\" formControlName=\"endDate\" placeholder=\"DD-MM-YYYY\"\n                                    autocomplete=\"off\" [minDate]=\"minendDate\" [maxDate]=\"maxendDate\"\n                                    [(ngModel)]=\"UserReport.endDate\" class=\"form-control\" type=\"text\" bsDatepicker\n                                    [bsConfig]=\"datePickerConfig\" (ngModelChange)=\"OndateChange($event)\" />\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!UserReportForm.controls.endDate.valid && UserReportForm.controls.endDate.touched\">\n                                    <div *ngIf=\"UserReportForm.get('endDate').hasError('required')\">To Date is required\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\" style=\"margin-top: 2%;\">\n                            <div class=\"col-md-12\" style=\"text-align:left;\">\n                                <button type=\"button\" class=\"btn btn-success\" style=\"margin-right: 13px;\"\n                                    (click)=\"OnSubmit()\">Submit</button>\n                                <button type=\"button\" class=\"btn btn-primary\" (click)=\"Clear();\">Clear</button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid\">\n    <div class=\"card \">\n        <div class=\"card-header\">\n            User Report Details\n        </div>\n        <div class=\"card-body\">\n            <div style=\"text-align: right;margin-bottom: 8px;\">\n                <button type=\"button \" class=\"btn btn-success\" mdbRippleRadius style=\"margin-right: 13px;\"\n                    (click)=\"printComponent('component1')\"><i class=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></i> Export To\n                    PDF</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"ExportToExcel()\"><i class=\"fa fa-file-excel-o\"\n                        aria-hidden=\"true\"></i>Export To Excel</button>\n            </div>\n            <div id=\"component1\">\n                <table class=\"table table-striped table-bordered table-sm row-border hover\" #TABLE #table\n                    style=\"width: 100%\">\n                    <thead>\n                        <tr>\n                            <th colspan=\"11\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-1\">\n                                        <img _ngcontent-qps-c4=\"\" src=\"./../../assets/images/logo/logo.png\"\n                                            style=\"width: 82px;margin: auto;\">\n                                    </div>\n                                    <div class=\"col-md-10\">\n                                        <h3>SINIGHAMA</h3>\n                                        <span>User Report&nbsp;&nbsp;</span><span>Date:\n                                            {{UserReport.startDate | date:'dd-MM-yyyy' }} &nbsp;-&nbsp;\n                                            {{UserReport.endDate | date:'dd-MM-yyyy'}}</span>\n                                    </div>\n                                </div>\n                            </th>\n                        </tr>\n                        <tr class=\"thead-dark\">\n                            <th>Sl No.</th>\n                            <th>Membership Id</th>\n                            <th>Photo</th>\n                            <th>First Name</th>\n                            <!-- <th>Address</th> -->\n                            <th>Gender</th>\n                            <th>Mobile No.</th>\n                            <th>Password</th>\n                            <th>Member Type</th>\n                            <th>Created Date</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let d of Details; let i=index\">\n                            <td>{{i + 1}}</td>\n                            <td>{{d.membershipId}}</td>\n                            <td><img [src]=\"d.profileImage\" width = \"40px\" height= \"auto\"></td>\n                            <td>{{d.firstName}}</td>\n                            <!-- <td>{{d.address}}</td>  -->\n                            <td>{{d.gender}}</td>\n                            <td>{{d.mobile}}</td>\n                            <td>{{d.password}}</td>\n                            <td>{{d.memberType}}</td>\n                            <td>{{d.createdDate | date:'dd-MM-yyyy'}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/Reports/userreport/userreport.component.html":
/*!****************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/Reports/userreport/userreport.component.html ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n    <div class=\"card\" style=\"margin: 10px 0px 10px 0px;\">\n        <div class=\"card-header\">User Report</div>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <form novalidate [formGroup]=\"UserReportForm\" class=\"form-horizontal\">\n                    <div class=\"card-body\" style=\"padding-top: 0px\">\n                        <div class=\"row\" style=\"margin-top: 10px;\">\n                            <div class=\"col-md-2\">\n                                <label for=\"startDate\">From Date</label><span style=\"color:red;\">*</span>\n                                <input id=\"startDate\" formControlName=\"startDate\" placeholder=\"DD-MM-YYYY\"\n                                    autocomplete=\"off\" [minDate]=\"minstartDate\" [maxDate]=\"maxstartDate\"\n                                    [(ngModel)]=\"UserReport.startDate\" class=\"form-control\" type=\"text\" bsDatepicker\n                                    [bsConfig]=\"datePickerConfig\" (ngModelChange)=\"OndateChange($event)\" />\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!UserReportForm.controls.startDate.valid && UserReportForm.controls.startDate.touched\">\n                                    <div *ngIf=\"UserReportForm.get('startDate').hasError('required')\">From Date is\n                                        required\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <label for=\"endDate\">To Date</label><span style=\"color:red;\">*</span>\n                                <input id=\"endDate\" formControlName=\"endDate\" placeholder=\"DD-MM-YYYY\"\n                                    autocomplete=\"off\" [minDate]=\"minendDate\" [maxDate]=\"maxendDate\"\n                                    [(ngModel)]=\"UserReport.endDate\" class=\"form-control\" type=\"text\" bsDatepicker\n                                    [bsConfig]=\"datePickerConfig\" (ngModelChange)=\"OndateChange($event)\" />\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!UserReportForm.controls.endDate.valid && UserReportForm.controls.endDate.touched\">\n                                    <div *ngIf=\"UserReportForm.get('endDate').hasError('required')\">To Date is required\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <label for=\"exampleForm2\">Membership Type</label><span style=\"color:red;\"> *</span>\n                                <select class=\"custom-select\" id=\"inputGroupSelect04\"\n                                    aria-label=\"Example select with button addon\" formControlName=\"paidTypeId\"\n                                    [(ngModel)]=\"UserReport.paidTypeId\">\n                                    <option value=\"\">-Select-</option>\n                                    <!-- <option value=\"0\">All</option> -->\n                                    <option value=\"1\">Registrarion</option>\n                                    <option value=\"2\">Profile</option>\n                                    <option value=\"3\">My Web Page</option>\n                                </select>\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!UserReportForm.controls.paidTypeId.valid && UserReportForm.controls.paidTypeId.touched\">\n                                    <div *ngIf=\"UserReportForm.get('paidTypeId').hasError('required')\">You must select\n                                        membership type\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\" style=\"margin-top: 2%;\">\n                            <div class=\"col-md-12\" style=\"text-align:left;\">\n                                <button type=\"button\" class=\"btn btn-success\" style=\"margin-right: 13px;\"\n                                    (click)=\"OnSubmit()\">Submit</button>\n                                <button type=\"button\" class=\"btn btn-primary\" (click)=\"Clear();\">Clear</button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid\">\n    <div class=\"card \">\n        <div class=\"card-header\">\n            User Report Details\n        </div>\n        <div class=\"card-body\">\n            <div style=\"text-align: right;margin-bottom: 8px;\">\n                <button type=\"button \" class=\"btn btn-success\" mdbRippleRadius style=\"margin-right: 13px;\"\n                    (click)=\"printComponent('component1')\"><i class=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></i> Export To\n                    PDF</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"ExportToExcel()\"><i class=\"fa fa-file-excel-o\"\n                        aria-hidden=\"true\"></i>Export To Excel</button>\n            </div>\n            <div id=\"component1\">\n                <table class=\"table table-striped table-bordered table-sm row-border hover\" #TABLE #table\n                    style=\"width: 100%\">\n                    <thead>\n                        <tr>\n                            <th colspan=\"11\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-1\">\n                                        <img _ngcontent-qps-c4=\"\" src=\"./../../assets/images/logo/logo.png\"\n                                            style=\"width: 82px;margin: auto;\">\n                                    </div>\n                                    <div class=\"col-md-10\">\n                                        <h3>SINIGHAMA</h3>\n                                        <span>User Report&nbsp;&nbsp;</span><span>Date:\n                                            {{UserReport.startDate | date:'dd-MM-yyyy' }} &nbsp;-&nbsp;\n                                            {{UserReport.endDate | date:'dd-MM-yyyy'}}</span>\n                                    </div>\n                                </div>\n                            </th>\n                        </tr>\n                        <tr class=\"thead-dark\">\n                            <th>Sl No.</th>\n                            <th>Membership Id</th>\n                            <th>First Name</th>\n                            <!-- <th>Address</th> -->\n                            <th>Gender</th>\n                            <th>Mobile No.</th>\n                            <th>Member Type</th>\n                            <th>Paid Type</th>\n                            <th>Amount Paid</th>\n                            <th>Amount Paid Date</th>\n                            <th>Created Date</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let d of Details; let i=index\">\n                            <td>{{i + 1}}</td>\n                            <td>{{d.membershipId}}</td>\n                            <td>{{d.firstName}}</td>\n                            <!-- <td>{{d.address}}</td>  -->\n                            <td>{{d.gender}}</td>\n                            <td>{{d.mobile}}</td>\n                            <td>{{d.memberType}}</td>\n                            <td>{{d.paidType}}</td>\n                            <td>{{d.amountPaid}}</td>\n                            <td>{{d.amountPaidDate | date:'dd-MM-yyyy'}}</td>\n                            <td>{{d.createdDate | date:'dd-MM-yyyy'}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/SuperAdmin/contentrest/contentrest.component.html":
/*!*********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/SuperAdmin/contentrest/contentrest.component.html ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n  <div class=\"card\">\n      <div class=\"card-header\">GLOBAL CONTENT RESTRICTION</div>\n          <div class=\"row\">\n              <div class=\"col-md-12\">\n                  <form novalidate [formGroup]=\"ContentRestForm\" class=\"form-horizontal\">\n                      <div class=\"card-body\"  style=\"padding-top: 0px\">\n                          <div class=\"row\">\n                              <div class=\"col-md-4\">\n                                  <label>News</label>\n                                      <input type=\"text\" formControlName=\"news_limit\" name=\"news_limit\" id=\"news_limit\" class=\"form-control\" max-legth=\"3\" [(ngModel)]=\"contentConfig.newsLimit\" >\n                                      <div class=\"alert alert-danger\" role=\"alert\"\n                                      *ngIf=\"!ContentRestForm.controls.news_limit.valid && ContentRestForm.controls.news_limit.touched\">\n                                      <div *ngIf=\"ContentRestForm.get('news_limit').hasError('required')\">news_limit is required</div>\n                                      <div *ngIf=\"ContentRestForm.get('news_limit').hasError('minlength')\">news_limit must be 1\n                                        characters</div>\n                                      <div *ngIf=\"ContentRestForm.get('news_limit').hasError('maxlength')\">news_limit Can't be more than\n                                        3 characters long</div>\n                                      <div *ngIf=\"ContentRestForm.get('news_limit').hasError('pattern')\">Please enter valid news_limit\n                                      </div>\n                                    </div>\n                              </div>\n  \n                              <div class=\"col-md-4\">\n                                  <label>Gallery</label>\n                                  <input type=\"text\" formControlName=\"galary_limit\" name=\"galary_limit\" id=\"galary_limit\" class=\"form-control\" max-legth=\"3\" [(ngModel)]=\"contentConfig.galaryLimit\">\n                                  <div class=\"alert alert-danger\" role=\"alert\"\n                                      *ngIf=\"!ContentRestForm.controls.galary_limit.valid && ContentRestForm.controls.galary_limit.touched\">\n                                      <div *ngIf=\"ContentRestForm.get('galary_limit').hasError('required')\">galary_limit is required</div>\n                                      <div *ngIf=\"ContentRestForm.get('galary_limit').hasError('minlength')\">galary_limit must be 1\n                                        characters</div>\n                                      <div *ngIf=\"ContentRestForm.get('galary_limit').hasError('maxlength')\">galary_limit Can't be more than\n                                        3 characters long</div>\n                                      <div *ngIf=\"ContentRestForm.get('galary_limit').hasError('pattern')\">Please enter valid galary_limit\n                                      </div>\n                                    </div>\n                              </div>\n  \n                              <div class=\"col-md-4\">\n                                  <label>Article(Image)</label>\n                                      <input type=\"text\" formControlName=\"article_image_limit\" name=\"article_image_limit\" id=\"article_image_limit\" class=\"form-control\" max-legth=\"3\" [(ngModel)]=\"contentConfig.articleImageLimit\">\n                                      <div class=\"alert alert-danger\" role=\"alert\"\n                                      *ngIf=\"!ContentRestForm.controls.article_image_limit.valid && ContentRestForm.controls.article_image_limit.touched\">\n                                      <div *ngIf=\"ContentRestForm.get('article_image_limit').hasError('required')\">article_image_limit is required</div>\n                                      <div *ngIf=\"ContentRestForm.get('article_image_limit').hasError('minlength')\">article_image_limit must be 1\n                                        characters</div>\n                                      <div *ngIf=\"ContentRestForm.get('article_image_limit').hasError('maxlength')\">article_image_limit Can't be more than\n                                        3 characters long</div>\n                                      <div *ngIf=\"ContentRestForm.get('article_image_limit').hasError('pattern')\">Please enter valid article_image_limit\n                                      </div>\n                                    </div>\n                              </div>\n                              <div class=\"col-md-4\">\n                                  <label>Article(Pdf)</label>\n                                      <input type=\"text\" formControlName=\"article_pdf_limit\" name=\"article_pdf_limit\" id=\"article_pdf_limit\" class=\"form-control\" max-legth=\"3\" [(ngModel)]=\"contentConfig.articlePdfLimit\">\n                                      <div class=\"alert alert-danger\" role=\"alert\"\n                                      *ngIf=\"!ContentRestForm.controls.article_pdf_limit.valid && ContentRestForm.controls.article_pdf_limit.touched\">\n                                      <div *ngIf=\"ContentRestForm.get('article_pdf_limit').hasError('required')\">article_pdf_limit is required</div>\n                                      <div *ngIf=\"ContentRestForm.get('article_pdf_limit').hasError('minlength')\">article_pdf_limit must be 1\n                                        characters</div>\n                                      <div *ngIf=\"ContentRestForm.get('article_pdf_limit').hasError('maxlength')\">article_pdf_limit Can't be more than\n                                        3 characters long</div>\n                                      <div *ngIf=\"ContentRestForm.get('article_pdf_limit').hasError('pattern')\">Please enter valid article_pdf_limit\n                                      </div>\n                                    </div>\n                              </div>\n                              <div class=\"col-md-4\">\n                                  <label>Videos</label>\n                                  <input type=\"text\" formControlName=\"video_limit\" name=\"video_limit\" id=\"video_limit\" class=\"form-control\" max-legth=\"3\" [(ngModel)]=\"contentConfig.videoLimit\">\n                                  <div class=\"alert alert-danger\" role=\"alert\"\n                                  *ngIf=\"!ContentRestForm.controls.video_limit.valid && ContentRestForm.controls.video_limit.touched\">\n                                  <div *ngIf=\"ContentRestForm.get('video_limit').hasError('required')\">video_limit is required</div>\n                                  <div *ngIf=\"ContentRestForm.get('video_limit').hasError('minlength')\">video_limit must be 1\n                                    characters</div>\n                                  <div *ngIf=\"ContentRestForm.get('video_limit').hasError('maxlength')\">video_limit Can't be more than\n                                    3 characters long</div>\n                                  <div *ngIf=\"ContentRestForm.get('video_limit').hasError('pattern')\">Please enter valid video_limit\n                                  </div>\n                                </div>\n                              </div>\n                          </div>\n                          <div class=\"row\" style=\"text-align: center;\">\n                              <div class=\"col-md-12\">\n                                  <button type=\"button\" class=\"btn btn-success\" (click)=\"onSubmit()\">Save</button>\n                              </div>\n                          </div>\n                      </div> \n                  </form>\n              </div>\n          </div>\n  </div>        \n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/SuperAdmin/membercontrest/membercontrest.component.html":
/*!***************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/SuperAdmin/membercontrest/membercontrest.component.html ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">MEMBER CONTENT RESTRICTION</div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <form novalidate [formGroup]=\"MemberContRestForm\" class=\"form-horizontal\">\n          <div class=\"card-body\" style=\"padding-top: 0px\">\n            <div class=\"row\">\n              <div class=\"col-md-4\">\n                <label>Member List</label>\n                <angular2-multiselect [data]=\"IndividualList\" formControlName=\"MemberName\"\n                  [settings]=\"proffessionSettings\" (onSelect)=\"onproffessionSelect($event)\">\n                  <c-search>\n                    <ng-template>\n                      <input type=\"text\" (keyup)=\"GetOtherMemberList($event)\" placeholder=\"Search Members\"\n                        style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                    </ng-template>\n                  </c-search>\n\n                  <c-item>\n                    <ng-template let-item=\"item\">\n                      <img [src]=\"item.profileImage\"\n                        style=\"width: 30px; border: 1px solid #efefef;margin-right: 0px;\" />\n                      <label>{{item.itemName}}</label>\n                    </ng-template>\n                  </c-item>\n                </angular2-multiselect>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-4\">\n                <label>News</label>\n                <input type=\"text\" formControlName=\"news\" name=\"news\" id=\"news\" class=\"form-control\" max-legth=\"3\"\n                  [(ngModel)]=\"memberConfigModel.newsLimit\">\n                <div class=\"alert alert-danger\" role=\"alert\"\n                  *ngIf=\"!MemberContRestForm.controls.news.valid && MemberContRestForm.controls.news.touched\">\n                  <div *ngIf=\"MemberContRestForm.get('news').hasError('required')\">News is required\n                  </div>\n                  <div *ngIf=\"MemberContRestForm.get('news').hasError('minlength')\">Newsmust be 1\n                    characters\n                  </div>\n                  <div *ngIf=\"MemberContRestForm.get('news').hasError('maxlength')\">News Title Can't\n                    be more than 3 characters long</div>\n                  <div *ngIf=\"MemberContRestForm.get('news').hasError('pattern')\">Please enter valid\n                    News Title\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"col-md-4\">\n                <label>Gallery</label>\n                <input type=\"text\" formControlName=\"gallery\" name=\"gallery\" id=\"gallery\" class=\"form-control\"\n                  max-legth=\"3\" [(ngModel)]=\"memberConfigModel.galaryLimit\">\n                <div class=\"alert alert-danger\" role=\"alert\"\n                  *ngIf=\"!MemberContRestForm.controls.gallery.valid && MemberContRestForm.controls.gallery.touched\">\n                  <div *ngIf=\"MemberContRestForm.get('gallery').hasError('required')\">gallery is\n                    required</div>\n                  <div *ngIf=\"MemberContRestForm.get('gallery').hasError('minlength')\">gallery must be\n                    1 characters\n                  </div>\n                  <div *ngIf=\"MemberContRestForm.get('gallery').hasError('maxlength')\">gallery Can't\n                    be more than 3 characters long</div>\n                  <div *ngIf=\"MemberContRestForm.get('gallery').hasError('pattern')\">Please enter\n                    valid gallery\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"col-md-4\">\n                <label>Article(Image)</label>\n                <input type=\"text\" formControlName=\"artimages\" name=\"artimages\" id=\"artimages\" class=\"form-control\"\n                  max-legth=\"3\" [(ngModel)]=\"memberConfigModel.articleImageLimit\">\n                <div class=\"alert alert-danger\" role=\"alert\"\n                  *ngIf=\"!MemberContRestForm.controls.artimages.valid && MemberContRestForm.controls.artimages.touched\">\n                  <div *ngIf=\"MemberContRestForm.get('artimages').hasError('required')\">Article is\n                    required</div>\n                  <div *ngIf=\"MemberContRestForm.get('artimages').hasError('minlength')\">Article must\n                    be 1 characters\n                  </div>\n                  <div *ngIf=\"MemberContRestForm.get('artimages').hasError('maxlength')\">Article Can't\n                    be more than 3 characters long</div>\n                  <div *ngIf=\"MemberContRestForm.get('artimages').hasError('pattern')\">Please enter\n                    valid Article\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-4\">\n                <label>Article(Pdf)</label>\n                <input type=\"text\" formControlName=\"artpdf\" name=\"artpdf\" id=\"artpdf\" class=\"form-control\" max-legth=\"3\"\n                  [(ngModel)]=\"memberConfigModel.articlePdfLimit\">\n                <div class=\"alert alert-danger\" role=\"alert\"\n                  *ngIf=\"!MemberContRestForm.controls.artpdf.valid && MemberContRestForm.controls.artpdf.touched\">\n                  <div *ngIf=\"MemberContRestForm.get('artpdf').hasError('required')\">Article is\n                    required</div>\n                  <div *ngIf=\"MemberContRestForm.get('artpdf').hasError('minlength')\">Article must be\n                    1 characters\n                  </div>\n                  <div *ngIf=\"MemberContRestForm.get('artpdf').hasError('maxlength')\">Article Can't be\n                    more than 3 characters long</div>\n                  <div *ngIf=\"MemberContRestForm.get('artpdf').hasError('pattern')\">Please enter valid\n                    Article\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-4\">\n                <label>Videos</label>\n                <input type=\"text\" formControlName=\"videos\" name=\"videos\" id=\"videos\" class=\"form-control\" max-legth=\"3\"\n                  [(ngModel)]=\"memberConfigModel.videoLimit\">\n                <div class=\"alert alert-danger\" role=\"alert\"\n                  *ngIf=\"!MemberContRestForm.controls.videos.valid && MemberContRestForm.controls.videos.touched\">\n                  <div *ngIf=\"MemberContRestForm.get('videos').hasError('required')\">video is required\n                  </div>\n                  <div *ngIf=\"MemberContRestForm.get('videos').hasError('minlength')\">video must be 1\n                    characters\n                  </div>\n                  <div *ngIf=\"MemberContRestForm.get('videos').hasError('maxlength')\">video Can't be\n                    more than 3 characters long</div>\n                  <div *ngIf=\"MemberContRestForm.get('videos').hasError('pattern')\">Please enter valid\n                    video\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-4\" style=\"margin-top: 2%;\">\n                <div class=\"checkbox checkbox-warning\">\n                  <input id=\"checkbox\" type=\"checkbox\" formControlName=\"enableMovieAccess\" [(ngModel)]=\"memberConfigModel.enableMovieAccess\">&nbsp;&nbsp;&nbsp;\n                  <label for=\"checkbox\">Enable Movie Access</label>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\" style=\"margin-top: 1%;\">\n              <div class=\"col-md-1\">\n                <button type=\"button \" class=\"btn btn-success\" (click)=\"submitContent()\"\n                  style=\"width: 100%;\">Update</button>\n              </div>\n              <div class=\"col-md-1\">\n                <button type=\"button \" class=\"btn btn-primary\" (click)=\"clearContent()\"\n                  style=\"width: 100%;\">clear</button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/SuperAdmin/moviecontrest/moviecontrest.component.html":
/*!*************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/SuperAdmin/moviecontrest/moviecontrest.component.html ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n    <div class=\"card\">\n      <div class=\"card-header\">MOVIE CONTENT RESTRICTION</div>\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <form novalidate [formGroup]=\"MovieContRestForm\" class=\"form-horizontal\">\n            <div class=\"card-body\" style=\"padding-top: 0px\">\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <label>Movie List</label>\n                  <angular2-multiselect [data]=\"movieList\" formControlName=\"MovieName\"\n                  [settings]=\"proffessionSettings\"\n                  [data]=\"movieList\" (onSelect)=\"onproffessionSelect($event)\" >\n                    <c-search>\n                      <ng-template>\n                        <input type=\"text\" (keyup)=\"getMovieList($event)\" placeholder=\"Search Movie\"\n                          style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                      </ng-template>\n                    </c-search>\n  \n                    <c-item>\n                        <ng-template let-item=\"item\">\n                          <img [src]=\"item.profileImage\" style=\"width: 30px;\"/>\n                          <label class=\"ddname\">{{item.itemName}}</label>\n                        </ng-template>\n                      </c-item>\n                  </angular2-multiselect>\n                </div>\n              </div>\n  \n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <label>News</label>\n                  <input type=\"text\" formControlName=\"news\" name=\"news\" id=\"news\" class=\"form-control\" max-legth=\"3\"\n                    [(ngModel)]=\"movieConfigModel.newsLimit\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!MovieContRestForm.controls.news.valid && MovieContRestForm.controls.news.touched\">\n                    <div *ngIf=\"MovieContRestForm.get('news').hasError('required')\">News is required\n                    </div>\n                    <div *ngIf=\"MovieContRestForm.get('news').hasError('minlength')\">Newsmust be 1\n                      characters\n                    </div>\n                    <div *ngIf=\"MovieContRestForm.get('news').hasError('maxlength')\">News Title Can't\n                      be more than 3 characters long</div>\n                    <div *ngIf=\"MovieContRestForm.get('news').hasError('pattern')\">Please enter valid\n                      News Title\n                    </div>\n                  </div>\n                </div>\n  \n                <div class=\"col-md-4\">\n                  <label>Gallery</label>\n                  <input type=\"text\" formControlName=\"gallery\" name=\"gallery\" id=\"gallery\" class=\"form-control\"\n                    max-legth=\"3\" [(ngModel)]=\"movieConfigModel.galaryLimit\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!MovieContRestForm.controls.gallery.valid && MovieContRestForm.controls.gallery.touched\">\n                    <div *ngIf=\"MovieContRestForm.get('gallery').hasError('required')\">gallery is\n                      required</div>\n                    <div *ngIf=\"MovieContRestForm.get('gallery').hasError('minlength')\">gallery must be\n                      1 characters\n                    </div>\n                    <div *ngIf=\"MovieContRestForm.get('gallery').hasError('maxlength')\">gallery Can't\n                      be more than 3 characters long</div>\n                    <div *ngIf=\"MovieContRestForm.get('gallery').hasError('pattern')\">Please enter\n                      valid gallery\n                    </div>\n                  </div>\n                </div>\n  \n                <div class=\"col-md-4\">\n                  <label>Article(Image)</label>\n                  <input type=\"text\" formControlName=\"artimages\" name=\"artimages\" id=\"artimages\" class=\"form-control\"\n                    max-legth=\"3\" [(ngModel)]=\"movieConfigModel.articleImageLimit\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!MovieContRestForm.controls.artimages.valid && MovieContRestForm.controls.artimages.touched\">\n                    <div *ngIf=\"MovieContRestForm.get('artimages').hasError('required')\">Article is\n                      required</div>\n                    <div *ngIf=\"MovieContRestForm.get('artimages').hasError('minlength')\">Article must\n                      be 1 characters\n                    </div>\n                    <div *ngIf=\"MovieContRestForm.get('artimages').hasError('maxlength')\">Article Can't\n                      be more than 3 characters long</div>\n                    <div *ngIf=\"MovieContRestForm.get('artimages').hasError('pattern')\">Please enter\n                      valid Article\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-4\">\n                  <label>Article(Pdf)</label>\n                  <input type=\"text\" formControlName=\"artpdf\" name=\"artpdf\" id=\"artpdf\" class=\"form-control\" max-legth=\"3\"\n                    [(ngModel)]=\"movieConfigModel.articlePdfLimit\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!MovieContRestForm.controls.artpdf.valid && MovieContRestForm.controls.artpdf.touched\">\n                    <div *ngIf=\"MovieContRestForm.get('artpdf').hasError('required')\">Article is\n                      required</div>\n                    <div *ngIf=\"MovieContRestForm.get('artpdf').hasError('minlength')\">Article must be\n                      1 characters\n                    </div>\n                    <div *ngIf=\"MovieContRestForm.get('artpdf').hasError('maxlength')\">Article Can't be\n                      more than 3 characters long</div>\n                    <div *ngIf=\"MemberContRestForm.get('artpdf').hasError('pattern')\">Please enter valid\n                      Article\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-4\">\n                  <label>Videos</label>\n                  <input type=\"text\" formControlName=\"videos\" name=\"videos\" id=\"videos\" class=\"form-control\" max-legth=\"3\"\n                    [(ngModel)]=\"movieConfigModel.videoLimit\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!MovieContRestForm.controls.videos.valid && MovieContRestForm.controls.videos.touched\">\n                    <div *ngIf=\"MovieContRestForm.get('videos').hasError('required')\">video is required\n                    </div>\n                    <div *ngIf=\"MovieContRestForm.get('videos').hasError('minlength')\">video must be 1\n                      characters\n                    </div>\n                    <div *ngIf=\"MovieContRestForm.get('videos').hasError('maxlength')\">video Can't be\n                      more than 3 characters long</div>\n                    <div *ngIf=\"MovieContRestForm.get('videos').hasError('pattern')\">Please enter valid\n                      video\n                    </div>\n                  </div>\n                </div>\n                <!-- <div class=\"col-4\" style=\"margin-top: 2%;\">\n                  <div class=\"checkbox checkbox-warning\">\n                    <input id=\"checkbox\" type=\"checkbox\" formControlName=\"enableMovieAccess\" [(ngModel)]=\"memberConfigModel.enableMovieAccess\">&nbsp;&nbsp;&nbsp;\n                    <label for=\"checkbox\">Enable Movie Access</label>\n                  </div>\n                </div> -->\n              </div>\n              <div class=\"row\" style=\"margin-top: 1%;\">\n                <div class=\"col-md-1\">\n                  <button type=\"button \" class=\"btn btn-success\" (click)=\"submitContent()\"\n                    style=\"width: 100%;\">Update</button>\n                </div>\n                <div class=\"col-md-1\">\n                  <button type=\"button \" class=\"btn btn-primary\" (click)=\"clearContent()\"\n                    style=\"width: 100%;\">clear</button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/account/auditioncreation/auditioncreation.component.html":
/*!****************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/account/auditioncreation/auditioncreation.component.html ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n    <div class=\"card\">\n        <div class=\"card-header\">Audition Creation</div>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <form novalidate class=\"form-horizontal\" [formGroup]=\"AuditionCreationForm\">\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-md-3\">\n                                <label>Search Member</label><span style=\"color:#ff0000;\"> *</span>\n                                <angular2-multiselect [data]=\"auditionOwnerList\" formControlName=\"auditionOwnerName\"\n                                    [settings]=\"proffessionSettings\" (onSelect)=\"selectedMemberId($event)\"  [(ngModel)]=\"selectedMember\" >\n                                    <c-search>\n                                        <ng-template>\n                                            <input type=\"text\" (keyup)=\"getAuditionOwnerList($event)\"\n                                                placeholder=\"Search Members\"\n                                                style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                                        </ng-template>\n                                    </c-search>\n                                    <c-item>\n                                        <ng-template let-item=\"item\">\n                                            <img [src]=\"item.profileImage\"\n                                                style=\"width: 30px; border: 1px solid #efefef;margin-right: 0px;\" />\n                                            <label>{{item.itemName}}</label>\n                                        </ng-template>\n                                    </c-item>\n                                </angular2-multiselect>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <label>Audition Title</label><span style=\"color:#ff0000;\">*</span>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"auditionTitle\"\n                                    name=\"auditionTitle\" [(ngModel)]=\"auditionCreation.auditionTitle\">\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!AuditionCreationForm.controls.auditionTitle.valid && AuditionCreationForm.controls.auditionTitle.touched\">\n                                    <div *ngIf=\"AuditionCreationForm.get('auditionTitle').hasError('required')\">\n                                        You must enter Title</div>\n                                    <div *ngIf=\"AuditionCreationForm.get('auditionTitle').hasError('minlength')\">\n                                        Title must atleast be 2 characters</div>\n                                    <div *ngIf=\"AuditionCreationForm.get('auditionTitle').hasError('maxlength')\">\n                                        Title must be less than must be 50 characters</div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <label>Start Date</label><span style=\"color:red;\">*</span>\n                                <input class=\"form-control\" type=\"text\" placeholder=\"DD-MM-YYYY\"\n                                    formControlName=\"startDate\" [(ngModel)]=\"auditionCreation.startDate\"\n                                    [bsConfig]=\"datePickerConfig\" [minDate]=\"minEndDate\" [maxDate]=\"maxEndDate\"\n                                    bsDatepicker>\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"! AuditionCreationForm.controls.startDate.valid &&  AuditionCreationForm.controls.startDate.touched\">\n                                    <div *ngIf=\" AuditionCreationForm.get('startDate').hasError('required')\">Start Date\n                                        is required</div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <label>End Date</label><span style=\"color:red;\">*</span>\n                                <input class=\"form-control\" type=\"text\" placeholder=\"DD-MM-YYYY\"\n                                    formControlName=\"endDate\" [(ngModel)]=\"auditionCreation.endDate\"\n                                    [bsConfig]=\"datePickerConfig\" [minDate]=\"minEndDate\" [maxDate]=\"maxEndDate\"\n                                    bsDatepicker />\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"! AuditionCreationForm.controls.endDate.valid && AuditionCreationForm.controls.endDate.touched\">\n                                    <div *ngIf=\" AuditionCreationForm.get('endDate').hasError('required')\">End Date is\n                                        required</div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-12\" style=\"margin-bottom: 8%;\">\n                                <label>Audition Description</label><span style=\"color:#ff0000;\"> *</span>\n                                <quill-editor rows=\"1\" [modules]=\"modules\" formControlName=\"auditionDescription\" name=\"auditionDescription\"\n                                    [(ngModel)]=\"auditionCreation.auditionDescription\"></quill-editor>\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!AuditionCreationForm.controls.auditionDescription.valid && AuditionCreationForm.controls.auditionDescription.touched\">\n                                    <div *ngIf=\"AuditionCreationForm.get('auditionDescription').hasError('required')\">\n                                        You must enter Description</div>\n                                    <div *ngIf=\"AuditionCreationForm.get('auditionDescription').hasError('minlength')\">\n                                        Description must atleast be 2 characters</div>\n                                    <div *ngIf=\"AuditionCreationForm.get('auditionDescription').hasError('maxlength')\">\n                                        Description must be less than must be 8000 characters</div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <div class=\"upload-btn-wrapper\">\n                                    <label>Upload Image</label><span style=\"color:#ff0000;\"> *</span>\n                                    <button class=\"btn1\">Upload Photo</button><span style=\"color:#ff0000;\"> *</span>\n                                    <input type=\"file\" name=\"fileUploader\" (change)=\"imageUpload($event)\">\n                                    <input type=\"hidden\" formControlName=\"imagePath\">\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent\"\n                                    [maintainAspectRatio]=\"true\" [aspectRatio]=\"6/4\" format=\"jpeg\"\n                                    (imageCropped)=\"imageCropped($event)\" (imageLoaded)=\"imageLoaded()\"\n                                    (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                                    onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                    style=\"height:auto; width:170px;\">\n                                </image-cropper>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <img [src]=\"auditionCreation.auditionImage\"\n                                    onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                    style=\"height: auto;width: 30%;\">\n                            </div>\n                            <div class=\"col-md-12\">\n                                <button type=\"button\" class=\"btn btn-success\" (click)=\"onSubmit()\" style=\"margin-right: 1%;\">Submit</button>\n                                <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearAudition();\">Clear</button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"container-fluid\">\n    <div class=\"card \">\n        <div class=\"card-header\">\n            Audition Details\n        </div>\n        <!-- Movie News Table -->\n        <div class=\"card-body\">\n            <table class=\"table table-striped table-bordered table-sm row-border hover\" datatable\n                [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" style=\"width: 100%\">\n                <thead>\n                    <tr>\n                        <th class=\"newsth\">Sl.No.</th>\n                        <th class=\"newsth\">Audition Title</th>\n                        <th class=\"newsth\">Audition Owner Name</th>\n                        <th class=\"newsth\">Audition Image</th>\n                        <th class=\"newsth\">Start Date</th>\n                        <th class=\"newsth\">End Date</th>\n                        <th class=\"newsth\">Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let audition of auditionList; let i = index;\">\n                        <td>{{i+1}}</td>\n                        <td>{{audition.auditionTitle}}</td>\n                        <td>{{audition.memberName}}</td>\n                        <td class=\"newsth\"><img [src]=\"audition.auditionImage\" style=\"width: 10%;\"></td>\n                        <td class=\"newsth\">{{audition.startDate | date:'dd-MM-yyyy'}}</td>\n                        <td class=\"newsth\">{{audition.endDate | date:'dd-MM-yyyy'}}</td>\n                        <td class=\"newsth\">\n                            <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"\n                                (click)=\"editAudition(audition.auditionId)\"></i>&nbsp;&nbsp;\n                            <!-- <span *ngIf=\"audition.isActive == 0\">\n                                <button class=\"btn btn-success actdeacbtn\"\n                                    (click)=\"actDeacAudition(audition)\">Activate</button>\n                            </span>\n                            <span *ngIf=\"audition.isActive == 1\">\n                                <button class=\"btn btn-danger actdeacbtn\"\n                                    (click)=\"actDeacAudition(audition)\">Deactivate</button>\n                            </span> -->\n                            <i class=\"fa fa-trash facursor\" aria-hidden=\"true\"  style=\"color:#ff0000\" (click)=\"actDeacAudition(audition)\"></i>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/account/comparison/comparison.component.html":
/*!****************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/account/comparison/comparison.component.html ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"card \">\n    <div class=\"card-header\">\n       Comparison Details\n    </div>\n    <div class=\"card-body\">\n        <table class=\"table table-hover table-sm\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Field</th>\n                    <th scope=\"col\">Old Data</th>\n                    <th scope=\"col\">New Data</th>\n                    <th scope=\"col\">Field</th>\n                    <th scope=\"col\">Old Data</th>\n                    <th scope=\"col\">New Data</th>\n                    <th scope=\"col\">Field</th>\n                    <th scope=\"col\">Old Data</th>\n                    <th scope=\"col\">New Data</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <th scope=\"row\">First Name</th>\n                    <td>Soumen</td>\n                    <td>New Soumen</td>\n                    <th scope=\"row\">Middle Name</th>\n                    <td>M</td>\n                    <td>N</td>\n                    <th scope=\"row\">Last Name</th>\n                    <td>Maity</td>\n                    <td>New Maity</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">Year of Exp</th>\n                    <td>22-30</td>\n                    <td>30-35</td>\n                    <th scope=\"row\">Age Group</th>\n                    <td>22-30</td>\n                    <td>30-35</td>\n                    <th scope=\"row\">Gender</th>\n                    <td>Male</td>\n                    <td>Female</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">Profession</th>\n                    <td>Artist</td>\n                    <td>Dancer</td>\n                    <th scope=\"row\">Other Skills</th>\n                    <td>Artist,Dancer,Singer</td>\n                    <td>Artist,Dancer</td>\n                    <th scope=\"row\">Address</th>\n                    <td>Ram Nagar</td>\n                    <td>Srinivas Nagar</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">State</th>\n                    <td>Maharashtra</td>\n                    <td>Karnataka</td>\n                    <th scope=\"row\">City</th>\n                    <td>Mumbai</td>\n                    <td>Mysuru</td>\n                    <th scope=\"row\">Email ID</th>\n                    <td>nitin@gmail.com</td>\n                    <td>nitinh@gmail.com</td>\n                </tr>\n                <tr>\n                   \n                    <th scope=\"row\">Contact No</th>\n                    <td>9902509862</td>\n                    <td>9902509862</td>\n                    <th scope=\"row\">Address visibility</th>\n                    <td>Show</td>\n                    <td>Hide</td>\n                    <th scope=\"row\">Contact no visibility</th>\n                    <td>Show</td>\n                    <td>Hide</td>\n                </tr>\n                <tr>\n                    \n                    <th scope=\"row\">Email id visibility</th>\n                    <td>Show</td>\n                    <td>Hide</td>\n                    <th scope=\"row\">Basic Photo</th>\n                    <td>same</td>\n                    <td>changed</td>\n                    <th scope=\"row\">Qualification</th>\n                    <td>Artist</td>\n                    <td>Dancer</td>\n                </tr>\n                <tr>\n                    \n                    <th scope=\"row\">Mother Tongue</th>\n                    <td>Artist,Dancer,Singer</td>\n                    <td>Artist,Dancer</td>\n                    <th scope=\"row\">Other Languages</th>\n                    <td>Ram Nagar</td>\n                    <td>Srinivas Nagar</td>\n                    <th scope=\"row\">Height</th>\n                    <td>Artist</td>\n                    <td>Dancer</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">Weight</th>\n                    <td>Artist,Dancer,Singer</td>\n                    <td>Artist,Dancer</td>\n                    <th scope=\"row\">DOB</th>\n                    <td>Ram Nagar</td>\n                    <td>Srinivas Nagar</td>\n                    <th scope=\"row\">Birth Place</th>\n                    <td>Artist</td>\n                    <td>Dancer</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">Nationality</th>\n                    <td>Artist,Dancer,Singer</td>\n                    <td>Artist,Dancer</td>\n                    <th scope=\"row\">Description</th>\n                    <td>Ram Nagar</td>\n                    <td>Srinivas Nagar</td>\n                    <th scope=\"row\">About Me</th>\n                    <td>Artist</td>\n                    <td>Dancer</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">Experience</th>\n                    <td>Artist,Dancer,Singer</td>\n                    <td>Artist,Dancer</td>\n                    <th scope=\"row\">Others Openion</th>\n                    <td>Ram Nagar</td>\n                    <td>Srinivas Nagar</td>\n                    <th scope=\"row\">1st photo</th>\n                    <td>same</td>\n                    <td>changed</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">2nd photo</th>\n                    <td>same</td>\n                    <td>changed</td>\n                    <th scope=\"row\">3rd photo</th>\n                    <td>same</td>\n                    <td>changed</td>\n                    <th scope=\"row\">4th photo</th>\n                    <td>same</td>\n                    <td>changed</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">5th photo</th>\n                    <td>same</td>\n                    <td>changed</td>\n                    <th scope=\"row\">6th photo</th>\n                    <td>same</td>\n                    <td>changed</td>\n                    <th scope=\"row\">7th photo</th>\n                    <td>same</td>\n                    <td>changed</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">Web page as</th>\n                    <td>Private</td>\n                    <td>Public</td>\n                    <th scope=\"row\">Hd Photo</th>\n                    <td>same</td>\n                    <td>changed</td>\n                    <th scope=\"row\">facebook</th>\n                    <td>same</td>\n                    <td>changed</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">Twitter</th>\n                    <td>Private</td>\n                    <td>Public</td>\n                    <th scope=\"row\">Instagram</th>\n                    <td>same</td>\n                    <td>changed</td>\n                    <th scope=\"row\">youtube</th>\n                    <td>same</td>\n                    <td>changed</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">Image Articles</th>\n                    <td>Private</td>\n                    <td>Public</td>\n                    <th scope=\"row\">Pdf Articles</th>\n                    <td>same</td>\n                    <td>changed</td>\n                    <th scope=\"row\">Gallery photos</th>\n                    <td>same</td>\n                    <td>changed</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">Member News</th>\n                    <td>Private</td>\n                    <td>Public</td>\n                    <th scope=\"row\">Youtube videos</th>\n                    <td>same</td>\n                    <td>changed</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/account/extendmembervalidity/extendmembervalidity.component.html":
/*!************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/account/extendmembervalidity/extendmembervalidity.component.html ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"content\">\n    <div class=\"card \">\n        <div class=\"card-header \">\n            EXTEND MEMBER VALIDITY\n        </div>\n        <div class=\"card-body \">\n            <div class=\"form-group has-search\">\n\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"adminPage.searchstr\" placeholder=\"Search\" (keyup)=\"getMemberListSearchData($event)\">\n            </div>\n            <table class=\"table table-striped table-bordered table-sm row-border hover\">\n                <thead>\n                    <tr>\n                        <th>Slno</th>\n                        <th>Name</th>\n                        <th>Profession</th>\n                        <th>Mobile No</th>\n                        <th>City</th>\n                        <th style=\"text-align: center;\">Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let ml of memberlist; let i=index\">\n                        <td style=\"text-align: right;\">{{i+1}}</td>\n                        <td>{{ml.firstName}}&nbsp;{{ml.middleName}}&nbsp;{{ml.lastName}}</td>\n                        <td>{{ml.profession}}</td>\n                        <td>{{ml.mobileNumber}}</td>\n                        <td>{{ml.cityName}}</td>\n                        <td style=\"text-align: center;\">\n                            <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#extvalModal\" (click)=\"SelectedMember(ml)\" style=\"padding: 0% 2%;font-size: 12px;margin: 0% 2%;\">\n                                Extend Validity\n                              </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n        \n            <div class=\"modal fade\" id=\"extvalModal\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                  <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                      <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Extend Validity</h5>\n                      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                      </button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <label for=\"memberType\">Member Type</label>\n                        <select class=\"custom-select\" aria-label=\"Example select with button addon\" [(ngModel)]=\"adminPage.memberTypeId\" name=\"memberTypeId\" >\n                            <option value=\"0\">Select Membership type</option>\n                            <option *ngFor=\"let type of membershipTypeList\" value=\"{{type.memberTypeId}}\">{{type.name}}\n                            </option>\n                           \n                        </select>\n                        <label for=\"selectDate\">Select Date</label>\n                        <input placeholder=\"DD-MM-YYYY\" autocomplete=\"off\"\n                            class=\"form-control\" [minDate]=\"minstartDate\"\n                            [maxDate]=\"maxstartDate\" class=\"form-control\" type=\"text\" bsDatepicker\n                            [bsConfig]=\"datePickerConfig\" (ngModelChange)=\"OndateChange($event)\" name=\"extendedDate\" [(ngModel)]=\"adminPage.extendedDate\"/>\n\n                            <label for=\"remarks\">Remarks</label>\n                       <textarea class=\"form-control\" name=\"remark\" [(ngModel)]=\"adminPage.remark\"></textarea>\n                    </div>\n                    <div class=\"modal-footer\">\n                      <button type=\"button\" class=\"btn btn-success\" style=\"margin-top: 6%;\"(click)=\"updateextendVal()\">Update</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n            <div class=\"container\">\n                <ul class=\"pagination\">\n                    <li class=\"page-item\" *ngIf=\"modal.offset > 0\"><a class=\"page-link\" style=\"cursor: pointer;\"\n                            (click)=\"clickOnPreviousButton()\">Previous</a></li>\n                    <li class=\"page-item active\" id=\"page1li\"><a class=\"page-link\" id=\"page1\">{{modal.offset/20 +\n                            1}}</a></li>\n                    <li class=\"page-item\"><a class=\"page-link\" (click)=\"clickOnNextButton()\"\n                            style=\"cursor: pointer;\">Next</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/account/login/login.component.html":
/*!******************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/account/login/login.component.html ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\n    <div class=\"col-md-7\">\n        <img class=\"loginpageimg\" src=\"./../../../assets/images/signin.png\">\n    </div>\n    <div class=\"col-12 col-md-5\">\n        <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content form-elegant\">\n                <div class=\"modal-header text-center\">\n                    <h3 class=\"modal-title dark-grey-text font-weight-bold\" id=\"myModalLabel\">\n                        <img src=\"../../../assets/images/logo/logo.png\" style=\"width: 12%\"><br>\n                        <p>Sign In</p>\n                    </h3>\n                </div>\n                <!--comment By Mir date:14-jun-2020-->\n                <!-- <div class=\"modal-body mx-4\">\n                    <form action=\"#\" method=\"post\">\n                        <div class=\"md-form mb-5\">\n                            <label data-error=\"wrong\" data-success=\"right\" for=\"mobile\">Mobile Number</label>\n                            <input type=\"text\" id=\"mobile\" class=\"form-control\" mdbInput [formControl]=\"modalFormElegantEmail\" [(ngModel)]=\"login.mobile\" maxlength=\"10\">\n                        </div>\n                        <div class=\"md-form pb-3\">\n                            <label data-error=\"wrong\" data-success=\"right\" for=\"Form-pass1\">Password</label>\n                            <input type=\"password\" id=\"Form-pass1\" class=\"form-control\" mdbInput [formControl]=\"modalFormElegantPassword\" [(ngModel)]=\"login.password\">\n                        </div>\n                        <div class=\"text-center mb-3\">\n                            <button type=\"button\" mdbBtn gradient=\"blue\" block=\"true\" rounded=\"true\" class=\"z-depth-1a waves-light\" mdbWavesEffect (click)=\"isLogin()\">Sign in</button>\n                        </div>\n                    </form>\n                </div> -->\n        <!--comment End date:14-jun-2020-->\n        \n                <div class=\"modal-body\">\n                    <form novalidate [formGroup]=\"loginForm\" class=\"form-horizontal\" >\n                        <div class=\"md-form\">\n                            <div class=\"form-group\">\n                                <label>Mobile Number</label>\n                                <input type=\"text\" formControlName=\"Mobile\" id=\"mobile\" class=\"form-control\" [formControl]=\"Mobile\" [(ngModel)]=\"login.mobile\" maxlength=\"10\">\n                                    <div *ngIf=\"Mobile.touched && Mobile.hasError('required')\" style=\"color: #f11414\"> Mobile is required</div>\n                            </div>\n                        </div>\n                        <div class=\"md-form\">\n                            <div class=\"form-group\">\n                                <label>Password</label>\n                                <input type=\"password\" formControlName=\"Password\" id=\"password\" class=\"form-control\" [formControl]=\"Password\" [(ngModel)]=\"login.password\" passwordToggle>\n                                    <span *ngIf=\"Password.touched && Password.hasError('required')\" style=\"color: #f11414\">Password is required</span>\n                            </div>\n                        </div>\n                        <div class=\"text-center\">\n                            <!-- <button type=\"button\" mdbBtn gradient=\"blue\" block=\"true\" rounded=\"true\" class=\"z-depth-1a waves-light\" mdbWavesEffect (click)=\"isLogin()\">Sign in</button> -->\n                            <button type=\"button\" class=\"btn btn-warning subbtn\" (click)=\"OnSubmit()\">Sign in</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/account/memberactivatedeactivate/memberactivatedeactivate.component.html":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/account/memberactivatedeactivate/memberactivatedeactivate.component.html ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"content\">\n    <div class=\"card \">\n        <div class=\"card-header \">\n            MEMBER ACTIVATE OR DEACTIVATE\n        </div>\n        <div class=\"card-body \">\n            <div class=\"form-group has-search\">\n                    \n                <input type=\"text\" class=\"form-control\" placeholder=\"Search\" (keyup)=\"getMemberListSearchData($event)\">\n            </div>\n            <table class=\"table table-striped table-bordered table-sm row-border hover\">\n                <thead>\n                    <tr>\n                        <th>Slno</th>\n                        <th>Name</th>\n                        <th>Profession</th>\n                        <th>Mobile No</th>\n                        <th>City</th>\n                        <th style=\"text-align: center;\">Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let ml of memberlist; let i=index\">\n                        <td style=\"text-align: right;\">{{i+1}}</td>\n                        <td>{{ml.firstName}}&nbsp;{{ml.middleName}}&nbsp;{{ml.lastName}}</td>\n                        <td>{{ml.profession}}</td>\n\n                        <td>{{ml.mobileNumber}}</td>\n                        <td>{{ml.cityName}}</td>\n                        <td style=\"text-align: center;\">\n                            <span *ngIf=\"ml.isActive == '0'\">\n                                <button class=\"btn btn-success actdeacbtn\" (click)=\"basicActiveDeactive(ml)\">Reg\n                                    Act</button>\n                            </span>\n                            <span *ngIf=\"ml.isActive == '1'\">\n                                <button class=\"btn btn-danger actdeacbtn\" (click)=\"basicActiveDeactive(ml)\">Reg\n                                    Deact</button>\n                            </span>\n                            <span *ngIf=\"ml.profileIsActive == '0' && ml.proMembershipId != ''\">\n                                <button class=\"btn btn-success actdeacbtn\" (click)=\"profileActiveDeactive(ml)\">Pro\n                                    Act</button>\n                            </span>\n                            <span *ngIf=\"ml.profileIsActive == '1' && ml.proMembershipId != ''\">\n                                <button class=\"btn btn-danger actdeacbtn\" (click)=\"profileActiveDeactive(ml)\">Pro\n                                    Deact</button>\n                            </span>\n                            <span *ngIf=\"ml.webpageIsActive == '0' && ml.webPageId != ''\">\n                                <button class=\"btn btn-success actdeacbtn\" (click)=\"webPageActiveDeactive(ml)\">Web\n                                    Act</button>\n                            </span>\n                            <span *ngIf=\"ml.webpageIsActive == '1' && ml.webPageId != ''\">\n                                <button class=\"btn btn-danger actdeacbtn\" (click)=\"webPageActiveDeactive(ml)\">Web\n                                    Deact</button>\n                            </span>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n            <div class=\"container\">\n                <ul class=\"pagination\">\n                    <li class=\"page-item\" *ngIf=\"modal.offset > 0\"><a class=\"page-link\" style=\"cursor: pointer;\"\n                            (click)=\"clickOnPreviousButton()\">Previous</a></li>\n                    <li class=\"page-item active\" id=\"page1li\"><a class=\"page-link\"\n                            id=\"page1\">{{modal.offset/20 + 1}}</a></li>\n                    <li class=\"page-item\"><a class=\"page-link\" (click)=\"clickOnNextButton()\"\n                            style=\"cursor: pointer;\">Next</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/account/memberapprovallistnew/memberapprovallistnew.component.html":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/account/memberapprovallistnew/memberapprovallistnew.component.html ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"content\">\n  <div class=\"card \">\n    <div class=\"card-header \">\n      MEMBER LIST\n    </div>\n    <div class=\"card-body \">\n      <div class=\"form-group has-search\">\n        <span class=\"fa fa-search form-control-feedback\"></span>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search\" (keyup)=\"getMemberListSearchData($event)\">\n      </div>\n      <table class=\"table table-striped table-bordered table-sm row-border hover\">\n        <thead>\n          <tr>\n            <th>Slno</th>\n            <th>Name</th>\n            <th>Profession</th>\n            <!-- <th>Email-id</th> -->\n            <th>Mobile No</th>\n            <th>City</th>\n            <th style=\"text-align: center;\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let ml of memberlist; let i=index\">\n            <td style=\"text-align: right;\">{{i+1}}</td>\n            <td>{{ml.firstName}}&nbsp;{{ml.middleName}}&nbsp;{{ml.lastName}}</td>\n            <td>{{ml.profession}}</td>\n            <!-- <td>{{ml.email}}</td> -->\n            <td>{{ml.mobileNumber}}</td>\n            <td>{{ml.cityName}}</td>\n            <td style=\"width: 22%;text-align: center;\">\n              <span *ngIf=\"ml.isActive == 1 \">\n                <i *ngIf=\"(permission.edit)\" class=\"fa fa-pencil-square-o \" aria-hidden=\"true \"\n                  style=\"color:rgb(0, 15, 146)\" data-toggle=\"modal\" data-target=\"#exampleModal\"\n                  (click)=\"EditMemberDetails(ml)\"></i>&nbsp;&nbsp;\n                <!-- <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#statusModal\"\n                                                          style=\"padding: 0% 2%;font-size: 12px;margin: 0% 2%;\" (click)=\"EditStatus(ml)\">Status</button> -->\n                <button\n                  *ngIf=\"(currentUser.object.roleDto.roleId == '1' || currentUser.object.roleDto.roleId == '2' || currentUser.object.roleDto.roleId == '3' || currentUser.object.roleDto.roleId == '9' )\"\n                  class=\"btn statusbtn\" data-toggle=\"modal\" data-target=\"#statusModal\" (click)=\"EditStatus(ml)\">\n                  <span class=\"btn btn-success status-badge\" *ngIf=\"ml.status == 'Approved'\">Approved</span>\n                  <span class=\"btn btn-warning status-badge\"\n                    *ngIf=\"ml.status == 'Pending'|| ml.status == 'pending' \">Pending</span>\n                  <span class=\"btn btn-secondary status-badge\" *ngIf=\"ml.status == 'Rejected'\">Rejected</span>\n                  <span class=\"btn btn-danger status-badge\" *ngIf=\"ml.status == 'Markred' \">Marked\n                    Red</span>\n                </button>\n              </span>\n              <span *ngIf=\"ml.isActive == 0 && permission.active\">\n                Deactivated\n              </span>\n              <!-- <span *ngIf=\"ml.isActive == 0 && permission.active\">\n                                    <button class=\"btn btn-success\" style=\"padding: 0% 2%;font-size: 12px;\"\n                                        (click)=\"ActiveDeactiveMemberDetails(ml)\">Activate</button>\n                                    </span>\n                                                <span *ngIf=\"ml.isActive == 1 && permission.inActive\">\n                                    <button class=\"btn btn-danger\" style=\"padding: 0% 2%;font-size: 12px;\"\n                                        (click)=\"ActiveDeactiveMemberDetails(ml)\">Deactivate</button>\n                                    </span> -->\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div class=\"container\">\n        <ul class=\"pagination\">\n          <li class=\"page-item\" *ngIf=\"modal.offset > 0\"><a class=\"page-link\" style=\"cursor: pointer;\"\n              (click)=\"clickOnPreviousButton()\">Previous</a></li>\n          <li class=\"page-item active\" id=\"page1li\"><a class=\"page-link\" id=\"page1\">{{modal.offset/20 + 1}}</a></li>\n          <li class=\"page-item\"><a class=\"page-link\" (click)=\"clickOnNextButton()\" style=\"cursor: pointer;\">Next</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<!--edit modal start-->\n<div class=\"modal bd-example-modal-xl\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n  aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-dialog-centered modal-xl\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Edit Details</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"showEditForm == true\">\n        <div class=\"card\" style=\"margin-bottom: 1%;\">\n          <div class=\"row\" style=\"margin: auto;width: 100%;display: flex;font-weight: 700;\">\n            <div class=\"col-md-4\">\n              <div class=\"custom-control custom-radio\">\n                <input type=\"radio\" class=\"custom-control-input\" id=\"basic\" name=\"refMembershipTypeId\" value=\"1\"\n                  [(ngModel)]=\"adminPage.refMembershipTypeId\">\n                <label class=\"custom-control-label\" for=\"basic\">Registration</label>\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"custom-control custom-radio\">\n                <input type=\"radio\" class=\"custom-control-input\" id=\"profile\" name=\"refMembershipTypeId\" value=\"2\"\n                  [(ngModel)]=\"adminPage.refMembershipTypeId\">\n                <label class=\"custom-control-label\" for=\"profile\">Profile Page</label>\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"custom-control custom-radio\">\n                <input type=\"radio\" class=\"custom-control-input\" id=\"preprofile\" name=\"refMembershipTypeId\" value=\"3\"\n                  [(ngModel)]=\"adminPage.refMembershipTypeId\">\n                <label class=\"custom-control-label\" for=\"preprofile\">My Web Page</label>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"card\"\n          *ngIf=\"adminPage.refMembershipTypeId == '1' || adminPage.refMembershipTypeId == '2' || adminPage.refMembershipTypeId == '3'\">\n          <div class=\"card-header\">\n            REGISTRATION PAGE\n            <div *ngIf=\"validityProfile.memberValidUptoStatus\" class=\"validDateShowing\" style=\"float: right;\">Valid Upto\n              {{validityProfile.memberValidUptoDate | date:'dd-LLL-yyyy'}} (Remaining\n              {{validityProfile.memberValidUptoDays}} days)\n            </div>\n            <div *ngIf=\"!validityProfile.memberValidUptoStatus\" class=\"validDateShowing\" style=\"float: right;\">Expired\n              {{validityProfile.memberValidUptoDate | date:'dd-LLL-yyyy'}}\n            </div>\n          </div>\n          <form novalidate [formGroup]=\"basicMemberForm\" class=\"form-horizontal\">\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <p class=\"indinstname\">{{adminPage.individualInstitute}}</p>\n                <div class=\"col-md-2\" style=\"display:none\">\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" id=\"ind\" name=\"individualInstitute\"\n                      formControlName=\"individualInstitute\" [(ngModel)]=\"adminPage.individualInstitute\"\n                      value=\"Individual\" (change)=\"OnindividualInstituteChange()\">\n                    <label class=\"custom-control-label\" for=\"ind\">Individual</label>\n                  </div>\n                </div>\n                <div class=\"col-md-2\" style=\"display:none\">\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" id=\"ins\" name=\"individualInstitute\"\n                      formControlName=\"individualInstitute\" [(ngModel)]=\"adminPage.individualInstitute\"\n                      value=\"Institute\" (change)=\"OnindividualInstituteChange()\">\n                    <label class=\"custom-control-label\" for=\"ins\">Institute</label>\n                  </div>\n                </div>\n                <div style=\"display:none\" class=\"alert alert-danger\" role=\"alert\"\n                  *ngIf=\"!basicMemberForm.controls.individualInstitute.valid && basicMemberForm.controls.individualInstitute.touched\">\n                  <div *ngIf=\"basicMemberForm.get('individualInstitute').hasError('required')\">You\n                    must select Individual / Institute</div>\n                </div>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-md-12\">\n                  <p>Please Select Experienced Type</p>\n                </div>\n                <div class=\"col-md-2\">\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" id=\"exp\" name=\"experienceType\" value=\"Experienced\"\n                      formControlName=\"experienceType\" [(ngModel)]=\"adminPage.experienceType\"\n                      (change)=\"OnexperienceTypeChange()\">\n                    <label class=\"custom-control-label\" for=\"exp\">Experienced</label>\n                  </div>\n                </div>\n                <div class=\"col-md-2\">\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" id=\"fresh\" name=\"experienceType\" value=\"Fresher\"\n                      formControlName=\"experienceType\" [(ngModel)]=\"adminPage.experienceType\"\n                      (change)=\"OnexperienceTypeChange()\">\n                    <label class=\"custom-control-label\" for=\"fresh\">Freshers</label>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-3\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.firstName.valid && basicMemberForm.controls.firstName.touched}\">\n                  <label for=\"exampleForm2\">{{adminPage.individualInstituteName}}</label><span style=\"color:red;\">\n                    *</span>\n                  <input type=\"text\" name=\"firstName\" class=\"form-control\" formControlName=\"firstName\"\n                    [(ngModel)]=\"adminPage.firstName\" (ngModelChange)=\"adminPage.firstName = $event.toUpperCase()\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.firstName.valid && basicMemberForm.controls.firstName.touched\">\n                    <div *ngIf=\"basicMemberForm.get('firstName').hasError('required')\">You must\n                      enter a {{adminPage.individualInstituteName}}\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('firstName').hasError('minlength')\">\n                      {{adminPage.individualInstituteName}} must be 2 characters</div>\n                    <div *ngIf=\"basicMemberForm.get('firstName').hasError('maxlength')\">\n                      {{adminPage.individualInstituteName}} must be 30 characters</div>\n                    <div *ngIf=\"basicMemberForm.get('firstName').hasError('pattern')\">Please enter\n                      valid {{adminPage.individualInstituteName}}\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.middleName.valid && basicMemberForm.controls.middleName.touched}\">\n                  <label for=\"exampleForm2\">Middle Name</label>\n                  <input type=\"text\" name=\"middleName\" class=\"form-control\" formControlName=\"middleName\"\n                    [(ngModel)]=\"adminPage.middleName\" (ngModelChange)=\"adminPage.middleName = $event.toUpperCase()\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.middleName.valid && basicMemberForm.controls.middleName.touched\"\n                    (ngModelChange)=\"adminPage.middleName = $event.toUpperCase()\">\n                    <div *ngIf=\"basicMemberForm.get('middleName').hasError('required')\">You must\n                      enter a Middle name\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('middleName').hasError('minlength')\">Middle name\n                      must be 3 characters\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('middleName').hasError('maxlength')\">Middle name\n                      must be 30 characters\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('firstName').hasError('pattern')\">Please enter\n                      valid Middle name\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.lastName.valid && basicMemberForm.controls.lastName.touched}\">\n                  <label for=\"exampleForm2\">Last Name</label>\n                  <input type=\"text\" name=\"lastname\" class=\"form-control\" formControlName=\"lastName\"\n                    [(ngModel)]=\"adminPage.lastName\" (ngModelChange)=\"adminPage.lastName = $event.toUpperCase()\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.lastName.valid && basicMemberForm.controls.lastName.touched\">\n                    <div *ngIf=\"basicMemberForm.get('lastName').hasError('required')\">You must enter\n                      a Last name\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('lastName').hasError('minlength')\">Last name\n                      must be 3 characters\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('lastName').hasError('maxlength')\">Last name\n                      must be 20 characters\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('lastName').hasError('pattern')\">Please enter\n                      valid Last name\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Institute'\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.contactPerson.valid && basicMemberForm.controls.contactPerson.touched}\">\n                  <label for=\"exampleForm2\">Contact Person Name</label><span style=\"color:red;\">\n                    *</span>\n                  <input type=\"text\" name=\"contactPerson\" class=\"form-control\" formControlName=\"contactPerson\"\n                    [(ngModel)]=\"adminPage.contactPerson\"\n                    (ngModelChange)=\"adminPage.contactPerson = $event.toUpperCase()\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.contactPerson.valid && basicMemberForm.controls.contactPerson.touched\">\n                    <div *ngIf=\"basicMemberForm.get('contactPerson').hasError('required')\">You must\n                      enter Contact Person Name\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('contactPerson').hasError('minlength')\">Contact\n                      Person Name must be 3 characters</div>\n                    <div *ngIf=\"basicMemberForm.get('contactPerson').hasError('maxlength')\">Contact\n                      Person Name must be 30 characters</div>\n                    <div *ngIf=\"basicMemberForm.get('contactPerson').hasError('pattern')\">Please\n                      enter valid contact Person name</div>\n\n                  </div>\n                </div>\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Institute'\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.since.valid && basicMemberForm.controls.since.touched}\">\n                  <label for=\"exampleForm2\">Since</label><span style=\"color:red;\"> *</span>\n                  <input type=\"text\" name=\"since\" class=\"form-control\" maxlength=\"4\" placeholder=\"yyyy\"\n                    formControlName=\"since\" [(ngModel)]=\"adminPage.since\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.since.valid && basicMemberForm.controls.since.touched\">\n                    <div *ngIf=\"basicMemberForm.get('since').hasError('required')\">You must enter a\n                      since\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('since').hasError('minlength')\">since must be 4\n                      digits\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('since').hasError('maxlength')\">since must be 4\n                      digits\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('since').hasError('pattern')\">Please enter valid\n                      since\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-md-3\" *ngIf=\"adminPage.experienceType == 'Experienced'\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.middleName.valid && basicMemberForm.controls.middleName.touched}\">\n                  <label for=\"exampleForm2\">Years of Experience</label><span style=\"color:red;\">\n                    *</span>\n                  <select class=\"custom-select\" id=\"inputGroupSelect04\" aria-label=\"Example select with button addon\"\n                    formControlName=\"yearOfExp\" [(ngModel)]=\"adminPage.yearOfExp\">\n                    <option value=\"\">-Select-</option>\n                    <option value=\"3-5\">3-5 YEARS</option>\n                    <option value=\"6-10\">6-10 YEARS</option>\n                    <option value=\"11-15\">11-15 YEARS</option>\n                    <option value=\"16-20\">16-20 YEARS</option>\n                    <option value=\"21-25\">21-25 YEARS</option>\n                    <option value=\"26+\">26+ ABOVE</option>\n                  </select>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.yearOfExp.valid && basicMemberForm.controls.yearOfExp.touched\">\n                    <div *ngIf=\"basicMemberForm.get('yearOfExp').hasError('required')\">You must\n                      select Years of Experience\n                    </div>\n                    <!-- <div *ngIf=\"basicMemberForm.get('yearOfExp').hasError('minlength')\">Last\n                                                                    name must be 20 characters</div>\n                                                                <div *ngIf=\"basicMemberForm.get('yearOfExp').hasError('maxlength')\">Last\n                                                                    name must be 20 characters</div> -->\n                  </div>\n                </div>\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.ageGroup.valid && basicMemberForm.controls.ageGroup.touched}\">\n                  <label for=\"exampleForm2\">Age Group</label><span style=\"color:red;\"> *</span>\n                  <select class=\"custom-select\" id=\"inputGroupSelect04\" aria-label=\"Example select with button addon\"\n                    formControlName=\"ageGroup\" [(ngModel)]=\"adminPage.ageGroup\">\n                    <option value=\"\">-Select-</option>\n                    <option value=\"5-15\">5-15 YEARS</option>\n                    <option value=\"15-21\">15-21 YEARS</option>\n                    <option value=\"22-30\">22-30 YEARS</option>\n                    <option value=\"31-40\">31-40 YEARS</option>\n                    <option value=\"41-50\">41-50 YEARS</option>\n                    <option value=\"51-60\">51-60 YEARS</option>\n                    <option value=\"61-70\">61-70 YEARS</option>\n                    <option value=\"70+\">70+ YEARS</option>\n                  </select>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.ageGroup.valid && basicMemberForm.controls.ageGroup.touched\">\n                    <div *ngIf=\"basicMemberForm.get('ageGroup').hasError('required')\">You must\n                      select Age Group\n                    </div>\n                    <!-- <div *ngIf=\"basicMemberForm.get('ageGroup').hasError('minlength')\">Last name\n                                                                    must be 20 characters</div>\n                                                                <div *ngIf=\"basicMemberForm.get('ageGroup').hasError('maxlength')\">Last name\n                                                                    must be 20 characters</div> -->\n                  </div>\n                </div>\n\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.gender.valid && basicMemberForm.controls.gender.touched}\">\n\n                  <label for=\"exampleForm2\">Select Gender</label><span style=\"color:red;\"> *</span>\n                  <select class=\"custom-select\" id=\"inputGroupSelect04\" aria-label=\"Example select with button addon\"\n                    formControlName=\"gender\" [(ngModel)]=\"adminPage.gender\">\n                    <option value=\"\">-Select-</option>\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                    <option value=\"Others\">Others</option>\n                  </select>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.gender.valid && basicMemberForm.controls.gender.touched\">\n                    <div *ngIf=\"basicMemberForm.get('gender').hasError('required')\">You must select\n                      Gender\n                    </div>\n                  </div>\n                </div>\n\n\n                <div class=\"col-md-3\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.profession.valid && basicMemberForm.controls.profession.touched}\">\n                  <label for=\"exampleForm2\">{{adminPage.ProfessionService}}</label><span style=\"color:red;\">\n                    *</span>\n                  <angular2-multiselect [data]=\"proffessionList\" formControlName=\"profession\"\n                    [(ngModel)]=\"selectedproffession\" [settings]=\"proffessionSettings\"\n                    (onSelect)=\"onproffessionSelect($event)\" (onDeSelect)=\"onproffessionDeSelect($event)\"\n                    (onSelectAll)=\"onproffessionSelectAll($event)\" (onDeSelectAll)=\"onproffessionDeSelectAll($event)\">\n                  </angular2-multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.profession.valid && basicMemberForm.controls.profession.touched\">\n                    <div *ngIf=\"basicMemberForm.get('profession').hasError('required')\">You must\n                      Select {{adminPage.ProfessionService}}\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-md-3\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.otherskills.valid && basicMemberForm.controls.otherskills.touched}\">\n                  <label for=\"exampleForm2\">{{adminPage.OtherSkillsOtherServices}}&nbsp;&nbsp;(max 8)</label>\n                  <angular2-multiselect [data]=\"otherSkillList\" formControlName=\"otherskills\"\n                    [(ngModel)]=\"selectedotherSkill\" [settings]=\"otherSkillSettings\"\n                    (onSelect)=\"onotherSkillSelect($event)\" (onDeSelect)=\"onotherSkillDeSelect($event)\"\n                    (onSelectAll)=\"onotherSkillSelectAll($event)\" (onDeSelectAll)=\"onotherSkillDeSelectAll($event)\">\n                  </angular2-multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.otherskills.valid && basicMemberForm.controls.otherskills.touched\">\n                    <div *ngIf=\"basicMemberForm.get('otherskills').hasError('required')\">You must\n                      select {{adminPage.OtherSkillsOtherServices}}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-md-3\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.address.valid && basicMemberForm.controls.address.touched}\">\n                  <label for=\"exampleForm2\">Address</label><span style=\"color:red;\"> *</span>\n                  <textarea [(ngModel)]=\"adminPage.address\" formControlName=\"address\" name=\"address\"\n                    class=\"form-control\"></textarea>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.address.valid && basicMemberForm.controls.address.touched\">\n                    <div *ngIf=\"basicMemberForm.get('address').hasError('required')\">You must enter\n                      Address\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('address').hasError('minlength')\">Address must\n                      be 5 characters\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('address').hasError('maxlength')\">Address should\n                      not be more than 200 characters\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('address').hasError('pattern')\">Please enter\n                      valid Address\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\" style=\"margin-top: 25px;\">\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <div class=\"custom-control custom-radio\">\n                        <input type=\"radio\" class=\"custom-control-input\" id=\"addressVisibilitypubc\"\n                          name=\"addressVisibility\" formControlName=\"addressVisibility\" value=\"1\"\n                          [(ngModel)]=\"adminPage.addressVisibility\">\n                        <label class=\"custom-control-label\" for=\"addressVisibilitypubc\">Public</label>\n                      </div>\n                    </div>\n                    <div class=\"col-md-4\">\n                      <div class=\"custom-control custom-radio\">\n                        <input type=\"radio\" class=\"custom-control-input\" id=\"addressVisibilityhiden\"\n                          name=\"addressVisibility\" formControlName=\"addressVisibility\" value=\"0\"\n                          [(ngModel)]=\"adminPage.addressVisibility\">\n                        <label class=\"custom-control-label\" for=\"addressVisibilityhiden\">Hidden</label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.state.valid && basicMemberForm.controls.state.touched}\">\n                  <label for=\"exampleForm2\">State</label><span style=\"color:red;\"> *</span>\n                  <angular2-multiselect [data]=\"statenameList\" formControlName=\"state\" [(ngModel)]=\"selectedstatename\"\n                    [settings]=\"statenameSettings\" (onSelect)=\"statenameSelect($event)\"\n                    (onDeSelect)=\"statenameDeSelect($event)\" (onSelectAll)=\"statenameSelectAll($event)\"\n                    (onDeSelectAll)=\"statenameDeSelectAll($event)\">\n                  </angular2-multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.state.valid && basicMemberForm.controls.state.touched\">\n                    <div *ngIf=\"basicMemberForm.get('state').hasError('required')\">You must select\n                      State\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.city.valid && basicMemberForm.controls.city.touched}\">\n                  <label for=\"exampleForm2\">City</label><span style=\"color:red;\"> *</span>\n                  <angular2-multiselect [data]=\"cityList\" formControlName=\"city\" [(ngModel)]=\"selectedcity\"\n                    [settings]=\"citySettings\" (onSelect)=\"oncitySelect($event)\" (onDeSelect)=\"oncityDeSelect($event)\"\n                    (onSelectAll)=\"oncitySelectAll($event)\" (onDeSelectAll)=\"oncityDeSelectAll($event)\">\n                  </angular2-multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.city.valid && basicMemberForm.controls.city.touched\">\n                    <div *ngIf=\"basicMemberForm.get('city').hasError('required')\">You must select\n                      City\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.mobile.valid && basicMemberForm.controls.mobile.touched}\">\n                  <label for=\"exampleForm2\">Contact Number</label><span style=\"color:red;\"> *</span>\n                  <input type=\"text\" name=\"contactno\" class=\"form-control\" formControlName=\"mobile\" maxlength=\"10\"\n                    [(ngModel)]=\"adminPage.mobile\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.mobile.valid && basicMemberForm.controls.mobile.touched\">\n                    <div *ngIf=\"basicMemberForm.get('mobile').hasError('required')\">You must enter\n                      Contact Number\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('mobile').hasError('minlength')\">Contact Number\n                      must be 10 digits\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('mobile').hasError('maxlength')\">Contact Number\n                      must be 10 digits\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('mobile').hasError('pattern')\">Please enter\n                      valid Contact Number\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\" style=\"margin-top: 25px;\">\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <div class=\"custom-control custom-radio\">\n                        <input type=\"radio\" class=\"custom-control-input\" id=\"mobileVisibilitypub\"\n                          formControlName=\"mobileVisibility\" name=\"mobileVisibility\" value=\"1\"\n                          [(ngModel)]=\"adminPage.mobileVisibility\">\n                        <label class=\"custom-control-label\" for=\"mobileVisibilitypub\">Public</label>\n                      </div>\n                    </div>\n                    <div class=\"col-md-4\">\n                      <div class=\"custom-control custom-radio\">\n                        <input type=\"radio\" class=\"custom-control-input\" id=\"mobileVisibilityhid\"\n                          name=\"mobileVisibility\" formControlName=\"mobileVisibility\" value=\"0\"\n                          [(ngModel)]=\"adminPage.mobileVisibility\">\n                        <label class=\"custom-control-label\" for=\"mobileVisibilityhid\">Hidden</label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.email.valid && basicMemberForm.controls.email.touched}\">\n                  <label for=\"exampleForm2\">Email ID</label>\n                  <input type=\"text\" [(ngModel)]=\"adminPage.email\" formControlName=\"email\" name=\"emailId\"\n                    class=\"form-control\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.email.valid && basicMemberForm.controls.email.touched\">\n                    <div *ngIf=\"basicMemberForm.get('email').hasError('required')\">You must enter\n                      Email ID\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('email').hasError('minlength')\">Email ID must be\n                      5 characters\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('email').hasError('maxlength')\">Email ID must be\n                      60 characters\n                    </div>\n                    <!-- <div *ngIf=\"basicMemberForm.get('email').hasError('pattern')\">Please enter valid\n                      Email ID\n                    </div> -->\n                  </div>\n                </div>\n                <div class=\"col-md-3\" style=\"margin-top: 25px;\">\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <div class=\"custom-control custom-radio\">\n                        <input type=\"radio\" class=\"custom-control-input\" id=\"emailVisibilitypubl\" name=\"emailVisibility\"\n                          value=\"1\" formControlName=\"emailVisibility\" [(ngModel)]=\"adminPage.emailVisibility\">\n                        <label class=\"custom-control-label\" for=\"emailVisibilitypubl\">Public</label>\n                      </div>\n                    </div>\n                    <div class=\"col-md-4\">\n                      <div class=\"custom-control custom-radio\">\n                        <input type=\"radio\" class=\"custom-control-input\" id=\"emailVisibilityhidd\" name=\"emailVisibility\"\n                          value=\"0\" formControlName=\"emailVisibility\" [(ngModel)]=\"adminPage.emailVisibility\">\n                        <label class=\"custom-control-label\" for=\"emailVisibilityhidd\">Hidden</label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-md-12\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.instructionByMember.valid && basicMemberForm.controls.instructionByMember.touched}\">\n                  <label for=\"exampleForm2\">Instructions to\n                    Admin</label><em>({{ 1200 - adminPage.instructionByMember.length }} characters\n                    left)</em>\n                  <textarea formControlName=\"instructionByMember\" [(ngModel)]=\"adminPage.instructionByMember\"\n                    name=\"instructionByMember\" id=\"instructionByMember\" class=\"form-control\"\n                    placeholder=\"Eg: Do not Share My Contact Number with Anyone\"></textarea>\n                  <!-- <p>For Kannada, visit the this link <a href=\"http://www.quillpad.in/index.html#.XjKlZmkzZPY\"\n                      target=\"blank\" style=\"font-weight: bold;color: #0000ae;\">&nbsp;ಕನ್ನಡ </a> , then type and\n                    copy the content and paste it in the\n                    above feild .</p> -->\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.instructionByMember.valid && basicMemberForm.controls.instructionByMember.touched\">\n\n                    <div *ngIf=\"basicMemberForm.get('instructionByMember').hasError('maxlength')\">\n                      Instructions By Member must be 1200 characters\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <!-- <div class=\"row\" style=\"margin-top: 2%;\">\n                        <div class=\"col-md-3\">\n                            <img [src]=\"croppedImage\" onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height:230px;width: 170px;\">\n                            <div class=\"upload-btn-wrapper\">\n                                <button class=\"btn1\" style=\"margin-top: 2%;\">Upload Photo</button>\n                                <input type=\"file\" id=\"propic\" name=\"propic\" (change)=\"fileChangeEvent($event)\">\n                                <input type=\"hidden\" name=\"fileHidden\" formControlName=\"profileImage\" />\n\n                            </div>\n                            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.profileImage.valid && basicMemberForm.controls.profileImage.touched\">\n                                <div *ngIf=\"basicMemberForm.get('profileImage').hasError('required')\">\n                                    You must select Profile Pic\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\">\n                            <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent\" [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\" (imageCropped)=\"imageCropped($event)\" (imageLoaded)=\"imageLoaded()\" (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                                onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height:  230px;width: 170px;\">\n                            </image-cropper>\n                        </div>\n                        <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Institute'\">\n                            <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent\" [maintainAspectRatio]=\"true\" [aspectRatio]=\"4/3\" format=\"jpeg\" (imageCropped)=\"imageCropped($event)\" (imageLoaded)=\"imageLoaded()\" (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\">\n                            </image-cropper>\n                        </div>\n                    </div> -->\n              <div class=\"row\">\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.leagueTypeId.valid && basicMemberForm.controls.leagueTypeId.touched}\">\n                  <label for=\"exampleForm2\">League Type</label>\n                  <select class=\"custom-select\" id=\"inputGroupSelect04\" aria-label=\"Example select with button addon\"\n                    formControlName=\"leagueTypeId\" [(ngModel)]=\"adminPage.leagueTypeId\">\n                    <option value=\"\">-Select-</option>\n                    <option value=\"1\">Star</option>\n                    <option value=\"2\">Celebritie</option>\n                    <option value=\"3\">Premium</option>\n                    <option value=\"4\">Promotion</option>\n                  </select>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.leagueTypeId.valid && basicMemberForm.controls.leagueTypeId.touched\">\n                    <div *ngIf=\"basicMemberForm.get('leagueTypeId').hasError('required')\">You must\n                      select League Type\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\">\n                  <label>Referred By</label>\n                  <angular2-multiselect [data]=\"memberList\" [(ngModel)]=\"selectedrefmem\" formControlName=\"MemberName\" [settings]=\"memberNewsSettings\"\n                    (onSelect)=\"selectedMemId($event)\">\n                    <c-search>\n                      <ng-template>\n                        <input type=\"text\" (keyup)=\"getReferedMemberList($event)\" placeholder=\"Search Members\"\n                          style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                      </ng-template>\n                    </c-search>\n\n                    <c-item>\n                      <ng-template let-item=\"item\">\n                        <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                        <label style=\"font-size: 85%;font-weight: 500;\">{{item.itemName | slice:0:15}}</label>\n                      </ng-template>\n                    </c-item>\n                  </angular2-multiselect>\n                </div>\n              </div>\n              <div class=\"row\" style=\"margin-top: 2%;\" *ngIf=\"adminPage.individualInstitute == 'Individual'\">\n                <div class=\"col-md-3\">\n                  <img [src]=\"croppedImage\" onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                    style=\"height:230px;width: 170px;\">\n                  <div class=\"upload-btn-wrapper\">\n                    <button class=\"btn1\" style=\"margin-top: 2%;\"\n                      [disabled]=\"!this.validityProfile.memberValidUptoStatus\">Upload\n                      Photo</button>\n                    <input type=\"file\" id=\"propic\" name=\"propic\" accept=\".jpg,.jpeg\" (change)=\"fileChangeEvent($event)\">\n                    <!-- [attr.disabled]=\"!this.validityProfile.memberValidUptoStatus\" -->\n                    <input type=\"hidden\" name=\"fileHidden\" formControlName=\"profileImage\" />\n                  </div>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.profileImage.valid && basicMemberForm.controls.profileImage.touched\">\n                    <div *ngIf=\"basicMemberForm.get('profileImage').hasError('required')\">\n                      You must select Profile Picture\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\">\n                  <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent\" [maintainAspectRatio]=\"true\"\n                    [aspectRatio]=\"3/4\" format=\"jpeg\" (imageCropped)=\"imageCropped($event)\"\n                    (imageLoaded)=\"imageLoaded()\" (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                    onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height:  230px;width: 170px;\">\n                  </image-cropper>\n                </div>\n              </div>\n              <div class=\"row\" style=\"margin-top: 2%;\" *ngIf=\"adminPage.individualInstitute == 'Institute'\">\n                <div class=\"col-md-3\">\n                  <img [src]=\"croppedImage\" onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                    style=\"height: 148px;width: 268px;\">\n                  <div class=\"upload-btn-wrapper\">\n                    <button class=\"btn1\" style=\"margin-top: 2%;\">Upload Photo</button>\n                    <input type=\"file\" id=\"propic\" name=\"propic\" accept=\".jpg,.jpeg,.png\"\n                      (change)=\"fileChangeEvent($event)\">\n                    <!-- [attr.disabled]=\"!this.validityProfile.memberValidUptoStatus\" -->\n                    <input type=\"hidden\" name=\"fileHidden\" formControlName=\"profileImage\" />\n                  </div>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.profileImage.valid && basicMemberForm.controls.profileImage.touched\">\n                    <div *ngIf=\"basicMemberForm.get('profileImage').hasError('required')\">\n                      You must select Profile Picture\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\">\n                  <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent\" [maintainAspectRatio]=\"true\"\n                    [aspectRatio]=\"4/3\" format=\"jpeg\" (imageCropped)=\"imageCropped($event)\"\n                    (imageLoaded)=\"imageLoaded()\" (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                    onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height:  230px;width: 170px;\">\n                  </image-cropper>\n                </div>\n              </div>\n\n              <div class=\"col-md-12\">\n                <!-- <button type=\"button\" class=\"btn btn-success\" style=\"margin-top: 6%;\" (click)=\"submitBasicDetails()\" [disabled]=\"basicUpdateButton\">Update</button>&nbsp;&nbsp; &nbsp;&nbsp; -->\n                <button type=\"button\" class=\"btn btn-success\" style=\"margin-top: 6%;\" (click)=\"updateMemberShipData()\"\n                  [disabled]=\"!this.validityProfile.memberValidUptoStatus\">Update</button>&nbsp;&nbsp;\n                <button type=\"button\" class=\"btn btn-danger\" style=\"margin-top: 6%;color: #fff\" data-dismiss=\"modal\"\n                  aria-label=\"Close\">Cancel</button>\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div class=\"card\" style=\"margin-top: 1%;\"\n          *ngIf=\"adminPage.refMembershipTypeId == '2' || adminPage.refMembershipTypeId == '3'\">\n          <div class=\"card-header\">\n            PROFILE PAGE\n            <div *ngIf=\"validityProfile.profileValidUptoStatus\" class=\"validDateShowing\" style=\"float: right;\">Valid\n              Upto\n              {{validityProfile.profileValidUptoDate | date:'dd-LLL-yyyy'}} (Remaining\n              {{validityProfile.profileValidUptoDays}} days)\n            </div>\n            <div *ngIf=\"!validityProfile.profileValidUptoStatus\" class=\"validDateShowing\" style=\"float: right;\">\n              Expired{{validityProfile.profileValidUptoDate | date:'dd-LLL-yyyy'}}\n            </div>\n          </div>\n\n          <div class=\"card-body\">\n            <form novalidate [formGroup]=\"profileMemberForm\" class=\"form-horizontal\">\n              <div class=\"row\">\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.qualification.valid && profileMemberForm.controls.qualification.touched}\">\n                  <label for=\"exampleForm2\">Qualification</label><span style=\"color:red;\"> *</span>\n                  <input type=\"text\" name=\"qualification\" class=\"form-control\" formControlName=\"qualification\"\n                    [(ngModel)]=\"profileMember.qualification\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.qualification.valid && profileMemberForm.controls.qualification.touched\">\n                    <div *ngIf=\"profileMemberForm.get('qualification').hasError('required')\">You\n                      must enter Qualification\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('qualification').hasError('minlength')\">\n                      Qualification must be 3 characters</div>\n                    <div *ngIf=\"profileMemberForm.get('qualification').hasError('maxlength')\">\n                      Qualification must be 30 characters</div>\n                    <div *ngIf=\"profileMemberForm.get('qualification').hasError('pattern')\">Please\n                      enter valid Qualification\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.motherTounge.valid && profileMemberForm.controls.motherTounge.touched}\">\n                  <label for=\"exampleForm2\">Mother Tongue</label><span style=\"color:red;\"> *</span>\n                  <angular2-multiselect [data]=\"motherToungeList\" [(ngModel)]=\"selectedmotherTounge\"\n                    formControlName=\"motherTounge\" [settings]=\"motherToungeSettings\"\n                    (onSelect)=\"motherToungeSelect($event)\" (onDeSelect)=\"motherToungeDeSelect($event)\"\n                    (onSelectAll)=\"motherToungeSelectAll($event)\" (onDeSelectAll)=\"motherToungeDeSelectAll($event)\">\n                  </angular2-multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.motherTounge.valid && profileMemberForm.controls.motherTounge.touched\">\n                    <div *ngIf=\"profileMemberForm.get('motherTounge').hasError('required')\">You must\n                      select mother Tounge\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.otherLanguages.valid && profileMemberForm.controls.otherLanguages.touched}\">\n                  <label for=\"exampleForm2\">Other Languages</label>\n                  <angular2-multiselect [data]=\"otherLanguagesList\" [(ngModel)]=\"selectedotherLanguages\"\n                    formControlName=\"otherLanguages\" [settings]=\"otherLanguagesSettings\"\n                    (onSelect)=\"otherLanguagesSelect($event)\" (onDeSelect)=\"otherLanguagesDeSelect($event)\"\n                    (onSelectAll)=\"otherLanguagesSelectAll($event)\" (onDeSelectAll)=\"otherLanguagesDeSelectAll($event)\">\n                  </angular2-multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.otherLanguages.valid && profileMemberForm.controls.otherLanguages.touched\">\n                    <div *ngIf=\"profileMemberForm.get('otherLanguages').hasError('required')\">You\n                      must select other Languages\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.height.valid && profileMemberForm.controls.height.touched}\">\n                  <label for=\"exampleForm2\">Height</label>\n                  <input type=\"text\" name=\"height\" class=\"form-control\" [(ngModel)]=\"profileMember.height\"\n                    placeholder=\"5'12\" maxlength=\"5\" formControlName=\"height\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.height.valid && profileMemberForm.controls.height.touched\">\n                    <div *ngIf=\"profileMemberForm.get('height').hasError('required')\">You must enter\n                      height\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('height').hasError('minlength')\">height must\n                      be 4 characters\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('height').hasError('maxlength')\">height must\n                      be 5 characters\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('height').hasError('pattern')\">Please enter\n                      valid height Eg: 5'12\" or 5'12\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.weight.valid && profileMemberForm.controls.weight.touched}\">\n                  <label for=\"exampleForm2\">Weight</label>\n                  <input type=\"text\" name=\"weight\" class=\"form-control\" [(ngModel)]=\"profileMember.weight\"\n                    formControlName=\"weight\" maxlength=\"3\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.weight.valid && profileMemberForm.controls.weight.touched\">\n                    <div *ngIf=\"profileMemberForm.get('weight').hasError('required')\">You must enter\n                      weight\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('weight').hasError('minlength')\">weight must\n                      be 1 characters\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('weight').hasError('maxlength')\">weight must\n                      be 3 characters\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('weight').hasError('pattern')\">Please enter\n                      valid weight Eg: 45 or 75\n                    </div>\n\n                  </div>\n                </div>\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.dob.valid && profileMemberForm.controls.dob.touched}\">\n                  <label for=\"exampleForm2\">Date of Birth</label><span style=\"color:red;\"> *</span>\n                  <!-- <input type=\"text\" class=\"form-control\" [(ngModel)]=\"profileMember.dob\" formControlName=\"dob\" placeholder=\"DD-MM\" maxlength=\"5\"> -->\n                  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"profileMember.dob\" formControlName=\"dob\"\n                    name=\"dob\" placeholder=\"DD-MM\" maxlength=\"5\" (input)=\"AppendDate($event.target.value)\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.dob.valid && profileMemberForm.controls.dob.touched\">\n                    <div *ngIf=\"profileMemberForm.get('dob').hasError('required')\">You must enter\n                      Date of Birth\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('dob').hasError('pattern')\">Please enter valid\n                      Date of Birth\n                    </div>\n                  </div>\n\n                </div>\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.birthPlace.valid && profileMemberForm.controls.birthPlace.touched}\">\n                  <label for=\"exampleForm2\">Birth Place</label><span style=\"color:red;\"> *</span>\n                  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"profileMember.birthPlace\"\n                    formControlName=\"birthPlace\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.birthPlace.valid && profileMemberForm.controls.birthPlace.touched\">\n                    <div *ngIf=\"profileMemberForm.get('birthPlace').hasError('required')\">You must\n                      enter birth Place\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('birthPlace').hasError('minlength')\">birth\n                      Place must be 3 characters\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('birthPlace').hasError('maxlength')\">birth\n                      Place must be 30 characters\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('birthPlace').hasError('pattern')\">Please\n                      enter valid birth Place\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.nationality.valid && profileMemberForm.controls.nationality.touched}\">\n                  <label for=\"exampleForm2\">Nationality</label><span style=\"color:red;\"> *</span>\n                  <angular2-multiselect [data]=\"nationList\" [(ngModel)]=\"selectednation\" [settings]=\"nationSettings\"\n                    (onSelect)=\"nationnameSelect($event)\" (onDeSelect)=\"nationnameDeSelect($event)\"\n                    (onSelectAll)=\"nationnameSelectAll($event)\" (onDeSelectAll)=\"nationnameDeSelectAll($event)\"\n                    formControlName=\"nationality\">\n                  </angular2-multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.nationality.valid && profileMemberForm.controls.nationality.touched\">\n                    <div *ngIf=\"profileMemberForm.get('nationality').hasError('required')\">You must\n                      select Nationality\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-12\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.description.valid && profileMemberForm.controls.description.touched}\">\n                  <label for=\"exampleForm2\">Description (in short)</label><span style=\"color:red;\"> *\n                  </span>\n                  <em>({{ 600- profileMember.description.length }} characters left)</em>\n                  <textarea class=\"form-control\" rows=\"2\" [(ngModel)]=\"profileMember.description\"\n                    formControlName=\"description\"></textarea>\n                  <!-- <p>For Kannada, visit the this link <a href=\"http://www.quillpad.in/index.html#.XjKlZmkzZPY\"\n                      target=\"blank\" style=\"font-weight: bold;color: #0000ae;\">&nbsp;ಕನ್ನಡ </a> , then type and\n                    copy the content and paste it in the\n                    above feild .</p> -->\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.description.valid && profileMemberForm.controls.description.touched\">\n                    <div *ngIf=\"profileMemberForm.get('description').hasError('required')\">You must\n                      enter Description\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('description').hasError('minlength')\">\n                      Description must be atleast 30 characters</div>\n                    <div *ngIf=\"profileMemberForm.get('description').hasError('maxlength')\">\n                      Description must be less than 600 characters</div>\n                    <div *ngIf=\"profileMemberForm.get('description').hasError('pattern')\">Please\n                      enter valid Description\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-12\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.aboutMe.valid && profileMemberForm.controls.aboutMe.touched}\"\n                  style=\"height: 5%\">\n                  <label for=\"exampleForm2\">About me</label><span style=\"color:red;\">\n                    *</span><em>({{ 25000 - profileMember.aboutMe.length }} characters left)</em>\n                  <!-- <textarea id=\"edit1\" [froalaEditor] [(froalaModel)]=\"profileMember.aboutMe\"></textarea> -->\n                  <!-- <textarea class=\"form-control\" rows=\"4\" [(ngModel)]=\"profileMember.aboutMe\" formControlName=\"aboutMe\"></textarea> -->\n                  <quill-editor rows=\"4\" [modules]=\"modules\" [(ngModel)]=\"profileMember.aboutMe\" formControlName=\"aboutMe\">\n                  </quill-editor>\n                  <!-- <p>For Kannada, visit the this link <a href=\"http://www.quillpad.in/index.html#.XjKlZmkzZPY\"\n                      target=\"blank\" style=\"font-weight: bold;color: #0000ae;\">&nbsp;ಕನ್ನಡ </a> , then type and\n                    copy the content and paste it in the\n                    above feild .</p> -->\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.aboutMe.valid && profileMemberForm.controls.aboutMe.touched\">\n                    <div *ngIf=\"profileMemberForm.get('aboutMe').hasError('required')\">You must\n                      enter About me\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('aboutMe').hasError('minlength')\">About me\n                      must be atleast 30 characters\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('aboutMe').hasError('maxlength')\">About me\n                      must be less than 25,000 characters</div>\n                    <div *ngIf=\"profileMemberForm.get('aboutMe').hasError('pattern')\">Please enter\n                      valid About me</div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-md-12\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.experience.valid && profileMemberForm.controls.experience.touched}\"\n                  style=\"height: 5%\">\n                  <label for=\"exampleForm2\">Experience</label><span style=\"color:red;\">\n                    *</span><em>({{ 25000 - profileMember.experience.length }} characters left)</em>\n                  <!-- <textarea id=\"edit\" [froalaEditor] [(froalaModel)]=\"profileMember.experience\"></textarea> -->\n                  <!-- <textarea class=\"form-control\" rows=\"4\" [(ngModel)]=\"profileMember.experience\" formControlName=\"experience\"></textarea> -->\n                  <quill-editor rows=\"4\" [modules]=\"modules\" [(ngModel)]=\"profileMember.experience\" formControlName=\"experience\">\n                  </quill-editor>\n                  <!-- <p>For Kannada, visit the this link <a href=\"http://www.quillpad.in/index.html#.XjKlZmkzZPY\"\n                      target=\"blank\" style=\"font-weight: bold;color: #0000ae;\">&nbsp;ಕನ್ನಡ </a> , then type and\n                    copy the content and paste it in the\n                    above feild .</p> -->\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.experience.valid && profileMemberForm.controls.experience.touched\">\n                    <div *ngIf=\"profileMemberForm.get('experience').hasError('required')\">You must\n                      enter Experience\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('experience').hasError('minlength')\">\n                      Experience must be atleast 30 characters\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('experience').hasError('maxlength')\">\n                      Experience must be less than 25,000 characters</div>\n                    <div *ngIf=\"profileMemberForm.get('experience').hasError('pattern')\">Please\n                      enter valid Experience\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div formArrayName=\"otherOpenionRows\">\n                    <label for=\"exampleForm2\">Others Opinion</label>\n                    <div class=\"row\">\n                      <div class=\"col-md-3\">\n                        <label>Member Name</label>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <label>Members Opinion</label>\n                      </div>\n                      <div class=\"col-md-3\">\n                        <label>Add/Remove</label>\n                      </div>\n                    </div>\n                    <div class=\"row\" *ngFor=\"let otherOpenionrow of getotherOpenionRows(profileMemberForm); let i=index\"\n                      [formGroupName]=\"i\">\n                      <div class=\"col-md-3\">\n                        <angular2-multiselect [data]=\"otherMemberList\" [(ngModel)]=\"selectedItems[i]\"\n                          formControlName=\"otherMemberName\" [settings]=\"otherMembersettings\">\n                          <c-search>\n                            <ng-template>\n                              <input type=\"text\" (keyup)=\"GetOtherMemberList($event)\" placeholder=\"Search Members\"\n                                style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                            </ng-template>\n                          </c-search>\n                          <c-item>\n                            <ng-template let-item=\"item\">\n                              <img [src]=\"item.profileImage\"\n                                style=\"width: 30px; border: 1px solid #efefef;margin-right: 0px;\" />\n                              <label>{{item.itemName}}</label>\n                            </ng-template>\n                          </c-item>\n                        </angular2-multiselect>\n                        <div class=\"alert alert-danger\" role=\"alert\"\n                          *ngIf=\"!profileMemberForm.controls.otherOpenionRows.controls[i].controls.otherMemberName.valid && profileMemberForm.controls.otherOpenionRows.controls[i].controls.otherMemberName.touched\">\n                          <div\n                            *ngIf=\"profileMemberForm.controls.otherOpenionRows.controls[i].controls.otherMemberName.hasError('required')\">\n                            You must select Other Member</div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <textarea formControlName=\"description\" name=\"description\" id=\"description\" class=\"form-control\"\n                          #description></textarea>\n                        <em>({{ 1200- description.value.length }} characters left)</em>\n                        <!-- <p>For Kannada, visit the this link <a href=\"http://www.quillpad.in/index.html#.XjKlZmkzZPY\"\n                            target=\"blank\" style=\"font-weight: bold;color: #0000ae;\">&nbsp;ಕನ್ನಡ </a> ,\n                          then type and copy the content and paste\n                          it in the above feild .</p> -->\n                        <div class=\"alert alert-danger\" role=\"alert\"\n                          *ngIf=\"!profileMemberForm.controls.otherOpenionRows.controls[i].controls.description.valid && profileMemberForm.controls.otherOpenionRows.controls[i].controls.description.touched\">\n                          <div\n                            *ngIf=\"profileMemberForm.controls.otherOpenionRows.controls[i].controls.description.hasError('minlength')\">\n                            Description must be 30 characters</div>\n                          <div\n                            *ngIf=\"profileMemberForm.controls.otherOpenionRows.controls[i].controls.description.hasError('maxlength')\">\n                            Description must be 1200 characters</div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-3\">\n                        <button type=\"button\" (click)=\"addNewotherOpenionRow()\" class=\"btn btn-primary addremovebtn\"\n                          [disabled]=\"!this.validityProfile.profileValidUptoStatus\"\n                          *ngIf=\"profileMemberForm.controls.otherOpenionRows.controls.length < 5\">\n                          Add\n                        </button>&nbsp;&nbsp;\n                        <button type=\"button\" [disabled]=\"!this.validityProfile.profileValidUptoStatus\"\n                          (click)=\"deleteotherOpenionRow(i)\" class=\"btn btn-danger addremovebtn\"\n                          *ngIf=\"profileMemberForm.controls.otherOpenionRows.controls.length > 1\">\n                          Remove\n                        </button>\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n\n\n                <div class=\"col-md-2\">\n                  <label>Edit Profile Photos</label><span style=\"color:#ff0000;\"> *</span>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <!-- <input type=\"file\" id=\"photo1 \" name=\"photo1 \" (change)=\"fileChangeEventProfile($event,1)\" [(ngModel)]=\"profileMember.ProfileimagePath1\" formControlName=\"ProfileimagePath1\"> -->\n                      <div class=\"upload-btn-wrapper\">\n                        <button class=\"btn2\">Upload Photo\n                          1</button>\n                        <input type=\"file\" id=\"photo1 \" name=\"photo1 \" accept=\".jpg,.jpeg,.png\"\n                          (change)=\"fileChangeEventProfile($event,1)\">\n                        <!-- [attr.disabled]=\"!this.validityProfile.profileValidUptoStatus\" -->\n                        <input type=\"hidden\" name=\"ProfileimagePath1\"  [(ngModel)]=\"profileMember.ProfileimagePath1\"\n                        formControlName=\"ProfileimagePath1\" />\n                      </div>\n                      <div class=\"alert alert-danger\" role=\"alert\"\n                        *ngIf=\"!profileMemberForm.controls.ProfileimagePath1.valid && profileMemberForm.controls.ProfileimagePath1.touched\">\n                        <div *ngIf=\"profileMemberForm.get('ProfileimagePath1').hasError('required')\">\n                          You must select Profile image 1</div>\n                        <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath1').hasError('minlength')\">Profile image 1 must be 3 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath1').hasError('maxlength')\">Profile image 1 must be 30 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath1').hasError('pattern')\">Please enter valid Profile image 1</div> -->\n                      </div>\n                    </div>\n                    <div class=\"col-md-12\">\n                      <div class=\"upload-btn-wrapper\">\n                        <button class=\"btn2\">Upload Photo 2</button>\n                        <input type=\"file\" id=\"photo2 \" name=\"photo2\" accept=\".jpg,.jpeg,.png\"\n                          (change)=\"fileChangeEventProfile($event,2)\">\n                        <!-- [attr.disabled]=\"!this.validityProfile.profileValidUptoStatus\" -->\n                        <input type=\"hidden\" name=\"ProfileimagePath2\"  [(ngModel)]=\"profileMember.ProfileimagePath2\"\n                        formControlName=\"ProfileimagePath2\" />\n                      </div>\n                      <div class=\"alert alert-danger\" role=\"alert\"\n                        *ngIf=\"!profileMemberForm.controls.ProfileimagePath2.valid && profileMemberForm.controls.ProfileimagePath2.touched\">\n                        <div *ngIf=\"profileMemberForm.get('ProfileimagePath2').hasError('required')\">\n                          You must select Profile image 2</div>\n                        <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath2').hasError('minlength')\">Profile image 2 must be 3 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath2').hasError('maxlength')\">Profile image 2 must be 30 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath2').hasError('pattern')\">Please enter valid Profile image 2</div> -->\n                      </div>\n                    </div>\n                    <div class=\"col-md-12\">\n                      <div class=\"upload-btn-wrapper\">\n                        <button class=\"btn2\">Upload Photo 3</button>\n                        <input type=\"file\" id=\"photo3 \" name=\"photo3 \" accept=\".jpg,.jpeg,.png\"\n                          (change)=\"fileChangeEventProfile($event,3) \">\n                        <!-- [attr.disabled]=\"!this.validityProfile.profileValidUptoStatus\" -->\n                        <input type=\"hidden\" name=\"ProfileimagePath3\"  [(ngModel)]=\"profileMember.ProfileimagePath3\"\n                        formControlName=\"ProfileimagePath3\" />\n                      </div>\n                      <div class=\"alert alert-danger\" role=\"alert\"\n                        *ngIf=\"!profileMemberForm.controls.ProfileimagePath3.valid && profileMemberForm.controls.ProfileimagePath3.touched\">\n                        <div *ngIf=\"profileMemberForm.get('ProfileimagePath3').hasError('required')\">\n                          You must select Profile image 3</div>\n                        <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath3').hasError('minlength')\">Profile image 3 must be 3 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath3').hasError('maxlength')\">Profile image 3 must be 30 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath3').hasError('pattern')\">Please enter valid Profile image 3</div> -->\n                      </div>\n                    </div>\n                    <div class=\"col-md-12\">\n                      <div class=\"upload-btn-wrapper\">\n                        <button class=\"btn2\">Upload Photo 4</button>\n                        <input type=\"file\" id=\"photo4 \" name=\"photo4 \" accept=\".jpg,.jpeg,.png\"\n                          (change)=\"fileChangeEventProfile($event,4) \">\n                        <!-- [attr.disabled]=\"!this.validityProfile.profileValidUptoStatus\" -->\n                        <input type=\"hidden\" name=\"ProfileimagePath4\"  [(ngModel)]=\"profileMember.ProfileimagePath4\"\n                        formControlName=\"ProfileimagePath4\" />\n                      </div>\n                      <div class=\"alert alert-danger\" role=\"alert\"\n                        *ngIf=\"!profileMemberForm.controls.ProfileimagePath4.valid && profileMemberForm.controls.ProfileimagePath4.touched\">\n                        <div *ngIf=\"profileMemberForm.get('ProfileimagePath4').hasError('required')\">\n                          You must select Profile image 4</div>\n                        <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath4').hasError('minlength')\">Profile image 4 must be 3 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath4').hasError('maxlength')\">Profile image 4 must be 30 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath4').hasError('pattern')\">Please enter valid Profile image 4</div> -->\n                      </div>\n                    </div>\n                    <div class=\"col-md-12\">\n                      <div class=\"upload-btn-wrapper\">\n                        <button class=\"btn2\">Upload Photo 5</button>\n                        <input type=\"file\" id=\"photo5 \" name=\"photo5 \" accept=\".jpg,.jpeg,.png\"\n                          (change)=\"fileChangeEventProfile($event,5) \">\n                        <!--  [attr.disabled]=\"!this.validityProfile.profileValidUptoStatus\" -->\n                        <input type=\"hidden\" name=\"ProfileimagePath5\"  [(ngModel)]=\"profileMember.ProfileimagePath5\"\n                        formControlName=\"ProfileimagePath5\" />\n                      </div>\n                      <div class=\"alert alert-danger\" role=\"alert\"\n                        *ngIf=\"!profileMemberForm.controls.ProfileimagePath5.valid && profileMemberForm.controls.ProfileimagePath5.touched\">\n                        <div *ngIf=\"profileMemberForm.get('ProfileimagePath5').hasError('required')\">\n                          You must select Profile image 5</div>\n                        <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath5').hasError('minlength')\">Profile image 5 must be 3 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath5').hasError('maxlength')\">Profile image 5 must be 30 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath5').hasError('pattern')\">Please enter valid Profile image 5</div> -->\n                      </div>\n                    </div>\n                    <div class=\"col-md-12\">\n                      <div class=\"upload-btn-wrapper\">\n                        <button class=\"btn2\">Upload Photo 6</button>\n                        <input type=\"file\" id=\"photo6 \" name=\"photo6 \" accept=\".jpg,.jpeg,.png\"\n                          (change)=\"fileChangeEventProfile($event,6) \">\n                        <!--  [attr.disabled]=\"!this.validityProfile.profileValidUptoStatus\" -->\n                        <input type=\"hidden\" name=\"ProfileimagePath6\"  [(ngModel)]=\"profileMember.ProfileimagePath6\"\n                        formControlName=\"ProfileimagePath6\" />\n                      </div>\n                      <div class=\"alert alert-danger\" role=\"alert\"\n                        *ngIf=\"!profileMemberForm.controls.ProfileimagePath6.valid && profileMemberForm.controls.ProfileimagePath6.touched\">\n                        <div *ngIf=\"profileMemberForm.get('ProfileimagePath6').hasError('required')\">\n                          You must select Profile image 6</div>\n                        <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath6').hasError('minlength')\">Profile image 6 must be 3 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath6').hasError('maxlength')\">Profile image 6 must be 30 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath6').hasError('pattern')\">Please enter valid Profile image 6</div> -->\n                      </div>\n                    </div>\n                    <div class=\"col-md-12\">\n                      <div class=\"upload-btn-wrapper\">\n                        <button class=\"btn2\">Upload Photo 7</button>\n                        <input type=\"file\" id=\"photo7 \" name=\"photo7 \" accept=\".jpg,.jpeg,.png\"\n                          (change)=\"fileChangeEventProfile($event,7) \">\n                        <!-- [attr.disabled]=\"!this.validityProfile.profileValidUptoStatus\" -->\n                        <input type=\"hidden\" name=\"ProfileimagePath7\"  [(ngModel)]=\"profileMember.ProfileimagePath7\"\n                        formControlName=\"ProfileimagePath7\" />\n                      </div>\n                      <div class=\"alert alert-danger\" role=\"alert\"\n                        *ngIf=\"!profileMemberForm.controls.ProfileimagePath7.valid && profileMemberForm.controls.ProfileimagePath7.touched\">\n                        <div *ngIf=\"profileMemberForm.get('ProfileimagePath7').hasError('required')\">\n                          You must select Profile image 7</div>\n                        <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath7').hasError('minlength')\">Profile image 7 must be 3 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath7').hasError('maxlength')\">Profile image 7 must be 30 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath7').hasError('pattern')\">Please enter valid Profile image 7</div> -->\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-md-3\">\n                  <span *ngIf=\"imageChangedEvent1Profile !=''\">\n                    <image-cropper id=\"ImagecropperProfile1\" [imageChangedEvent]=\"imageChangedEvent1Profile\"\n                      [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                      (imageCropped)=\"imageCroppedProfile($event,1)\" (imageLoaded)=\"imageLoadedProfile()\"\n                      (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                      onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                    </image-cropper>\n                  </span>\n                  <span *ngIf=\"imageChangedEvent2Profile !=''\">\n                    <image-cropper id=\"ImagecropperProfile2\" [imageChangedEvent]=\"imageChangedEvent2Profile\"\n                      [maintainAspectRatio]=\"true\" [aspectRatio]=\"6/4\" format=\"jpeg\"\n                      (imageCropped)=\"imageCroppedProfile($event,2)\" (imageLoaded)=\"imageLoadedProfile()\"\n                      (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                      onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                    </image-cropper>\n                  </span>\n                  <span *ngIf=\"imageChangedEvent3Profile !=''\">\n                    <image-cropper id=\"ImagecropperProfile3\" [imageChangedEvent]=\"imageChangedEvent3Profile\"\n                      [maintainAspectRatio]=\"true\" [aspectRatio]=\"6/4\" format=\"jpeg\"\n                      (imageCropped)=\"imageCroppedProfile($event,3)\" (imageLoaded)=\"imageLoadedProfile()\"\n                      (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                      onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                    </image-cropper>\n                  </span>\n                  <span *ngIf=\"imageChangedEvent4Profile !=''\">\n                    <image-cropper id=\"ImagecropperProfile4\" [imageChangedEvent]=\"imageChangedEvent4Profile\"\n                      [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                      (imageCropped)=\"imageCroppedProfile($event,4)\" (imageLoaded)=\"imageLoadedProfile()\"\n                      (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                      onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                    </image-cropper>\n                  </span>\n                  <span *ngIf=\"imageChangedEvent5Profile !=''\">\n                    <image-cropper id=\"ImagecropperProfile5\" [imageChangedEvent]=\"imageChangedEvent5Profile\"\n                      [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                      (imageCropped)=\"imageCroppedProfile($event,5)\" (imageLoaded)=\"imageLoadedProfile()\"\n                      (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                      onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                    </image-cropper>\n                  </span>\n                  <span *ngIf=\"imageChangedEvent6Profile !=''\">\n                    <image-cropper id=\"ImagecropperProfile6\" [imageChangedEvent]=\"imageChangedEvent6Profile\"\n                      [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                      (imageCropped)=\"imageCroppedProfile($event,6)\" (imageLoaded)=\"imageLoadedProfile()\"\n                      (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                      onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                    </image-cropper>\n                  </span>\n                  <span *ngIf=\"imageChangedEvent7Profile !=''\">\n                    <image-cropper id=\"ImagecropperProfile7\" [imageChangedEvent]=\"imageChangedEvent7Profile\"\n                      [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                      (imageCropped)=\"imageCroppedProfile($event,7)\" (imageLoaded)=\"imageLoadedProfile()\"\n                      (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                      onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                    </image-cropper>\n                  </span>\n                </div>\n                <div class=\"col-md-7\">\n                  <label>Photos preview</label>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <img class=\"pro1pic\" [src]=\"url1\" onerror=\"this.src='../../../assets/images/avtaar/1.jpg';\">\n                    </div>\n                    <div class=\"col-md-8\">\n                      <div class=\"row\">\n                        <div class=\"col-md-6\">\n                          <img class=\"pro2pic\" [src]=\"url2\" onerror=\"this.src='../../../assets/images/avtaar/2.jpg';\">\n                        </div>\n                        <div class=\"col-md-6\">\n                          <img class=\"pro2pic\" [src]=\"url3\" onerror=\"this.src='../../../assets/images/avtaar/3.jpg';\">\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-md-3\">\n                          <img class=\"pro3pic\" [src]=\"url4\" onerror=\"this.src='../../../assets/images/avtaar/4.jpg';\">\n                        </div>\n                        <div class=\"col-md-3\">\n                          <img class=\"pro3pic\" [src]=\"url5\" onerror=\"this.src='../../../assets/images/avtaar/5.jpg';\">\n                        </div>\n                        <div class=\"col-md-3\">\n                          <img class=\"pro3pic\" [src]=\"url6\" onerror=\"this.src='../../../assets/images/avtaar/6.jpg';\">\n                        </div>\n                        <div class=\"col-md-3\">\n                          <img class=\"pro3pic\" [src]=\"url7\" onerror=\"this.src='../../../assets/images/avtaar/7.jpg';\">\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <!-- <input type=\"text \" [(ngModel)]=\"profileMember.refMemberId\"> -->\n                <div class=\"col-md-12\">\n                  <div class=\"row\">\n                    <div class=\"col-md-3 \">\n                      <!-- <button type=\"button \" class=\"btn btn-success \" style=\"margin-top: 6%; \" (click)=\"submitProfile()\" [disabled]=\"!this.validityProfile.profileValidUptoStatus\">Update</button>&nbsp;&nbsp; -->\n                      <button type=\"button \" class=\"btn btn-success \" style=\"margin-top: 6%; \"\n                        (click)=\"updateProfileData()\"\n                        [disabled]=\"!this.validityProfile.profileValidUptoStatus\">Update</button>&nbsp;&nbsp;\n                      <button type=\"button\" class=\"btn btn-danger\" style=\"margin-top: 6%;color: #fff\"\n                        data-dismiss=\"modal\" aria-label=\"Close\">Cancel</button>\n\n                      <!-- <button type=\"button\" class=\"btn btn-primary\" style=\"margin-top: 6%;color: #fff\" (click)=\"claerProfileForm();\">Clear</button> -->\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n            </form>\n          </div>\n        </div>\n        <div class=\"card \" style=\"margin-top: 1%; \" *ngIf=\"adminPage.refMembershipTypeId == '3'\">\n          <div class=\"card-header \">\n            MY WEB PAGE\n            <div *ngIf=\"validityProfile.myWebPageValidUptoStstus\" class=\"validDateShowing\" style=\"float: right;\">Valid\n              Upto\n              {{validityProfile.myWebPageValidUptoDate | date:'dd-LLL-yyyy'}} (Remaining\n              {{validityProfile.myWebPageValidUptoDays}} days)\n            </div>\n            <div *ngIf=\"!validityProfile.myWebPageValidUptoStstus\" class=\"validDateShowing\" style=\"float: right;\">\n              Expired\n              {{validityProfile.myWebPageValidUptoDate | date:'dd-LLL-yyyy'}}</div>\n          </div>\n          <div class=\"card-body\">\n            <form novalidate [formGroup]=\"premiumMemberForm\" class=\"form-horizontal\">\n              <div class=\"row \">\n                <div class=\"col-md-4\">\n                  <p style=\"font-weight: 800;\">Do you want to keep this Web page as</p>\n                </div>\n                <div class=\"col-md-1\">\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" name=\"webPrivatePublicFlag\"\n                      formControlName=\"webPrivatePublicFlag\" id=\"public\" value=\"1\"\n                      [(ngModel)]=\"premiumProfile.webPrivatePublicFlag\">\n                    <label class=\"custom-control-label\" for=\"public\" style=\"font-weight: 800;\">Public</label>\n                  </div>\n                </div>\n                <div class=\"col-md-1\">\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" name=\"webPrivatePublicFlag\"\n                      formControlName=\"webPrivatePublicFlag\" id=\"private\" value=\"0\"\n                      [(ngModel)]=\"premiumProfile.webPrivatePublicFlag\">\n                    <label class=\"custom-control-label\" for=\"private\" style=\"font-weight: 800;\">Private</label>\n                  </div>\n                </div>\n                <div class=\"col-md-6\">\n                  <div class=\"alert alert-info\" role=\"alert\">\n                    <span style=\"font-family: 'Noto Sans Kannada', sans-serif;\">ಸೂಚನೆ: ನೀವು 'Public'\n                      ಆಯ್ಕೆ ಮಾಡಿಕೊಂಡಿದ್ದಲ್ಲಿ ನಿಮ್ಮ ಖಾಸಗಿತನದ ರಕ್ಷಣೆಗಾಗಿ ಫೋನ್ ನಂಬರ್, ವಿಳಾಸ, ಮೈಲ್ ಐಡಿ\n                      ನಿರ್ಬಂಧಿಸಿ.</span><br>\n                    <span style=\"font-family: 'Noto Sans Kannada', sans-serif;\">Note: If you choose\n                      'Public' then please hide your phone number, address, mail id for the safety\n                      of your privacy.</span>\n                  </div>\n                </div>\n                <div class=\"col-md-3\">\n                  <label for=\"exampleForm2\">Web Page Profile HD Photo</label><span style=\"color:red;\">*</span>\n                  <img [src]=\"croppedhdphoto\" onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                    style=\"height: 148px;width: 268px;\">\n                  <div class=\"upload-btn-wrapper\">\n                    <button class=\"btn1\" style=\"margin-top: 2%;\">Upload HD Photo</button>\n                    <input type=\"file\" id=\"mainPhotoPath\" name=\"mainPhotoPath\" accept=\".jpg,.jpeg,.png\"\n                      (change)=\"hdPhotoApply($event)\">\n                    <!--  [attr.disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\" -->\n                    <input type=\"hidden\" name=\"mainPhotoPathHidden\" formControlName=\"mainPhotoPath\" />\n                  </div>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!premiumMemberForm.controls.mainPhotoPath.valid && premiumMemberForm.controls.mainPhotoPath.touched\">\n                    <div *ngIf=\"premiumMemberForm.get('mainPhotoPath').hasError('required')\">You\n                      must select Main Photo\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\">\n                  <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"hdimageChangedEvent\"\n                    [maintainAspectRatio]=\"true\" [aspectRatio]=\"2/1\" format=\"jpeg\"\n                    (imageCropped)=\"hdimageCropped($event)\" (imageLoaded)=\"hdimageLoaded()\"\n                    (cropperReady)=\"hdcropperReady()\" (loadImageFailed)=\"hdloadImageFailed()\"\n                    onerror=\"this.src='../../../assets/images/avtaar/no.jpg';\"\n                    style=\"height:  230px;width: 170px;margin: 11% 5%;\">\n                  </image-cropper>\n                </div>\n\n                <div class=\"col-md-12\" formArrayName=\"socialLinkRows\">\n                  <div class=\"row\">\n                    <div class=\"col-md-8\">\n                      <label for=\"exampleForm2 \">Social Media Links</label>\n                      <table style=\"width: 100%;\">\n                        <tr>\n                          <td>Social Media</td>\n                          <td>URL</td>\n                        </tr>\n                        <tr *ngFor=\"let social of getsocialLinkDetails(premiumMemberForm); let i=index\" [formGroupName]=\"i\">\n                          <td>\n                            <img src=\"{{socialLinksDtoList[i].icon}}\" height=\"20px\" width=\"20px\">\n                            &nbsp;&nbsp;{{socialLinksDtoList[i].socialLinksName}}\n                          </td>\n                          <td>\n                            <input class=\"form-control\" type=\"text\" [(ngModel)]=\"socialLinksDtoList[i].socialLinksUrl\"\n                              formControlName=\"socialLinksUrl\" maxlength=\"100\">\n                          </td>\n                        </tr>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div formArrayName=\"articleRows\">\n                    <label for=\"exampleForm2\">Image Article</label>\n                    <table class=\"table\"\n                  style=\"border-left: 1px solid #ced4da;border-right: 1px solid #ced4da; border-bottom: 1px solid #ced4da;\">\n                      <tr>\n                        <th>Article Title<span style=\"color:red;\"> * </span></th>\n                        <th>Upload Article<span style=\"color:red;\"> *</span></th>\n                        <th>Preview</th>\n                      </tr>\n                      <tr *ngFor=\"let articlerow of getarticleRows(premiumMemberForm); let i=index\" [formGroupName]=\"i\">\n                        <td>\n                          <input class=\"form-control\" type=\"text\" maxlength=\"100\" formControlName=\"articleTitle\"\n                            name=\"articleTitle\" id=\"articleTitle\">\n                          <em>maximum 100 charcters</em>\n                          <div class=\"alert alert-danger\" role=\"alert\"\n                            *ngIf=\"!premiumMemberForm.controls.articleRows.controls[i].controls.articleTitle.valid && premiumMemberForm.controls.articleRows.controls[i].controls.articleTitle.touched\">\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.articleRows.controls[i].controls.articleTitle.hasError('minlength')\">\n                              Title must atleast be 3 characters</div>\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.articleRows.controls[i].controls.articleTitle.hasError('maxlength')\">\n                              title must be less than must be 100 characters</div>\n                          </div>\n                        </td>\n                        <td>\n                          <div class=\"upload-btn-wrapper\">\n                            <button class=\"btn2\">Upload Article {{i+1}}</button>\n                            <!-- <input type=\"file\" name=\"articlefakePath\" (change)=\"articleUpload($event,i)\"\n                          [attr.disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"> -->\n                            <input type=\"file\" name=\"articlefakePath\" accept=\".jpg,.jpeg,.png\"\n                              (change)=\"multipartArticleUpload($event,i)\">\n                            <input type=\"hidden\" name=\"articlefakePathHidden\" formControlName=\"articlePath\" />\n                          </div>\n                          <div class=\"alert alert-danger\" role=\"alert\"\n                            *ngIf=\"!premiumMemberForm.controls.articleRows.controls[i].controls.articlePath.valid && premiumMemberForm.controls.articleRows.controls[i].controls.articlePath.touched\">\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.articleRows.controls[i].controls.articlePath.hasError('required')\">\n                              You must enter Article</div>\n                          </div>\n                        </td>\n                        <td\n                          *ngIf=\"premiumProfile.articleImg[i].articalPathFileType != 'pdf' && premiumProfile.articleImg[i].articalPathFileType != 'PDF'\">\n                          <img [src]=\"premiumProfile.articleImg[i].articalPath\"\n                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                            style=\"height: auto;width: 90px;\">\n                        </td>\n                        <td>\n                          <button type=\"button\" (click)=\"addarticleRowInPosition(i)\"\n                            [disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"\n                            class=\"btn btn-primary addremovebtn\"\n                            *ngIf=\"premiumMemberForm.controls.articleRows.controls.length < this.contentRestriction.articleImageLimit\">\n                            Add\n                          </button>\n                        </td>\n                        <td>\n                          <button type=\"button\" (click)=\"deletearticleRow(i)\"\n                            [disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"\n                            class=\"btn btn-danger addremovebtn\"\n                            *ngIf=\"premiumMemberForm.controls.articleRows.controls.length > 1\">\n                            Remove\n                          </button>\n                        </td>\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n\n                <div class=\"col-md-12\">\n                  <div formArrayName=\"articlePdfRows\">\n                    <label for=\"exampleForm2\">Pdf Article</label>\n                    <table style=\"width: 60%;\">\n                      <tr>\n                        <th>Article Title<span style=\"color:red;\"> *</span></th>\n                        <th>Upload Article<span style=\"color:red;\"> *</span></th>\n                        <th>Preview</th>\n                      </tr>\n                      <tr *ngFor=\"let articlerow of getarticlePdfRows(premiumMemberForm); let i=index\"\n                        [formGroupName]=\"i\">\n                        <td>\n                          <input class=\"form-control\" type=\"text\" maxlength=\"100\" formControlName=\"articlePdfTitle\"\n                            name=\"articlePdfTitle\" id=\"articlePdfTitle\">\n                          <em>maximum 100 charcters</em>\n                          <div class=\"alert alert-danger\" role=\"alert\"\n                            *ngIf=\"!premiumMemberForm.controls.articlePdfRows.controls[i].controls.articlePdfTitle.valid && premiumMemberForm.controls.articlePdfRows.controls[i].controls.articlePdfTitle.touched\">\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.articlePdfRows.controls[i].controls.articlePdfTitle.hasError('minlength')\">\n                              Title must atleast be 3 characters</div>\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.articlePdfRows.controls[i].controls.articlePdfTitle.hasError('maxlength')\">\n                              title must be less than must be 100 characters</div>\n                          </div>\n                        </td>\n                        <td>\n                          <div class=\"upload-btn-wrapper\">\n                            <button class=\"btn2\">Upload Article {{i+1}}</button>\n                            <!-- <input type=\"file\" name=\"articlefakePdfPath\" (change)=\"articlePdfUpload($event,i)\"\n                          [attr.disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"> -->\n                            <input type=\"file\" name=\"articlefakePdfPath\" accept=\"application/pdf\"\n                              (change)=\"multipartArticlePDFUpload($event,i)\">\n                            <input type=\"hidden\" name=\"articlefakePdfPathHidden\" formControlName=\"articlePdfPath\" />\n                          </div>\n                          <div class=\"alert alert-danger\" role=\"alert\"\n                            *ngIf=\"!premiumMemberForm.controls.articlePdfRows.controls[i].controls.articlePdfPath.valid && premiumMemberForm.controls.articlePdfRows.controls[i].controls.articlePdfPath.touched\">\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.articlePdfRows.controls[i].controls.articlePdfPath.hasError('required')\">\n                              You must enter Article</div>\n                          </div>\n                        </td>\n                        <td *ngIf=\"premiumProfile.articlePdf[i].articalPathPDF != ''\">\n                          <a [href]=\"sanitizer.bypassSecurityTrustResourceUrl(premiumProfile.articlePdf[i].articalPathPDF)\"\n                            download>PDF</a>\n                        </td>\n                        <td>\n                          <button type=\"button\" (click)=\"addarticlePdfRowInPosition(i)\"\n                            [disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"\n                            class=\"btn btn-primary addremovebtn\"\n                            *ngIf=\"premiumMemberForm.controls.articlePdfRows.controls.length < this.contentRestriction.articlePdfLimit\">\n                            Add\n                          </button>\n                        </td>\n                        <td>\n                          <button type=\"button\" (click)=\"deletearticlePdfRow(i)\"\n                            [disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"\n                            class=\"btn btn-danger addremovebtn\"\n                            *ngIf=\"premiumMemberForm.controls.articlePdfRows.controls.length > 1\">\n                            Remove\n                          </button>\n                        </td>\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n\n                <div class=\"col-md-12\">\n                  <div formArrayName=\"galleryRows\">\n                    <label>Upload Gallery Photos</label>\n                    <table style=\"width: 60%;\">\n                      <tr>\n                        <th>Choose Photo</th>\n                        <th>Preview</th>\n                      </tr>\n                      <tr *ngFor=\"let galleryrow of getgalleryRows(premiumMemberForm); let i=index\" [formGroupName]=\"i\">\n                        <td>\n                          <div class=\"upload-btn-wrapper\">\n                            <button class=\"btn2\">Upload Photo {{i+1}}</button>\n                            <input type='file' id=\"galaryfakePath\" (change)=\"galleryImageUpload($event,i)\"\n                              accept=\".jpg,.jpeg,.png\">\n                            <input type=\"hidden\" name=\"galleryPathHidden\" formControlName=\"galaryPath\" />\n                          </div>\n                          <div class=\"alert alert-danger\" role=\"alert\"\n                            *ngIf=\"!premiumMemberForm.controls.galleryRows.controls[i].controls.galaryPath.valid && premiumMemberForm.controls.galleryRows.controls[i].controls.galaryPath.touched\">\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.galleryRows.controls[i].controls.galaryPath.hasError('required')\">\n                              You must select Galary</div>\n                          </div>\n                        </td>\n                        <td>\n                          <img [src]=\"premiumProfile.galImg[i]\"\n                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                            style=\"height: auto;width: 90px;\">\n                        </td>\n                        <td>\n                          <button type=\"button\" (click)=\"addgalleryRowInPosition(i)\"\n                            [disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"\n                            class=\"btn btn-primary addremovebtn\"\n                            *ngIf=\"premiumMemberForm.controls.galleryRows.controls.length < this.contentRestriction.galaryLimit\">\n                            Add\n                          </button>\n                        </td>\n                        <td>\n                          <button type=\"button\" (click)=\"deletegalleryRow(i)\"\n                            [disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"\n                            class=\"btn btn-danger addremovebtn\"\n                            *ngIf=\"premiumMemberForm.controls.galleryRows.controls.length > 1\">\n                            Remove\n                          </button>\n                        </td>\n                        <td>\n                          <span *ngIf=\"imageChangedEventGalary[i] !=''\">\n                            <image-cropper id=\"{{'imageGalary'+i}}\" [imageChangedEvent]=\"imageChangedEventGalary[i]\"\n                              [maintainAspectRatio]=\"false\" format=\"jpeg\" (imageCropped)=\"imageCroppedGalary($event,i)\"\n                              (imageLoaded)=\"imageLoadedGalary()\" (cropperReady)=\"cropperReadyGalary()\"\n                              (loadImageFailed)=\"loadImageFailedGalary()\"\n                              onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                              style=\"height: 130px; width: 220px;\">\n                            </image-cropper>\n                          </span>\n                        </td>\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div formArrayName=\"videoRows\">\n                    <label>Upload Videos</label>\n                    <table style=\"width: 100%\">\n                      <th>Video Name</th>\n                      <th>Video URL</th>\n                      <tr *ngFor=\"let videorow of getvideoRows(premiumMemberForm); let i=index\" [formGroupName]=\"i\">\n                        <td>\n                          <input type='text' formControlName=\"videoName\" class=\"form-control\">\n                          <div class=\"alert alert-danger\" role=\"alert\"\n                            *ngIf=\"!premiumMemberForm.controls.videoRows.controls[i].controls.videoName.valid && premiumMemberForm.controls.videoRows.controls[i].controls.videoName.touched\">\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.videoRows.controls[i].controls.videoName.hasError('maxlength')\">\n                              video Name must be 100 characters</div>\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.videoRows.controls[i].controls.videoName.hasError('minlength')\">\n                              video Name must be 3 characters</div>\n                          </div>\n                        </td>\n                        <td>\n                          <input type='text' formControlName=\"videoURL\" class=\"form-control\">\n                          <div class=\"alert alert-danger\" role=\"alert\"\n                            *ngIf=\"!premiumMemberForm.controls.videoRows.controls[i].controls.videoURL.valid && premiumMemberForm.controls.videoRows.controls[i].controls.videoURL.touched\">\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.videoRows.controls[i].controls.videoURL.hasError('minlength')\">\n                              video Url must be 6 characters</div>\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.videoRows.controls[i].controls.videoURL.hasError('maxlength')\">\n                              video Url must be 200 characters</div>\n                          </div>\n                        </td>\n                        <td>\n                          <button type=\"button\" (click)=\"addvideoRowInPosition(i)\"\n                            [disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"\n                            class=\"btn btn-primary addremovebtn\"\n                            *ngIf=\"premiumMemberForm.controls.videoRows.controls.length < this.contentRestriction.videoLimit\">\n                            Add\n                          </button>\n                        </td>\n                        <td>\n                          <button type=\"button\" (click)=\"deletevideoRow(i)\"\n                            [disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"\n                            class=\"btn btn-danger addremovebtn\"\n                            *ngIf=\"premiumMemberForm.controls.videoRows.controls.length > 1\">\n                            Remove\n                          </button>\n                        </td>\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n                <div class=\"col-md-3 \">\n                  <!-- <button type=\"button\" class=\"btn btn-success\" (click)=\"submitPremiumProfile()\" [disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\" style=\"margin-top: 6%;\">Update</button>&nbsp;&nbsp; -->\n                  <button type=\"button\" class=\"btn btn-success\" (click)=\"updatePremiumData()\"\n                    [disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"\n                    style=\"margin-top: 6%;\">Update</button>&nbsp;&nbsp;\n                  <button type=\"button\" class=\"btn btn-danger\" style=\"margin-top: 6%;color: #fff\" data-dismiss=\"modal\"\n                    aria-label=\"Close\">Cancel</button>\n\n                  <!-- <button type=\"button\" class=\"btn btn-primary\" style=\"margin-top: 6%;color: #fff\" (click)=\"claerWebPageForm();\">Clear</button> -->\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n<!--edit modal end-->\n\n<!--status modal start-->\n<div class=\"modal fade bd-example-modal-lg\" id=\"statusModal\" tabindex=\"-1\" role=\"dialog\"\n  aria-labelledby=\"statusModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-dialog-centered modal-md\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"statusModalLabel\">Status</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" #closeBtn>\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form novalidate [formGroup]=\"statusForm\" class=\"form-horizontal\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <label for=\"exampleForm2\">Select Status</label>\n              <select class=\"custom-select\" [(ngModel)]=\"adminPage.status\" name=\"status\" formControlName=\"status\">\n                <option value=\"Pending\" *ngIf=\"permission.pending\">Pending</option>\n                <option value=\"Approved\"\n                  *ngIf=\"(permission.approved) && (currentUser.object.roleDto.roleId == '1' || currentUser.object.roleDto.roleId == '2'|| currentUser.object.roleDto.roleId == '3' || currentUser.object.roleDto.roleId == '9' )\">\n                  Approved</option>\n                <option value=\"Rejected\" *ngIf=\"(permission.rejected) && (currentUser.object.roleDto.roleId == '1')\">\n                  Rejected\n                </option>\n                <option value=\"Markred\" *ngIf=\"(permission.redCorner) && (currentUser.object.roleDto.roleId == '1')\">\n                  Mark\n                  Red</option>\n              </select>\n              <div class=\"alert alert-danger\" role=\"alert\"\n                *ngIf=\"!statusForm.controls.status.valid && statusForm.controls.status.touched\">\n                <div *ngIf=\"statusForm.get('status').hasError('required')\">You must select Status Option\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-12\">\n              <label for=\"exampleForm2\">Remarks</label>\n              <textarea class=\"form-control\" name=\"remarks\" cols=\"4\" [(ngModel)]=\"adminPage.remarks\" name=\"remarks\"\n                formControlName=\"remarks\"></textarea>\n              <div class=\"alert alert-danger\" role=\"alert\"\n                *ngIf=\"!statusForm.controls.remarks.valid && statusForm.controls.remarks.touched\">\n                <div *ngIf=\"statusForm.get('remarks').hasError('required')\">You must enter remarks</div>\n\n              </div>\n            </div>\n            <div class=\"col-md-3\">\n              <button type=\" button \" class=\"btn btn-success \" style=\"margin-top: 6%; \"\n                (click)=\"submitStatus(adminPage.membershipId)\">Update</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/account/memberpendinglist/memberpendinglist.component.html":
/*!******************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/account/memberpendinglist/memberpendinglist.component.html ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- <div class=\"content\">\n    <div class=\"card \">\n        <div class=\"card-header \">\n            MEMBER PENDING LIST\n        </div>\n        <div class=\"card-body \">\n            <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-sm row-border hover\">\n                <thead>\n                    <tr>\n                        <th>Slno</th>\n                        <th>Name</th>\n                        <th>Profession</th>\n                        <th>Mobile No</th>\n                        <th>City</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let ml of memberpendinglist; let i=index\">\n                        <td>{{i+1}}</td>\n                        <td>{{ml.firstName}}&nbsp;{{ml.middleName}}&nbsp;{{ml.lastName}}</td>\n                        <td>{{ml.professionDto.title}}</td>\n                        <td>{{ml.mobile}}</td>\n                        <td>{{ml.cityDto.cityName}}</td>\n                        <td style=\"width: 22%;\">\n                            <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#statusModal\" style=\"padding: 0% 2%;font-size: 12px;\" (click)=\"EditStatus(ml.membershipId)\">Status</button>\n                        </td>\n                    </tr>\n                </tbody>\n                <tbody *ngIf=\"memberpendinglist?.length == 0\">\n                    <tr>\n                        <td colspan=\"6\" class=\"no-data-available\"> No data found to display</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n<div class=\"modal fade bd-example-modal-lg\" id=\"statusModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"statusModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered modal-md\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"statusModalLabel\">Status</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n            </div>\n            <div class=\"modal-body\">\n                <form novalidate [formGroup]=\"statusForm\" class=\"form-horizontal\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <label for=\"exampleForm2\">Select Status</label>\n                            <select class=\"custom-select\" [(ngModel)]=\"adminPage.status\" name=\"status\" formControlName=\"status\">\n                                    <option value=\"Pending\">Pending</option>\n                                    <option value=\"Approved\">Approved</option>\n                                    <option value=\"Rejected\">Rejected</option>\n                                    <option value=\"Markred\">Mark Red</option>\n                            </select>\n                            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!statusForm.controls.status.valid && statusForm.controls.status.touched\">\n                                <div *ngIf=\"statusForm.get('status').hasError('required')\">You must select Status Option</div>\n\n                            </div>\n                        </div>\n                        <div class=\"col-md-12\">\n                            <label for=\"exampleForm2\">Remarks</label>\n                            <textarea class=\"form-control\" name=\"remarks\" cols=\"4\" [(ngModel)]=\"adminPage.remarks\" name=\"remarks\" formControlName=\"remarks\"></textarea>\n                            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!statusForm.controls.remarks.valid && statusForm.controls.remarks.touched\">\n                                <div *ngIf=\"statusForm.get('remarks').hasError('required')\">You must enter remarks</div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3\">\n                            <button type=\" button \" class=\"btn btn-success \" style=\"margin-top: 6%; \" (click)=\"submitStatus(adminPage.membershipId)\">Submit</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div> -->\n<div class=\"content\">\n  <div class=\"card \">\n    <div class=\"card-header \">\n      MEMBER PENDING LIST\n    </div>\n    <ul class=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link active tabs\" id=\"pills-old-tab\" data-toggle=\"pill\" href=\"#pills-old\" role=\"tab\"\n          aria-controls=\"pills-home\" aria-selected=\"true\">Old Members</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link tabs\" id=\"pills-new-tab\" data-toggle=\"pill\" href=\"#pills-new\" role=\"tab\"\n          aria-controls=\"pills-profile\" aria-selected=\"false\">New Members </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\" id=\"pills-tabContent\">\n      <div class=\"tab-pane fade show active\" id=\"pills-old\" role=\"tabpanel\" aria-labelledby=\"pills-old-tab\">\n        <div class=\"card-body \">\n          <div class=\"form-group has-search\">\n            <span class=\"fa fa-search form-control-feedback\"></span>\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search\" (keyup)=\"oldMemberListSearchData($event)\">\n          </div>\n          <table class=\"table table-striped table-bordered table-sm row-border hover\">\n            <thead>\n              <tr>\n                <th>Slno</th>\n                <th>Name</th>\n                <th>Profession</th>\n                <th>Mobile No</th>\n                <th>City</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let oldmemlist of oldMemberList; let i=index\">\n                <td>{{i+1}}</td>\n                <td>{{oldmemlist.firstName}}&nbsp;{{oldmemlist.middleName}}&nbsp;{{oldmemlist.lastName}}\n                </td>\n                <td>{{oldmemlist.profession}}</td>\n                <td>{{oldmemlist.mobileNumber}}</td>\n                <td>{{oldmemlist.cityName}}</td>\n                <td style=\"width: 22%;text-align: center;\">\n                  <span *ngIf=\"oldmemlist.isActive == 1\">\n                    <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true \" style=\"color:rgb(0, 15, 146)\"\n                      data-toggle=\"modal\" data-target=\"#exampleModal\"\n                      (click)=\"EditMemberDetails(oldmemlist)\"></i>&nbsp;&nbsp;\n                    <button class=\"btn statusbtn\" data-toggle=\"modal\" data-target=\"#statusModal\"\n                      (click)=\"EditStatus(oldmemlist)\">\n                      <span class=\"btn btn-success status-badge\"\n                        *ngIf=\"(oldmemlist.status == 'Approved')\">Approved</span>\n                      <span class=\"btn btn-warning status-badge\"\n                        *ngIf=\"(oldmemlist.status == 'Pending'||oldmemlist.status == 'pending')\">Pending</span>\n                      <span class=\"btn btn-secondary status-badge\"\n                        *ngIf=\"oldmemlist.status == 'Rejected'\">Rejected</span>\n                      <span class=\"btn btn-danger status-badge\" *ngIf=\"oldmemlist.status == 'Markred'\">Marked Red</span>\n                    </button>\n                  </span>\n                  <span *ngIf=\"oldmemlist.isActive == 0\">\n                    <p style=\"margin: auto;\">Deactivated</p>\n                  </span>\n                </td>\n              </tr>\n            </tbody>\n            <tbody *ngIf=\"oldMemberList?.length == 0\">\n              <tr>\n                <td colspan=\"6\" class=\"no-data-available\"> No data found to display</td>\n              </tr>\n            </tbody>\n          </table>\n          <div class=\"container\">\n            <ul class=\"pagination\">\n              <li class=\"page-item\" *ngIf=\"oldmemberlist.offset > 0\"><a class=\"page-link\" style=\"cursor: pointer;\"\n                  (click)=\"oldClickOnPreviousButton()\">Previous</a></li>\n              <li class=\"page-item active\" id=\"page1li\"><a class=\"page-link\"\n                  id=\"page1\">{{oldmemberlist.offset/20 + 1}}</a></li>\n              <li class=\"page-item\"><a class=\"page-link\" (click)=\"oldClickOnNextButton()\"\n                  style=\"cursor: pointer;\">Next</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"tab-pane fade\" id=\"pills-new\" role=\"tabpanel\" aria-labelledby=\"pills-new-tab\">\n        <div class=\"card-body \">\n          <div class=\"form-group has-search\">\n            <span class=\"fa fa-search form-control-feedback\"></span>\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search\" (keyup)=\"newMemberListSearchData($event)\">\n          </div>\n          <table class=\"table table-striped table-bordered table-sm row-border hover\">\n            <thead>\n              <tr>\n                <th>Slno</th>\n                <th>Name</th>\n                <th>Profession</th>\n                <th>Mobile No</th>\n                <th>City</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let newmemlist of newMemberList; let i=index\">\n                <td>{{i+1}}</td>\n                <td>{{newmemlist.firstName}}&nbsp;{{newmemlist.middleName}}&nbsp;{{newmemlist.lastName}}\n                </td>\n                <td>{{newmemlist.profession}}</td>\n                <td>{{newmemlist.mobileNumber}}</td>\n                <td>{{newmemlist.cityName}}</td>\n                <td style=\"width: 22%;text-align: center;\">\n                  <span *ngIf=\"newmemlist.isActive == 1\">\n                    <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true \" style=\"color:rgb(0, 15, 146)\"\n                      data-toggle=\"modal\" data-target=\"#exampleModal\"\n                      (click)=\"EditMemberDetails(newmemlist)\"></i>&nbsp;&nbsp;\n                    <button class=\"btn statusbtn\" data-toggle=\"modal\" data-target=\"#statusModal\"\n                      (click)=\"EditStatus(newmemlist)\">\n                      <span class=\"btn btn-success status-badge\" *ngIf=\"newmemlist.status == 'Approved'\">Approved</span>\n                      <span class=\"btn btn-warning status-badge\"\n                        *ngIf=\"(newmemlist.status == 'Pending'||oldmemlist.status == 'pending')\">Pending</span>\n                      <span class=\"btn btn-secondary status-badge\"\n                        *ngIf=\"newmemlist.status == 'Rejected'\">Rejected</span>\n                      <span class=\"btn btn-danger status-badge\" *ngIf=\"newmemlist.status == 'Markred' \">Marked\n                        Red</span>\n                    </button>\n                  </span>\n                  <span *ngIf=\"newmemlist.isActive == 0\">\n                    <p style=\"margin: auto;\">Deactivated</p>\n                  </span>\n                </td>\n              </tr>\n            </tbody>\n            <tbody *ngIf=\"newMemberList?.length == 0\">\n              <tr>\n                <td colspan=\"6\" class=\"no-data-available\"> No data found to display</td>\n              </tr>\n            </tbody>\n          </table>\n          <div class=\"container\">\n            <ul class=\"pagination\">\n              <li class=\"page-item\" *ngIf=\"newmemberlist.offset > 0\"><a class=\"page-link\" style=\"cursor: pointer;\"\n                  (click)=\"newClickOnPreviousButton()\">Previous</a></li>\n              <li class=\"page-item active\" id=\"page1li\"><a class=\"page-link\"\n                  id=\"page1\">{{newmemberlist.offset/20 + 1}}</a></li>\n              <li class=\"page-item\"><a class=\"page-link\" (click)=\"newClickOnNextButton()\"\n                  style=\"cursor: pointer;\">Next</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<!--edit modal start-->\n<div class=\"modal bd-example-modal-xl\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n  aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-dialog-centered modal-xl\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Edit Details</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card\" style=\"margin-bottom: 1%;\">\n          <div class=\"row\" style=\"margin: auto;width: 100%;display: flex;font-weight: 700;\">\n            <div class=\"col-md-4\">\n              <div class=\"custom-control custom-radio\">\n                <input type=\"radio\" class=\"custom-control-input\" id=\"basic\" name=\"refMembershipTypeId\" value=\"1\"\n                  [(ngModel)]=\"adminPage.refMembershipTypeId\">\n                <label class=\"custom-control-label\" for=\"basic\">Registration</label>\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"custom-control custom-radio\">\n                <input type=\"radio\" class=\"custom-control-input\" id=\"profile\" name=\"refMembershipTypeId\" value=\"2\"\n                  [(ngModel)]=\"adminPage.refMembershipTypeId\">\n                <label class=\"custom-control-label\" for=\"profile\">Profile Page</label>\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"custom-control custom-radio\">\n                <input type=\"radio\" class=\"custom-control-input\" id=\"preprofile\" name=\"refMembershipTypeId\" value=\"3\"\n                  [(ngModel)]=\"adminPage.refMembershipTypeId\">\n                <label class=\"custom-control-label\" for=\"preprofile\">My Web Page</label>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"card\"\n          *ngIf=\"adminPage.refMembershipTypeId == '1' || adminPage.refMembershipTypeId == '2' || adminPage.refMembershipTypeId == '3'\">\n          <div class=\"card-header\">\n            REGISTRATION PAGE\n            <div *ngIf=\"validityProfile.memberValidUptoStatus\" class=\"validDateShowing\" style=\"float: right;\">Valid Upto\n              {{validityProfile.memberValidUptoDate | date:'dd-LLL-yyyy'}} (Remaining\n              {{validityProfile.memberValidUptoDays}} days)\n            </div>\n            <div *ngIf=\"!validityProfile.memberValidUptoStatus\" class=\"validDateShowing\" style=\"float: right;\">Expired\n              {{validityProfile.memberValidUptoDate | date:'dd-LLL-yyyy'}}\n            </div>\n          </div>\n          <form novalidate [formGroup]=\"basicMemberForm\" class=\"form-horizontal\">\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <p class=\"indinstname\">{{adminPage.individualInstitute}}</p>\n                <div class=\"col-md-2\" style=\"display:none\">\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" id=\"ind\" name=\"individualInstitute\"\n                      formControlName=\"individualInstitute\" [(ngModel)]=\"adminPage.individualInstitute\"\n                      value=\"Individual\" (change)=\"OnindividualInstituteChange()\">\n                    <label class=\"custom-control-label\" for=\"ind\">Individual</label>\n                  </div>\n                </div>\n                <div class=\"col-md-2\" style=\"display:none\">\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" id=\"ins\" name=\"individualInstitute\"\n                      formControlName=\"individualInstitute\" [(ngModel)]=\"adminPage.individualInstitute\"\n                      value=\"Institute\" (change)=\"OnindividualInstituteChange()\">\n                    <label class=\"custom-control-label\" for=\"ins\">Institute</label>\n                  </div>\n                </div>\n                <div style=\"display:none\" class=\"alert alert-danger\" role=\"alert\"\n                  *ngIf=\"!basicMemberForm.controls.individualInstitute.valid && basicMemberForm.controls.individualInstitute.touched\">\n                  <div *ngIf=\"basicMemberForm.get('individualInstitute').hasError('required')\">You\n                    must select Individual / Institute</div>\n                </div>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-md-12\">\n                  <p>Please Select Experienced Type</p>\n                </div>\n                <div class=\"col-md-2\">\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" id=\"exp\" name=\"experienceType\" value=\"Experienced\"\n                      formControlName=\"experienceType\" [(ngModel)]=\"adminPage.experienceType\"\n                      (change)=\"OnexperienceTypeChange()\">\n                    <label class=\"custom-control-label\" for=\"exp\">Experienced</label>\n                  </div>\n                </div>\n                <div class=\"col-md-2\">\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" id=\"fresh\" name=\"experienceType\" value=\"Fresher\"\n                      formControlName=\"experienceType\" [(ngModel)]=\"adminPage.experienceType\"\n                      (change)=\"OnexperienceTypeChange()\">\n                    <label class=\"custom-control-label\" for=\"fresh\">Freshers</label>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-3\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.firstName.valid && basicMemberForm.controls.firstName.touched}\">\n                  <label for=\"exampleForm2\">{{adminPage.individualInstituteName}}</label><span style=\"color:red;\">\n                    *</span>\n                  <input type=\"text\" name=\"firstName\" class=\"form-control\" formControlName=\"firstName\"\n                    [(ngModel)]=\"adminPage.firstName\" (ngModelChange)=\"adminPage.firstName = $event.toUpperCase()\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.firstName.valid && basicMemberForm.controls.firstName.touched\">\n                    <div *ngIf=\"basicMemberForm.get('firstName').hasError('required')\">You must\n                      enter a {{adminPage.individualInstituteName}}\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('firstName').hasError('minlength')\">\n                      {{adminPage.individualInstituteName}} must be 2 characters</div>\n                    <div *ngIf=\"basicMemberForm.get('firstName').hasError('maxlength')\">\n                      {{adminPage.individualInstituteName}} must be 30 characters</div>\n                    <div *ngIf=\"basicMemberForm.get('firstName').hasError('pattern')\">Please enter\n                      valid {{adminPage.individualInstituteName}}\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.middleName.valid && basicMemberForm.controls.middleName.touched}\">\n                  <label for=\"exampleForm2\">Middle Name</label>\n                  <input type=\"text\" name=\"middleName\" class=\"form-control\" formControlName=\"middleName\"\n                    [(ngModel)]=\"adminPage.middleName\" (ngModelChange)=\"adminPage.middleName = $event.toUpperCase()\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.middleName.valid && basicMemberForm.controls.middleName.touched\"\n                    (ngModelChange)=\"adminPage.middleName = $event.toUpperCase()\">\n                    <div *ngIf=\"basicMemberForm.get('middleName').hasError('required')\">You must\n                      enter a Middle name\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('middleName').hasError('minlength')\">Middle name\n                      must be 3 characters\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('middleName').hasError('maxlength')\">Middle name\n                      must be 30 characters\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('firstName').hasError('pattern')\">Please enter\n                      valid Middle name\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.lastName.valid && basicMemberForm.controls.lastName.touched}\">\n                  <label for=\"exampleForm2\">Last Name</label>\n                  <input type=\"text\" name=\"lastname\" class=\"form-control\" formControlName=\"lastName\"\n                    [(ngModel)]=\"adminPage.lastName\" (ngModelChange)=\"adminPage.lastName = $event.toUpperCase()\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.lastName.valid && basicMemberForm.controls.lastName.touched\">\n                    <div *ngIf=\"basicMemberForm.get('lastName').hasError('required')\">You must enter\n                      a Last name\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('lastName').hasError('minlength')\">Last name\n                      must be 3 characters\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('lastName').hasError('maxlength')\">Last name\n                      must be 20 characters\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('lastName').hasError('pattern')\">Please enter\n                      valid Last name\n                    </div>\n                  </div>\n                </div>\n\n\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Institute'\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.contactPerson.valid && basicMemberForm.controls.contactPerson.touched}\">\n                  <label for=\"exampleForm2\">Contact Person Name</label><span style=\"color:red;\">\n                    *</span>\n                  <input type=\"text\" name=\"contactPerson\" class=\"form-control\" formControlName=\"contactPerson\"\n                    [(ngModel)]=\"adminPage.contactPerson\"\n                    (ngModelChange)=\"adminPage.contactPerson = $event.toUpperCase()\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.contactPerson.valid && basicMemberForm.controls.contactPerson.touched\">\n                    <div *ngIf=\"basicMemberForm.get('contactPerson').hasError('required')\">You must\n                      enter Contact Person Name\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('contactPerson').hasError('minlength')\">Contact\n                      Person Name must be 3 characters</div>\n                    <div *ngIf=\"basicMemberForm.get('contactPerson').hasError('maxlength')\">Contact\n                      Person Name must be 30 characters</div>\n                    <div *ngIf=\"basicMemberForm.get('contactPerson').hasError('pattern')\">Please\n                      enter valid contact Person name</div>\n\n                  </div>\n                </div>\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Institute'\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.since.valid && basicMemberForm.controls.since.touched}\">\n                  <label for=\"exampleForm2\">Since</label><span style=\"color:red;\"> *</span>\n                  <input type=\"text\" name=\"since\" class=\"form-control\" maxlength=\"4\" placeholder=\"yyyy\"\n                    formControlName=\"since\" [(ngModel)]=\"adminPage.since\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.since.valid && basicMemberForm.controls.since.touched\">\n                    <div *ngIf=\"basicMemberForm.get('since').hasError('required')\">You must enter a\n                      since\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('since').hasError('minlength')\">since must be 4\n                      digits\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('since').hasError('maxlength')\">since must be 4\n                      digits\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('since').hasError('pattern')\">Please enter valid\n                      since\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-md-3\" *ngIf=\"adminPage.experienceType == 'Experienced'\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.middleName.valid && basicMemberForm.controls.middleName.touched}\">\n                  <label for=\"exampleForm2\">Years of Experience</label><span style=\"color:red;\">\n                    *</span>\n                  <select class=\"custom-select\" id=\"inputGroupSelect04\" aria-label=\"Example select with button addon\"\n                    formControlName=\"yearOfExp\" [(ngModel)]=\"adminPage.yearOfExp\">\n                    <option value=\"\">-Select-</option>\n                    <option value=\"3-5\">3-5 YEARS</option>\n                    <option value=\"6-10\">6-10 YEARS</option>\n                    <option value=\"11-15\">11-15 YEARS</option>\n                    <option value=\"16-20\">16-20 YEARS</option>\n                    <option value=\"21-25\">21-25 YEARS</option>\n                    <option value=\"26+\">26+ ABOVE</option>\n                  </select>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.yearOfExp.valid && basicMemberForm.controls.yearOfExp.touched\">\n                    <div *ngIf=\"basicMemberForm.get('yearOfExp').hasError('required')\">You must\n                      select Years of Experience\n                    </div>\n                    <!-- <div *ngIf=\"basicMemberForm.get('yearOfExp').hasError('minlength')\">Last\n                                                                    name must be 20 characters</div>\n                                                                <div *ngIf=\"basicMemberForm.get('yearOfExp').hasError('maxlength')\">Last\n                                                                    name must be 20 characters</div> -->\n                  </div>\n                </div>\n\n\n\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.ageGroup.valid && basicMemberForm.controls.ageGroup.touched}\">\n                  <label for=\"exampleForm2\">Age Group</label><span style=\"color:red;\"> *</span>\n                  <select class=\"custom-select\" id=\"inputGroupSelect04\" aria-label=\"Example select with button addon\"\n                    formControlName=\"ageGroup\" [(ngModel)]=\"adminPage.ageGroup\">\n                    <option value=\"\">-Select-</option>\n                    <option value=\"5-15\">5-15 YEARS</option>\n                    <option value=\"15-21\">15-21 YEARS</option>\n                    <option value=\"22-30\">22-30 YEARS</option>\n                    <option value=\"31-40\">31-40 YEARS</option>\n                    <option value=\"41-50\">41-50 YEARS</option>\n                    <option value=\"51-60\">51-60 YEARS</option>\n                    <option value=\"61-70\">61-70 YEARS</option>\n                    <option value=\"70+\">70+ YEARS</option>\n                  </select>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.ageGroup.valid && basicMemberForm.controls.ageGroup.touched\">\n                    <div *ngIf=\"basicMemberForm.get('ageGroup').hasError('required')\">You must\n                      select Age Group\n                    </div>\n                    <!-- <div *ngIf=\"basicMemberForm.get('ageGroup').hasError('minlength')\">Last name\n                                                                    must be 20 characters</div>\n                                                                <div *ngIf=\"basicMemberForm.get('ageGroup').hasError('maxlength')\">Last name\n                                                                    must be 20 characters</div> -->\n                  </div>\n                </div>\n\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.gender.valid && basicMemberForm.controls.gender.touched}\">\n\n                  <label for=\"exampleForm2\">Select Gender</label><span style=\"color:red;\"> *</span>\n                  <select class=\"custom-select\" id=\"inputGroupSelect04\" aria-label=\"Example select with button addon\"\n                    formControlName=\"gender\" [(ngModel)]=\"adminPage.gender\">\n                    <option value=\"\">-Select-</option>\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                    <option value=\"Others\">Others</option>\n                  </select>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.gender.valid && basicMemberForm.controls.gender.touched\">\n                    <div *ngIf=\"basicMemberForm.get('gender').hasError('required')\">You must select\n                      Gender\n                    </div>\n                  </div>\n                </div>\n\n\n                <div class=\"col-md-3\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.profession.valid && basicMemberForm.controls.profession.touched}\">\n                  <label for=\"exampleForm2\">{{adminPage.ProfessionService}}</label><span style=\"color:red;\">\n                    *</span>\n                  <angular2-multiselect [data]=\"proffessionList\" formControlName=\"profession\"\n                    [(ngModel)]=\"selectedproffession\" [settings]=\"proffessionSettings\"\n                    (onSelect)=\"onproffessionSelect($event)\" (onDeSelect)=\"onproffessionDeSelect($event)\"\n                    (onSelectAll)=\"onproffessionSelectAll($event)\" (onDeSelectAll)=\"onproffessionDeSelectAll($event)\">\n                  </angular2-multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.profession.valid && basicMemberForm.controls.profession.touched\">\n                    <div *ngIf=\"basicMemberForm.get('profession').hasError('required')\">You must\n                      Select {{adminPage.ProfessionService}}\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-md-3\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.otherskills.valid && basicMemberForm.controls.otherskills.touched}\">\n                  <label for=\"exampleForm2\">{{adminPage.OtherSkillsOtherServices}}&nbsp;&nbsp;(max\n                    8)</label>\n                  <angular2-multiselect [data]=\"otherSkillList\" formControlName=\"otherskills\"\n                    [(ngModel)]=\"selectedotherSkill\" [settings]=\"otherSkillSettings\"\n                    (onSelect)=\"onotherSkillSelect($event)\" (onDeSelect)=\"onotherSkillDeSelect($event)\"\n                    (onSelectAll)=\"onotherSkillSelectAll($event)\" (onDeSelectAll)=\"onotherSkillDeSelectAll($event)\">\n                  </angular2-multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.otherskills.valid && basicMemberForm.controls.otherskills.touched\">\n                    <div *ngIf=\"basicMemberForm.get('otherskills').hasError('required')\">You must\n                      select {{adminPage.OtherSkillsOtherServices}}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-md-3\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.address.valid && basicMemberForm.controls.address.touched}\">\n                  <label for=\"exampleForm2\">Address</label><span style=\"color:red;\"> *</span>\n                  <textarea [(ngModel)]=\"adminPage.address\" formControlName=\"address\" name=\"address\"\n                    class=\"form-control\"></textarea>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.address.valid && basicMemberForm.controls.address.touched\">\n                    <div *ngIf=\"basicMemberForm.get('address').hasError('required')\">You must enter\n                      Address\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('address').hasError('minlength')\">Address must\n                      be 5 characters\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('address').hasError('maxlength')\">Address should\n                      not be more than 200 characters\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('address').hasError('pattern')\">Please enter\n                      valid Address\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\" style=\"margin-top: 25px;\">\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <div class=\"custom-control custom-radio\">\n                        <input type=\"radio\" class=\"custom-control-input\" id=\"addressVisibilitypubc\"\n                          name=\"addressVisibility\" formControlName=\"addressVisibility\" value=\"1\"\n                          [(ngModel)]=\"adminPage.addressVisibility\">\n                        <label class=\"custom-control-label\" for=\"addressVisibilitypubc\">Public</label>\n                      </div>\n                    </div>\n                    <div class=\"col-md-4\">\n                      <div class=\"custom-control custom-radio\">\n                        <input type=\"radio\" class=\"custom-control-input\" id=\"addressVisibilityhiden\"\n                          name=\"addressVisibility\" formControlName=\"addressVisibility\" value=\"0\"\n                          [(ngModel)]=\"adminPage.addressVisibility\">\n                        <label class=\"custom-control-label\" for=\"addressVisibilityhiden\">Hidden</label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.state.valid && basicMemberForm.controls.state.touched}\">\n                  <label for=\"exampleForm2\">State</label><span style=\"color:red;\"> *</span>\n                  <angular2-multiselect [data]=\"statenameList\" formControlName=\"state\" [(ngModel)]=\"selectedstatename\"\n                    [settings]=\"statenameSettings\" (onSelect)=\"statenameSelect($event)\"\n                    (onDeSelect)=\"statenameDeSelect($event)\" (onSelectAll)=\"statenameSelectAll($event)\"\n                    (onDeSelectAll)=\"statenameDeSelectAll($event)\">\n                  </angular2-multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.state.valid && basicMemberForm.controls.state.touched\">\n                    <div *ngIf=\"basicMemberForm.get('state').hasError('required')\">You must select\n                      State\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.city.valid && basicMemberForm.controls.city.touched}\">\n                  <label for=\"exampleForm2\">City</label><span style=\"color:red;\"> *</span>\n                  <angular2-multiselect [data]=\"cityList\" formControlName=\"city\" [(ngModel)]=\"selectedcity\"\n                    [settings]=\"citySettings\" (onSelect)=\"oncitySelect($event)\" (onDeSelect)=\"oncityDeSelect($event)\"\n                    (onSelectAll)=\"oncitySelectAll($event)\" (onDeSelectAll)=\"oncityDeSelectAll($event)\">\n                  </angular2-multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.city.valid && basicMemberForm.controls.city.touched\">\n                    <div *ngIf=\"basicMemberForm.get('city').hasError('required')\">You must select\n                      City\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.mobile.valid && basicMemberForm.controls.mobile.touched}\">\n                  <label for=\"exampleForm2\">Contact Number</label><span style=\"color:red;\"> *</span>\n                  <input type=\"text\" name=\"contactno\" class=\"form-control\" formControlName=\"mobile\" maxlength=\"10\"\n                    [(ngModel)]=\"adminPage.mobile\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.mobile.valid && basicMemberForm.controls.mobile.touched\">\n                    <div *ngIf=\"basicMemberForm.get('mobile').hasError('required')\">You must enter\n                      Contact Number\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('mobile').hasError('minlength')\">Contact Number\n                      must be 10 digits\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('mobile').hasError('maxlength')\">Contact Number\n                      must be 10 digits\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('mobile').hasError('pattern')\">Please enter\n                      valid Contact Number\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\" style=\"margin-top: 25px;\">\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <div class=\"custom-control custom-radio\">\n                        <input type=\"radio\" class=\"custom-control-input\" id=\"mobileVisibilitypub\"\n                          formControlName=\"mobileVisibility\" name=\"mobileVisibility\" value=\"1\"\n                          [(ngModel)]=\"adminPage.mobileVisibility\">\n                        <label class=\"custom-control-label\" for=\"mobileVisibilitypub\">Public</label>\n                      </div>\n                    </div>\n                    <div class=\"col-md-4\">\n                      <div class=\"custom-control custom-radio\">\n                        <input type=\"radio\" class=\"custom-control-input\" id=\"mobileVisibilityhid\"\n                          name=\"mobileVisibility\" formControlName=\"mobileVisibility\" value=\"0\"\n                          [(ngModel)]=\"adminPage.mobileVisibility\">\n                        <label class=\"custom-control-label\" for=\"mobileVisibilityhid\">Hidden</label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.email.valid && basicMemberForm.controls.email.touched}\">\n                  <label for=\"exampleForm2\">Email ID</label>\n                  <input type=\"text\" [(ngModel)]=\"adminPage.email\" formControlName=\"email\" name=\"emailId\"\n                    class=\"form-control\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.email.valid && basicMemberForm.controls.email.touched\">\n                    <div *ngIf=\"basicMemberForm.get('email').hasError('required')\">You must enter\n                      Email ID\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('email').hasError('minlength')\">Email ID must be\n                      5 characters\n                    </div>\n                    <div *ngIf=\"basicMemberForm.get('email').hasError('maxlength')\">Email ID must be\n                      60 characters\n                    </div>\n                    <!-- <div *ngIf=\"basicMemberForm.get('email').hasError('pattern')\">Please enter valid\n                      Email ID\n                    </div> -->\n                  </div>\n                </div>\n                <div class=\"col-md-3\" style=\"margin-top: 25px;\">\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <div class=\"custom-control custom-radio\">\n                        <input type=\"radio\" class=\"custom-control-input\" id=\"emailVisibilitypubl\" name=\"emailVisibility\"\n                          value=\"1\" formControlName=\"emailVisibility\" [(ngModel)]=\"adminPage.emailVisibility\">\n                        <label class=\"custom-control-label\" for=\"emailVisibilitypubl\">Public</label>\n                      </div>\n                    </div>\n                    <div class=\"col-md-4\">\n                      <div class=\"custom-control custom-radio\">\n                        <input type=\"radio\" class=\"custom-control-input\" id=\"emailVisibilityhidd\" name=\"emailVisibility\"\n                          value=\"0\" formControlName=\"emailVisibility\" [(ngModel)]=\"adminPage.emailVisibility\">\n                        <label class=\"custom-control-label\" for=\"emailVisibilityhidd\">Hidden</label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-md-12\"\n                  [ngClass]=\"{'has-error':!basicMemberForm.controls.instructionByMember.valid && basicMemberForm.controls.instructionByMember.touched}\">\n                  <label for=\"exampleForm2\">Instructions to\n                    Admin</label><em>({{ 1200 - adminPage.instructionByMember.length }} characters\n                    left)</em>\n                  <textarea formControlName=\"instructionByMember\" [(ngModel)]=\"adminPage.instructionByMember\"\n                    name=\"instructionByMember\" id=\"instructionByMember\" class=\"form-control\"\n                    placeholder=\"Eg: Do not Share My Contact Number with Anyone\"></textarea>\n                  <p>For Kannada, visit the this link <a href=\"http://www.quillpad.in/index.html#.XjKlZmkzZPY\"\n                      target=\"blank\" style=\"font-weight: bold;color: #0000ae;\">&nbsp;ಕನ್ನಡ </a> , then type and\n                    copy the content and paste it in the\n                    above feild .</p>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.instructionByMember.valid && basicMemberForm.controls.instructionByMember.touched\">\n\n                    <div *ngIf=\"basicMemberForm.get('instructionByMember').hasError('maxlength')\">\n                      Instructions By Member must be 1200 characters\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <!-- <div class=\"row\" style=\"margin-top: 2%;\">\n                        <div class=\"col-md-3\">\n                            <img [src]=\"croppedImage\" onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height:230px;width: 170px;\">\n                            <div class=\"upload-btn-wrapper\">\n                                <button class=\"btn1\" style=\"margin-top: 2%;\">Upload Photo</button>\n                                <input type=\"file\" id=\"propic\" name=\"propic\" (change)=\"fileChangeEvent($event)\">\n                                <input type=\"hidden\" name=\"fileHidden\" formControlName=\"profileImage\" />\n\n                            </div>\n                            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.profileImage.valid && basicMemberForm.controls.profileImage.touched\">\n                                <div *ngIf=\"basicMemberForm.get('profileImage').hasError('required')\">\n                                    You must select Profile Pic\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\">\n                            <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent\" [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\" (imageCropped)=\"imageCropped($event)\" (imageLoaded)=\"imageLoaded()\" (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                                onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height:  230px;width: 170px;\">\n                            </image-cropper>\n                        </div>\n                        <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Institute'\">\n                            <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent\" [maintainAspectRatio]=\"true\" [aspectRatio]=\"4/3\" format=\"jpeg\" (imageCropped)=\"imageCropped($event)\" (imageLoaded)=\"imageLoaded()\" (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\">\n                            </image-cropper>\n                        </div>\n                    </div> -->\n              <div class=\"row\" style=\"margin-top: 2%;\" *ngIf=\"adminPage.individualInstitute == 'Individual'\">\n                <div class=\"col-md-3\">\n                  <img [src]=\"croppedImage\" onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                    style=\"height:230px;width: 170px;\">\n                  <div class=\"upload-btn-wrapper\">\n                    <button class=\"btn1\" style=\"margin-top: 2%;\"\n                      [disabled]=\"!this.validityProfile.memberValidUptoStatus\">Upload\n                      Photo</button>\n                    <input type=\"file\" id=\"propic\" name=\"propic\" accept=\".jpg,.jpeg\" (change)=\"fileChangeEvent($event)\">\n                    <!-- [attr.disabled]=\"!this.validityProfile.memberValidUptoStatus\" -->\n                    <input type=\"hidden\" name=\"fileHidden\" formControlName=\"profileImage\" />\n                  </div>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.profileImage.valid && basicMemberForm.controls.profileImage.touched\">\n                    <div *ngIf=\"basicMemberForm.get('profileImage').hasError('required')\">\n                      You must select Profile Picture\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\">\n                  <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent\" [maintainAspectRatio]=\"true\"\n                    [aspectRatio]=\"3/4\" format=\"jpeg\" (imageCropped)=\"imageCropped($event)\"\n                    (imageLoaded)=\"imageLoaded()\" (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                    onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height:  230px;width: 170px;\">\n                  </image-cropper>\n                </div>\n              </div>\n              <div class=\"row\" style=\"margin-top: 2%;\" *ngIf=\"adminPage.individualInstitute == 'Institute'\">\n                <div class=\"col-md-3\">\n                  <img [src]=\"croppedImage\" onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                    style=\"height: 148px;width: 268px;\">\n                  <div class=\"upload-btn-wrapper\">\n                    <button class=\"btn1\" style=\"margin-top: 2%;\">Upload Photo</button>\n                    <input type=\"file\" id=\"propic\" name=\"propic\" accept=\".jpg,.jpeg,.png\"\n                      (change)=\"fileChangeEvent($event)\">\n                    <!-- [attr.disabled]=\"!this.validityProfile.memberValidUptoStatus\" -->\n                    <input type=\"hidden\" name=\"fileHidden\" formControlName=\"profileImage\" />\n                  </div>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMemberForm.controls.profileImage.valid && basicMemberForm.controls.profileImage.touched\">\n                    <div *ngIf=\"basicMemberForm.get('profileImage').hasError('required')\">\n                      You must select Profile Picture\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\">\n                  <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent\" [maintainAspectRatio]=\"true\"\n                    [aspectRatio]=\"4/3\" format=\"jpeg\" (imageCropped)=\"imageCropped($event)\"\n                    (imageLoaded)=\"imageLoaded()\" (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                    onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height:  230px;width: 170px;\">\n                  </image-cropper>\n                </div>\n              </div>\n\n\n              <div class=\"col-md-12\">\n\n                <!-- <button type=\"button\" class=\"btn btn-success\" style=\"margin-top: 6%;\" (click)=\"submitBasicDetails()\" [disabled]=\"basicUpdateButton\">Update</button>&nbsp;&nbsp; &nbsp;&nbsp; -->\n                <button type=\"button\" class=\"btn btn-success\" style=\"margin-top: 6%;\" (click)=\"updateMemberShipData()\"\n                  [disabled]=\"!this.validityProfile.memberValidUptoStatus\">Update</button>&nbsp;&nbsp;\n                <button type=\"button\" class=\"btn btn-danger\" style=\"margin-top: 6%;color: #fff\" data-dismiss=\"modal\"\n                  aria-label=\"Close\">Cancel</button>\n              </div>\n            </div>\n\n          </form>\n        </div>\n\n        <div class=\"card\" style=\"margin-top: 1%;\"\n          *ngIf=\"adminPage.refMembershipTypeId == '2' || adminPage.refMembershipTypeId == '3'\">\n          <div class=\"card-header\">\n            PROFILE PAGE\n            <div *ngIf=\"validityProfile.profileValidUptoStatus\" class=\"validDateShowing\" style=\"float: right;\">Valid\n              Upto\n              {{validityProfile.profileValidUptoDate | date:'dd-LLL-yyyy'}} (Remaining\n              {{validityProfile.profileValidUptoDays}} days)\n            </div>\n            <div *ngIf=\"!validityProfile.profileValidUptoStatus\" class=\"validDateShowing\" style=\"float: right;\">\n              Expired{{validityProfile.profileValidUptoDate | date:'dd-LLL-yyyy'}}\n            </div>\n          </div>\n\n          <div class=\"card-body\">\n            <form novalidate [formGroup]=\"profileMemberForm\" class=\"form-horizontal\">\n              <div class=\"row\">\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.qualification.valid && profileMemberForm.controls.qualification.touched}\">\n                  <label for=\"exampleForm2\">Qualification</label><span style=\"color:red;\"> *</span>\n                  <input type=\"text\" name=\"qualification\" class=\"form-control\" formControlName=\"qualification\"\n                    [(ngModel)]=\"profileMember.qualification\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.qualification.valid && profileMemberForm.controls.qualification.touched\">\n                    <div *ngIf=\"profileMemberForm.get('qualification').hasError('required')\">You\n                      must enter Qualification\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('qualification').hasError('minlength')\">\n                      Qualification must be 3 characters</div>\n                    <div *ngIf=\"profileMemberForm.get('qualification').hasError('maxlength')\">\n                      Qualification must be 30 characters</div>\n                    <div *ngIf=\"profileMemberForm.get('qualification').hasError('pattern')\">Please\n                      enter valid Qualification\n                    </div>\n\n                  </div>\n                </div>\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.motherTounge.valid && profileMemberForm.controls.motherTounge.touched}\">\n                  <label for=\"exampleForm2\">Mother Tongue</label><span style=\"color:red;\"> *</span>\n                  <angular2-multiselect [data]=\"motherToungeList\" [(ngModel)]=\"selectedmotherTounge\"\n                    formControlName=\"motherTounge\" [settings]=\"motherToungeSettings\"\n                    (onSelect)=\"motherToungeSelect($event)\" (onDeSelect)=\"motherToungeDeSelect($event)\"\n                    (onSelectAll)=\"motherToungeSelectAll($event)\" (onDeSelectAll)=\"motherToungeDeSelectAll($event)\">\n                  </angular2-multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.motherTounge.valid && profileMemberForm.controls.motherTounge.touched\">\n                    <div *ngIf=\"profileMemberForm.get('motherTounge').hasError('required')\">You must\n                      select mother Tounge\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.otherLanguages.valid && profileMemberForm.controls.otherLanguages.touched}\">\n                  <label for=\"exampleForm2\">Other Languages</label>\n                  <angular2-multiselect [data]=\"otherLanguagesList\" [(ngModel)]=\"selectedotherLanguages\"\n                    formControlName=\"otherLanguages\" [settings]=\"otherLanguagesSettings\"\n                    (onSelect)=\"otherLanguagesSelect($event)\" (onDeSelect)=\"otherLanguagesDeSelect($event)\"\n                    (onSelectAll)=\"otherLanguagesSelectAll($event)\" (onDeSelectAll)=\"otherLanguagesDeSelectAll($event)\">\n                  </angular2-multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.otherLanguages.valid && profileMemberForm.controls.otherLanguages.touched\">\n                    <div *ngIf=\"profileMemberForm.get('otherLanguages').hasError('required')\">You\n                      must select other Languages\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.height.valid && profileMemberForm.controls.height.touched}\">\n                  <label for=\"exampleForm2\">Height</label>\n                  <input type=\"text\" name=\"height\" class=\"form-control\" [(ngModel)]=\"profileMember.height\"\n                    placeholder=\"5'12\" maxlength=\"5\" formControlName=\"height\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.height.valid && profileMemberForm.controls.height.touched\">\n                    <div *ngIf=\"profileMemberForm.get('height').hasError('required')\">You must enter\n                      height\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('height').hasError('minlength')\">height must\n                      be 4 characters\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('height').hasError('maxlength')\">height must\n                      be 5 characters\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('height').hasError('pattern')\">Please enter\n                      valid height Eg: 5'12\" or 5'12\n                    </div>\n\n                  </div>\n                </div>\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.weight.valid && profileMemberForm.controls.weight.touched}\">\n                  <label for=\"exampleForm2\">Weight</label>\n                  <input type=\"text\" name=\"weight\" class=\"form-control\" [(ngModel)]=\"profileMember.weight\"\n                    formControlName=\"weight\" maxlength=\"3\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.weight.valid && profileMemberForm.controls.weight.touched\">\n                    <div *ngIf=\"profileMemberForm.get('weight').hasError('required')\">You must enter\n                      weight\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('weight').hasError('minlength')\">weight must\n                      be 1 characters\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('weight').hasError('maxlength')\">weight must\n                      be 3 characters\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('weight').hasError('pattern')\">Please enter\n                      valid weight Eg: 45 or 75\n                    </div>\n\n                  </div>\n                </div>\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.dob.valid && profileMemberForm.controls.dob.touched}\">\n                  <label for=\"exampleForm2\">Date of Birth</label><span style=\"color:red;\"> *</span>\n                  <!-- <input type=\"text\" class=\"form-control\" [(ngModel)]=\"profileMember.dob\" formControlName=\"dob\" placeholder=\"DD-MM\" maxlength=\"5\"> -->\n                  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"profileMember.dob\" formControlName=\"dob\"\n                    name=\"dob\" placeholder=\"DD-MM\" maxlength=\"5\" (input)=\"AppendDate($event.target.value)\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.dob.valid && profileMemberForm.controls.dob.touched\">\n                    <div *ngIf=\"profileMemberForm.get('dob').hasError('required')\">You must enter\n                      Date of Birth\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('dob').hasError('pattern')\">Please enter valid\n                      Date of Birth\n                    </div>\n                  </div>\n\n                </div>\n                <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.birthPlace.valid && profileMemberForm.controls.birthPlace.touched}\">\n                  <label for=\"exampleForm2\">Birth Place</label><span style=\"color:red;\"> *</span>\n                  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"profileMember.birthPlace\"\n                    formControlName=\"birthPlace\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.birthPlace.valid && profileMemberForm.controls.birthPlace.touched\">\n                    <div *ngIf=\"profileMemberForm.get('birthPlace').hasError('required')\">You must\n                      enter birth Place\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('birthPlace').hasError('minlength')\">birth\n                      Place must be 3 characters\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('birthPlace').hasError('maxlength')\">birth\n                      Place must be 30 characters\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('birthPlace').hasError('pattern')\">Please\n                      enter valid birth Place\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.nationality.valid && profileMemberForm.controls.nationality.touched}\">\n                  <label for=\"exampleForm2\">Nationality</label><span style=\"color:red;\"> *</span>\n                  <angular2-multiselect [data]=\"nationList\" [(ngModel)]=\"selectednation\" [settings]=\"nationSettings\"\n                    (onSelect)=\"nationnameSelect($event)\" (onDeSelect)=\"nationnameDeSelect($event)\"\n                    (onSelectAll)=\"nationnameSelectAll($event)\" (onDeSelectAll)=\"nationnameDeSelectAll($event)\"\n                    formControlName=\"nationality\">\n                  </angular2-multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.nationality.valid && profileMemberForm.controls.nationality.touched\">\n                    <div *ngIf=\"profileMemberForm.get('nationality').hasError('required')\">You must\n                      select Nationality\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-12\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.description.valid && profileMemberForm.controls.description.touched}\">\n                  <label for=\"exampleForm2\">Description (in short)</label><span style=\"color:red;\"> *\n                  </span>\n                  <em>({{ 600- profileMember.description.length }} characters left)</em>\n                  <textarea class=\"form-control\" rows=\"2\" [(ngModel)]=\"profileMember.description\"\n                    formControlName=\"description\"></textarea>\n                  <p>For Kannada, visit the this link <a href=\"http://www.quillpad.in/index.html#.XjKlZmkzZPY\"\n                      target=\"blank\" style=\"font-weight: bold;color: #0000ae;\">&nbsp;ಕನ್ನಡ </a> , then type and\n                    copy the content and paste it in the\n                    above feild .</p>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.description.valid && profileMemberForm.controls.description.touched\">\n                    <div *ngIf=\"profileMemberForm.get('description').hasError('required')\">You must\n                      enter Description\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('description').hasError('minlength')\">\n                      Description must be atleast 30 characters</div>\n                    <div *ngIf=\"profileMemberForm.get('description').hasError('maxlength')\">\n                      Description must be less than 600 characters</div>\n                    <div *ngIf=\"profileMemberForm.get('description').hasError('pattern')\">Please\n                      enter valid Description\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-12\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.aboutMe.valid && profileMemberForm.controls.aboutMe.touched}\"\n                  style=\"height: 5%\">\n                  <label for=\"exampleForm2\">About me</label><span style=\"color:red;\">\n                    *</span><em>({{ 25000 - profileMember.aboutMe.length }} characters left)</em>\n                  <!-- <textarea id=\"edit1\" [froalaEditor] [(froalaModel)]=\"profileMember.aboutMe\"></textarea> -->\n                  <!-- <textarea class=\"form-control\" rows=\"4\" [(ngModel)]=\"profileMember.aboutMe\" formControlName=\"aboutMe\"></textarea> -->\n                  <quill-editor rows=\"4\" [modules]=\"modules\" [(ngModel)]=\"profileMember.aboutMe\" formControlName=\"aboutMe\">\n                  </quill-editor>\n                  <p>For Kannada, visit the this link <a href=\"http://www.quillpad.in/index.html#.XjKlZmkzZPY\"\n                      target=\"blank\" style=\"font-weight: bold;color: #0000ae;\">&nbsp;ಕನ್ನಡ </a> , then type and\n                    copy the content and paste it in the\n                    above feild .</p>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.aboutMe.valid && profileMemberForm.controls.aboutMe.touched\">\n                    <div *ngIf=\"profileMemberForm.get('aboutMe').hasError('required')\">You must\n                      enter About me\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('aboutMe').hasError('minlength')\">About me\n                      must be atleast 30 characters\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('aboutMe').hasError('maxlength')\">About me\n                      must be less than 25,000 characters</div>\n                    <div *ngIf=\"profileMemberForm.get('aboutMe').hasError('pattern')\">Please enter\n                      valid About me</div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"row\">\n\n                <div class=\"col-md-12\"\n                  [ngClass]=\"{'has-error':!profileMemberForm.controls.experience.valid && profileMemberForm.controls.experience.touched}\"\n                  style=\"height: 5%\">\n                  <label for=\"exampleForm2\">Experience</label><span style=\"color:red;\">\n                    *</span><em>({{ 25000 - profileMember.experience.length }} characters left)</em>\n                  <!-- <textarea id=\"edit\" [froalaEditor] [(froalaModel)]=\"profileMember.experience\"></textarea> -->\n                  <!-- <textarea class=\"form-control\" rows=\"4\" [(ngModel)]=\"profileMember.experience\" formControlName=\"experience\"></textarea> -->\n                  <quill-editor rows=\"4\" [modules]=\"modules\" [(ngModel)]=\"profileMember.experience\" formControlName=\"experience\">\n                  </quill-editor>\n                  <p>For Kannada, visit the this link <a href=\"http://www.quillpad.in/index.html#.XjKlZmkzZPY\"\n                      target=\"blank\" style=\"font-weight: bold;color: #0000ae;\">&nbsp;ಕನ್ನಡ </a> , then type and\n                    copy the content and paste it in the\n                    above feild .</p>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!profileMemberForm.controls.experience.valid && profileMemberForm.controls.experience.touched\">\n                    <div *ngIf=\"profileMemberForm.get('experience').hasError('required')\">You must\n                      enter Experience\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('experience').hasError('minlength')\">\n                      Experience must be atleast 30 characters\n                    </div>\n                    <div *ngIf=\"profileMemberForm.get('experience').hasError('maxlength')\">\n                      Experience must be less than 25,000 characters</div>\n                    <div *ngIf=\"profileMemberForm.get('experience').hasError('pattern')\">Please\n                      enter valid Experience\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div formArrayName=\"otherOpenionRows\">\n                    <label for=\"exampleForm2\">Others Opinion</label>\n                    <div class=\"row\">\n                      <div class=\"col-md-3\">\n                        <label>Member Name</label>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <label>Members Opinion</label>\n                      </div>\n                      <div class=\"col-md-3\">\n                        <label>Add/Remove</label>\n                      </div>\n                    </div>\n                    <div class=\"row\" *ngFor=\"let otherOpenionrow of getotherOpenionRows(profileMemberForm); let i=index\"\n                      [formGroupName]=\"i\">\n                      <div class=\"col-md-3\">\n                        <angular2-multiselect [data]=\"otherMemberList\" [(ngModel)]=\"selectedItems[i]\"\n                          formControlName=\"otherMemberName\" [settings]=\"otherMembersettings\">\n                          <c-search>\n                            <ng-template>\n                              <input type=\"text\" (keyup)=\"GetOtherMemberList($event)\" placeholder=\"Search Members\"\n                                style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                            </ng-template>\n                          </c-search>\n                          <c-item>\n                            <ng-template let-item=\"item\">\n                              <img [src]=\"item.profileImage\"\n                                style=\"width: 30px; border: 1px solid #efefef;margin-right: 0px;\" />\n                              <label>{{item.itemName}}</label>\n                            </ng-template>\n                          </c-item>\n                        </angular2-multiselect>\n                        <div class=\"alert alert-danger\" role=\"alert\"\n                          *ngIf=\"!profileMemberForm.controls.otherOpenionRows.controls[i].controls.otherMemberName.valid && profileMemberForm.controls.otherOpenionRows.controls[i].controls.otherMemberName.touched\">\n                          <div\n                            *ngIf=\"profileMemberForm.controls.otherOpenionRows.controls[i].controls.otherMemberName.hasError('required')\">\n                            You must select Other Member</div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <textarea formControlName=\"description\" name=\"description\" id=\"description\" class=\"form-control\"\n                          #description></textarea>\n                        <em>({{ 1200- description.value.length }} characters left)</em>\n                        <p>For Kannada, visit the this link <a href=\"http://www.quillpad.in/index.html#.XjKlZmkzZPY\"\n                            target=\"blank\" style=\"font-weight: bold;color: #0000ae;\">&nbsp;ಕನ್ನಡ </a> ,\n                          then type and copy the content and paste\n                          it in the above feild .</p>\n                        <div class=\"alert alert-danger\" role=\"alert\"\n                          *ngIf=\"!profileMemberForm.controls.otherOpenionRows.controls[i].controls.description.valid && profileMemberForm.controls.otherOpenionRows.controls[i].controls.description.touched\">\n                          <div\n                            *ngIf=\"profileMemberForm.controls.otherOpenionRows.controls[i].controls.description.hasError('minlength')\">\n                            Description must be 30 characters</div>\n                          <div\n                            *ngIf=\"profileMemberForm.controls.otherOpenionRows.controls[i].controls.description.hasError('maxlength')\">\n                            Description must be 1200 characters</div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-3\">\n                        <button type=\"button\" (click)=\"addNewotherOpenionRow()\" class=\"btn btn-primary addremovebtn\"\n                          [disabled]=\"!this.validityProfile.profileValidUptoStatus\"\n                          *ngIf=\"profileMemberForm.controls.otherOpenionRows.controls.length < 5\">\n                          Add\n                        </button>&nbsp;&nbsp;\n                        <button type=\"button\" [disabled]=\"!this.validityProfile.profileValidUptoStatus\"\n                          (click)=\"deleteotherOpenionRow(i)\" class=\"btn btn-danger addremovebtn\"\n                          *ngIf=\"profileMemberForm.controls.otherOpenionRows.controls.length > 1\">\n                          Remove\n                        </button>\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n\n\n                <div class=\"col-md-2\">\n                  <label>Edit Profile Photos</label><span style=\"color:#ff0000;\"> *</span>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <!-- <input type=\"file\" id=\"photo1 \" name=\"photo1 \" (change)=\"fileChangeEventProfile($event,1)\" [(ngModel)]=\"profileMember.ProfileimagePath1\" formControlName=\"ProfileimagePath1\"> -->\n                      <div class=\"upload-btn-wrapper\">\n                        <button class=\"btn2\">Upload Photo\n                          1</button>\n                        <input type=\"file\" id=\"photo1 \" name=\"photo1 \" accept=\".jpg,.jpeg,.png\"\n                          (change)=\"fileChangeEventProfile($event,1)\" >\n                        <!-- [attr.disabled]=\"!this.validityProfile.profileValidUptoStatus\" -->\n                        <input type=\"hidden\" name=\"ProfileimagePath1\" [(ngModel)]=\"profileMember.ProfileimagePath1\"\n                        formControlName=\"ProfileimagePath1\" />\n                      </div>\n                      <div class=\"alert alert-danger\" role=\"alert\"\n                        *ngIf=\"!profileMemberForm.controls.ProfileimagePath1.valid && profileMemberForm.controls.ProfileimagePath1.touched\">\n                        <div *ngIf=\"profileMemberForm.get('ProfileimagePath1').hasError('required')\">\n                          You must select Profile image 1</div>\n                        <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath1').hasError('minlength')\">Profile image 1 must be 3 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath1').hasError('maxlength')\">Profile image 1 must be 30 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath1').hasError('pattern')\">Please enter valid Profile image 1</div> -->\n                      </div>\n                    </div>\n                    <div class=\"col-md-12\">\n                      <div class=\"upload-btn-wrapper\">\n                        <button class=\"btn2\">Upload Photo 2</button>\n                        <input type=\"file\" id=\"photo2 \" name=\"photo2\" accept=\".jpg,.jpeg,.png\"\n                          (change)=\"fileChangeEventProfile($event,2)\">\n                        <!-- [attr.disabled]=\"!this.validityProfile.profileValidUptoStatus\" -->\n                        <input type=\"hidden\" name=\"ProfileimagePath2\"  [(ngModel)]=\"profileMember.ProfileimagePath2\"\n                        formControlName=\"ProfileimagePath2\" />\n                      </div>\n                      <div class=\"alert alert-danger\" role=\"alert\"\n                        *ngIf=\"!profileMemberForm.controls.ProfileimagePath2.valid && profileMemberForm.controls.ProfileimagePath2.touched\">\n                        <div *ngIf=\"profileMemberForm.get('ProfileimagePath2').hasError('required')\">\n                          You must select Profile image 2</div>\n                        <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath2').hasError('minlength')\">Profile image 2 must be 3 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath2').hasError('maxlength')\">Profile image 2 must be 30 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath2').hasError('pattern')\">Please enter valid Profile image 2</div> -->\n                      </div>\n                    </div>\n                    <div class=\"col-md-12\">\n                      <div class=\"upload-btn-wrapper\">\n                        <button class=\"btn2\">Upload Photo 3</button>\n                        <input type=\"file\" id=\"photo3 \" name=\"photo3 \" accept=\".jpg,.jpeg,.png\"\n                          (change)=\"fileChangeEventProfile($event,3) \">\n                        <!-- [attr.disabled]=\"!this.validityProfile.profileValidUptoStatus\" -->\n                        <input type=\"hidden\" name=\"ProfileimagePath3\"  [(ngModel)]=\"profileMember.ProfileimagePath3\"\n                        formControlName=\"ProfileimagePath3\" />\n                      </div>\n                      <div class=\"alert alert-danger\" role=\"alert\"\n                        *ngIf=\"!profileMemberForm.controls.ProfileimagePath3.valid && profileMemberForm.controls.ProfileimagePath3.touched\">\n                        <div *ngIf=\"profileMemberForm.get('ProfileimagePath3').hasError('required')\">\n                          You must select Profile image 3</div>\n                        <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath3').hasError('minlength')\">Profile image 3 must be 3 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath3').hasError('maxlength')\">Profile image 3 must be 30 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath3').hasError('pattern')\">Please enter valid Profile image 3</div> -->\n                      </div>\n                    </div>\n                    <div class=\"col-md-12\">\n                      <div class=\"upload-btn-wrapper\">\n                        <button class=\"btn2\">Upload Photo 4</button>\n                        <input type=\"file\" id=\"photo4 \" name=\"photo4 \" accept=\".jpg,.jpeg,.png\"\n                          (change)=\"fileChangeEventProfile($event,4) \">\n                        <!-- [attr.disabled]=\"!this.validityProfile.profileValidUptoStatus\" -->\n                        <input type=\"hidden\" name=\"ProfileimagePath4\"  [(ngModel)]=\"profileMember.ProfileimagePath4\"\n                        formControlName=\"ProfileimagePath4\" />\n                      </div>\n                      <div class=\"alert alert-danger\" role=\"alert\"\n                        *ngIf=\"!profileMemberForm.controls.ProfileimagePath4.valid && profileMemberForm.controls.ProfileimagePath4.touched\">\n                        <div *ngIf=\"profileMemberForm.get('ProfileimagePath4').hasError('required')\">\n                          You must select Profile image 4</div>\n                        <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath4').hasError('minlength')\">Profile image 4 must be 3 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath4').hasError('maxlength')\">Profile image 4 must be 30 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath4').hasError('pattern')\">Please enter valid Profile image 4</div> -->\n                      </div>\n                    </div>\n                    <div class=\"col-md-12\">\n                      <div class=\"upload-btn-wrapper\">\n                        <button class=\"btn2\">Upload Photo 5</button>\n                        <input type=\"file\" id=\"photo5 \" name=\"photo5 \" accept=\".jpg,.jpeg,.png\"\n                          (change)=\"fileChangeEventProfile($event,5) \">\n                        <!--  [attr.disabled]=\"!this.validityProfile.profileValidUptoStatus\" -->\n                        <input type=\"hidden\" name=\"ProfileimagePath5\"  [(ngModel)]=\"profileMember.ProfileimagePath5\"\n                        formControlName=\"ProfileimagePath5\" />\n                      </div>\n                      <div class=\"alert alert-danger\" role=\"alert\"\n                        *ngIf=\"!profileMemberForm.controls.ProfileimagePath5.valid && profileMemberForm.controls.ProfileimagePath5.touched\">\n                        <div *ngIf=\"profileMemberForm.get('ProfileimagePath5').hasError('required')\">\n                          You must select Profile image 5</div>\n                        <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath5').hasError('minlength')\">Profile image 5 must be 3 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath5').hasError('maxlength')\">Profile image 5 must be 30 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath5').hasError('pattern')\">Please enter valid Profile image 5</div> -->\n                      </div>\n                    </div>\n                    <div class=\"col-md-12\">\n                      <div class=\"upload-btn-wrapper\">\n                        <button class=\"btn2\">Upload Photo 6</button>\n                        <input type=\"file\" id=\"photo6 \" name=\"photo6 \" accept=\".jpg,.jpeg,.png\"\n                          (change)=\"fileChangeEventProfile($event,6) \">\n                        <!--  [attr.disabled]=\"!this.validityProfile.profileValidUptoStatus\" -->\n                        <input type=\"hidden\" name=\"ProfileimagePath6\"  [(ngModel)]=\"profileMember.ProfileimagePath6\"\n                        formControlName=\"ProfileimagePath6\" />\n                      </div>\n                      <div class=\"alert alert-danger\" role=\"alert\"\n                        *ngIf=\"!profileMemberForm.controls.ProfileimagePath6.valid && profileMemberForm.controls.ProfileimagePath6.touched\">\n                        <div *ngIf=\"profileMemberForm.get('ProfileimagePath6').hasError('required')\">\n                          You must select Profile image 6</div>\n                        <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath6').hasError('minlength')\">Profile image 6 must be 3 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath6').hasError('maxlength')\">Profile image 6 must be 30 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath6').hasError('pattern')\">Please enter valid Profile image 6</div> -->\n                      </div>\n                    </div>\n                    <div class=\"col-md-12\">\n                      <div class=\"upload-btn-wrapper\">\n                        <button class=\"btn2\">Upload Photo 7</button>\n                        <input type=\"file\" id=\"photo7 \" name=\"photo7 \" accept=\".jpg,.jpeg,.png\"\n                          (change)=\"fileChangeEventProfile($event,7) \">\n                        <!-- [attr.disabled]=\"!this.validityProfile.profileValidUptoStatus\" -->\n                        <input type=\"hidden\" name=\"ProfileimagePath7\"  [(ngModel)]=\"profileMember.ProfileimagePath7\"\n                        formControlName=\"ProfileimagePath7\" />\n                      </div>\n                      <div class=\"alert alert-danger\" role=\"alert\"\n                        *ngIf=\"!profileMemberForm.controls.ProfileimagePath7.valid && profileMemberForm.controls.ProfileimagePath7.touched\">\n                        <div *ngIf=\"profileMemberForm.get('ProfileimagePath7').hasError('required')\">\n                          You must select Profile image 7</div>\n                        <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath7').hasError('minlength')\">Profile image 7 must be 3 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath7').hasError('maxlength')\">Profile image 7 must be 30 characters</div>\n                                                                <div *ngIf=\"profileMemberForm.get('ProfileimagePath7').hasError('pattern')\">Please enter valid Profile image 7</div> -->\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-md-3\">\n                  <span *ngIf=\"imageChangedEvent1Profile !=''\">\n                    <image-cropper id=\"ImagecropperProfile1\" [imageChangedEvent]=\"imageChangedEvent1Profile\"\n                      [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                      (imageCropped)=\"imageCroppedProfile($event,1)\" (imageLoaded)=\"imageLoadedProfile()\"\n                      (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                      onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                    </image-cropper>\n                  </span>\n                  <span *ngIf=\"imageChangedEvent2Profile !=''\">\n                    <image-cropper id=\"ImagecropperProfile2\" [imageChangedEvent]=\"imageChangedEvent2Profile\"\n                      [maintainAspectRatio]=\"true\" [aspectRatio]=\"6/4\" format=\"jpeg\"\n                      (imageCropped)=\"imageCroppedProfile($event,2)\" (imageLoaded)=\"imageLoadedProfile()\"\n                      (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                      onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                    </image-cropper>\n                  </span>\n                  <span *ngIf=\"imageChangedEvent3Profile !=''\">\n                    <image-cropper id=\"ImagecropperProfile3\" [imageChangedEvent]=\"imageChangedEvent3Profile\"\n                      [maintainAspectRatio]=\"true\" [aspectRatio]=\"6/4\" format=\"jpeg\"\n                      (imageCropped)=\"imageCroppedProfile($event,3)\" (imageLoaded)=\"imageLoadedProfile()\"\n                      (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                      onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                    </image-cropper>\n                  </span>\n                  <span *ngIf=\"imageChangedEvent4Profile !=''\">\n                    <image-cropper id=\"ImagecropperProfile4\" [imageChangedEvent]=\"imageChangedEvent4Profile\"\n                      [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                      (imageCropped)=\"imageCroppedProfile($event,4)\" (imageLoaded)=\"imageLoadedProfile()\"\n                      (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                      onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                    </image-cropper>\n                  </span>\n                  <span *ngIf=\"imageChangedEvent5Profile !=''\">\n                    <image-cropper id=\"ImagecropperProfile5\" [imageChangedEvent]=\"imageChangedEvent5Profile\"\n                      [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                      (imageCropped)=\"imageCroppedProfile($event,5)\" (imageLoaded)=\"imageLoadedProfile()\"\n                      (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                      onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                    </image-cropper>\n                  </span>\n                  <span *ngIf=\"imageChangedEvent6Profile !=''\">\n                    <image-cropper id=\"ImagecropperProfile6\" [imageChangedEvent]=\"imageChangedEvent6Profile\"\n                      [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                      (imageCropped)=\"imageCroppedProfile($event,6)\" (imageLoaded)=\"imageLoadedProfile()\"\n                      (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                      onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                    </image-cropper>\n                  </span>\n                  <span *ngIf=\"imageChangedEvent7Profile !=''\">\n                    <image-cropper id=\"ImagecropperProfile7\" [imageChangedEvent]=\"imageChangedEvent7Profile\"\n                      [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                      (imageCropped)=\"imageCroppedProfile($event,7)\" (imageLoaded)=\"imageLoadedProfile()\"\n                      (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                      onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                    </image-cropper>\n                  </span>\n                </div>\n                <div class=\"col-md-7\">\n                  <label>Photos preview</label>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <img class=\"pro1pic\" [src]=\"url1\" onerror=\"this.src='../../../assets/images/avtaar/1.jpg';\">\n                    </div>\n                    <div class=\"col-md-8\">\n                      <div class=\"row\">\n                        <div class=\"col-md-6\">\n                          <img class=\"pro2pic\" [src]=\"url2\" onerror=\"this.src='../../../assets/images/avtaar/2.jpg';\">\n                        </div>\n                        <div class=\"col-md-6\">\n                          <img class=\"pro2pic\" [src]=\"url3\" onerror=\"this.src='../../../assets/images/avtaar/3.jpg';\">\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-md-3\">\n                          <img class=\"pro3pic\" [src]=\"url4\" onerror=\"this.src='../../../assets/images/avtaar/4.jpg';\">\n                        </div>\n                        <div class=\"col-md-3\">\n                          <img class=\"pro3pic\" [src]=\"url5\" onerror=\"this.src='../../../assets/images/avtaar/5.jpg';\">\n                        </div>\n                        <div class=\"col-md-3\">\n                          <img class=\"pro3pic\" [src]=\"url6\" onerror=\"this.src='../../../assets/images/avtaar/6.jpg';\">\n                        </div>\n                        <div class=\"col-md-3\">\n                          <img class=\"pro3pic\" [src]=\"url7\" onerror=\"this.src='../../../assets/images/avtaar/7.jpg';\">\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <!-- <input type=\"text \" [(ngModel)]=\"profileMember.refMemberId\"> -->\n                <div class=\"col-md-12\">\n                  <div class=\"row\">\n                    <div class=\"col-md-3 \">\n                      <!-- <button type=\"button \" class=\"btn btn-success \" style=\"margin-top: 6%; \" (click)=\"submitProfile()\" [disabled]=\"!this.validityProfile.profileValidUptoStatus\">Update</button>&nbsp;&nbsp; -->\n                      <button type=\"button \" class=\"btn btn-success \" style=\"margin-top: 6%; \"\n                        (click)=\"updateProfileData()\"\n                        [disabled]=\"!this.validityProfile.profileValidUptoStatus\">Update</button>&nbsp;&nbsp;\n                      <button type=\"button\" class=\"btn btn-danger\" style=\"margin-top: 6%;color: #fff\"\n                        data-dismiss=\"modal\" aria-label=\"Close\">Cancel</button>\n\n                      <!-- <button type=\"button\" class=\"btn btn-primary\" style=\"margin-top: 6%;color: #fff\" (click)=\"claerProfileForm();\">Clear</button> -->\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n            </form>\n          </div>\n        </div>\n        <div class=\"card \" style=\"margin-top: 1%; \" *ngIf=\"adminPage.refMembershipTypeId == '3'\">\n          <div class=\"card-header \">\n            MY WEB PAGE\n            <div *ngIf=\"validityProfile.myWebPageValidUptoStstus\" class=\"validDateShowing\" style=\"float: right;\">Valid\n              Upto\n              {{validityProfile.myWebPageValidUptoDate | date:'dd-LLL-yyyy'}} (Remaining\n              {{validityProfile.myWebPageValidUptoDays}} days)\n            </div>\n            <div *ngIf=\"!validityProfile.myWebPageValidUptoStstus\" class=\"validDateShowing\" style=\"float: right;\">\n              Expired\n              {{validityProfile.myWebPageValidUptoDate | date:'dd-LLL-yyyy'}}</div>\n          </div>\n          <div class=\"card-body\">\n            <form novalidate [formGroup]=\"premiumMemberForm\" class=\"form-horizontal\">\n              <div class=\"row \">\n                <div class=\"col-md-4\">\n                  <p style=\"font-weight: 800;\">Do you want to keep this Web page as</p>\n                </div>\n                <div class=\"col-md-1\">\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" name=\"webPrivatePublicFlag\"\n                      formControlName=\"webPrivatePublicFlag\" id=\"public\" value=\"1\"\n                      [(ngModel)]=\"premiumProfile.webPrivatePublicFlag\">\n                    <label class=\"custom-control-label\" for=\"public\" style=\"font-weight: 800;\">Public</label>\n                  </div>\n                </div>\n                <div class=\"col-md-1\">\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" name=\"webPrivatePublicFlag\"\n                      formControlName=\"webPrivatePublicFlag\" id=\"private\" value=\"0\"\n                      [(ngModel)]=\"premiumProfile.webPrivatePublicFlag\">\n                    <label class=\"custom-control-label\" for=\"private\" style=\"font-weight: 800;\">Private</label>\n                  </div>\n                </div>\n\n                <div class=\"col-md-6\">\n                  <div class=\"alert alert-info\" role=\"alert\">\n                    <span id=\"pripubnote\">ಸೂಚನೆ: ನೀವು 'Public' ಆಯ್ಕೆ ಮಾಡಿಕೊಂಡಿದ್ದಲ್ಲಿ ನಿಮ್ಮ ಖಾಸಗಿತನದ\n                      ರಕ್ಷಣೆಗಾಗಿ ಫೋನ್ ನಂಬರ್, ವಿಳಾಸ, ಮೈಲ್ ಐಡಿ ನಿರ್ಬಂಧಿಸಿ.</span><br>\n                    <span id=\"pripubnote\">Note: If you choose 'Public' then please hide your phone\n                      number, address, mail id for the safety of your privacy.</span>\n                  </div>\n                </div>\n                <div class=\"col-md-3\">\n                  <label for=\"exampleForm2\">Web Page Profile HD Photo</label><span style=\"color:red;\">*</span>\n                  <img [src]=\"croppedhdphoto\" onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                    style=\"height: 148px;width: 268px;\">\n                  <div class=\"upload-btn-wrapper\">\n                    <button class=\"btn1\" style=\"margin-top: 2%;\">Upload HD Photo</button>\n                    <input type=\"file\" id=\"mainPhotoPath\" name=\"mainPhotoPath\" accept=\".jpg,.jpeg,.png\"\n                      (change)=\"hdPhotoApply($event)\">\n                    <!--  [attr.disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\" -->\n                    <input type=\"hidden\" name=\"mainPhotoPathHidden\" formControlName=\"mainPhotoPath\" />\n                  </div>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!premiumMemberForm.controls.mainPhotoPath.valid && premiumMemberForm.controls.mainPhotoPath.touched\">\n                    <div *ngIf=\"premiumMemberForm.get('mainPhotoPath').hasError('required')\">You\n                      must select Main Photo\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\">\n                  <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"hdimageChangedEvent\"\n                    [maintainAspectRatio]=\"true\" [aspectRatio]=\"2/1\" format=\"jpeg\"\n                    (imageCropped)=\"hdimageCropped($event)\" (imageLoaded)=\"hdimageLoaded()\"\n                    (cropperReady)=\"hdcropperReady()\" (loadImageFailed)=\"hdloadImageFailed()\"\n                    onerror=\"this.src='../../../assets/images/avtaar/no.jpg';\"\n                    style=\"height:  230px;width: 170px;margin: 11% 5%;\">\n                  </image-cropper>\n                </div>\n\n                <div class=\"col-md-12\" formArrayName=\"socialLinkRows\">\n                  <div class=\"row\">\n                    <div class=\"col-md-8\">\n                      <label for=\"exampleForm2 \">Social Media Links</label>\n                      <table style=\"width: 100%;\">\n                        <tr>\n                          <td>Social Media</td>\n                          <td>URL</td>\n                        </tr>\n                        <tr *ngFor=\"let social of socialLinksDtoList; let i=index\" [formGroupName]=\"i\">\n                          <td>\n                            <!-- <i class=\"{{social.icon}}\" aria-hidden=\"true\" style=\"color: #000000;\"></i> -->\n                            <img src=\"{{social.icon}}\" height=\"20px\" width=\"20px\">\n                            &nbsp;&nbsp;{{social.socialLinksName}}\n                          </td>\n                          <td>\n                            <input class=\"form-control\" type=\"text\" [(ngModel)]=\"social.socialLinksUrl\"\n                              formControlName=\"socialLinksUrl\" maxlength=\"100\">\n                          </td>\n                        </tr>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div formArrayName=\"articleRows\">\n                    <label for=\"exampleForm2\">Image Article</label>\n                    <table style=\"width: 60%;\">\n                      <tr>\n                        <th>Article Title<span style=\"color:red;\"> *</span></th>\n                        <th>Upload Article<span style=\"color:red;\"> *</span></th>\n                        <th>Preview</th>\n                      </tr>\n                      <tr *ngFor=\"let articlerow of getarticleRows(premiumMemberForm); let i=index\" [formGroupName]=\"i\">\n                        <td>\n                          <input class=\"form-control\" type=\"text\" maxlength=\"100\" formControlName=\"articleTitle\"\n                            name=\"articleTitle\" id=\"articleTitle\">\n                          <em>maximum 100 charcters</em>\n                          <div class=\"alert alert-danger\" role=\"alert\"\n                            *ngIf=\"!premiumMemberForm.controls.articleRows.controls[i].controls.articleTitle.valid && premiumMemberForm.controls.articleRows.controls[i].controls.articleTitle.touched\">\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.articleRows.controls[i].controls.articleTitle.hasError('minlength')\">\n                              Title must atleast be 3 characters</div>\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.articleRows.controls[i].controls.articleTitle.hasError('maxlength')\">\n                              title must be less than must be 100 characters</div>\n                          </div>\n                        </td>\n                        <td>\n                          <div class=\"upload-btn-wrapper\">\n                            <button class=\"btn2\">Upload Article {{i+1}}</button>\n                            <!-- <input type=\"file\" name=\"articlefakePath\" (change)=\"articleUpload($event,i)\"\n                          [attr.disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"> -->\n                            <input type=\"file\" name=\"articlefakePath\" accept=\".jpg,.jpeg,.png\"\n                              (change)=\"multipartArticleUpload($event,i)\">\n                            <input type=\"hidden\" name=\"articlefakePathHidden\" formControlName=\"articlePath\" />\n                          </div>\n                          <div class=\"alert alert-danger\" role=\"alert\"\n                            *ngIf=\"!premiumMemberForm.controls.articleRows.controls[i].controls.articlePath.valid && premiumMemberForm.controls.articleRows.controls[i].controls.articlePath.touched\">\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.articleRows.controls[i].controls.articlePath.hasError('required')\">\n                              You must enter Article</div>\n                          </div>\n                        </td>\n                        <td\n                          *ngIf=\"premiumProfile.articleImg[i].articalPathFileType != 'pdf' && premiumProfile.articleImg[i].articalPathFileType != 'PDF'\">\n                          <img [src]=\"premiumProfile.articleImg[i].articalPath\"\n                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                            style=\"height: auto;width: 90px;\">\n                        </td>\n                        <td>\n                          <button type=\"button\" (click)=\"addarticleRowInPosition(i)\"\n                            [disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"\n                            class=\"btn btn-primary addremovebtn\"\n                            *ngIf=\"premiumMemberForm.controls.articleRows.controls.length < this.contentRestriction.articleImageLimit\">\n                            Add\n                          </button>\n                        </td>\n                        <td>\n                          <button type=\"button\" (click)=\"deletearticleRow(i)\"\n                            [disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"\n                            class=\"btn btn-danger addremovebtn\"\n                            *ngIf=\"premiumMemberForm.controls.articleRows.controls.length > 1\">\n                            Remove\n                          </button>\n                        </td>\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n\n                <div class=\"col-md-12\">\n                  <div formArrayName=\"articlePdfRows\">\n                    <label class=\"headlabel\" for=\"exampleForm2\">Pdf Article</label>\n                    <table style=\"width: 60%;\">\n                      <tr>\n                        <th>Article Title<span style=\"color:red;\"> *</span></th>\n                        <th>Upload Article<span style=\"color:red;\"> *</span></th>\n                        <th>Preview</th>\n                      </tr>\n                      <tr *ngFor=\"let articlerow of getarticlePdfRows(premiumMemberForm); let i=index\"\n                        [formGroupName]=\"i\">\n                        <td>\n                          <input class=\"form-control\" type=\"text\" maxlength=\"100\" formControlName=\"articlePdfTitle\"\n                            name=\"articlePdfTitle\" id=\"articlePdfTitle\">\n                          <em>maximum 100 charcters</em>\n                          <div class=\"alert alert-danger\" role=\"alert\"\n                            *ngIf=\"!premiumMemberForm.controls.articlePdfRows.controls[i].controls.articlePdfTitle.valid && premiumMemberForm.controls.articlePdfRows.controls[i].controls.articlePdfTitle.touched\">\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.articlePdfRows.controls[i].controls.articlePdfTitle.hasError('minlength')\">\n                              Title must atleast be 3 characters</div>\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.articlePdfRows.controls[i].controls.articlePdfTitle.hasError('maxlength')\">\n                              title must be less than must be 100 characters</div>\n                          </div>\n                        </td>\n                        <td>\n                          <div class=\"upload-btn-wrapper\">\n                            <button class=\"btn2\">Upload Article {{i+1}}</button>\n                            <!-- <input type=\"file\" name=\"articlefakePdfPath\" (change)=\"articlePdfUpload($event,i)\"\n                                  [attr.disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"> -->\n                            <input type=\"file\" name=\"articlefakePdfPath\" accept=\"application/pdf\"\n                              (change)=\"multipartArticlePDFUpload($event,i)\">\n                            <input type=\"hidden\" name=\"articlefakePdfPathHidden\" formControlName=\"articlePdfPath\" />\n                          </div>\n                          <div class=\"alert alert-danger\" role=\"alert\"\n                            *ngIf=\"!premiumMemberForm.controls.articlePdfRows.controls[i].controls.articlePdfPath.valid && premiumMemberForm.controls.articlePdfRows.controls[i].controls.articlePdfPath.touched\">\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.articlePdfRows.controls[i].controls.articlePdfPath.hasError('required')\">\n                              You must enter Article</div>\n                          </div>\n                        </td>\n                        <td *ngIf=\"premiumProfile.articlePdf[i].articalPathPDF != ''\">\n                          <a [href]=\"sanitizer.bypassSecurityTrustResourceUrl(premiumProfile.articlePdf[i].articalPathPDF)\"\n                            download>PDF</a>\n                        </td>\n                        <td>\n                          <button type=\"button\" (click)=\"addarticlePdfRowInPosition(i)\"\n                            [disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"\n                            class=\"btn btn-primary addremovebtn\"\n                            *ngIf=\"premiumMemberForm.controls.articlePdfRows.controls.length < this.contentRestriction.articlePdfLimit\">\n                            Add\n                          </button>\n                        </td>\n                        <td>\n                          <button type=\"button\" (click)=\"deletearticlePdfRow(i)\"\n                            [disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"\n                            class=\"btn btn-danger addremovebtn\"\n                            *ngIf=\"premiumMemberForm.controls.articlePdfRows.controls.length > 1\">\n                            Remove\n                          </button>\n                        </td>\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n\n                <div class=\"col-md-12\">\n                  <div formArrayName=\"galleryRows\">\n                    <label>Upload Gallery Photos</label>\n                    <table style=\"width: 60%;\">\n                      <tr>\n                        <th>Choose Photo</th>\n                        <th>Preview</th>\n                      </tr>\n                      <tr *ngFor=\"let galleryrow of getgalleryRows(premiumMemberForm); let i=index\" [formGroupName]=\"i\">\n                        <td>\n                          <div class=\"upload-btn-wrapper\">\n                            <button class=\"btn2\">Upload Photo {{i+1}}</button>\n                            <input type='file' id=\"galaryfakePath\" (change)=\"galleryImageUpload($event,i)\"\n                              accept=\".jpg,.jpeg,.png\">\n                            <input type=\"hidden\" name=\"galleryPathHidden\" formControlName=\"galaryPath\" />\n                          </div>\n                          <div class=\"alert alert-danger\" role=\"alert\"\n                            *ngIf=\"!premiumMemberForm.controls.galleryRows.controls[i].controls.galaryPath.valid && premiumMemberForm.controls.galleryRows.controls[i].controls.galaryPath.touched\">\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.galleryRows.controls[i].controls.galaryPath.hasError('required')\">\n                              You must select Galary</div>\n                          </div>\n                        </td>\n                        <td>\n                          <img [src]=\"premiumProfile.galImg[i]\"\n                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                            style=\"height: auto;width: 90px;\">\n                        </td>\n                        <td>\n                          <button type=\"button\" (click)=\"addgalleryRowInPosition(i)\"\n                            [disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"\n                            class=\"btn btn-primary addremovebtn\"\n                            *ngIf=\"premiumMemberForm.controls.galleryRows.controls.length < this.contentRestriction.galaryLimit\">\n                            Add\n                          </button>\n                        </td>\n                        <td>\n                          <button type=\"button\" (click)=\"deletegalleryRow(i)\"\n                            [disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"\n                            class=\"btn btn-danger addremovebtn\"\n                            *ngIf=\"premiumMemberForm.controls.galleryRows.controls.length > 1\">\n                            Remove\n                          </button>\n                        </td>\n                        <td>\n                          <span *ngIf=\"imageChangedEventGalary[i] !=''\">\n                            <image-cropper id=\"{{'imageGalary'+i}}\" [imageChangedEvent]=\"imageChangedEventGalary[i]\"\n                              [maintainAspectRatio]=\"false\" format=\"jpeg\" (imageCropped)=\"imageCroppedGalary($event,i)\"\n                              (imageLoaded)=\"imageLoadedGalary()\" (cropperReady)=\"cropperReadyGalary()\"\n                              (loadImageFailed)=\"loadImageFailedGalary()\"\n                              onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                              style=\"height: 130px; width: 220px;\">\n                            </image-cropper>\n                          </span>\n                        </td>\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div formArrayName=\"videoRows\">\n                    <label>Upload Videos</label>\n                    <table style=\"width: 100%\">\n                      <th>Video Name</th>\n                      <th>Video URL</th>\n                      <tr *ngFor=\"let videorow of getvideoRows(premiumMemberForm); let i=index\" [formGroupName]=\"i\">\n                        <td>\n                          <input type='text' formControlName=\"videoName\" class=\"form-control\">\n                          <div class=\"alert alert-danger\" role=\"alert\"\n                            *ngIf=\"!premiumMemberForm.controls.videoRows.controls[i].controls.videoName.valid && premiumMemberForm.controls.videoRows.controls[i].controls.videoName.touched\">\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.videoRows.controls[i].controls.videoName.hasError('maxlength')\">\n                              video Name must be 100 characters</div>\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.videoRows.controls[i].controls.videoName.hasError('minlength')\">\n                              video Name must be 3 characters</div>\n                          </div>\n                        </td>\n                        <td>\n                          <input type='text' formControlName=\"videoURL\" class=\"form-control\">\n                          <div class=\"alert alert-danger\" role=\"alert\"\n                            *ngIf=\"!premiumMemberForm.controls.videoRows.controls[i].controls.videoURL.valid && premiumMemberForm.controls.videoRows.controls[i].controls.videoURL.touched\">\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.videoRows.controls[i].controls.videoURL.hasError('minlength')\">\n                              video Url must be 6 characters</div>\n                            <div\n                              *ngIf=\"premiumMemberForm.controls.videoRows.controls[i].controls.videoURL.hasError('maxlength')\">\n                              video Url must be 200 characters</div>\n                          </div>\n                        </td>\n                        <td>\n                          <button type=\"button\" (click)=\"addvideoRowInPosition(i)\"\n                            [disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"\n                            class=\"btn btn-primary addremovebtn\"\n                            *ngIf=\"premiumMemberForm.controls.videoRows.controls.length < this.contentRestriction.videoLimit\">\n                            Add\n                          </button>\n                        </td>\n                        <td>\n                          <button type=\"button\" (click)=\"deletevideoRow(i)\"\n                            [disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"\n                            class=\"btn btn-danger addremovebtn\"\n                            *ngIf=\"premiumMemberForm.controls.videoRows.controls.length > 1\">\n                            Remove\n                          </button>\n                        </td>\n                      </tr>\n                    </table>\n                  </div>\n                </div>\n                <div class=\"col-md-3 \">\n                  <!-- <button type=\"button\" class=\"btn btn-success\" (click)=\"submitPremiumProfile()\" [disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\" style=\"margin-top: 6%;\">Update</button>&nbsp;&nbsp; -->\n                  <button type=\"button\" class=\"btn btn-success\" (click)=\"updatePremiumData()\"\n                    [disabled]=\"!this.validityProfile.myWebPageValidUptoStstus\"\n                    style=\"margin-top: 6%;\">Update</button>&nbsp;&nbsp;\n                  <button type=\"button\" class=\"btn btn-danger\" style=\"margin-top: 6%;color: #fff\" data-dismiss=\"modal\"\n                    aria-label=\"Close\">Cancel</button>\n\n                  <!-- <button type=\"button\" class=\"btn btn-primary\" style=\"margin-top: 6%;color: #fff\" (click)=\"claerWebPageForm();\">Clear</button> -->\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n<!--edit modal end-->\n<!--status modal start-->\n<div class=\"modal fade bd-example-modal-lg\" id=\"statusModal\" tabindex=\"-1\" role=\"dialog\"\n  aria-labelledby=\"statusModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-dialog-centered modal-md\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"statusModalLabel\">Status</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" #closeBtn>\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form novalidate [formGroup]=\"statusForm\" class=\"form-horizontal\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <label for=\"exampleForm2\">Select Status</label>\n              <select class=\"custom-select\" [(ngModel)]=\"adminPage.status\" name=\"status\" formControlName=\"status\">\n                <option value=\"Pending\"\n                  *ngIf=\"(currentUser.object.roleDto.roleId == '1' || currentUser.object.roleDto.roleId == '2' || currentUser.object.roleDto.roleId == '3' || currentUser.object.roleDto.roleId == '9')\">\n                  Pending</option>\n                <option value=\"Approved\"\n                  *ngIf=\"(currentUser.object.roleDto.roleId == '1' || currentUser.object.roleDto.roleId == '2' || currentUser.object.roleDto.roleId == '3'|| currentUser.object.roleDto.roleId == '9')\">\n                  Approved</option>\n                <option value=\"Rejected\" *ngIf=\"(currentUser.object.roleDto.roleId == '1')\">Rejected\n                </option>\n                <option value=\"Markred\" *ngIf=\"(currentUser.object.roleDto.roleId == '1')\">Mark Red\n                </option>\n              </select>\n              <div class=\"alert alert-danger\" role=\"alert\"\n                *ngIf=\"!statusForm.controls.status.valid && statusForm.controls.status.touched\">\n                <div *ngIf=\"statusForm.get('status').hasError('required')\">You must select Status Option\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-12\">\n              <label for=\"exampleForm2\">Remarks</label>\n              <textarea class=\"form-control\" name=\"remarks\" cols=\"4\" [(ngModel)]=\"adminPage.remarks\" name=\"remarks\"\n                formControlName=\"remarks\"></textarea>\n              <div class=\"alert alert-danger\" role=\"alert\"\n                *ngIf=\"!statusForm.controls.remarks.valid && statusForm.controls.remarks.touched\">\n                <div *ngIf=\"statusForm.get('remarks').hasError('required')\">You must enter remarks</div>\n              </div>\n            </div>\n            <div class=\"col-md-3\">\n              <button type=\" button \" class=\"btn btn-success \" style=\"margin-top: 6%; \"\n                (click)=\"submitStatus(adminPage.membershipId)\">Update</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/account/memberregbyadmin/memberregbyadmin.component.html":
/*!****************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/account/memberregbyadmin/memberregbyadmin.component.html ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container\">\n    <div class=\"tab-content\" id=\"pills-tabContent\">\n        <div class=\"tab-pane fade show active\" id=\"pills-profile\" role=\"tabpanel\" aria-labelledby=\"pills-profile-tab\">\n            <p class=\"reqline\">Note: Please Take this Process in Large Devices like(Laptop/Desktop) for Better Comfortable</p>\n\n            <div class=\"card\" style=\"margin-bottom: 1%;padding: 0% 1%;\">\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <div class=\"custom-control custom-radio\">\n                            <input type=\"radio\" class=\"custom-control-input\" id=\"basic\" name=\"refMembershipTypeId\" value=\"1\" [(ngModel)]=\"adminPage.refMembershipTypeId\" (change)=\"setMembershipTypeById(adminPage.refMembershipTypeId)\">\n                            <label class=\"custom-control-label\" for=\"basic\">Registration</label>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <div class=\"custom-control custom-radio\">\n                            <input type=\"radio\" class=\"custom-control-input\" id=\"profile\" name=\"refMembershipTypeId\" value=\"2\" [(ngModel)]=\"adminPage.refMembershipTypeId\" (change)=\"setMembershipTypeById(adminPage.refMembershipTypeId)\">\n                            <label class=\"custom-control-label\" for=\"profile\">Profile Page</label>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <div class=\"custom-control custom-radio\">\n                            <input type=\"radio\" class=\"custom-control-input\" id=\"preprofile\" name=\"refMembershipTypeId\" value=\"3\" [(ngModel)]=\"adminPage.refMembershipTypeId\" (change)=\"setMembershipTypeById(adminPage.refMembershipTypeId)\">\n                            <label class=\"custom-control-label\" for=\"preprofile\">My Web Page</label>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card\" *ngIf=\"adminPage.refMembershipTypeId == '1' || adminPage.refMembershipTypeId == '2' || adminPage.refMembershipTypeId == '3'\">\n                <div class=\"card-header\">\n                    REGISTRATION PAGE\n                </div>\n                <form novalidate [formGroup]=\"basicMemberForm\" class=\"form-horizontal\">\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                                <p><b>Please Select Individual/Institute which you are willing to apply</b></p>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <div class=\"custom-control custom-radio\">\n                                    <input type=\"radio\" class=\"custom-control-input\" id=\"ind\" name=\"individualInstitute\" formControlName=\"individualInstitute\" [(ngModel)]=\"adminPage.individualInstitute\" value=\"Individual\" (change)=\"OnindividualInstituteChange()\">\n                                    <label class=\"custom-control-label indinst\" for=\"ind\">Individual</label>\n                                </div>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <div class=\"custom-control custom-radio\">\n                                    <input type=\"radio\" class=\"custom-control-input\" id=\"ins\" name=\"individualInstitute\" formControlName=\"individualInstitute\" [(ngModel)]=\"adminPage.individualInstitute\" value=\"Institute\" (change)=\"OnindividualInstituteChange()\">\n                                    <label class=\"custom-control-label indinst\" for=\"ins\">Institute</label>\n                                </div>\n                            </div>\n                            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.individualInstitute.valid && basicMemberForm.controls.individualInstitute.touched\">\n                                <div *ngIf=\"basicMemberForm.get('individualInstitute').hasError('required')\">You must select Individual / Institute</div>\n                            </div>\n\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                                <p><b>Please Select Experienced Type</b></p>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <div class=\"custom-control custom-radio\">\n                                    <input type=\"radio\" class=\"custom-control-input\" id=\"exp\" name=\"experienceType\" value=\"Experienced\" formControlName=\"experienceType\" [(ngModel)]=\"adminPage.experienceType\" (change)=\"OnexperienceTypeChange()\">\n                                    <label class=\"custom-control-label\" for=\"exp\">Experienced</label>\n                                </div>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <div class=\"custom-control custom-radio\">\n                                    <input type=\"radio\" class=\"custom-control-input\" id=\"fresh\" name=\"experienceType\" value=\"Fresher\" formControlName=\"experienceType\" [(ngModel)]=\"adminPage.experienceType\" (change)=\"OnexperienceTypeChange()\">\n                                    <label class=\"custom-control-label\" for=\"fresh\">Freshers</label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-3\" [ngClass]=\"{'has-error':!basicMemberForm.controls.firstName.valid && basicMemberForm.controls.firstName.touched}\">\n                                <label for=\"exampleForm2\">{{adminPage.individualInstituteName}}</label><span style=\"color:red;\">\n                  *</span>\n                                <input type=\"text\" name=\"firstName\" class=\"form-control\" formControlName=\"firstName\" [(ngModel)]=\"adminPage.firstName\" (ngModelChange)=\"adminPage.firstName = $event.toUpperCase()\">\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.firstName.valid && basicMemberForm.controls.firstName.touched\">\n                                    <div *ngIf=\"basicMemberForm.get('firstName').hasError('required')\">You must enter a {{adminPage.individualInstituteName}}\n                                    </div>\n                                    <div *ngIf=\"basicMemberForm.get('firstName').hasError('minlength')\">\n                                        {{adminPage.individualInstituteName}} must be 2 characters</div>\n                                    <div *ngIf=\"basicMemberForm.get('firstName').hasError('maxlength')\">\n                                        {{adminPage.individualInstituteName}} must be 30 characters</div>\n                                    <div *ngIf=\"basicMemberForm.get('firstName').hasError('pattern')\">Please enter valid {{adminPage.individualInstituteName}}\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\" [ngClass]=\"{'has-error':!basicMemberForm.controls.middleName.valid && basicMemberForm.controls.middleName.touched}\">\n                                <label for=\"exampleForm2\">Middle Name</label>\n                                <input type=\"text\" name=\"middleName\" class=\"form-control\" formControlName=\"middleName\" [(ngModel)]=\"adminPage.middleName\" (ngModelChange)=\"adminPage.middleName = $event.toUpperCase()\">\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.middleName.valid && basicMemberForm.controls.middleName.touched\">\n                                    <div *ngIf=\"basicMemberForm.get('middleName').hasError('required')\">You must enter a Middle name</div>\n                                    <div *ngIf=\"basicMemberForm.get('middleName').hasError('minlength')\">Middle name must be 3 characters\n                                    </div>\n                                    <div *ngIf=\"basicMemberForm.get('middleName').hasError('maxlength')\">Middle name must be 30 characters\n                                    </div>\n                                    <div *ngIf=\"basicMemberForm.get('firstName').hasError('pattern')\">Please enter valid Middle name</div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\" [ngClass]=\"{'has-error':!basicMemberForm.controls.lastName.valid && basicMemberForm.controls.lastName.touched}\">\n                                <label for=\"exampleForm2\">Last Name</label>\n                                <input type=\"text\" name=\"lastname\" class=\"form-control\" formControlName=\"lastName\" [(ngModel)]=\"adminPage.lastName\" (ngModelChange)=\"adminPage.lastName = $event.toUpperCase()\">\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.lastName.valid && basicMemberForm.controls.lastName.touched\">\n                                    <div *ngIf=\"basicMemberForm.get('lastName').hasError('required')\">You must enter a Last name</div>\n                                    <div *ngIf=\"basicMemberForm.get('lastName').hasError('minlength')\">Last name must be 3 characters\n                                    </div>\n                                    <div *ngIf=\"basicMemberForm.get('lastName').hasError('maxlength')\">Last name must be 20 characters\n                                    </div>\n                                    <div *ngIf=\"basicMemberForm.get('lastName').hasError('pattern')\">Please enter valid Last name</div>\n                                </div>\n                            </div>\n\n\n                            <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Institute'\" [ngClass]=\"{'has-error':!basicMemberForm.controls.contactPerson.valid && basicMemberForm.controls.contactPerson.touched}\">\n                                <label for=\"exampleForm2\">Contact Person Name</label><span style=\"color:red;\">\n                  *</span>\n                                <input type=\"text\" name=\"contactPerson\" class=\"form-control\" formControlName=\"contactPerson\" [(ngModel)]=\"adminPage.contactPerson\" (ngModelChange)=\"adminPage.contactPerson = $event.toUpperCase()\">\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.contactPerson.valid && basicMemberForm.controls.contactPerson.touched\">\n                                    <div *ngIf=\"basicMemberForm.get('contactPerson').hasError('required')\">You must enter Contact Person Name\n                                    </div>\n                                    <div *ngIf=\"basicMemberForm.get('contactPerson').hasError('minlength')\">Contact Person Name must be 3 characters\n                                    </div>\n                                    <div *ngIf=\"basicMemberForm.get('contactPerson').hasError('maxlength')\">Contact Person Name must be 30 characters\n                                    </div>\n                                    <div *ngIf=\"basicMemberForm.get('contactPerson').hasError('pattern')\">Please enter valid contact Person name</div>\n\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Institute'\" [ngClass]=\"{'has-error':!basicMemberForm.controls.since.valid && basicMemberForm.controls.since.touched}\">\n                                <label for=\"exampleForm2\">Since</label><span style=\"color:red;\"> *</span>\n                                <input type=\"text\" name=\"since\" class=\"form-control\" maxlength=\"4\" placeholder=\"yyyy\" formControlName=\"since\" [(ngModel)]=\"adminPage.since\">\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.since.valid && basicMemberForm.controls.since.touched\">\n                                    <div *ngIf=\"basicMemberForm.get('since').hasError('required')\">You must enter a since\n                                    </div>\n                                    <div *ngIf=\"basicMemberForm.get('since').hasError('minlength')\">since must be 4 digits\n                                    </div>\n                                    <div *ngIf=\"basicMemberForm.get('since').hasError('maxlength')\">since must be 4 digits\n                                    </div>\n                                    <div *ngIf=\"basicMemberForm.get('since').hasError('pattern')\">Please enter valid since\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"col-md-3\" *ngIf=\"adminPage.experienceType == 'Experienced'\" [ngClass]=\"{'has-error':!basicMemberForm.controls.middleName.valid && basicMemberForm.controls.middleName.touched}\">\n                                <label for=\"exampleForm2\">Years of Experience</label><span style=\"color:red;\">*</span>\n                                <select class=\"custom-select\" id=\"inputGroupSelect04\" aria-label=\"Example select with button addon\" formControlName=\"yearOfExp\" [(ngModel)]=\"adminPage.yearOfExp\">\n                  <option value=\"\">-Select-</option>\n                  <option value=\"3-5\">3-5 YEARS</option>\n                  <option value=\"6-10\">6-10 YEARS</option>\n                  <option value=\"11-15\">11-15 YEARS</option>\n                  <option value=\"16-20\">16-20 YEARS</option>\n                  <option value=\"21-25\">21-25 YEARS</option>\n                  <option value=\"26+\">26+ ABOVE</option>\n                </select>\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.yearOfExp.valid && basicMemberForm.controls.yearOfExp.touched\">\n                                    <div *ngIf=\"basicMemberForm.get('yearOfExp').hasError('required')\">You must select Years of Experience\n                                    </div>\n                                    <!-- <div *ngIf=\"basicMemberForm.get('yearOfExp').hasError('minlength')\">Last\n                                                        name must be 20 characters</div>\n                                                    <div *ngIf=\"basicMemberForm.get('yearOfExp').hasError('maxlength')\">Last\n                                                        name must be 20 characters</div> -->\n                                </div>\n                            </div>\n\n                            <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\" [ngClass]=\"{'has-error':!basicMemberForm.controls.ageGroup.valid && basicMemberForm.controls.ageGroup.touched}\">\n                                <label for=\"exampleForm2\">Age Group</label><span style=\"color:red;\"> *</span>\n                                <select class=\"custom-select\" id=\"inputGroupSelect04\" aria-label=\"Example select with button addon\" formControlName=\"ageGroup\" [(ngModel)]=\"adminPage.ageGroup\">\n                  <option value=\"\">-Select-</option>\n                  <option value=\"5-15\">5-15 YEARS</option>\n                  <option value=\"15-21\">15-21 YEARS</option>\n                  <option value=\"22-30\">22-30 YEARS</option>\n                  <option value=\"31-40\">31-40 YEARS</option>\n                  <option value=\"41-50\">41-50 YEARS</option>\n                  <option value=\"51-60\">51-60 YEARS</option>\n                  <option value=\"61-70\">61-70 YEARS</option>\n                  <option value=\"70+\">70+ YEARS</option>\n                </select>\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.ageGroup.valid && basicMemberForm.controls.ageGroup.touched\">\n                                    <div *ngIf=\"basicMemberForm.get('ageGroup').hasError('required')\">You must select Age Group</div>\n                                    <!-- <div *ngIf=\"basicMemberForm.get('ageGroup').hasError('minlength')\">Last name\n                                                        must be 20 characters</div>\n                                                    <div *ngIf=\"basicMemberForm.get('ageGroup').hasError('maxlength')\">Last name\n                                                        must be 20 characters</div> -->\n                                </div>\n                            </div>\n\n                            <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\" [ngClass]=\"{'has-error':!basicMemberForm.controls.gender.valid && basicMemberForm.controls.gender.touched}\">\n\n                                <label for=\"exampleForm2\">Select Gender</label><span style=\"color:red;\"> *</span>\n                                <select class=\"custom-select\" id=\"inputGroupSelect04\" aria-label=\"Example select with button addon\" formControlName=\"gender\" [(ngModel)]=\"adminPage.gender\">\n                  <option value=\"\">-Select-</option>\n                  <option value=\"Male\">Male</option>\n                  <option value=\"Female\">Female</option>\n                  <option value=\"Others\">Others</option>\n                </select>\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.gender.valid && basicMemberForm.controls.gender.touched\">\n                                    <div *ngIf=\"basicMemberForm.get('gender').hasError('required')\">You must select Gender\n                                    </div>\n                                    <!-- <div *ngIf=\"basicMemberForm.get('gender').hasError('minlength')\">Last name must\n                                                    be 20 characters</div>\n                                                <div *ngIf=\"basicMemberForm.get('gender').hasError('maxlength')\">Last name must\n                                                    be 20 characters</div> -->\n                                </div>\n                            </div>\n\n\n                            <div class=\"col-md-3\" [ngClass]=\"{'has-error':!basicMemberForm.controls.profession.valid && basicMemberForm.controls.profession.touched}\">\n                                <label for=\"exampleForm2\">{{adminPage.ProfessionService}}</label><span style=\"color:red;\"> *</span>\n                                <angular2-multiselect [data]=\"proffessionList\" formControlName=\"profession\" [(ngModel)]=\"selectedproffession\" [settings]=\"proffessionSettings\" (onSelect)=\"onproffessionSelect($event)\" (onDeSelect)=\"onproffessionDeSelect($event)\" (onSelectAll)=\"onproffessionSelectAll($event)\"\n                                    (onDeSelectAll)=\"onproffessionDeSelectAll($event)\">\n                                </angular2-multiselect>\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.profession.valid && basicMemberForm.controls.profession.touched\">\n                                    <div *ngIf=\"basicMemberForm.get('profession').hasError('required')\">You must Select {{adminPage.ProfessionService}}\n                                    </div>\n                                    <!-- <div *ngIf=\"basicMemberForm.get('profession').hasError('minlength')\">Last name must be\n                                            20 characters</div>\n                                        <div *ngIf=\"basicMemberForm.get('profession').hasError('maxlength')\">Last name must be\n                                            20 characters</div> -->\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\" [ngClass]=\"{'has-error':!basicMemberForm.controls.otherskills.valid && basicMemberForm.controls.otherskills.touched}\">\n                                <label for=\"exampleForm2\">{{adminPage.OtherSkillsOtherServices}}&nbsp;&nbsp;(max\n                  8)</label>\n                                <angular2-multiselect [data]=\"otherSkillList\" formControlName=\"otherskills\" [(ngModel)]=\"selectedotherSkill\" [settings]=\"otherSkillSettings\" (onSelect)=\"onotherSkillSelect($event)\" (onDeSelect)=\"onotherSkillDeSelect($event)\" (onSelectAll)=\"onotherSkillSelectAll($event)\"\n                                    (onDeSelectAll)=\"onotherSkillDeSelectAll($event)\" (onGroupSelect)=\"onotherSkillGroupSelect($event)\" (onGroupDeSelect)=\"onotherSkillGroupDeSelect($event)\" >\n                                </angular2-multiselect>\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.otherskills.valid && basicMemberForm.controls.otherskills.touched\">\n                                    <div *ngIf=\"basicMemberForm.get('otherskills').hasError('required')\">You must select {{adminPage.OtherSkillsOtherServices}}\n                                    </div>\n                                    <!-- <div *ngIf=\"basicMemberForm.get('otherskills').hasError('minlength')\">Last name must be\n                                            20 characters</div>\n                                        <div *ngIf=\"basicMemberForm.get('otherskills').hasError('maxlength')\">Last name must be\n                                            20 characters</div> -->\n                                </div>\n                                <div  *ngIf=\"selectedotherSkill\"><span class=\"alert alert-danger\" role=\"alert\" *ngIf=\"selectedotherSkill.length > 8\">You must select only 8 skills</span> </div>\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col-md-3\" [ngClass]=\"{'has-error':!basicMemberForm.controls.address.valid && basicMemberForm.controls.address.touched}\">\n                                <label for=\"exampleForm2\">Address</label><span style=\"color:red;\"> *</span>\n                                <textarea [(ngModel)]=\"adminPage.address\" formControlName=\"address\" name=\"address\" class=\"form-control\" maxlength=\"101\"></textarea>\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.address.valid && basicMemberForm.controls.address.touched\">\n                                    <div *ngIf=\"basicMemberForm.get('address').hasError('required')\">You must enter Address\n                                    </div>\n                                    <div *ngIf=\"basicMemberForm.get('address').hasError('minlength')\">Address must be 5 characters\n                                    </div>\n                                    <div *ngIf=\"basicMemberForm.get('address').hasError('maxlength')\">Address must be 100 characters\n                                    </div>\n                                    <div *ngIf=\"basicMemberForm.get('address').hasError('pattern')\">Please enter valid Address\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\" style=\"margin-top: 25px;\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-4\">\n                                        <div class=\"custom-control custom-radio\">\n                                            <input type=\"radio\" class=\"custom-control-input\" id=\"addressVisibilitypubc\" name=\"addressVisibility\" formControlName=\"addressVisibility\" value=\"1\" [(ngModel)]=\"adminPage.addressVisibility\">\n                                            <label class=\"custom-control-label\" for=\"addressVisibilitypubc\">Public</label>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-4\">\n                                        <div class=\"custom-control custom-radio\">\n                                            <input type=\"radio\" class=\"custom-control-input\" id=\"addressVisibilityhiden\" name=\"addressVisibility\" formControlName=\"addressVisibility\" value=\"0\" [(ngModel)]=\"adminPage.addressVisibility\">\n                                            <label class=\"custom-control-label\" for=\"addressVisibilityhiden\">Hidden</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <div class=\"col-md-3\" [ngClass]=\"{'has-error':!basicMemberForm.controls.state.valid && basicMemberForm.controls.state.touched}\">\n                                <label for=\"exampleForm2\">State</label><span style=\"color:red;\"> *</span>\n                                <angular2-multiselect [data]=\"statenameList\" formControlName=\"state\" [(ngModel)]=\"selectedstatename\" [settings]=\"statenameSettings\" (onSelect)=\"statenameSelect($event)\" (onDeSelect)=\"statenameDeSelect($event)\" (onSelectAll)=\"statenameSelectAll($event)\"\n                                    (onDeSelectAll)=\"statenameDeSelectAll($event)\">\n                                </angular2-multiselect>\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.state.valid && basicMemberForm.controls.state.touched\">\n                                    <div *ngIf=\"basicMemberForm.get('state').hasError('required')\">You must select State\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\" [ngClass]=\"{'has-error':!basicMemberForm.controls.city.valid && basicMemberForm.controls.city.touched}\">\n                                <label for=\"exampleForm2\">City</label><span style=\"color:red;\"> *</span>\n                                <angular2-multiselect [data]=\"cityList\" formControlName=\"city\" [(ngModel)]=\"selectedcity\" [settings]=\"citySettings\" (onSelect)=\"oncitySelect($event)\" (onDeSelect)=\"oncityDeSelect($event)\" (onSelectAll)=\"oncitySelectAll($event)\" (onDeSelectAll)=\"oncityDeSelectAll($event)\">\n                                </angular2-multiselect>\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.city.valid && basicMemberForm.controls.city.touched\">\n                                    <div *ngIf=\"basicMemberForm.get('city').hasError('required')\">You must select City\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\" [ngClass]=\"{'has-error':!basicMemberForm.controls.mobile.valid && basicMemberForm.controls.mobile.touched}\">\n                                <label for=\"exampleForm2\">Contact Number</label><span style=\"color:red;\"> *</span>\n                                <input type=\"text\" name=\"contactno\" class=\"form-control\" formControlName=\"mobile\" maxlength=\"10\" [(ngModel)]=\"adminPage.mobile\">\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.mobile.valid && basicMemberForm.controls.mobile.touched\">\n                                    <div *ngIf=\"basicMemberForm.get('mobile').hasError('required')\">You must enter Contact Number</div>\n                                    <div *ngIf=\"basicMemberForm.get('mobile').hasError('minlength')\">Contact Number must be 10 digits\n                                    </div>\n                                    <div *ngIf=\"basicMemberForm.get('mobile').hasError('maxlength')\">Contact Number must be 10 digits\n                                    </div>\n                                    <div *ngIf=\"basicMemberForm.get('mobile').hasError('pattern')\">Please enter valid Contact Number</div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\" style=\"margin-top: 25px;\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-4\">\n                                        <div class=\"custom-control custom-radio\">\n                                            <input type=\"radio\" class=\"custom-control-input\" id=\"mobileVisibilitypub\" formControlName=\"mobileVisibility\" name=\"mobileVisibility\" value=\"1\" [(ngModel)]=\"adminPage.mobileVisibility\">\n                                            <label class=\"custom-control-label\" for=\"mobileVisibilitypub\">Public</label>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-4\">\n                                        <div class=\"custom-control custom-radio\">\n                                            <input type=\"radio\" class=\"custom-control-input\" id=\"mobileVisibilityhid\" name=\"mobileVisibility\" formControlName=\"mobileVisibility\" value=\"0\" [(ngModel)]=\"adminPage.mobileVisibility\">\n                                            <label class=\"custom-control-label\" for=\"mobileVisibilityhid\">Hidden</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\" [ngClass]=\"{'has-error':!basicMemberForm.controls.email.valid && basicMemberForm.controls.email.touched}\">\n                                <label for=\"exampleForm2\">Email ID</label>\n                                <input type=\"text\" [(ngModel)]=\"adminPage.email\" formControlName=\"email\" name=\"emailId\" class=\"form-control\">\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.email.valid && basicMemberForm.controls.email.touched\">\n                                    <div *ngIf=\"basicMemberForm.get('email').hasError('required')\">You must enter Email ID\n                                    </div>\n                                    <div *ngIf=\"basicMemberForm.get('email').hasError('minlength')\">Email ID must be 5 characters\n                                    </div>\n                                    <div *ngIf=\"basicMemberForm.get('email').hasError('maxlength')\">Email ID must be 60 characters\n                                    </div>\n                                    <!-- <div *ngIf=\"basicMemberForm.get('email').hasError('pattern')\">Please enter valid Email ID</div> -->\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\" style=\"margin-top: 25px;\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-4\">\n                                        <div class=\"custom-control custom-radio\">\n                                            <input type=\"radio\" class=\"custom-control-input\" id=\"emailVisibilitypubl\" name=\"emailVisibility\" value=\"1\" formControlName=\"emailVisibility\" [(ngModel)]=\"adminPage.emailVisibility\">\n                                            <label class=\"custom-control-label\" for=\"emailVisibilitypubl\">Public</label>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-4\">\n                                        <div class=\"custom-control custom-radio\">\n                                            <input type=\"radio\" class=\"custom-control-input\" id=\"emailVisibilityhidd\" name=\"emailVisibility\" value=\"0\" formControlName=\"emailVisibility\" [(ngModel)]=\"adminPage.emailVisibility\">\n                                            <label class=\"custom-control-label\" for=\"emailVisibilityhidd\">Hidden</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-12\" [ngClass]=\"{'has-error':!basicMemberForm.controls.instructionByMember.valid && basicMemberForm.controls.instructionByMember.touched}\">\n                                <label for=\"exampleForm2\">Instructions to Admin</label>&nbsp;&nbsp;\n                                <!-- <em>({{ 1200 - adminPage.instructionByMember.length }} characters left)</em> -->\n                                <textarea formControlName=\"instructionByMember\" [(ngModel)]=\"adminPage.instructionByMember\" name=\"instructionByMember\" id=\"instructionByMember\" class=\"form-control\" placeholder=\"Eg: Do not Share My Contact Number with Anyone\"></textarea>\n                                <p>For Kannada, visit the this link <a href=\"http://www.quillpad.in/index.html#.XjKlZmkzZPY\" target=\"blank\" style=\"font-weight: bold;color: #0000ae;\">&nbsp;ಕನ್ನಡ </a> , then type and copy the content and paste it in the above\n                                    feild .</p>\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.instructionByMember.valid && basicMemberForm.controls.instructionByMember.touched\">\n                                    <div *ngIf=\"basicMemberForm.get('instructionByMember').hasError('maxlength')\">\n                                        Instructions By Member must be 1200 characters\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-3\">\n                                <label>Referred By</label>\n                                <angular2-multiselect [data]=\"memberList\" formControlName=\"MemberName\" [settings]=\"memberNewsSettings\" (onSelect)=\"selectedMemId($event)\">\n                                    <c-search>\n                                        <ng-template>\n                                            <input type=\"text\" (keyup)=\"getReferedMemberList($event)\" placeholder=\"Search Members\" style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                                        </ng-template>\n                                    </c-search>\n\n                                    <c-item>\n                                        <ng-template let-item=\"item\">\n                                            <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                                            <label style=\"font-size: 85%;font-weight: 500;\">{{item.itemName | slice:0:15}}</label>\n                                        </ng-template>\n                                    </c-item>\n                                </angular2-multiselect>\n                            </div>\n                        </div>\n                        <div class=\"row\" style=\"margin-top: 2%;\" *ngIf=\"adminPage.individualInstitute == 'Individual'\">\n                            <div class=\"col-md-3\">\n                                <img [src]=\"croppedImage\" onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height:230px;width: 170px;\">\n                                <div class=\"upload-btn-wrapper\">\n                                    <button class=\"btn1\" style=\"margin-top: 2%;\">Upload Photo</button>\n                                    <input type=\"file\" id=\"propic\" name=\"propic\" (change)=\"fileChangeEvent($event)\" accept=\".jpg,.jpeg,.png\">\n                                    <input type=\"hidden\" name=\"fileHidden\" formControlName=\"profileImage\" />\n                                </div>\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.profileImage.valid && basicMemberForm.controls.profileImage.touched\">\n                                    <div *ngIf=\"basicMemberForm.get('profileImage').hasError('required')\">\n                                        You must select Profile Picture\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent\" [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\" (imageCropped)=\"imageCropped($event)\" (imageLoaded)=\"imageLoaded()\" (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                                    onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height:  230px;width: 170px;\">\n                                </image-cropper>\n                            </div>\n                        </div>\n                        <div class=\"row\" style=\"margin-top: 2%;\" *ngIf=\"adminPage.individualInstitute == 'Institute'\">\n                            <div class=\"col-md-3\">\n                                <img [src]=\"croppedImage\" onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 148px;width: 268px;\">\n                                <div class=\"upload-btn-wrapper\">\n                                    <button class=\"btn1\" style=\"margin-top: 2%;\">Upload Photo</button>\n                                    <input type=\"file\" id=\"propic\" name=\"propic\" (change)=\"fileChangeEvent($event)\" accept=\".jpg,.jpeg,.png\">\n                                    <input type=\"hidden\" name=\"fileHidden\" formControlName=\"profileImage\" />\n                                </div>\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!basicMemberForm.controls.profileImage.valid && basicMemberForm.controls.profileImage.touched\">\n                                    <div *ngIf=\"basicMemberForm.get('profileImage').hasError('required')\">\n                                        You must select Profile Picture\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent\" [maintainAspectRatio]=\"true\" [aspectRatio]=\"4/3\" format=\"jpeg\" (imageCropped)=\"imageCropped($event)\" (imageLoaded)=\"imageLoaded()\" (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                                    onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height:  230px;width: 170px;\">\n                                </image-cropper>\n                            </div>\n                        </div>\n\n                        <!-- <div class=\"col-md-12 input-position text-center\" *ngIf=\"payButtonDivHide\" style=\"padding: 10%;\"> -->\n                        <div class=\"col-md-12 input-position text-center\" style=\"padding: 10%;\">\n                            <!-- <button type=\"button\" class=\"btn btn-success\" style=\"margin-top: 6%;\" (click)=\"submitBasicDetails()\">Submit</button>&nbsp;&nbsp; -->\n                            <!-- <button type=\"button\" class=\"btn btn-primary\" style=\"margin-top: 6%;color: #fff\" (click)=\"claerBasicForm();\">Clear</button> -->\n\n                            <div>\n                                <!-- <span>Payable Amount : &#8377; {{memberTypeData.fresherAmount}}</span>&nbsp;&nbsp; -->\n                                <button type=\"button\" class=\"btn btn-success\" (click)=\"payCharges()\">Pay &nbsp;&#8377;\n                  {{memberTypeData.fresherAmount}} /- & Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n\n            <div class=\"card\" style=\"margin-top: 1%;\" *ngIf=\"(adminPage.refMembershipTypeId == '2' || adminPage.refMembershipTypeId == '3') && showProfileMemberShip\">\n                <div class=\"card-header\">\n                    PROFILE PAGE\n                </div>\n                <div class=\"card-body\">\n                    <form novalidate [formGroup]=\"profileMemberForm\" class=\"form-horizontal\">\n                        <div class=\"row\">\n                            <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\" [ngClass]=\"{'has-error':!profileMemberForm.controls.qualification.valid && profileMemberForm.controls.qualification.touched}\">\n                                <label for=\"exampleForm2\">Qualification</label><span style=\"color:red;\"> *</span>\n                                <input type=\"text\" name=\"qualification\" class=\"form-control\" formControlName=\"qualification\" [(ngModel)]=\"profileMember.qualification\">\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!profileMemberForm.controls.qualification.valid && profileMemberForm.controls.qualification.touched\">\n                                    <div *ngIf=\"profileMemberForm.get('qualification').hasError('required')\">You must enter Qualification\n                                    </div>\n                                    <div *ngIf=\"profileMemberForm.get('qualification').hasError('minlength')\">\n                                        Qualification must be 2 characters\n                                    </div>\n                                    <div *ngIf=\"profileMemberForm.get('qualification').hasError('maxlength')\">\n                                        Qualification must be 30 characters\n                                    </div>\n                                    <div *ngIf=\"profileMemberForm.get('qualification').hasError('pattern')\">Please enter valid Qualification\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\" [ngClass]=\"{'has-error':!profileMemberForm.controls.motherTounge.valid && profileMemberForm.controls.motherTounge.touched}\">\n                                <label for=\"exampleForm2\">Mother Tongue</label><span style=\"color:red;\"> *</span>\n                                <!-- <input type=\"text\" name=\"motherTounge\" class=\"form-control\"\n                                [(ngModel)]=\"profileMember.motherTounge\" formControlName=\"motherTounge\"> -->\n                                <angular2-multiselect [data]=\"motherToungeList\" [(ngModel)]=\"selectedmotherTounge\" formControlName=\"motherTounge\" [settings]=\"motherToungeSettings\" (onSelect)=\"motherToungeSelect($event)\" (onDeSelect)=\"motherToungeDeSelect($event)\" (onSelectAll)=\"motherToungeSelectAll($event)\"\n                                    (onDeSelectAll)=\"motherToungeDeSelectAll($event)\">\n                                </angular2-multiselect>\n\n\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!profileMemberForm.controls.motherTounge.valid && profileMemberForm.controls.motherTounge.touched\">\n                                    <div *ngIf=\"profileMemberForm.get('motherTounge').hasError('required')\">You must select mother Tounge\n                                    </div>\n                                    <!-- <div *ngIf=\"profileMemberForm.get('motherTounge').hasError('minlength')\">mother Tounge must be 3 characters</div>\n                                <div *ngIf=\"profileMemberForm.get('motherTounge').hasError('maxlength')\">mother Tounge must be 30 characters</div>\n                                <div *ngIf=\"profileMemberForm.get('motherTounge').hasError('pattern')\">Please enter valid mother Tounge</div> -->\n\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\" [ngClass]=\"{'has-error':!profileMemberForm.controls.otherLanguages.valid && profileMemberForm.controls.otherLanguages.touched}\">\n                                <label for=\"exampleForm2\">Other Languages</label>\n                                <angular2-multiselect [data]=\"otherLanguagesList\" [(ngModel)]=\"selectedotherLanguages\" formControlName=\"otherLanguages\" [settings]=\"otherLanguagesSettings\" (onSelect)=\"otherLanguagesSelect($event)\" (onDeSelect)=\"otherLanguagesDeSelect($event)\" (onSelectAll)=\"otherLanguagesSelectAll($event)\"\n                                    (onDeSelectAll)=\"otherLanguagesDeSelectAll($event)\">\n                                </angular2-multiselect>\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!profileMemberForm.controls.otherLanguages.valid && profileMemberForm.controls.otherLanguages.touched\">\n                                    <div *ngIf=\"profileMemberForm.get('otherLanguages').hasError('required')\">You must select other Languages\n                                    </div>\n                                    <!-- <div *ngIf=\"profileMemberForm.get('otherLanguages').hasError('minlength')\">mother Tounge must be 3 characters</div>\n                            <div *ngIf=\"profileMemberForm.get('otherLanguages').hasError('maxlength')\">mother Tounge must be 30 characters</div>\n                            <div *ngIf=\"profileMemberForm.get('otherLanguages').hasError('pattern')\">Please enter valid mother Tounge</div> -->\n\n                                </div>\n\n                            </div>\n                            <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\" [ngClass]=\"{'has-error':!profileMemberForm.controls.height.valid && profileMemberForm.controls.height.touched}\">\n                                <label for=\"exampleForm2\">Height</label>\n                                <input type=\"text\" name=\"height\" class=\"form-control\" [(ngModel)]=\"profileMember.height\" placeholder=\"5'12\" maxlength=\"5\" formControlName=\"height\">\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!profileMemberForm.controls.height.valid && profileMemberForm.controls.height.touched\">\n                                    <div *ngIf=\"profileMemberForm.get('height').hasError('required')\">You must enter height\n                                    </div>\n                                    <div *ngIf=\"profileMemberForm.get('height').hasError('minlength')\">height must be 4 characters\n                                    </div>\n                                    <div *ngIf=\"profileMemberForm.get('height').hasError('maxlength')\">height must be 5 characters\n                                    </div>\n                                    <div *ngIf=\"profileMemberForm.get('height').hasError('pattern')\">Please enter valid height Eg: 5'12\" or 5'12\n                                    </div>\n\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\" [ngClass]=\"{'has-error':!profileMemberForm.controls.weight.valid && profileMemberForm.controls.weight.touched}\">\n                                <label for=\"exampleForm2\">Weight</label>\n                                <input type=\"text\" name=\"weight\" class=\"form-control\" [(ngModel)]=\"profileMember.weight\" formControlName=\"weight\" maxlength=\"3\">\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!profileMemberForm.controls.weight.valid && profileMemberForm.controls.weight.touched\">\n                                    <div *ngIf=\"profileMemberForm.get('weight').hasError('required')\">You must enter weight\n                                    </div>\n                                    <div *ngIf=\"profileMemberForm.get('weight').hasError('minlength')\">weight must be 3 characters\n                                    </div>\n                                    <div *ngIf=\"profileMemberForm.get('weight').hasError('maxlength')\">weight must be 30 characters\n                                    </div>\n                                    <div *ngIf=\"profileMemberForm.get('weight').hasError('pattern')\">Please enter valid weight Eg: 45 or 75\n                                    </div>\n\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\" [ngClass]=\"{'has-error':!profileMemberForm.controls.dob.valid && profileMemberForm.controls.dob.touched}\">\n                                <label for=\"exampleForm2\">Date of Birth</label><span style=\"color:red;\"> *</span>\n                                <!-- <input type=\"text\" class=\"form-control\" [(ngModel)]=\"profileMember.dob\" formControlName=\"dob\" placeholder=\"DD-MM\" maxlength=\"5\"> -->\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"profileMember.dob\" formControlName=\"dob\" name=\"dob\" placeholder=\"DD-MM\" maxlength=\"5\" (input)=\"AppendDate($event.target.value)\">\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!profileMemberForm.controls.dob.valid && profileMemberForm.controls.dob.touched\">\n                                    <div *ngIf=\"profileMemberForm.get('dob').hasError('required')\">You must enter Date of Birth</div>\n                                    <div *ngIf=\"profileMemberForm.get('dob').hasError('pattern')\">Please enter valid Date of Birth</div>\n                                </div>\n\n                            </div>\n                            <div class=\"col-md-3\" *ngIf=\"adminPage.individualInstitute == 'Individual'\" [ngClass]=\"{'has-error':!profileMemberForm.controls.birthPlace.valid && profileMemberForm.controls.birthPlace.touched}\">\n                                <label for=\"exampleForm2\">Birth Place</label><span style=\"color:red;\"> *</span>\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"profileMember.birthPlace\" formControlName=\"birthPlace\">\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!profileMemberForm.controls.birthPlace.valid && profileMemberForm.controls.birthPlace.touched\">\n                                    <div *ngIf=\"profileMemberForm.get('birthPlace').hasError('required')\">You must enter birth Place</div>\n                                    <div *ngIf=\"profileMemberForm.get('birthPlace').hasError('minlength')\">birth Place must be 3 characters\n                                    </div>\n                                    <div *ngIf=\"profileMemberForm.get('birthPlace').hasError('maxlength')\">birth Place must be 30 characters\n                                    </div>\n                                    <div *ngIf=\"profileMemberForm.get('birthPlace').hasError('pattern')\">Please enter valid birth Place\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\" [ngClass]=\"{'has-error':!profileMemberForm.controls.nationality.valid && profileMemberForm.controls.nationality.touched}\">\n                                <label for=\"exampleForm2\">Nationality</label><span style=\"color:red;\"> *</span>\n                                <angular2-multiselect [data]=\"nationList\" [(ngModel)]=\"selectednation\" [settings]=\"nationSettings\" (onSelect)=\"nationnameSelect($event)\" (onDeSelect)=\"nationnameDeSelect($event)\" (onSelectAll)=\"nationnameSelectAll($event)\" (onDeSelectAll)=\"nationnameDeSelectAll($event)\"\n                                    formControlName=\"nationality\">\n                                </angular2-multiselect>\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!profileMemberForm.controls.nationality.valid && profileMemberForm.controls.nationality.touched\">\n                                    <div *ngIf=\"profileMemberForm.get('nationality').hasError('required')\">You must select Nationality\n                                    </div>\n                                    <!-- <div *ngIf=\"profileMemberForm.get('nationality').hasError('minlength')\">Nationality must be 3 characters</div>\n                                    <div *ngIf=\"profileMemberForm.get('nationality').hasError('maxlength')\">Nationality must be 30 characters</div>\n                                    <div *ngIf=\"profileMemberForm.get('nationality').hasError('pattern')\">Please enter valid Nationality</div> -->\n                                </div>\n                            </div>\n                            <div class=\"col-md-12\" [ngClass]=\"{'has-error':!profileMemberForm.controls.description.valid && profileMemberForm.controls.description.touched}\">\n                                <label for=\"exampleForm2\">Description (in short)</label><span style=\"color:red;\">\n                  *</span><em>({{ 600- profileMember.description.length }} characters left)</em>\n                                <textarea class=\"form-control\" rows=\"2\" [(ngModel)]=\"profileMember.description\" formControlName=\"description\"></textarea>\n                                <p>For Kannada, visit the this link <a href=\"http://www.quillpad.in/index.html#.XjKlZmkzZPY\" target=\"blank\" style=\"font-weight: bold;color: #0000ae;\">&nbsp;ಕನ್ನಡ </a> ,then type and copy the content and paste it in the above\n                                    feild .</p>\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!profileMemberForm.controls.description.valid && profileMemberForm.controls.description.touched\">\n                                    <div *ngIf=\"profileMemberForm.get('description').hasError('required')\">You must enter Description\n                                    </div>\n                                    <div *ngIf=\"profileMemberForm.get('description').hasError('minlength')\">Description must be atleast 30 characters\n                                    </div>\n                                    <div *ngIf=\"profileMemberForm.get('description').hasError('maxlength')\">Description must be less than 600 characters</div>\n                                    <div *ngIf=\"profileMemberForm.get('description').hasError('pattern')\">Please enter valid Description\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-12\" [ngClass]=\"{'has-error':!profileMemberForm.controls.aboutMe.valid && profileMemberForm.controls.aboutMe.touched}\" style=\"height: 5%\">\n                                <label for=\"exampleForm2\">About me</label><span style=\"color:red;\">\n                  *</span><em>({{ 25000 - profileMember.aboutMe.length }} characters left)</em>\n                                <!-- <textarea id=\"edit1\" [froalaEditor] [(froalaModel)]=\"profileMember.aboutMe\"></textarea> -->\n                                <!-- <textarea class=\"form-control\" rows=\"4\" [(ngModel)]=\"profileMember.aboutMe\" formControlName=\"aboutMe\"></textarea> -->\n                                <quill-editor rows=\"4\" [(ngModel)]=\"profileMember.aboutMe\" formControlName=\"aboutMe\">\n                                </quill-editor>\n                                <p>For Kannada, visit the this link <a href=\"http://www.quillpad.in/index.html#.XjKlZmkzZPY\" target=\"blank\" style=\"font-weight: bold;color: #0000ae;\">&nbsp;ಕನ್ನಡ </a> ,then type and and copy the content and paste it in the\n                                    above feild .</p>\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!profileMemberForm.controls.aboutMe.valid && profileMemberForm.controls.aboutMe.touched\">\n                                    <div *ngIf=\"profileMemberForm.get('aboutMe').hasError('required')\">You must enter About me</div>\n                                    <div *ngIf=\"profileMemberForm.get('aboutMe').hasError('minlength')\">About me must be atleast 30 characters\n                                    </div>\n                                    <div *ngIf=\"profileMemberForm.get('aboutMe').hasError('maxlength')\">About me must be less than 25,000 characters\n                                    </div>\n                                    <div *ngIf=\"profileMemberForm.get('aboutMe').hasError('pattern')\">Please enter valid About me</div>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n\n                            <div class=\"col-md-12\" [ngClass]=\"{'has-error':!profileMemberForm.controls.experience.valid && profileMemberForm.controls.experience.touched}\" style=\"height: 5%\">\n                                <label for=\"exampleForm2\">Experience</label><span style=\"color:red;\">\n                  *</span><em>({{ 25000 - profileMember.experience.length }} characters left)</em>\n                                <!-- <textarea id=\"edit\" [froalaEditor] [(froalaModel)]=\"profileMember.experience\"></textarea> -->\n                                <!-- <textarea class=\"form-control\" rows=\"4\" [(ngModel)]=\"profileMember.experience\" formControlName=\"experience\"></textarea> -->\n                                <quill-editor rows=\"4\" [(ngModel)]=\"profileMember.experience\" formControlName=\"experience\">\n                                </quill-editor>\n                                <p>For Kannada, visit the this link <a href=\"http://www.quillpad.in/index.html#.XjKlZmkzZPY\" target=\"blank\" style=\"font-weight: bold;color: #0000ae;\">&nbsp;ಕನ್ನಡ </a> , then type and copy the content and paste it in the above\n                                    feild .</p>\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!profileMemberForm.controls.experience.valid && profileMemberForm.controls.experience.touched\">\n                                    <div *ngIf=\"profileMemberForm.get('experience').hasError('required')\">You must enter Experience\n                                    </div>\n                                    <div *ngIf=\"profileMemberForm.get('experience').hasError('minlength')\">Experience must be atleast 30 characters\n                                    </div>\n                                    <div *ngIf=\"profileMemberForm.get('experience').hasError('maxlength')\">Experience must be less than 25,000 characters</div>\n                                    <div *ngIf=\"profileMemberForm.get('experience').hasError('pattern')\">Please enter valid Experience\n                                    </div>\n                                </div>\n\n                            </div>\n                            <div class=\"col-md-12\">\n                                <div formArrayName=\"otherOpenionRows\">\n                                    <label for=\"exampleForm2\">Others Opinion</label>\n                                    <div class=\"row\">\n                                        <div class=\"col-md-3\">\n                                            <label>Member Name</label>\n                                        </div>\n                                        <div class=\"col-md-6\">\n                                            <label>Members Opinion</label>\n                                        </div>\n                                        <div class=\"col-md-3\">\n                                            <label>Add/Remove</label>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"row\" *ngFor=\"let otherOpenionrow of getotherOpenionRows(profileMemberForm); let i=index\" [formGroupName]=\"i\">\n                                        <div class=\"col-md-3\">\n                                            <angular2-multiselect [data]=\"otherMemberList\" [(ngModel)]=\"selectedItems[i]\" formControlName=\"otherMemberName\" [settings]=\"otherMembersettings\">\n                                                <c-search>\n                                                    <ng-template>\n                                                        <input type=\"text\" (keyup)=\"GetOtherMemberList($event)\" placeholder=\"Search Members\" style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                                                    </ng-template>\n                                                </c-search>\n                                                <c-item>\n                                                    <ng-template let-item=\"item\">\n                                                        <img [src]=\"item.profileImage\" style=\"width: 30px; border: 1px solid #efefef;margin-right: 0px;\" />\n\n                                                        <label>{{item.itemName}}</label>\n                                                    </ng-template>\n                                                </c-item>\n                                            </angular2-multiselect>\n                                            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!profileMemberForm.controls.otherOpenionRows.controls[i].controls.otherMemberName.valid && profileMemberForm.controls.otherOpenionRows.controls[i].controls.otherMemberName.touched\">\n                                                <div *ngIf=\"profileMemberForm.controls.otherOpenionRows.controls[i].controls.otherMemberName.hasError('required')\">\n                                                    You must select Other Member</div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-md-6\">\n\n                                            <textarea formControlName=\"description\" name=\"description\" id=\"description\" class=\"form-control\" #description></textarea>\n                                            <em>({{ 1200- description.value.length }} characters left)</em>\n                                            <p>For Kannada, visit the this link <a href=\"http://www.quillpad.in/index.html#.XjKlZmkzZPY\" target=\"blank\" style=\"font-weight: bold;color: #0000ae;\">&nbsp;ಕನ್ನಡ </a> , then type and copy the content and paste\n                                                it in the above feild .</p>\n                                            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!profileMemberForm.controls.otherOpenionRows.controls[i].controls.description.valid && profileMemberForm.controls.otherOpenionRows.controls[i].controls.description.touched\">\n                                                <div *ngIf=\"profileMemberForm.controls.otherOpenionRows.controls[i].controls.description.hasError('minlength')\">\n                                                    Description must be 30 characters</div>\n                                                <div *ngIf=\"profileMemberForm.controls.otherOpenionRows.controls[i].controls.description.hasError('maxlength')\">\n                                                    Description must be 1200 characters</div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-md-3\">\n                                            <button type=\"button\" (click)=\"addNewotherOpenionRow()\" class=\"btn btn-primary addremovebtn\" *ngIf=\"profileMemberForm.controls.otherOpenionRows.controls.length < 5\">\n                        Add\n                      </button>&nbsp;&nbsp;\n                                            <button type=\"button\" (click)=\"deleteotherOpenionRow(i)\" class=\"btn btn-danger addremovebtn\" *ngIf=\"profileMemberForm.controls.otherOpenionRows.controls.length > 1\">\n                        Remove\n                      </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <label>Upload Profile Photos</label><span style=\"color:#ff0000;\">\n                                    *</span>\n                                <div class=\"row\">\n                                    <div class=\"col-md-12\">\n                                        <!-- <input type=\"file\" id=\"photo1 \" name=\"photo1 \" (change)=\"fileChangeEventProfile($event,1)\" [(ngModel)]=\"profileMember.ProfileimagePath1\" formControlName=\"ProfileimagePath1\"> -->\n                                        <div class=\"upload-btn-wrapper\">\n                                            <button class=\"btn2\">Upload Photo 1</button>\n                                            <input type=\"file\" id=\"photo1 \" name=\"photo1 \" (change)=\"fileChangeEventProfile($event,1)\" accept=\".jpg,.jpeg,.png\">\n                                            <input type=\"hidden\" name=\"ProfileimagePath1\"  [(ngModel)]=\"profileMember.ProfileimagePath1\" formControlName=\"ProfileimagePath1\" />\n                                        </div>\n                                        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!profileMemberForm.controls.ProfileimagePath1.valid && profileMemberForm.controls.ProfileimagePath1.touched\">\n                                            <div *ngIf=\"profileMemberForm.get('ProfileimagePath1').hasError('required')\">\n                                                You must select Profile image 1</div>\n                                            <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath1').hasError('minlength')\">Profile image 1 must be 3 characters</div>\n                                                    <div *ngIf=\"profileMemberForm.get('ProfileimagePath1').hasError('maxlength')\">Profile image 1 must be 30 characters</div>\n                                                    <div *ngIf=\"profileMemberForm.get('ProfileimagePath1').hasError('pattern')\">Please enter valid Profile image 1</div> -->\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-12\">\n                                        <div class=\"upload-btn-wrapper\">\n                                            <button class=\"btn2\">Upload Photo 2</button>\n                                            <input type=\"file\" id=\"photo2 \" name=\"photo2\" (change)=\"fileChangeEventProfile($event,2)\"\n                                             accept=\".jpg,.jpeg,.png\">\n                                            <input type=\"hidden\" name=\"ProfileimagePath2\"  [(ngModel)]=\"profileMember.ProfileimagePath2\" formControlName=\"ProfileimagePath2\" />\n                                        </div>\n                                        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!profileMemberForm.controls.ProfileimagePath2.valid && profileMemberForm.controls.ProfileimagePath2.touched\">\n                                            <div *ngIf=\"profileMemberForm.get('ProfileimagePath2').hasError('required')\">\n                                                You must select Profile image 2</div>\n                                            <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath2').hasError('minlength')\">Profile image 2 must be 3 characters</div>\n                                                    <div *ngIf=\"profileMemberForm.get('ProfileimagePath2').hasError('maxlength')\">Profile image 2 must be 30 characters</div>\n                                                    <div *ngIf=\"profileMemberForm.get('ProfileimagePath2').hasError('pattern')\">Please enter valid Profile image 2</div> -->\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-md-12\">\n                                        <div class=\"upload-btn-wrapper\">\n                                            <button class=\"btn2\">Upload Photo 3</button>\n                                            <input type=\"file\" id=\"photo3 \" name=\"photo3 \" (change)=\"fileChangeEventProfile($event,3) \"\n                                             accept=\".jpg,.jpeg,.png\">\n                                            <input type=\"hidden\" name=\"ProfileimagePath3\"  [(ngModel)]=\"profileMember.ProfileimagePath3\" formControlName=\"ProfileimagePath3\" />\n                                        </div>\n                                        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!profileMemberForm.controls.ProfileimagePath3.valid && profileMemberForm.controls.ProfileimagePath3.touched\">\n                                            <div *ngIf=\"profileMemberForm.get('ProfileimagePath3').hasError('required')\">\n                                                You must select Profile image 3</div>\n                                            <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath3').hasError('minlength')\">Profile image 3 must be 3 characters</div>\n                                                    <div *ngIf=\"profileMemberForm.get('ProfileimagePath3').hasError('maxlength')\">Profile image 3 must be 30 characters</div>\n                                                    <div *ngIf=\"profileMemberForm.get('ProfileimagePath3').hasError('pattern')\">Please enter valid Profile image 3</div> -->\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-12\">\n                                        <div class=\"upload-btn-wrapper\">\n                                            <button class=\"btn2\">Upload Photo 4</button>\n                                            <input type=\"file\" id=\"photo4 \" name=\"photo4 \" (change)=\"fileChangeEventProfile($event,4) \" \n                                             accept=\".jpg,.jpeg,.png\">\n                                            <input type=\"hidden\" name=\"ProfileimagePath4\" [(ngModel)]=\"profileMember.ProfileimagePath4\" formControlName=\"ProfileimagePath4\" />\n                                        </div>\n                                        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!profileMemberForm.controls.ProfileimagePath4.valid && profileMemberForm.controls.ProfileimagePath4.touched\">\n                                            <div *ngIf=\"profileMemberForm.get('ProfileimagePath4').hasError('required')\">\n                                                You must select Profile image 4</div>\n                                            <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath4').hasError('minlength')\">Profile image 4 must be 3 characters</div>\n                                                    <div *ngIf=\"profileMemberForm.get('ProfileimagePath4').hasError('maxlength')\">Profile image 4 must be 30 characters</div>\n                                                    <div *ngIf=\"profileMemberForm.get('ProfileimagePath4').hasError('pattern')\">Please enter valid Profile image 4</div> -->\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-md-12\">\n                                        <div class=\"upload-btn-wrapper\">\n                                            <button class=\"btn2\">Upload Photo 5</button>\n                                            <input type=\"file\" id=\"photo5 \" name=\"photo5 \" (change)=\"fileChangeEventProfile($event,5) \"\n                                             accept=\".jpg,.jpeg,.png\">\n                                            <input type=\"hidden\" name=\"ProfileimagePath5\"  [(ngModel)]=\"profileMember.ProfileimagePath5\" formControlName=\"ProfileimagePath5\" />\n                                        </div>\n                                        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!profileMemberForm.controls.ProfileimagePath5.valid && profileMemberForm.controls.ProfileimagePath5.touched\">\n                                            <div *ngIf=\"profileMemberForm.get('ProfileimagePath5').hasError('required')\">\n                                                You must select Profile image 5</div>\n                                            <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath5').hasError('minlength')\">Profile image 5 must be 3 characters</div>\n                                                    <div *ngIf=\"profileMemberForm.get('ProfileimagePath5').hasError('maxlength')\">Profile image 5 must be 30 characters</div>\n                                                    <div *ngIf=\"profileMemberForm.get('ProfileimagePath5').hasError('pattern')\">Please enter valid Profile image 5</div> -->\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-12\">\n                                        <div class=\"upload-btn-wrapper\">\n                                            <button class=\"btn2\">Upload Photo 6</button>\n                                            <input type=\"file\" id=\"photo6 \" name=\"photo6 \" (change)=\"fileChangeEventProfile($event,6) \" \n                                             accept=\".jpg,.jpeg,.png\">\n                                            <input type=\"hidden\" name=\"ProfileimagePath6\" [(ngModel)]=\"profileMember.ProfileimagePath6\" formControlName=\"ProfileimagePath6\" />\n                                        </div>\n                                        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!profileMemberForm.controls.ProfileimagePath6.valid && profileMemberForm.controls.ProfileimagePath6.touched\">\n                                            <div *ngIf=\"profileMemberForm.get('ProfileimagePath6').hasError('required')\">\n                                                You must select Profile image 6</div>\n                                            <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath6').hasError('minlength')\">Profile image 6 must be 3 characters</div>\n                                                    <div *ngIf=\"profileMemberForm.get('ProfileimagePath6').hasError('maxlength')\">Profile image 6 must be 30 characters</div>\n                                                    <div *ngIf=\"profileMemberForm.get('ProfileimagePath6').hasError('pattern')\">Please enter valid Profile image 6</div> -->\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-md-12\">\n                                        <div class=\"upload-btn-wrapper\">\n                                            <button class=\"btn2\">Upload Photo 7</button>\n                                            <input type=\"file\" id=\"photo7 \" name=\"photo7 \" (change)=\"fileChangeEventProfile($event,7) \" \n                                             accept=\".jpg,.jpeg,.png\">\n                                            <input type=\"hidden\" name=\"ProfileimagePath7\" [(ngModel)]=\"profileMember.ProfileimagePath7\" formControlName=\"ProfileimagePath7\" />\n                                        </div>\n                                        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!profileMemberForm.controls.ProfileimagePath7.valid && profileMemberForm.controls.ProfileimagePath7.touched\">\n                                            <div *ngIf=\"profileMemberForm.get('ProfileimagePath7').hasError('required')\">\n                                                You must select Profile image 7</div>\n                                            <!-- <div *ngIf=\"profileMemberForm.get('ProfileimagePath7').hasError('minlength')\">Profile image 7 must be 3 characters</div>\n                                                    <div *ngIf=\"profileMemberForm.get('ProfileimagePath7').hasError('maxlength')\">Profile image 7 must be 30 characters</div>\n                                                    <div *ngIf=\"profileMemberForm.get('ProfileimagePath7').hasError('pattern')\">Please enter valid Profile image 7</div> -->\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <span *ngIf=\"imageChangedEvent1Profile !=''\">\n                  <image-cropper id=\"ImagecropperProfile1\" [imageChangedEvent]=\"imageChangedEvent1Profile\"\n                    [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                    (imageCropped)=\"imageCroppedProfile($event,1)\" (imageLoaded)=\"imageLoadedProfile()\"\n                    (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                    onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                  </image-cropper>\n                </span>\n                                <span *ngIf=\"imageChangedEvent2Profile !=''\">\n                  <image-cropper id=\"ImagecropperProfile2\" [imageChangedEvent]=\"imageChangedEvent2Profile\"\n                    [maintainAspectRatio]=\"true\" [aspectRatio]=\"6/4\" format=\"jpeg\"\n                    (imageCropped)=\"imageCroppedProfile($event,2)\" (imageLoaded)=\"imageLoadedProfile()\"\n                    (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                    onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                  </image-cropper>\n                </span>\n                                <span *ngIf=\"imageChangedEvent3Profile !=''\">\n                  <image-cropper id=\"ImagecropperProfile3\" [imageChangedEvent]=\"imageChangedEvent3Profile\"\n                    [maintainAspectRatio]=\"true\" [aspectRatio]=\"6/4\" format=\"jpeg\"\n                    (imageCropped)=\"imageCroppedProfile($event,3)\" (imageLoaded)=\"imageLoadedProfile()\"\n                    (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                    onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                  </image-cropper>\n                </span>\n                                <span *ngIf=\"imageChangedEvent4Profile !=''\">\n                  <image-cropper id=\"ImagecropperProfile4\" [imageChangedEvent]=\"imageChangedEvent4Profile\"\n                    [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                    (imageCropped)=\"imageCroppedProfile($event,4)\" (imageLoaded)=\"imageLoadedProfile()\"\n                    (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                    onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                  </image-cropper>\n                </span>\n                                <span *ngIf=\"imageChangedEvent5Profile !=''\">\n                  <image-cropper id=\"ImagecropperProfile5\" [imageChangedEvent]=\"imageChangedEvent5Profile\"\n                    [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                    (imageCropped)=\"imageCroppedProfile($event,5)\" (imageLoaded)=\"imageLoadedProfile()\"\n                    (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                    onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                  </image-cropper>\n                </span>\n                                <span *ngIf=\"imageChangedEvent6Profile !=''\">\n                  <image-cropper id=\"ImagecropperProfile6\" [imageChangedEvent]=\"imageChangedEvent6Profile\"\n                    [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                    (imageCropped)=\"imageCroppedProfile($event,6)\" (imageLoaded)=\"imageLoadedProfile()\"\n                    (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                    onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                  </image-cropper>\n                </span>\n                                <span *ngIf=\"imageChangedEvent7Profile !=''\">\n                  <image-cropper id=\"ImagecropperProfile7\" [imageChangedEvent]=\"imageChangedEvent7Profile\"\n                    [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                    (imageCropped)=\"imageCroppedProfile($event,7)\" (imageLoaded)=\"imageLoadedProfile()\"\n                    (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                    onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                  </image-cropper>\n                </span>\n                            </div>\n                            <div class=\"col-md-7\">\n                                <label>Photos previews</label>\n                                <div class=\"row\">\n                                    <div class=\"col-md-4\">\n                                        <img [src]=\"url1\" class=\"pro1pic\" onerror=\"this.src='../../../assets/images/avtaar/1.jpg';\">\n                                    </div>\n                                    <div class=\"col-md-8\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md-6\">\n                                                <img class=\"pro2pic\" [src]=\"url2\" onerror=\"this.src='../../../assets/images/avtaar/2.jpg';\">\n                                            </div>\n                                            <div class=\"col-md-6\">\n                                                <img class=\"pro2pic\" [src]=\"url3\" onerror=\"this.src='../../../assets/images/avtaar/3.jpg';\">\n                                            </div>\n                                        </div>\n                                        <div class=\"row\">\n                                            <div class=\"col-md-3\">\n                                                <img class=\"pro3pic\" [src]=\"url4\" onerror=\"this.src='../../../assets/images/avtaar/4.jpg';\">\n                                            </div>\n                                            <div class=\"col-md-3\">\n                                                <img class=\"pro3pic\" [src]=\"url5\" onerror=\"this.src='../../../assets/images/avtaar/5.jpg';\">\n                                            </div>\n                                            <div class=\"col-md-3\">\n                                                <img class=\"pro3pic\" [src]=\"url6\" onerror=\"this.src='../../../assets/images/avtaar/6.jpg';\">\n                                            </div>\n                                            <div class=\"col-md-3\">\n                                                <img class=\"pro3pic\" [src]=\"url7\" onerror=\"this.src='../../../assets/images/avtaar/7.jpg';\">\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <!-- <input type=\"text \" [(ngModel)]=\"profileMember.refMemberId\"> -->\n                            <div class=\"col-md-12\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-3 \">\n                                        <button type=\"button \" class=\"btn btn-success \" style=\"margin-top: 6%; display: none;\" (click)=\"submitProfile()\">Submit</button>&nbsp;&nbsp;\n                                        <!-- <button type=\"button\" class=\"btn btn-primary\" style=\"margin-top: 6%;color: #fff\" (click)=\"claerProfileForm();\">Clear</button>&nbsp;&nbsp; -->\n                                        <!--<button type=\"button\" class=\"btn btn-danger\" style=\"margin-top: 6%;color: #fff\">Close</button> -->\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n            <div class=\"card \" style=\"margin-top: 1%; \" *ngIf=\"adminPage.refMembershipTypeId == '3' && showProfileMemberShip\">\n                <div class=\"card-header \">\n                    MY WEB PAGE\n                </div>\n                <div class=\"card-body \">\n                    <form novalidate [formGroup]=\"premiumMemberForm\" class=\"form-horizontal\">\n                        <div class=\"row \">\n                            <div class=\"col-md-4\">\n                                <p>Do you want to keep this Web page as</p>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <div class=\"custom-control custom-radio\">\n                                    <input type=\"radio\" class=\"custom-control-input\" name=\"webPrivatePublicFlag\" formControlName=\"webPrivatePublicFlag\" id=\"public\" value=\"1\" [(ngModel)]=\"premiumProfile.webPrivatePublicFlag\">\n                                    <label class=\"custom-control-label\" for=\"public\">Public</label>\n                                </div>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <div class=\"custom-control custom-radio\">\n                                    <input type=\"radio\" class=\"custom-control-input\" name=\"webPrivatePublicFlag\" formControlName=\"webPrivatePublicFlag\" id=\"private\" value=\"0\" [(ngModel)]=\"premiumProfile.webPrivatePublicFlag\">\n                                    <label class=\"custom-control-label\" for=\"private\">Private</label>\n                                </div>\n                            </div>\n\n                            <div class=\"col-md-4\"></div>\n                            <div class=\"col-md-3\">\n                                <label for=\"exampleForm2\">Web Page Profile HD Photo</label><span style=\"color:red;\">*</span>\n                                <img [src]=\"croppedhdphoto\" onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 148px;width: 268px;\">\n                                <div class=\"upload-btn-wrapper\">\n                                    <button class=\"btn1\" style=\"margin-top: 2%;\">Upload HD Photo</button>\n                                    <input type=\"file\" id=\"mainPhotoPath\" name=\"mainPhotoPath\" (change)=\"hdPhotoApply($event)\">\n                                    <input type=\"hidden\" name=\"mainPhotoPathHidden\" formControlName=\"mainPhotoPath\" />\n                                </div>\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!premiumMemberForm.controls.mainPhotoPath.valid && premiumMemberForm.controls.mainPhotoPath.touched\">\n                                    <div *ngIf=\"premiumMemberForm.get('mainPhotoPath').hasError('required')\">You must select Main Photo\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"hdimageChangedEvent\" [maintainAspectRatio]=\"true\" [aspectRatio]=\"2/1\" format=\"jpeg\" (imageCropped)=\"hdimageCropped($event)\" (imageLoaded)=\"hdimageLoaded()\" (cropperReady)=\"hdcropperReady()\" (loadImageFailed)=\"hdloadImageFailed()\"\n                                    onerror=\"this.src='../../../assets/images/avtaar/no.jpg';\" style=\"height: 230px; width: 170px; margin: 11% 5%;\">\n                                </image-cropper>\n                            </div>\n                            <div class=\"col-md-6\"></div>\n                            <div class=\"col-md-3\">\n                                <!--  <button type=\"button \" class=\"btn btn-success\" style=\"margin-top: 6%;\"\n                    (click)=\"submitPremiumProfile()\">Submit</button>&nbsp;&nbsp; -->\n                                <button type=\"button \" class=\"btn btn-success\" style=\"margin-top: 6%;\" (click)=\"submitallDataOneShot()\">Submit</button>&nbsp;&nbsp;\n                                <!-- <button type=\"button\" class=\"btn btn-primary\" style=\"margin-top: 6%;color: #fff\" (click)=\"claerWebPageForm();\">Clear</button>&nbsp;&nbsp; -->\n                                <!--<button type=\"button\" class=\"btn btn-danger\" style=\"margin-top: 6%;color: #fff\">Close</button> -->\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- <script>\n    $(document).ready(function() {\n        $('#example').DataTable();\n        // Basic\n        $('.dropify').dropify();\n        // Translated\n        $('.dropify-fr').dropify({\n            messages: {\n                default: 'Glissez-déposez un fichier ici ou cliquez',\n                replace: 'Glissez-déposez un fichier ou cliquez pour remplacer',\n                remove: 'Supprimer',\n                error: 'Désolé, le fichier trop volumineux'\n            }\n        });\n\n        // Used events\n        var drEvent = $('#input-file-events').dropify();\n\n        drEvent.on('dropify.beforeClear', function(event, element) {\n            return confirm(\"Do you really want to delete \\\"\" + element.file.name + \"\\\" ?\");\n        });\n\n        drEvent.on('dropify.afterClear', function(event, element) {\n            alert('File deleted');\n        });\n\n        drEvent.on('dropify.errors', function(event, element) {\n            console.log('Has Errors');\n        });\n\n        var drDestroy = $('#input-file-to-destroy').dropify();\n        drDestroy = drDestroy.data('dropify')\n        $('#toggleDropify').on('click', function(e) {\n            e.preventDefault();\n            if (drDestroy.isDropified()) {\n                drDestroy.destroy();\n            } else {\n                drDestroy.init();\n            }\n        })\n\n    });\n    jQuery(function($) {\n        var _parent = $('.parent').eq(0).clone();\n        $('.inc-parent').on('click', function() {\n            _parent.clone().insertBefore(this)\n        })\n    })\n</script> -->"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/account/useractivedeactive/useractivedeactive.component.html":
/*!********************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/account/useractivedeactive/useractivedeactive.component.html ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"content\">\n    <div class=\"card \">\n        <div class=\"card-header \">USER ACTIVATE OR DEACTIVATE</div>\n        <div class=\"card-body\">\n            <div class=\"form-group has-search\">\n                <!-- <span class=\"fa fa-search form-control-feedback\"></span> -->\n                <input type=\"text\" class=\"form-control\" placeholder=\"Search\" (keyup)=\"getMemberListSearchData($event)\">\n                <!-- <input type=\"text\" class=\"form-control\" placeholder=\"Search\"> -->\n            </div>\n            <table class=\"table table-striped table-bordered table-sm row-border hover\">\n                <thead>\n                    <tr>\n                        <th>Slno</th>\n                        <th>Name</th>\n                        <th>Mobile</th>\n                        <th>Email Id</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let user of userdata; let i=index\">\n                        <td style=\"text-align: right;\">{{i+1}}</td>\n                        <td>{{user.userName}}</td>\n                        <td>{{user.mobile}}</td>\n                        <td>{{user.emailId}}</td>\n                        <td>\n                            <span *ngIf=\"user.isActive == '0'\">\n                                <button class=\"btn btn-success actdeacbtn\"\n                                    (click)=\"userActiveDeactive(user)\">Activate</button>\n                            </span>\n                            <span *ngIf=\"user.isActive == '1'\">\n                                <button class=\"btn btn-danger actdeacbtn\"\n                                    (click)=\"userActiveDeactive(user)\">Deactivate</button>\n                            </span>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n            <div class=\"container\">\n                <ul class=\"pagination\">\n                    <li class=\"page-item\" *ngIf=\"modal.offset > 0\"><a class=\"page-link\" style=\"cursor: pointer;\"\n                            (click)=\"clickOnPreviousButton()\">Previous</a></li>\n                    <li class=\"page-item active\" id=\"page1li\"><a class=\"page-link\"\n                            id=\"page1\">{{modal.offset/20 + 1}}</a></li>\n                    <li class=\"page-item\"><a class=\"page-link\" (click)=\"clickOnNextButton()\"\n                            style=\"cursor: pointer;\">Next</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/app.component.html":
/*!**************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/app.component.html ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<core-header></core-header>\n<!-- <ngx-spinner></ngx-spinner> -->\n<router-outlet>\n    <span *ngIf=\"showLoader\">\n            <div id=\"load\"></div>\n    </span>\n</router-outlet>\n<core-footer></core-footer>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/core/footer/footer.component.html":
/*!*****************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/core/footer/footer.component.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<footer class=\"footer footer-big\" style=\"background-color: #2D3E50;\" *ngIf=\"isLoggedIn$ | async as isLoggedIn\">\n    <div class=\"container\" style=\"color: white;\">\n        <div class=\"content\">\n            <div class=\"row\">\n                <div class=\"col-md-2\">\n                    <ul>\n                        <li>\n                            <h4 class=\"info-title\" style=\"color: white;\">Movies</h4>\n                        </li>\n                        <li>Trending Movies</li>\n                        <li>Upcoming Movies</li>\n                        <li>Movies in Theatres</li>\n                        <li>Hit of the Month</li>\n                        <li>Box Office Hits</li>\n                        <li>Box Office Hits</li>\n                    </ul>\n                </div>\n                <div class=\"col-md-2\">\n                    <ul>\n                        <li>\n                            <h4 class=\"info-title\" style=\"color: white;\">Movies by Genre</h4>\n                        </li>\n                        <li>Action Movies</li>\n                        <li>Comedy Movies</li>\n                        <li>Drama Movies</li>\n                        <li>Romantic Movies</li>\n                        <li>Thriller Movies</li>\n                        <li>Horror Movies</li>\n                    </ul>\n                </div>\n                <div class=\"col-md-2\">\n                    <ul>\n                        <li>\n                            <h4 class=\"info-title\" style=\"color: white;\">TV Series</h4>\n                        </li>\n                        <li>Trending in TV</li>\n                        <li>Top TV Series</li>\n                        <li>Shows Timings</li>\n                        <li>Hit of the Month</li>\n                        <li>Popular TV</li>\n                        <li>Upcoming in TV</li>\n                    </ul>\n                </div>\n                <div class=\"col-md-2\">\n                    <ul>\n                        <li>\n                            <h4 class=\"info-title\" style=\"color: white;\">Songs</h4>\n                        </li>\n                        <li>Trending Songs</li>\n                        <li>Top 10 Songs</li>\n                        <li>Hit Songs</li>\n                        <li>Best of the Year</li>\n                        <li>Romantic Songs</li>\n                        <li>Artists</li>\n                    </ul>\n                </div>\n                <div class=\"col-md-2\">\n                    <ul>\n                        <li>\n                            <h4 class=\"info-title\" style=\"color: white;\">Magazine</h4>\n                        </li>\n                        <li>SiniGhama</li>\n                        <li>Week Issue</li>\n                        <li>Monthly Issue</li>\n                        <li>Read Online</li>\n                        <li>Download</li>\n                        <li>Advertise</li>\n                    </ul>\n                </div>\n                <div class=\"col-md-2\">\n                    <ul>\n                        <li>\n                            <h4 class=\"info-title\" style=\"color: white;\">Cine News</h4>\n                        </li>\n                        <li>Trending News</li>\n                        <li>Sandalwood News</li>\n                        <li>Bollywood News</li>\n                        <li>News of the Month</li>\n                        <li>Celebrity News</li>\n                        <li>Cinema News</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <hr>\n        <div style=\"margin-left: 20vw;\">\n            <ul class=\"nav\">\n                <li class=\"nav-item active\">\n                    <a class=\"nav-link\" href=\"#\">\n                        About Us<span class=\"sr-only\">(current)</span>\n                    </a>\n                </li>\n                <li class=\"nav-item active\">\n                    <a class=\"nav-link\" href=\"#\">\n                        Contact<span class=\"sr-only\">(current)</span>\n                    </a>\n                </li>\n\n                <li class=\"nav-item active\">\n                    <a class=\"nav-link\" href=\"#\">\n                        Advertise<span class=\"sr-only\">(current)</span>\n                    </a>\n                </li>\n\n                <li class=\"nav-item active\">\n                    <a class=\"nav-link\" href=\"#\">\n                        Jobs<span class=\"sr-only\">(current)</span>\n                    </a>\n                </li>\n\n                <li class=\"nav-item active\">\n                    <a class=\"nav-link\" href=\"#\">\n                        Terms & Conditions<span class=\"sr-only\">(current)</span>\n                    </a>\n                </li>\n                <li class=\"nav-item active\">\n                    <a class=\"nav-link\" href=\"#\">\n                        Privacy Policy<span class=\"sr-only\">(current)</span>\n                    </a>\n                </li>\n\n            </ul>\n        </div>\n        <div style=\"margin-left: 35vw;\">\n            <img src=\"../../../assets/images/logo/logo.png\" class=\"footer-img\">\n        </div>\n\n        <div class=\"copyright\" style=\"text-align: center;\">\n            &#xA9; Sinighama\n            <script>\n                document.write(new Date().getFullYear())\n            </script>. All Rights Reserved.\n        </div>\n    </div>\n</footer>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/core/header/header.component.html":
/*!*****************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/core/header/header.component.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- <div class=\"home-sticky-header\" style=\"z-index: 999;\" *ngIf=\"isLoggedIn$ | async as isLoggedIn\"> -->\n<div class=\"home-sticky-header\" style=\"z-index: 999;\" *ngIf=\"currentUser && currentUser.object.roleDto != null\">\n  <header>\n    <div class=\"header-div\">\n      <!--LOGO-->\n      <a routerLink=\"\"><img src=\"../../../assets/images/logo/logo.png\" alt=\"SiniGhama\" class=\"rotate header-p\"\n          class=\"siniLogo\"></a>\n      <ul class=\"header-ul\" style=\"padding-top: 20px; padding-left: -10px;\">\n        <li class=\"nav-item\">\n          <!-- <a href=\"\" (click)=\"memberlist()\" data-toggle=\"modal\" data-target=\"#myModalHorizontal\" id=\"#myModalHorz\" style=\"text-decoration: none;\">\n                        <p style=\"color: #fbe116;font-size: 110%;\">MEMBERS</p>\n                    </a> -->\n          <!-- <a mdbWavesEffect (click)=\"onLogout()\" *ngIf=\"isLoggedIn\"> -->\n          <a mdbWavesEffect (click)=\"onLogout()\">\n            <p style=\"color: #fbe116;font-size: 110%;cursor:pointer;\">\n              <span>{{currentUser.object.roleDto.roleName}}</span>\n              <i class=\"fa fa-power-off\" aria-hidden=\"true\" style=\"margin-left: 12px; font-size: 17px;\"></i>\n            </p>\n          </a>\n        </li>\n      </ul>\n    </div>\n  </header>\n  <!-- HEADER ENDS HERE -->\n  <!-- NAV BAR START HERE -->\n  <nav class=\"navbar navbar-expand-lg bg-col home-nav\" style=\"z-index:999;\">\n    <div class=\"container\">\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span><i class=\"fas fa-bars\" style=\"color: #2C3E50;\"></i></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <a href=\"#\" class=\"headertabs\" routerLink=\"/home\">HOME</a>\n        <div class=\"dropdown show\"\n          *ngIf=\"currentUser.object.roleDto.roleId == '1'|| currentUser.object.roleDto.roleId == '2' || currentUser.object.roleDto.roleId == '3' || currentUser.object.roleDto.roleId == '4' || currentUser.object.roleDto.roleId == '5' || currentUser.object.roleDto.roleId == '9'\">\n          <a class=\"dropdown-toggle headertabs\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\"\n            aria-haspopup=\"true\" aria-expanded=\"false\">\n            MEMBER LIST\n          </a>\n          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n            <a class=\"dropdown-item\" routerLink=\"/memregbyadmin\"\n              *ngIf=\"currentUser.object.roleDto.roleId == '1'|| currentUser.object.roleDto.roleId == '2' || currentUser.object.roleDto.roleId == '9'\"><i\n                class=\"fa fa-user-plus headericon\" aria-hidden=\"true\"></i>Registration</a>\n            <a class=\"dropdown-item\" routerLink=\"/memberlistapprovalnew\"\n              *ngIf=\"currentUser.object.roleDto.roleId == '1'|| currentUser.object.roleDto.roleId == '2' || currentUser.object.roleDto.roleId == '3' || currentUser.object.roleDto.roleId == '4'  || currentUser.object.roleDto.roleId == '9'\"><i\n                class=\"fa fa-users headericon\" aria-hidden=\"true\"></i>Approved List</a>\n            <a class=\"dropdown-item\" routerLink=\"/memberpendinglist\"\n              *ngIf=\"currentUser.object.roleDto.roleId == '1' || currentUser.object.roleDto.roleId == '2' || currentUser.object.roleDto.roleId == '3' || currentUser.object.roleDto.roleId == '9'\"><i\n                class=\"fa fa-cubes headericon\" aria-hidden=\"true\"></i>Pending List</a>\n            <a class=\"dropdown-item\" routerLink=\"/memberactdeact\" *ngIf=\"currentUser.object.roleDto.roleId == '1' \"><i\n                class=\"fa fa-user-times headericon\" aria-hidden=\"true\"></i>Member Activate/Deactivate</a>\n            <a class=\"dropdown-item\" routerLink=\"/membernews\"\n              *ngIf=\"currentUser.object.roleDto.roleId == '1' || currentUser.object.roleDto.roleId == '5'\"><i\n                class=\"fa fa-address-card headericon\" aria-hidden=\"true\"></i>Member News</a>\n            <a class=\"dropdown-item\" routerLink=\"/auditioncreation\" *ngIf=\"currentUser.object.roleDto.roleId == '1'\"><i\n                class=\"fa fa-video-camera headericon\" aria-hidden=\"true\"></i>Create Audition</a>\n            <a class=\"dropdown-item\" routerLink=\"/useractdeact\" *ngIf=\"currentUser.object.roleDto.roleId == '1'\"><i\n                class=\"fa fa-user-times headericon\" aria-hidden=\"true\"></i>Guest User Activate/Deactivate</a>\n            <a class=\"dropdown-item\" routerLink=\"/extendmemval\" *ngIf=\"currentUser.object.roleDto.roleId == '1' \"><i\n                class=\"fa fa-user-times headericon\" aria-hidden=\"true\"></i>Extend Member Validity</a>\n          </div>\n        </div>\n        <!-- <a href=\"#\" routerLink=\"/memberlist\" style=\"text-decoration: none;color: #2C3E50;\">MEMBER LIST</a> -->\n        <!--<a href=\"#\" style=\"text-decoration: none;color: #2C3E50;width: 8%;\">MOVIES</a>\n                <a href=\"#\" style=\"text-decoration: none;color: #2C3E50;\">TV</a>\n                <a href=\"#\" style=\"text-decoration: none;color: #2C3E50;\">MAKING</a>\n                <a href=\"#\" style=\"text-decoration: none;color: #2C3E50;\">SONGS</a>\n                <a href=\"#\" style=\"text-decoration: none;color: #2C3E50;\">MAGZINE</a>\n                <a href=\"#\" style=\"text-decoration: none;color: #2C3E50;\">SERIALS</a>\n                <a href=\"#\" style=\"text-decoration: none;color: #2C3E50;\">TRAILER</a> -->\n        <div class=\"dropdown show\"\n          *ngIf=\"currentUser.object.roleDto.roleId == '1'|| currentUser.object.roleDto.roleId == '5' || currentUser.object.roleDto.roleId == '6'\">\n          <a class=\"dropdown-toggle headertabs\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\"\n            aria-haspopup=\"true\" aria-expanded=\"false\">\n            MASTER PAGES\n          </a>\n          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n            <a class=\"dropdown-item\" routerLink=\"/staff\" *ngIf=\"currentUser.object.roleDto.roleId == '1'\"><i\n                class=\"fa fa-user-circle headericon\" aria-hidden=\"true\"></i>Staff Creation</a>\n            <a class=\"dropdown-item\" routerLink=\"/headerMessage\" *ngIf=\"currentUser.object.roleDto.roleId == '1'\"><i\n                class=\"fa fa-cubes headericon\" aria-hidden=\"true\"></i>Header Message</a>\n            <a class=\"dropdown-item\" routerLink=\"/banners\"\n              *ngIf=\"currentUser.object.roleDto.roleId == '1'|| currentUser.object.roleDto.roleId == '6' \"><i\n                class=\"fa fa-cubes headericon\" aria-hidden=\"true\"></i>Banners</a>\n            <a class=\"dropdown-item\" routerLink=\"/addscreation\"\n              *ngIf=\"currentUser.object.roleDto.roleId == '1'|| currentUser.object.roleDto.roleId == '6' \"><i\n                class=\"fa fa-cubes headericon\" aria-hidden=\"true\"></i>Adds Creation</a>\n            <a class=\"dropdown-item\" routerLink=\"/tarilervideos\"\n              *ngIf=\"currentUser.object.roleDto.roleId == '1' || currentUser.object.roleDto.roleId == '5'\"><i\n                class=\"fa fa-cubes headericon\" aria-hidden=\"true\"></i>Trailer Videos</a>\n            <a class=\"dropdown-item\" routerLink=\"/newsandupdates\"\n              *ngIf=\"currentUser.object.roleDto.roleId == '1' || currentUser.object.roleDto.roleId == '5'\"><i\n                class=\"fa fa-cubes headericon\" aria-hidden=\"true\"></i>News & Special Article</a>\n            <a class=\"dropdown-item\" routerLink=\"/gallery\"\n              *ngIf=\"currentUser.object.roleDto.roleId == '1' || currentUser.object.roleDto.roleId == '5'\"><i\n                class=\"fa fa-cubes headericon\" aria-hidden=\"true\"></i>Gallery</a>\n            <a class=\"dropdown-item\" routerLink=\"/mstjobseekerandjobprovider\"\n              *ngIf=\"currentUser.object.roleDto.roleId == '1' || currentUser.object.roleDto.roleId == '6'\"><i\n                class=\"fa fa-cubes headericon\" aria-hidden=\"true\"></i>Job Seeker & Provider</a>\n            <a class=\"dropdown-item\" routerLink=\"/mstmakingvideoandevent\"\n              *ngIf=\"currentUser.object.roleDto.roleId == '1' || currentUser.object.roleDto.roleId == '5'\"><i\n                class=\"fa fa-cubes headericon\" aria-hidden=\"true\"></i>Making, Event & Sini Videos</a>\n            <a class=\"dropdown-item\" routerLink=\"/sinighama_services\"\n              *ngIf=\"currentUser.object.roleDto.roleId == '1'\"><i class=\"fa fa-cubes headericon\"\n                aria-hidden=\"true\"></i>Sinighama Services</a>\n            <a class=\"dropdown-item\" routerLink=\"/profession\" *ngIf=\"currentUser.object.roleDto.roleId == '1'\"><i\n                class=\"fa fa-cubes headericon\" aria-hidden=\"true\"></i>Profession</a>\n            <!-- <a class=\"dropdown-item\" routerLink=\"/comment-delete\"\n                            *ngIf=\"currentUser.object.roleDto.roleId == '1'\"><i class=\"fa fa-cubes headericon\"\n                                aria-hidden=\"true\"></i>Comment Delete</a> -->\n            <a class=\"dropdown-item\" routerLink=\"/deletecomment\" *ngIf=\"currentUser.object.roleDto.roleId == '1'\"><i\n                class=\"fa fa-cubes headericon\" aria-hidden=\"true\"></i>Comment Delete</a>\n            <!-- <a class=\"dropdown-item\" routerLink=\"/state\" *ngIf=\"currentUser.object.roleDto.roleId == '1'\"><i\n                                class=\"fa fa-cubes headericon\" aria-hidden=\"true\"></i>State</a>\n                        <a class=\"dropdown-item\" routerLink=\"/city\" *ngIf=\"currentUser.object.roleDto.roleId == '1'\"><i\n                                class=\"fa fa-cubes headericon\" aria-hidden=\"true\"></i>City</a>\n                        <a class=\"dropdown-item\" routerLink=\"/callcenter\"\n                            *ngIf=\"currentUser.object.roleDto.roleId == '1'\"><i class=\"fa fa-cubes headericon\"\n                                aria-hidden=\"true\"></i>CallCenter Details</a> -->\n\n          </div>\n        </div>\n        <div class=\"dropdown show\" *ngIf=\"currentUser.object.roleDto.roleId == '1' ||  currentUser.object.roleDto.roleId == '2'\">\n          <a class=\"dropdown-toggle headertabs\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\"\n            aria-haspopup=\"true\" aria-expanded=\"false\" style=\"text-decoration: none;color: #2C3E50;cursor: pointer;\">\n            MOVIES\n          </a>\n          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n            <a class=\"dropdown-item\" routerLink=\"/createmovie\" \n            *ngIf=\"currentUser.object.roleDto.roleId == '1' || currentUser.object.roleDto.roleId == '2'\"><i \n              class=\"fa fa-film headericon\" aria-hidden=\"true\"></i>Create Movie</a>\n            <a class=\"dropdown-item\" routerLink=\"/movielist\" \n            *ngIf=\"currentUser.object.roleDto.roleId == '1' || currentUser.object.roleDto.roleId == '2'\"><i \n              class=\"fa fa-film headericon\" aria-hidden=\"true\"></i>Movie List</a>\n            <a class=\"dropdown-item\" routerLink=\"/movienews\" \n            *ngIf=\"currentUser.object.roleDto.roleId == '1' || currentUser.object.roleDto.roleId == '2'\"><i \n              class=\"fa fa-film headericon\" aria-hidden=\"true\"></i>Movie News</a>\n            <a class=\"dropdown-item\" routerLink=\"/mastergeners\" \n            *ngIf=\"currentUser.object.roleDto.roleId == '1' || currentUser.object.roleDto.roleId == '2'\"><i \n              class=\"fa fa-film headericon\" aria-hidden=\"true\"></i>Movie Geners</a>\n            <a class=\"dropdown-item\" routerLink=\"/membermoviemapping\"\n             *ngIf=\"currentUser.object.roleDto.roleId == '1'\"><i\n               class=\"fa fa-film headericon\" aria-hidden=\"true\"></i>Member Movie Mapping</a>\n          </div>\n        </div>\n\n        <div class=\"dropdown show\" *ngIf=\"currentUser.object.roleDto.roleId == '1'\">\n          <a class=\"dropdown-toggle headertabs\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\"\n            aria-haspopup=\"true\" aria-expanded=\"false\" style=\"text-decoration: none;color: #2C3E50;cursor: pointer;\">\n            CONTENT RESTRICTION\n          </a>\n          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n            <a class=\"dropdown-item\" routerLink=\"/contentrest\">Global Content Restriction</a>\n            <a class=\"dropdown-item\" routerLink=\"/membercontrest\">Member Content Restriction</a>\n            <!-- <a class=\"dropdown-item\" routerLink=\"/moviecontrest\">Movie Content Restriction</a> -->\n          </div>\n        </div>\n\n        <div class=\"dropdown show\" *ngIf=\"currentUser.object.roleDto.roleId == '1'\">\n          <a class=\"dropdown-toggle headertabs\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\"\n            aria-haspopup=\"true\" aria-expanded=\"false\">\n            REPORTS\n          </a>\n          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n            <!-- <a class=\"dropdown-item\" routerLink=\"/userreport\"><i class=\"fa fa-id-card headericon\"\n                                aria-hidden=\"true\"></i>User Reports</a> -->\n            <a class=\"dropdown-item\" routerLink=\"/userregister\"><i class=\"fa fa-id-card headericon\"\n                aria-hidden=\"true\"></i>User Reports</a>\n            <a class=\"dropdown-item\" routerLink=\"/usernotregister\"><i class=\"fa fa-id-card headericon\"\n                aria-hidden=\"true\"></i>User Not Register Reports</a>\n                <a class=\"dropdown-item\" routerLink=\"/memberreport\"><i class=\"fa fa-id-card headericon\"\n                  aria-hidden=\"true\"></i>Member Reports</a>\n          </div>\n        </div>\n\n        <div class=\"dropdown show\" *ngIf=\"currentUser.object.roleDto.roleId == '1'\">\n          <a routerLink=\"/help\" href=\"#\" class=\"headertabs\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            HELP DESK <span class=\"badge badge-danger\"> {{listq?.length}}</span>\n          </a>\n        </div>\n        <!-- <div class=\"dropdown show\">\n          <a routerLink=\"/notification\" href=\"#\" class=\"headertabs\" role=\"button\" aria-haspopup=\"true\"\n            aria-expanded=\"false\">\n            Notification \n          </a>\n        </div> -->\n        <!-- <div class=\"dropdown show\">\n          <a routerLink=\"/notechatlist\" href=\"#\" class=\"headertabs\" role=\"button\" aria-haspopup=\"true\"\n            aria-expanded=\"false\">\n            NOTIFICATION\n          </a>\n        </div> -->\n\n        <div class=\"dropdown show\" *ngIf=\"currentUser.object.roleDto.roleId == '1'\">\n          <a class=\"dropdown-toggle headertabs\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\"\n            aria-haspopup=\"true\" aria-expanded=\"false\">\n            NOTIFICATIONS\n          </a>\n          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n            <a class=\"dropdown-item\" routerLink=\"/notechatlist\">Chat Notifications</a>\n            <a class=\"dropdown-item\" routerLink=\"/notification\">Public Notifications</a>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </nav>\n</div>\n\n<!-- Modal -->\n<div class=\"modal fade right \" id=\"myModalHorizontal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\n  aria-hidden=\"true\" style=\"z-index: 9998;\" data-keyboard=\"false\" data-backdrop=\"static\">\n  <div class=\"modal-dialog modal-signin\">\n    <div class=\"modal-content \" [hidden]=\"IsHidden\">\n      <!-- Modal Header -->\n      <div class=\"modal-header\" style=\"color: #2C3E50;\">\n        <h4 class=\"modal-title\" id=\"myModalLabel\" style=\"font-size: 20px;\"> Sign In </h4>\n        <button type=\"button\" (click)=\"returnToHome()\" class=\"btn btn-default\" data-dismiss=\"modal\">&#x2716;\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form action=\"index.html\" method=\"post\">\n          <fieldset>\n            <label for=\"mail\">Mobile Number:</label>\n            <input type=\"email\" [(ngModel)]=\"phone\" id=\"mail\" name=\"user_phone\">\n            <label>Password:</label>\n            <input type=\"password\" [(ngModel)]=\"password\" name=\"user_password\">\n          </fieldset>\n          <button type=\"submit\" id=\"signUpbtn\" (click)=checkLogin()> Sign In</button>\n          <div class=\"text-center\">\n            <span class=\"txt1\" [hidden]=\"isInvalid\" style=\"color:#2C3E50;\">Invalid Mobile\n              Number/Password</span>\n          </div>\n          <div class=\"text-center\">\n            <span class=\"txt1\">Create an account?</span>\n            <a href=\"#SignupModal\" data-toggle=\"modal\" data-dismiss=\"modal\" data-target=\"#SignupModal\"\n              class=\"txt2 hov1\">Sign Up</a>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal fade\" id=\"SignupModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\"\n  style=\"z-index: 9998; \">\n  <div class=\"modal-dialog modal-signup\">\n    <div class=\"modal-content \">\n      <!-- Modal Header -->\n      <div class=\"modal-header\" style=\"color: #2C3E50;\">\n        <h4 class=\"modal-title\" id=\"myModalLabel\" style=\"font-size: 20px;\"> Sign Up </h4>\n        <button type=\"button\" (click)=\"returnToHome()\" class=\"btn btn-default\" data-dismiss=\"modal\">&#x2716;\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form action=\"index.html\" method=\"post\">\n          <fieldset>\n            <label for=\"mail\">Name:</label>\n            <input type=\"email\" id=\"Name\" name=\"user_name\">\n            <label for=\"mail\">Mobile Number:</label>\n            <input type=\"email\" id=\"mail\" name=\"user_mobile\">\n            <label for=\"password\">Enter OTP</label>\n            <input type=\"password\" id=\"password\" maxlength=\"4\" name=\"user_password\">\n          </fieldset>\n          <button type=\"submit\" (click)=\"sweetAlert()\" id=\"signUpbtn\"> Sign Up</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/home/home.component.html":
/*!********************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/home/home.component.html ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <marquee>\n                <p style=\"font-size: 140%;\">Welcome to Sinighama Admin Page</p>\n            </marquee>\n        </div>\n        <!-- <div class=\"col-lg-12\">\n            <img src=\"./../../assets/images/logo/logo.png\" style=\"width: 30%;\n            margin: auto;\n            display: block;\">\n        </div> -->\n        <div class=\"col-12 col-md-6 col-lg-4 col-xl-3 mb-4\">\n            <div class=\"card blue\">\n                <div class=\"title\">Total Members</div>\n                <i class=\"fa fa-pie-chart dashboardicons\" aria-hidden=\"true\"></i>\n                <span *ngIf=\"totalRecords==null\">\n                    <div class=\"value\">0</div>\n                </span>\n                <span *ngIf=\"totalRecords!=null\">\n                    <div class=\"value\">{{totalRecords}}</div>\n                </span>\n                <div class=\"stat\">SINIGHAMA</div>\n            </div>\n        </div>\n        <div class=\"col-12 col-md-6 col-lg-4 col-xl-3 mb-4\">\n            <div class=\"card green\" routerLink=\"/memberlistapprovalnew\"\n                *ngIf=\" currentUser.object.roleDto.roleId == '1'|| currentUser.object.roleDto.roleId == '2' || currentUser.object.roleDto.roleId == '3' || currentUser.object.roleDto.roleId == '4' || currentUser.object.roleDto.roleId == '9'\">\n                <div class=\"title\">Total Approved Members</div>\n                <i class=\"fa fa-users dashboardicons\" aria-hidden=\"true\"></i>\n                <span *ngIf=\"totalApprovedRecords==null\">\n                    <div class=\"value\">0</div>\n                </span>\n                <span *ngIf=\"totalApprovedRecords!=null\">\n                    <div class=\"value\">{{totalApprovedRecords}}</div>\n                </span>\n                <div class=\"stat\">SINIGHAMA</div>\n            </div>\n        </div>\n        <div class=\"col-12 col-md-6 col-lg-4 col-xl-3 mb-4\">\n            <div class=\"card orange\" routerLink=\"/memberpendinglist\"\n                *ngIf=\" currentUser.object.roleDto.roleId == '1'|| currentUser.object.roleDto.roleId == '2' || currentUser.object.roleDto.roleId == '3' || currentUser.object.roleDto.roleId == '9'\">\n                <div class=\"title\">Total Pending Members</div>\n                <i class=\"fa fa-user-times dashboardicons\" aria-hidden=\"true\"></i>\n                <span *ngIf=\"totalPendingRecords==null\">\n                    <div class=\"value\">0</div>\n                </span>\n                <span *ngIf=\"totalPendingRecords!=null\">\n                    <div class=\"value\">{{totalPendingRecords}}</div>\n                </span>\n                <div class=\"stat\">SINIGHAMA</div>\n            </div>\n        </div>\n        <!-- <div class=\"col-12 col-md-6 col-lg-4 col-xl-3 mb-4\">\n            <div class=\"card red\">\n                <div class=\"title\">Total Members</div>\n                <i class=\"fa fa-users dashboardicons\" aria-hidden=\"true\"></i>\n                <div class=\"value\">89</div>\n                <div class=\"stat\">SINIGHAMA</div>\n            </div>\n        </div> -->\n    </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/master/addscreation/addscreation.component.html":
/*!*******************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/master/addscreation/addscreation.component.html ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">ADS</div>\n                <form novalidate [formGroup]=\"masteraddsForm\" class=\"form-horizontal\">\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-3\">\n                                        <label>Add Description</label><span style=\"color:red;\">*</span>\n                                        <input type=\"text\" formControlName=\"description\" name=\"description\"\n                                            id=\"description\" class=\"form-control\" [(ngModel)]=\"addcreation.description\">\n                                        <div class=\"alert alert-danger\" role=\"alert\"\n                                            *ngIf=\"!masteraddsForm.controls.description.valid &&  masteraddsForm.controls.description.touched\">\n                                            <div *ngIf=\" masteraddsForm.get('description').hasError('required')\">\n                                                Description is required</div>\n                                        </div>\n                                    </div>\n                                    <div class=\" col-md-3\">\n                                        <label>Start Date</label><span style=\"color:red;\">*</span>\n                                        <input formControlName=\"startDate\" [(ngModel)]=\"addcreation.startDate\"\n                                            [bsConfig]=\"datePickerConfig\" placeholder=\"DD-MM-YYYY\" class=\"form-control\"\n                                            [minDate]=\"minEndDate\" [maxDate]=\"maxEndDate\" bsDatepicker>\n                                        <div class=\"alert alert-danger\" role=\"alert\"\n                                            *ngIf=\"!masteraddsForm.controls.startDate.valid &&  masteraddsForm.controls.startDate.touched\">\n                                            <div *ngIf=\" masteraddsForm.get('startDate').hasError('required')\">Start\n                                                Date is required</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-3\">\n                                        <label>End Date</label><span style=\"color:red;\">*</span>\n                                        <input formControlName=\"endDate\" [(ngModel)]=\"addcreation.endDate\"\n                                            placeholder=\"DD-MM-YYYY\" class=\"form-control\" [bsConfig]=\"datePickerConfig\"\n                                            [minDate]=\"minEndDate\" [maxDate]=\"maxEndDate\" bsDatepicker>\n                                        <div class=\"alert alert-danger\" role=\"alert\"\n                                            *ngIf=\"!masteraddsForm.controls.endDate.valid &&  masteraddsForm.controls.endDate.touched\">\n                                            <div *ngIf=\" masteraddsForm.get('endDate').hasError('required')\">End Date is\n                                                required</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-3\">\n                                        <label>Sequence Number</label>\n                                        <input type=\"text\" formControlName=\"sequenceNumber\" class=\"form-control\"\n                                            id=\"sequenceNumber\" [(ngModel)]=\"addcreation.sequenceNumber\" maxlength=\"3\">\n                                        <div class=\"alert alert-danger\" role=\"alert\"\n                                            *ngIf=\"!masteraddsForm.controls.sequenceNumber.valid && masteraddsForm.controls.sequenceNumber.touched\">\n                                            <div *ngIf=\"masteraddsForm.controls.sequenceNumber.hasError('required')\">\n                                                Sequence Number is required</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-2\">\n                                        <label>Image Type</label><span style=\"color:red;\">*</span>\n                                        <select class=\"custom-select\" id=\"inputGroupSelect04\"\n                                            aria-label=\"Example select with button addon\" formControlName=\"imageRatio\"\n                                            [(ngModel)]=\"addcreation.imageRatio \">\n                                            <option value=\"selected\">-Select-</option>\n                                            <option value=\"4\">6:4</option>\n                                            <option value=\"8\">6:8</option>\n                                        </select>\n                                        <div class=\"alert alert-danger\" role=\"alert\"\n                                            *ngIf=\"!masteraddsForm.controls.imageRatio.valid &&  masteraddsForm.controls.imageRatio.touched\">\n                                            <div *ngIf=\" masteraddsForm.get('imageRatio').hasError('required')\">Image\n                                                Ratio is required</div>\n                                        </div>\n                                    </div>\n                                    <!-- <div class=\"col-md-12\" style=\"margin-top:2%\">\n                                        <div class=\"row\"> -->\n                                    <div class=\"col-md-2\" style=\"margin-top: 2%;\">\n                                        <label></label>\n                                        <div class=\"upload-btn-wrapper\">\n                                            <button class=\"btn1\"\n                                                *ngIf=\" addcreation.imageRatio == '4'  || addcreation.imageRatio == '8' \">Upload\n                                                Photo</button>\n                                            <input type=\"file\" id=\"propic\" name=\"propic\"\n                                                (change)=\"addImageUpload($event)\">\n                                            <input type=\"hidden\" name=\"fileHidden\" formControlName=\"imagePath\">\n                                        </div>\n                                        <div class=\"alert alert-danger\" role=\"alert\"\n                                            *ngIf=\"!masteraddsForm.controls.imagePath.valid &&  masteraddsForm.controls.imagePath.touched\">\n                                            <div *ngIf=\" masteraddsForm.get('imagePath').hasError('required')\">\n                                                Image is required</div>\n                                        </div>\n\n                                    </div>\n                                    <div class=\"col-md-2\" style=\"margin-top: 2%;\">\n                                        <img [src]=\"croppedImage\" *ngIf=\" addcreation.imageRatio == '4' \"\n                                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                            style=\"height: auto;width: 65%;\">\n                                        <img [src]=\"croppedImage\" *ngIf=\" addcreation.imageRatio == '8' \"\n                                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                            style=\"height: auto;width: 65%;\">\n                                    </div>\n                                    <div class=\"col-md-2\" style=\"margin-top: 2%;\">\n                                        <image-cropper *ngIf=\" addcreation.imageRatio == '4' \" id=\"Imagecropper\"\n                                            [imageChangedEvent]=\"imageChangedEvent\" [maintainAspectRatio]=\"true\"\n                                            [aspectRatio]=\"6/4\" format=\"jpeg\" (imageCropped)=\"imageCropped($event)\"\n                                            (imageLoaded)=\"imageLoaded()\" (cropperReady)=\"cropperReady()\"\n                                            (loadImageFailed)=\"loadImageFailed()\"\n                                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                            style=\"height: auto;width: 65%;\">\n                                        </image-cropper>\n\n                                        <image-cropper *ngIf=\" addcreation.imageRatio == '8' \" id=\"Imagecropper\"\n                                            [imageChangedEvent]=\"imageChangedEvent\" [maintainAspectRatio]=\"true\"\n                                            [aspectRatio]=\"6/8\" format=\"jpeg\" (imageCropped)=\"imageCropped($event)\"\n                                            (imageLoaded)=\"imageLoaded()\" (cropperReady)=\"cropperReady()\"\n                                            (loadImageFailed)=\"loadImageFailed()\"\n                                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                            style=\"height: auto;width: 65%;\">\n                                        </image-cropper>\n                                    </div>\n                                    <!-- </div>\n                                    </div> -->\n                                </div>\n\n                                <div class=\"col-md-12 \">\n                                    <button type=\"button \" class=\"btn btn-success\" style=\"margin-right: 13px;\"\n                                        (click)=\"submitAdds()\">Submit</button>\n                                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearForm();\">Clear</button>\n                                    <!--<button type=\"button\" class=\"btn btn-danger\" style=\"margin-top: 6%;color: #fff\">Close</button> -->\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card \">\n        <div class=\"card-header\">ADS DETAILS</div>\n        <div class=\"card-body\">\n            <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\n                class=\"table table-striped table-bordered table-sm row-border hover\">\n                <thead>\n                    <tr>\n                        <th class=\"theader\">Sl.no</th>\n                        <th class=\"theader\">Description</th>\n                        <th class=\"theader\">Image Previews</th>\n                        <th class=\"theader\">StartDate</th>\n                        <th class=\"theader\">EndDate</th>\n                        <th class=\"theader\">Sequence Number</th>\n                        <th class=\"theader\">Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let vl of masterAdsList; let i=index\">\n                        <td style=\"text-align:right ;\">{{i + 1}}</td>\n                        <td>{{vl.description}}</td>\n                        <td style=\"text-align: center;\"><img [src]=\"vl.imagePath\" height=\"auto\" width=\"70px\"> </td>\n                        <td style=\"text-align:center;\">{{vl.startDate}}</td>\n                        <td style=\"text-align:center;\">{{vl.endDate}}</td>\n                        <td style=\"text-align: center;\">{{vl.sequenceNumber}}</td>\n                        <td style=\"text-align:center;\">\n                            <i class=\"fa fa-pencil-square-o \" aria-hidden=\"true \"\n                                (click)=\"editMasterAds(vl.id)\"></i>&nbsp;&nbsp;\n                            <i class=\"fa fa-trash\" aria-hidden=\"true \" (click)=\"deleteAddImage(vl.id)\"></i>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/master/callcenter/callcenter.component.html":
/*!***************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/master/callcenter/callcenter.component.html ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">CallCenter Details</div>\n    <form novalidate [formGroup]=\"callCenterForm\" class=\"form-horizontal\">\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <div class=\"col-md-8\" style=\"margin-bottom: 6%;\">\n              <label>Add HelpDesk Details </label>\n              <quill-editor rows=\"2\" name=\"description\" formControlName=\"description\" id=\"description\"\n                style=\"height: 50px;\" [(ngModel)]=\"callcenter.description\" autocomplete=\"off\">\n              </quill-editor>\n              <div class=\"alert alert-danger\" role=\"alert\"\n                *ngIf=\"!callCenterForm.controls.description.valid && callCenterForm.controls.description.touched\">\n                <div *ngIf=\"callCenterForm.get('description').hasError('required')\">You must enter Description\n                </div>\n                <div *ngIf=\"callCenterForm.get('description').hasError('minlength')\">Description must be 10 characters\n                </div>\n                <div *ngIf=\"callCenterForm.get('description').hasError('maxlength')\">Description must be 1000 characters\n                </div>\n              </div>\n\n            </div>\n            <div class=\"col-md-12\" style=\"margin-top: 1%;\">\n              <button type=\"button\" class=\"btn btn-success\" style=\"margin-right: 13px;\"\n                (click)=\"saveCallcenter();\">Submit</button>\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearcallcenterForm();\">Clear</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n<div class=\"container-fluid\">\n  <div class=\"card \">\n    <div class=\"card-header\">\n      CallCenter Details\n    </div>\n    <div class=\"card-body\">\n      <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\n        class=\"table table-striped table-bordered table-sm row-border hover\">\n        <thead>\n          <tr>\n            <th>Sl.no</th>\n            <th>HelpDesk Details</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let callcenterdata of callcenterdata;index as i\">\n            <td style=\"text-align: right;\">{{i+1}}</td>\n            <td innerHtml=\"{{callcenterdata.description}}\"></td>\n            <td style=\"text-align:center;\">\n              <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\" (click)=\" editCallcenter(callcenterdata.cCId)\"\n                style=\"color:rgb(0, 15, 146); font-size: 21px;\"></i>&nbsp;&nbsp;\n              <!-- <i class=\"fa fa-trash\" aria-hidden=\"true\" (click)=\"deletecallcenter(callcenterdata.cCId)\" style=\"color:#ff0000;font-size: 21px;\"></i> -->\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/master/city/city.component.html":
/*!***************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/master/city/city.component.html ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">City</div>\n    <form class=\"form-horizontal\">\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <div class=\"row\">\n              <div class=\"col-md-3\">\n                <label>Select State</label><span style=\"color:red;\">*</span>\n                <input type=\"text\" class=\"form-control\" maxlength=\"30\">\n              </div>\n              <div class=\"col-md-3\">\n                <label>City</label><span style=\"color:red;\">*</span>\n                <input type=\"text\" class=\"form-control\" maxlength=\"30\">\n              </div>\n            </div>\n          </div>\n          <div class=\"col-md-12\" style=\"margin-top: 1%;\">\n            <button type=\"button\" class=\"btn btn-success\" style=\"margin-right: 13px;\">Submit</button>\n            <button type=\"button\" class=\"btn btn-primary\">Clear</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n<div class=\"container-fluid\">\n  <div class=\"card \">\n    <div class=\"card-header\">\n      City Details\n    </div>\n    <div class=\"card-body\">\n      <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\n        class=\"table table-striped table-bordered table-sm row-border hover\">\n        <thead>\n          <tr>\n            <th>Sl.no</th>\n            <th>State Name</th>\n            <th>City Name</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let citydata of citydata;index as i\">\n            <td style=\"text-align: right;\">{{i+1}}</td>\n            <td>{{citydata.stateName}}</td>\n            <td>{{citydata.cityName}}</td>\n            <td style=\"text-align:center;\">\n              <i class=\"fa fa-pencil-square-o \" aria-hidden=\"true \"\n                style=\"color:rgb(0, 15, 146); font-size: 21px;\"></i>&nbsp;&nbsp;\n              <i class=\"fa fa-trash\" aria-hidden=\"true \" style=\"color:#ff0000;font-size: 21px;\"></i>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/master/comment-delete/comment-delete.component.html":
/*!***********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/master/comment-delete/comment-delete.component.html ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n    <div class=\"card\">\n        <div class=\"card-header\">Comment Delete</div>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <form novalidate [formGroup]=\"commentForm\" class=\"form-horizontal\">\n                    <div class=\"card-body\" style=\"padding-top: 0px\">\n                        <div class=\"row\">\n                            <div class=\"col-md-5\">\n                                <label>Search Comment</label>\n                                <input type=\"text\" name=\"comment\" class=\"form-control\" formControlName=\"comment\" [(ngModel)]=\"comment.comment\">\n                            </div>\n                            <div class=\"col-md-2\">\n                                <button type=\"button \" class=\"btn btn-success\" style=\"margin-top: 14%;\" (click)=\"search()\">Search</button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"container-fluid\">\n    <div class=\"card \">\n        <div class=\"card-header\">Comments Result</div>\n        <div class=\"card-body\">\n            <table class=\"table table-striped table-bordered table-sm row-border hover\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" style=\"width: 100%\">\n                <thead>\n                    <tr>\n                        <th class=\"theader\">Sl.No.</th>\n                        <th class=\"theader\">Commented To</th>\n                        <th class=\"theader\">Comment</th>\n                        <th class=\"theader\">Commented Person Photo</th>\n                        <th class=\"theader\">Commented Person</th>\n                        <th class=\"theader\">Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let cd of searchResult; let i=index\">\n                        <td style=\"text-align: right;\">{{i + 1}}</td>\n                        <td>{{cd.type}}</td>\n                        <td [innerHTML]=\"cd.comment\"></td>\n                        <td><img [src]=\"cd.userImage\" style=\"width: 10%;display: block; margin: auto;\"></td>\n                        <td>{{cd.userName}}</td>\n                        <td class=\"theader\">\n                            <i class=\"fa fa-trash facursor\" aria-hidden=\"true\"  (click)=\"deleteComment(cd.likecommentId)\"></i>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/master/deletecomment/deletecomment.component.html":
/*!*********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/master/deletecomment/deletecomment.component.html ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n    <div class=\"card\">\n        <div class=\"card-header\">COMMENT DELETE</div>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <form novalidate [formGroup]=\"DeleteCommentForm\" class=\"form-horizontal\">\n                    <div class=\"card-body\" style=\"padding-top: 0px;\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <label>Commented User</label>\n                                <angular2-multiselect [data]=\"userList\" formControlName=\"userId\"\n                                    [(ngModel)]=\"Model.userId\" [settings]=\"userSetting\"\n                                    (onSelect)=\"onUserSelect($event)\">\n                                    <c-search>\n                                        <ng-template>\n                                            <input type=\"text\" (keyup)=\"GetUserDataByUserName($event)\"\n                                                placeholder=\"Search User\"\n                                                style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                                        </ng-template>\n                                    </c-search>\n                                    <c-item>\n                                        <ng-template let-item=\"item\">\n                                            <img [src]=\"item.userImage\"\n                                                style=\"width: 30px; border: 1px solid #efefef;margin-right: 0px;\" />\n                                            <label>{{item.itemName}}</label>\n                                        </ng-template>\n                                    </c-item>\n                                </angular2-multiselect>\n                            </div>\n                            <div class=\"col-md-6\"></div>\n                            <div class=\"col-md-6\">\n                                <label>Content Type</label>\n                                <select class=\"custom-select\" id=\"contenttype\"\n                                    aria-label=\"Example select with button addon\" [(ngModel)]=\"Model.contentType\"\n                                    formControlName=\"contenttype\" (change)=\"getSectionByContentType()\">\n                                    <option value=\"\" selected>-Select Content Type-</option>\n                                    <option *ngFor=\"let content of contentTypes\" value=\"{{content.contentType}}\">\n                                        {{content.contentType}}</option>\n                                </select>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <label>Section</label>\n                                <select class=\"custom-select\" id=\"section\" aria-label=\"Example select with button addon\"\n                                    [(ngModel)]=\"Model.type\" formControlName=\"section\">\n                                    <option value=\"\" selected>-Select-</option>\n                                    <option *ngFor=\"let section of sections\" value=\"{{section.type}}\">{{section.type}}\n                                    </option>\n                                </select>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <label>Commented Date</label>\n                                <input id=\"createdDate\" formControlName=\"createdDate\" placeholder=\"DD-MM-YYYY\"\n                                    [(ngModel)]=\"Model.createdDate\" autocomplete=\"off\" (ngModelChange)=\"OnchangeDate()\" class=\"form-control\"\n                                    type=\"text\" bsDatepicker [bsConfig]=\"datePickerConfig\" />\n                            </div>\n                            <div class=\"col-md-6\">\n                                <button type=\"button\" class=\"btn btn-success\"\n                                    style=\"margin-right: 13px; margin-top: 4.5%;\" (click)=SearchResult()>Submit</button>\n                                <button type=\"button\" class=\"btn btn-primary\"\n                                    style=\"margin-right: 13px; margin-top: 4.5%;\" (click)=resetForm()>Clear</button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"container-fluid\">\n    <div class=\"card \">\n        <div class=\"card-header\">COMMENT LIST</div>\n        <div class=\"card-body\">\n            <table class=\"table table-striped table-bordered table-sm row-border hover\" datatable\n                [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" style=\"width: 100%\">\n                <thead>\n                    <tr>\n                        <th class=\"theader\">Sl.No.</th>\n                        <th class=\"theader\">Commented Person</th>\n                        <th class=\"theader\">content Type</th>\n                        <th class=\"theader\">Commented To</th>\n                        <th class=\"theader\">Comment</th>\n                        <th class=\"theader\">Commented Date</th>\n                        <th class=\"theader\">Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let cd of searchResultData; let i=index\">\n                        <td style=\"text-align: right;\">{{i + 1}}</td>\n                        <td><img [src]=\"cd.userImage\" style=\"width: 10%;\">{{cd.userName}}</td>\n                        <td>{{cd.contentType}}</td>\n                        <td>{{cd.type}}</td>\n                        <td [innerHTML]=\"cd.comment\"></td>\n                        <td>{{cd.createdDate}}</td>\n                        <td class=\"theader\">\n                            <i class=\"fa fa-trash facursor\" aria-hidden=\"true\"\n                                (click)=\"deleteComment(cd.likecommentId)\"></i>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/master/header-message/header-message.component.html":
/*!***********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/master/header-message/header-message.component.html ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n    <div class=\"card\">\n        <div class=\"card-header\">Header Message</div>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <form novalidate [formGroup]=\"headerMessageForm\" class=\"form-horizontal\">\n                    <div class=\"card-body\" style=\"padding-top: 0px\">\n                        <div class=\"row\">\n                            <div class=\"col-md-3\">\n                                <label>Message</label><span style=\"color:red;\"> *</span>\n                                <input type=\"text\" formControlName=\"kannadaMsg\" id=\"kannadaMsg\" class=\"form-control\"\n                                    [(ngModel)]=\"headerMessage.kannadaMsg\">\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"! headerMessageForm.controls.kannadaMsg.valid &&  headerMessageForm.controls.kannadaMsg.touched\">\n                                    <div *ngIf=\"headerMessageForm.get('kannadaMsg').hasError('required')\">Message is\n                                        required</div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-12\" style=\"margin-top: 2%;\">\n                                <button type=\"button \" class=\"btn btn-success\" (click)=\"onSubmit()\" style=\"margin-right: 1%;\">Submit</button>\n                                <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearMessage();\">Clear</button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/master/helpdesk/helpdesk.component.html":
/*!***********************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/master/helpdesk/helpdesk.component.html ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"card \">\n        <div class=\"card-header\">\n          Help Desk &nbsp;&nbsp;\n          <i class=\"fa fa-bell-o\" aria-hidden=\"true\" style=\"font-size: 15px;\"></i><sup><span style=\"font-size: 15px;\">{{listq?.length}}</span></sup>          \n        </div>\n        <div class=\"card-body\">\n          <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-sm row-border hover\">\n            <thead>\n              <tr>\n                <th class=\"theader\">Sl.no</th>\n                <th class=\"theader\">Name</th>\n                <th class=\"theader\">Mobile</th>\n                <th class=\"theader\">Email</th>\n                <th class=\"theader\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let vl of querylist.helpDeskDtoList ; let i=index\">\n                <td style=\"text-align: right;\">{{i+1}}</td>\n                <td class=\"theader\">{{vl.name}}</td>\n                <td class=\"theader\"> {{vl.mobile}}</td>\n                <td class=\"theader\">{{vl.email}}</td>\n                <td class=\"theader\">\n                  <i class=\"fa fa-eye\"  aria-hidden=\"true\" data-toggle=\"modal\" data-target=\"#statusModal\" aria-hidden=\"true \" style=\"color:rgb(0, 15, 146); font-size: 21px;\"\n                    (click)=\"getQueryById(vl.helpId)\"></i>&nbsp;&nbsp;\n                  <i class=\"fa fa-check-square-o\" aria-hidden=\"true\" style=\"color:#ff0000;font-size:21px;\"\n                    (click)=\"deleteQueryById(vl.helpId)\"></i>\n                   <span   class=\"badge badge-sm badge-success\" *ngIf=\"vl.isActive ==0\" >solved</span>\n                   <span class=\"badge badge-sm badge-success\" style=\"background-color: #ff0000;\" *ngIf=\"vl.isActive ==1\">unsolved</span>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<div class=\"modal fade bd-example-modal-lg\" id=\"statusModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"statusModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered modal-md\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"statusModalLabel\">Query/Suggestion</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\" *ngIf =\"queryById\">\n                <p style=\"text-align: justify;\">{{queryById.query}}</p>\n            </div>\n            </div>\n        </div>\n    </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/master/master-gallery/master-gallery.component.html":
/*!***********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/master/master-gallery/master-gallery.component.html ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">GALLERY</div>\n        <form novalidate [formGroup]=\"masterGalleryForm\" class=\"form-horizontal\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"row\">\n                  <div class=\"col-md-3\">\n                    <label>Image Description</label><span style=\"color:red;\">*</span>\n                    <input type=\"text\" formControlName=\"description\" name=\"description\" id=\"description\"\n                      class=\"form-control\" [(ngModel)]=\"mastergallery.description\">\n\n                    <div class=\"alert alert-danger\" role=\"alert\"\n                      *ngIf=\"!masterGalleryForm.controls.description.valid &&  masterGalleryForm.controls.description.touched\">\n                      <div *ngIf=\" masterGalleryForm.get('description').hasError('required')\">Image Description is\n                        required</div>\n                    </div>\n\n                  </div>\n                  <div class=\"col-md-3\">\n                    <label>Sequence Number</label>\n                    <input type=\"text\" formControlName=\"sequenceNumber\" class=\"form-control\"\n                      [(ngModel)]=\"mastergallery.sequenceNumber\">\n                    <div class=\"alert alert-danger\" role=\"alert\"\n                      *ngIf=\"!masterGalleryForm.controls.sequenceNumber.valid &&  masterGalleryForm.controls.sequenceNumber.touched\">\n                      <div *ngIf=\" masterGalleryForm.get('sequenceNumber').hasError('required')\">Sequence Number is\n                        required</div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-6\" style=\"margin-top:2%\">\n                    <div class=\"row\">\n                      <div class=\"col-md-3\">\n                        <label></label>\n                        <div class=\"upload-btn-wrapper\">\n                          <button class=\"btn1\">Upload\n                            Photo</button><span style=\"color:red;\">*</span>\n                          <input type=\"file\" id=\"propic\" name=\"propic\" (change)=\"addImageUpload($event)\">\n                          <input type=\"hidden\" name=\"fileHidden\" formControlName=\"imagePath\">\n                        </div>\n                        <div class=\"alert alert-danger\" role=\"alert\"\n                          *ngIf=\"!masterGalleryForm.controls.imagePath.valid &&  masterGalleryForm.controls.imagePath.touched\">\n                          <div *ngIf=\"masterGalleryForm.get('imagePath').hasError('required')\">Gallery Image is required\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-3\">\n                        <img [src]=\"croppedImage\" onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                          style=\"height: auto;width: 60%;\">\n                      </div>\n                      <div class=\"col-md-3\" style=\"margin-left: 2%;\">\n                        <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent\"\n                          [maintainAspectRatio]=\"false\" [aspectRatio]=\"6/4\" format=\"jpeg\"\n                          (imageCropped)=\"imageCropped($event)\" (imageLoaded)=\"imageLoaded()\"\n                          (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                          onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height:auto; width:80%;\">\n                        </image-cropper>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <button type=\"button \" class=\"btn btn-success\" style=\"margin-right:13px\"\n                      (click)=\"submitAdds()\">Submit</button>\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearForm();\">Clear</button>\n                    <!--<button type=\"button\" class=\"btn btn-danger\" style=\"margin-top: 6%;color: #fff\">Close</button> -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n\n    <!-- <div class=\"col-md-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">Adds Duration</div>\n        <form novalidate [formGroup]=\"addsDurationForm\" class=\"form-horizontal\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col-md-3\"> <label>Enter Duration</label> <input type=\"text\" formControlName=\"addDuration\"\n                  name=\"duration\" [(ngModel)]=\"mastergallery.addDuration\" id=\"duration\" class=\"form-control\" maxlength=\"4\"  > </div>\n              <div class=\"col-md-3\"> <button type=\"button \" class=\"btn btn-success\" style=\"margin-top: 9%\"\n                  (click)=\"submitDuration()\">Submit</button> </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div> -->\n\n  </div>\n  <div class=\"card \">\n    <div class=\"card-header\">\n      GALLERY LIST\n    </div>\n    <div class=\"card-body\">\n      <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\n        class=\"table table-striped table-bordered table-sm row-border hover\">\n        <thead>\n          <tr>\n            <th class=\"theader\">Sl.no</th>\n            <th class=\"theader\">Description</th>\n            <th class=\"theader\">Image Previews</th>\n            <!-- <th>StartDate</th>\n            <th>EndDate</th> -->\n            <th class=\"theader\">SequenceNumber</th>\n            <th class=\"theader\">Created Date</th>\n            <th class=\"theader\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let vl of masterAdsList; let i=index\">\n            <td style=\"text-align: right;\">{{i+1}}</td>\n            <td>{{vl.title}}</td>\n            <td class=\"theader\"><img [src]=\"vl.galaryImagePath\" height=\"auto\" width=\"30%\"> </td>\n            <!-- <td>{{vl.startDate}}</td>\n            <td>{{vl.endDate}}</td> -->\n            <td class=\"theader\">{{vl.sequenceNumber}}</td>\n            <td class=\"theader\">{{vl.createdDate | date:'dd-MM-yyyy hh:mm'}}</td>\n            <td class=\"theader\">\n              <i class=\"fa fa-pencil-square-o \" aria-hidden=\"true \"\n                (click)=\"editMasterAds(vl.galaryId)\"></i>&nbsp;&nbsp;\n              <i class=\"fa fa-trash\" aria-hidden=\"true \" (click)=\"deleteMasterImage(vl.galaryId)\"></i>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/master/masterbanner/masterbanner.component.html":
/*!*******************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/master/masterbanner/masterbanner.component.html ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n    <div class=\"card\">\n        <div class=\"card-header\">BIG ADS</div>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <form novalidate [formGroup]=\" bannerForm\" class=\"form-horizontal\">\n                    <div class=\"card-body\" style=\"padding-top: 0px\">\n                        <div class=\"row\">\n                            <div class=\"col-md-3\">\n                                <label>Title</label><span style=\"color:red;\"> *</span>\n                                <input type=\"text\" formControlName=\"banner_title\" id=\" banner_title\"\n                                    class=\"form-control\" [(ngModel)]=\"masterBanner.banner_title\">\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"! bannerForm.controls.banner_title.valid &&  bannerForm.controls.banner_title.touched\">\n                                    <div *ngIf=\" bannerForm.get('banner_title').hasError('required')\">Title is required\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <label>Sequence No.</label>\n                                <input type=\"text\" formControlName=\"seq_no\" id=\"seq_no\" class=\"form-control\"\n                                    [(ngModel)]=\"masterBanner.seq_no\" maxlength=\"3\">\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!bannerForm.controls.seq_no.valid &&  bannerForm.controls.seq_no.touched\">\n                                    <div *ngIf=\"bannerForm.get('seq_no').hasError('required')\">Sequence No. is required\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <label for=\"start_date\">Start Date</label><span style=\"color:red;\"> *</span>\n                                <input id=\"start_date\" formControlName=\"start_date\" placeholder=\"DD-MM-YYYY\"\n                                    [minDate]=\"minEndDate\" [maxDate]=\"maxEndDate\" [(ngModel)]=\"masterBanner.start_date\"\n                                    class=\"form-control\" type=\"text\" bsDatepicker [bsConfig]=\"datePickerConfig\" />\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"! bannerForm.controls.start_date.valid &&  bannerForm.controls.start_date.touched\">\n                                    <div *ngIf=\" bannerForm.get('start_date').hasError('required')\">Start Date is\n                                        required</div>\n                                </div>\n                            </div>\n\n                            <div class=\"col-md-3\">\n                                <label for=\"end_date\">End Date</label><span style=\"color:red;\"> *</span>\n                                <input id=\"end_date\" formControlName=\"end_date\" placeholder=\"DD-MM-YYYY\"\n                                    [minDate]=\"minEndDate\" [maxDate]=\"maxEndDate\" [(ngModel)]=\"masterBanner.end_date\"\n                                    class=\"form-control\" type=\"text\" bsDatepicker [bsConfig]=\"datePickerConfig\" />\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"! bannerForm.controls.end_date.valid && bannerForm.controls.end_date.touched\">\n                                    <div *ngIf=\" bannerForm.get('end_date').hasError('required')\">End Date is required\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\" style=\"margin-top:2%\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-3\">\n                                        <img [src]=\"croppedImage\"\n                                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                            style=\"height: auto;width: 100%;\">\n                                        <div class=\"upload-btn-wrapper\">\n                                            <button class=\"btn1\">Upload Photo</button><span style=\"color:red;\"> *</span>\n                                            <input type=\"file\" name=\"fileUploader\" (change)=\"bannerUpload($event)\">\n                                            <input type=\"hidden\" formControlName=\"imagePath\">\n                                        </div>\n                                        <div class=\"alert alert-danger\" role=\"alert\"\n                                            *ngIf=\"!bannerForm.controls.imagePath.valid && bannerForm.controls.imagePath.touched\">\n                                            <div *ngIf=\"bannerForm.get('imagePath').hasError('required')\">Please Select\n                                                Image</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-4\">\n                                    </div>\n                                    <div class=\"col-md-4\">\n                                        <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent\"\n                                            [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/1\" format=\"jpeg\"\n                                            (imageCropped)=\"imageCropped($event)\" (imageLoaded)=\"imageLoaded()\"\n                                            (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\">\n                                        </image-cropper>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col-md-12\" style=\"margin-top: 2%;\">\n                                <button type=\"button \" class=\"btn btn-success\" style=\"margin-right: 13px;\"\n                                    (click)=\"OnSubmit()\">Submit</button>\n                                <button type=\"button\" class=\"btn btn-primary\"\n                                    (click)=\"clearBannerForm();\">Clear</button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid\">\n    <div class=\"card \">\n        <div class=\"card-header\">\n            BIG ADS DETAILS\n        </div>\n        <div class=\"card-body\">\n            <table class=\"table table-striped table-bordered table-sm row-border hover\" datatable\n                [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" style=\"width: 100%\">\n                <thead>\n                    <tr>\n                        <th class=\"theader\">Sl.No.</th>\n                        <th class=\"theader\">Title</th>\n                        <th class=\"theader\">Image Previews</th>\n                        <th class=\"theader\">StartDate</th>\n                        <th class=\"theader\">EndDate</th>\n                        <th class=\"theader\">SequenceNumber</th>\n                        <!-- <th>Is Active</th> -->\n                        <th class=\"theader\">Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let gd of getAllDetailsList; let i=index\">\n                        <td style=\"text-align: right;\">{{i + 1}}</td>\n                        <td>{{gd.title}}</td>\n                        <td class=\"theader\"><img [src]=\"gd.imagePath\" height=\"50px;\" width=\"auto\"> </td>\n                        <td class=\"theader\">{{gd.startDate }}</td>\n                        <td class=\"theader\">{{gd.endDate }}</td>\n                        <td class=\"theader\">{{gd.sequenceNumber}}</td>\n                        <td class=\"theader\">\n                            <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true \"\n                                (click)=\"EditBanner(gd.id)\"></i>&nbsp;&nbsp;\n                            <i class=\"fa fa-trash facursor\" aria-hidden=\"true\" (click)=\"DeleteBanner(gd.id)\"></i>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/master/membernews/membernews.component.html":
/*!***************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/master/membernews/membernews.component.html ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">Member News</div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <form novalidate [formGroup]=\"NewsForm\" class=\"form-horizontal\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col-md-3\">\n                <label>Search Member</label><span style=\"color:#ff0000;\"> *</span>\n                <angular2-multiselect  formControlName=\"MemberName\" [settings]=\"memberNewsSettings\"\n                [data]=\"memberList\"  (onSelect)=\"selectedMemId($event)\" [(ngModel)]=\"selectedMember\">\n                  <c-search>\n                    <ng-template>\n                      <input type=\"text\" (keyup)=\"getMemberList($event)\" placeholder=\"Search Members\"\n                        style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                    </ng-template>\n                  </c-search>\n                  <c-item>\n                    <ng-template let-item=\"item\">\n                      <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                      <label>{{item.itemName}}</label>\n                    </ng-template>\n                  </c-item>\n                </angular2-multiselect>\n              </div>\n              <div class=\"col-md-9\">\n                <label>News Title</label><span style=\"color:#ff0000;\"> *</span>\n                <textarea class=\"form-control\" formControlName=\"title\" [(ngModel)]=\"membernews.title\"></textarea>\n                <div class=\"alert alert-danger\" role=\"alert\"\n                  *ngIf=\"!NewsForm.controls.title.valid && NewsForm.controls.title.touched\">\n                  <div *ngIf=\"NewsForm.get('title').hasError('required')\">News Title is required\n                  </div>\n                  <div *ngIf=\"NewsForm.get('title').hasError('minlength')\">News Title must be 3 characters\n                  </div>\n                  <div *ngIf=\"NewsForm.get('title').hasError('maxlength')\">News Title Can't be more than 300 characters\n                    long</div>\n                  <div *ngIf=\"NewsForm.get('title').hasError('pattern')\">Please enter valid News Title\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-12\" style=\"margin-bottom: 8%;\">\n                <label>News Description</label><span style=\"color:#ff0000;\"> *</span>\n                <quill-editor rows=\"1\" [modules]=\"modules\" formControlName=\"description\" [(ngModel)]=\"membernews.description\">\n                </quill-editor>\n                <div class=\"alert alert-danger\" role=\"alert\"\n                  *ngIf=\"!NewsForm.controls.description.valid && NewsForm.controls.description.touched\">\n                  <div *ngIf=\"NewsForm.get('description').hasError('required')\">News Description is required\n                  </div>\n                  <div *ngIf=\"NewsForm.get('description').hasError('minlength')\">News Description must be 3 characters\n                  </div>\n                  <div *ngIf=\"NewsForm.get('description').hasError('maxlength')\">News Description Can't be more than\n                    8000 characters long</div>\n                  <div *ngIf=\"NewsForm.get('description').hasError('pattern')\">Please enter valid News Description\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-12\">\n                <p>Template Type</p>\n              </div>\n              <div class=\"col-md-1\">\n                <div class=\"custom-control custom-radio\">\n                  <input type=\"radio\" class=\"custom-control-input\" name=\"templateId\" id=\"singlePhoto\"\n                    formControlName=\"templateId\" value=\"1\" [(ngModel)]=\"membernews.templateId\">\n                  <label class=\"custom-control-label\" for=\"singlePhoto\">1 Photo</label>\n                </div>\n              </div>\n              <div class=\"col-md-1\">\n                <div class=\"custom-control custom-radio\">\n                  <input type=\"radio\" class=\"custom-control-input\" name=\"templateId\" id=\"thriplePhoto\"\n                    formControlName=\"templateId\" value=\"3\" [(ngModel)]=\"membernews.templateId\">\n                  <label class=\"custom-control-label\" for=\"thriplePhoto\">3 Photo</label>\n                </div>\n              </div>\n              <div class=\"col-md-1\">\n                <div class=\"custom-control custom-radio\">\n                  <input type=\"radio\" class=\"custom-control-input\" name=\"templateId\" id=\"sevenPhoto\"\n                    formControlName=\"templateId\" value=\"7\" [(ngModel)]=\"membernews.templateId\">\n                  <label class=\"custom-control-label\" for=\"sevenPhoto\">7 Photo</label>\n                </div>\n              </div>\n              <!-- <div class=\"col-md-9\" *ngIf=\"membernews.templateId=='1' \">\n                <div class=\"row\">\n                  <div class=\"col-md-2\">\n                    <div class=\"upload-btn-wrapper\">\n                      <button class=\"btn1\">Upload Photo 1</button><span style=\"color:#ff0000;\"> *</span>\n                      <input type=\"file\" name=\"fileUploader\" (change)=\"fileChangeEventFirstType($event,1)\">\n                      <input type=\"hidden\" formControlName=\"imagePath\">\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent01\"\n                      [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                      (imageCropped)=\"imageCropped($event,1)\" (imageLoaded)=\"imageLoaded()\"\n                      (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                      onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height:230px; width:170px;\">\n                    </image-cropper>\n                  </div>\n                  <div class=\"col-md-5\">\n                    <img [src]=\"url01\" onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                      style=\"height: 75%;width: 30%;\">\n                  </div>\n                </div>\n              </div> -->\n              <!-- <div class=\"col-md-9\" *ngIf=\"membernews.templateId =='3'\">\n                <div class=\"row\">\n                  <div class=\"col-md-2\">\n                    <div class=\"row\">\n                      <div class=\"col-md-12\">\n                        <div class=\"upload-btn-wrapper\">\n                          <button class=\"btn1\">Upload Photo 1</button><span style=\"color:#ff0000;\"> *</span>\n                          <input type=\"file\" id=\"photo1 \" name=\"photo1 \" (change)=\"fileChangeEventSecondType($event,1)\"\n                            [(ngModel)]=\"NewsForm.secondPhoto3\" formControlName=\"imagePath31\">\n                          <input type=\"hidden\" name=\"imagePath1\" formControlName=\"imagePath31\" />\n                        </div>\n                      </div>\n                      <div class=\"col-md-12\">\n                        <div class=\"upload-btn-wrapper\">\n                          <button class=\"btn1\">Upload Photo 2</button><span style=\"color:#ff0000;\"> *</span>\n                          <input type=\"file\" id=\"photo1 \" name=\"photo1 \" (change)=\"fileChangeEventSecondType($event,2)\"\n                            [(ngModel)]=\"NewsForm.secondPhoto3 \" formControlName=\"imagePath32\">\n                          <input type=\"hidden\" name=\"imagePath2\" formControlName=\"imagePath32\" />\n                        </div>\n                      </div>\n                      <div class=\"col-md-12\">\n                        <div class=\"upload-btn-wrapper\">\n                          <button class=\"btn1\">Upload Photo 3</button><span style=\"color:#ff0000;\"> *</span>\n                          <input type=\"file\" id=\"photo1 \" name=\"photo1 \" (change)=\"fileChangeEventSecondType($event,3)\"\n                            [(ngModel)]=\"NewsForm.secondPhoto3\" formControlName=\"imagePath33\">\n                          <input type=\"hidden\" name=\"imagePath3\" formControlName=\"imagePath33\" />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <span *ngIf=\"imageChangedEvent31 !=''\">\n                      <image-cropper id=\"imageCroppedSecondType\" [imageChangedEvent]=\"imageChangedEvent31\"\n                        [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                        (imageCropped)=\"imageCroppedSecondType($event,1)\" (imageLoaded)=\"imageLoadedProfile()\"\n                        (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                        onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                      </image-cropper>\n                    </span>\n                    <span *ngIf=\"imageChangedEvent32 !=''\">\n                      <image-cropper id=\"imageCroppedSecondType\" [imageChangedEvent]=\"imageChangedEvent32\"\n                        [maintainAspectRatio]=\"true\" [aspectRatio]=\"6/4\" format=\"jpeg\"\n                        (imageCropped)=\"imageCroppedSecondType($event,2)\" (imageLoaded)=\"imageLoadedProfile()\"\n                        (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                        onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                      </image-cropper>\n                    </span>\n                    <span *ngIf=\"imageChangedEvent33 !=''\">\n                      <image-cropper id=\"imageCroppedSecondType\" [imageChangedEvent]=\"imageChangedEvent33\"\n                        [maintainAspectRatio]=\"true\" [aspectRatio]=\"6/4\" format=\"jpeg\"\n                        (imageCropped)=\"imageCroppedSecondType($event,3)\" (imageLoaded)=\"imageLoadedProfile()\"\n                        (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                        onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height: 230px;width: 170px;\">\n                      </image-cropper>\n                    </span>\n                  </div>\n                  <div class=\"col-md-5\">\n                    <label>Photos previews</label>\n                    <div class=\"row\">\n                      <div class=\"col-md-4\">\n                        <img class=\"pro1pic\" [src]=\"url31\" onerror=\"this.src='../../../assets/images/avtaar/1.jpg';\">\n                      </div>\n                      <div class=\"col-md-8\">\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <img class=\"pro2pic\" [src]=\"url32\"\n                              onerror=\"this.src='../../../assets/images/avtaar/2.jpg';\">\n                          </div>\n                          <div class=\"col-md-6\">\n                            <img class=\"pro2pic\" [src]=\"url33\"\n                              onerror=\"this.src='../../../assets/images/avtaar/3.jpg';\">\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div> -->\n              <div class=\"col-md-9\">\n                <div class=\"row\">\n                  <div class=\"col-md-12\">\n                    <div class=\"row\">\n                      <div class=\"col-md-2\">\n                        <div class=\"row\">\n                          <div class=\"col-md-12\" *ngIf=\"membernews.templateId == '1'\">\n                            <div class=\"row\">\n                              <div div class=\"col-md-12\">\n                                <div class=\"upload-btn-wrapper\">\n                                  <button class=\"btn1\">Upload Photo 1</button><span style=\"color:#ff0000;\"> *</span>\n                                  <input type=\"file\" id=\"photo1\" name=\"photo1\"\n                                    (change)=\"fileChangeEventProfile($event,1)\">\n                                  <input type=\"hidden\" name=\"imagePath71\"  [(ngModel)]=\"NewsForm.thirdType1\"\n                                  formControlName=\"imagePath71\" />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"col-md-12\" *ngIf=\"membernews.templateId == '3'\">\n                            <div class=\"row\">\n                              <div div class=\"col-md-12\">\n                                <div class=\"upload-btn-wrapper\">\n                                  <button class=\"btn1\">Upload Photo 1</button><span style=\"color:#ff0000;\"> *</span>\n                                  <input type=\"file\" id=\"photo1\" name=\"photo1\"\n                                    (change)=\"fileChangeEventProfile($event,1)\">\n                                  <input type=\"hidden\" name=\"imagePath71\"  [(ngModel)]=\"NewsForm.thirdType1\"\n                                  formControlName=\"imagePath71\" />\n                                </div>\n                              </div>\n                              <div div class=\"col-md-12\">\n                                <div class=\"upload-btn-wrapper\">\n                                  <button class=\"btn1\">Upload Photo 2</button><span style=\"color:#ff0000;\"> *</span>\n                                  <input type=\"file\" id=\"photo2 \" name=\"photo2 \"\n                                    (change)=\"fileChangeEventProfile($event,2)\" >\n                                  <input type=\"hidden\" name=\"imagePath2\" [(ngModel)]=\"NewsForm.thirdType2\"\n                                  formControlName=\"imagePath72\" />\n                                </div>\n                              </div>\n                              <div div class=\"col-md-12\">\n                                <div class=\"upload-btn-wrapper\">\n                                  <button class=\"btn1\">Upload Photo 3</button><span style=\"color:#ff0000;\"> *</span>\n                                  <input type=\"file\" id=\"photo3\" name=\"photo3 \"\n                                    (change)=\"fileChangeEventProfile($event,3)\" >\n                                  <input type=\"hidden\" name=\"imagePath3\" [(ngModel)]=\"NewsForm.thirdType3\"\n                                  formControlName=\"imagePath73\" />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"col-md-12\" *ngIf=\"membernews.templateId == '7'\">\n                            <div class=\"row\">\n                              <div div class=\"col-md-12\">\n                                <div class=\"upload-btn-wrapper\">\n                                  <button class=\"btn1\">Upload Photo 1</button><span style=\"color:#ff0000;\"> *</span>\n                                  <input type=\"file\" id=\"photo1\" name=\"photo1\"\n                                    (change)=\"fileChangeEventProfile($event,1)\">\n                                  <input type=\"hidden\" name=\"imagePath71\"  [(ngModel)]=\"NewsForm.thirdType1\"\n                                  formControlName=\"imagePath71\" />\n                                </div>\n                              </div>\n                              <div div class=\"col-md-12\">\n                                <div class=\"upload-btn-wrapper\">\n                                  <button class=\"btn1\">Upload Photo 2</button><span style=\"color:#ff0000;\"> *</span>\n                                  <input type=\"file\" id=\"photo2 \" name=\"photo2 \"\n                                    (change)=\"fileChangeEventProfile($event,2)\">\n                                  <input type=\"hidden\" name=\"imagePath2\"  [(ngModel)]=\"NewsForm.thirdType2\"\n                                  formControlName=\"imagePath72\" />\n                                </div>\n                              </div>\n                              <div div class=\"col-md-12\">\n                                <div class=\"upload-btn-wrapper\">\n                                  <button class=\"btn1\">Upload Photo 3</button><span style=\"color:#ff0000;\"> *</span>\n                                  <input type=\"file\" id=\"photo3 \" name=\"photo3 \"\n                                    (change)=\"fileChangeEventProfile($event,3)\">\n                                  <input type=\"hidden\" name=\"imagePath3\"  [(ngModel)]=\"NewsForm.thirdType3\"\n                                  formControlName=\"imagePath73\" />\n                                </div>\n                              </div>\n                              <div class=\"col-md-12\">\n                                <div class=\"upload-btn-wrapper\">\n                                  <button class=\"btn1\">Upload Photo 4</button><span style=\"color:#ff0000;\"> *</span>\n                                  <input type=\"file\" id=\"photo4 \" name=\"photo4 \"\n                                    (change)=\"fileChangeEventProfile($event,4)\">\n                                  <input type=\"hidden\" name=\"imagePath1\"  [(ngModel)]=\"NewsForm.thirdType4\"\n                                  formControlName=\"imagePath74\" />\n                                </div>\n                              </div>\n                              <div class=\"col-md-12\">\n                                <div class=\"upload-btn-wrapper\">\n                                  <button class=\"btn1\">Upload Photo 5</button><span style=\"color:#ff0000;\"> *</span>\n                                  <input type=\"file\" id=\"photo5 \" name=\"photo5 \"\n                                    (change)=\"fileChangeEventProfile($event,5)\">\n                                  <input type=\"hidden\" name=\"imagePath1\"  [(ngModel)]=\"NewsForm.thirdType5\"\n                                  formControlName=\"imagePath75\" />\n                                </div>\n                              </div>\n                              <div class=\"col-md-12\">\n                                <div class=\"upload-btn-wrapper\">\n                                  <button class=\"btn1\">Upload Photo 6</button><span style=\"color:#ff0000;\"> *</span>\n                                  <input type=\"file\" id=\"photo6 \" name=\"photo6\"\n                                    (change)=\"fileChangeEventProfile($event,6)\" >\n                                  <input type=\"hidden\" name=\"imagePath1\" [(ngModel)]=\"NewsForm.thirdType6\"\n                                  formControlName=\"imagePath76\" />\n                                </div>\n                              </div>\n                              <div class=\"col-md-12\">\n                                <div class=\"upload-btn-wrapper\">\n                                  <button class=\"btn1\">Upload Photo 7</button><span style=\"color:#ff0000;\"> *</span>\n                                  <input type=\"file\" id=\"photo7\" name=\"photo7\"\n                                    (change)=\"fileChangeEventProfile($event,7)\" >\n                                  <input type=\"hidden\" name=\"imagePath1\" [(ngModel)]=\"NewsForm.thirdType7\"\n                                  formControlName=\"imagePath77\" />\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-4\">\n                        <span *ngIf=\"imageChangedEvent71 !=''\">\n                          <image-cropper id=\"ImagecropperProfile1\" [imageChangedEvent]=\"imageChangedEvent71\"\n                            [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                            (imageCropped)=\"imageCroppedProfile($event,1)\" (imageLoaded)=\"imageLoadedProfile()\"\n                            (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                            style=\"height: 230px;width: 170px;\">\n                          </image-cropper>\n                        </span>\n                        <span *ngIf=\"imageChangedEvent72 !=''\">\n                          <image-cropper id=\"Imagecropper1\" [imageChangedEvent]=\"imageChangedEvent72\"\n                            [maintainAspectRatio]=\"true\" [aspectRatio]=\"6/4\" format=\"jpeg\"\n                            (imageCropped)=\"imageCroppedProfile($event,2)\" (imageLoaded)=\"imageLoadedProfile()\"\n                            (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                            style=\"height: 230px;width: 170px;\">\n                          </image-cropper>\n                        </span>\n                        <span *ngIf=\"imageChangedEvent73 !=''\">\n                          <image-cropper id=\"ImagecropperProfile1\" [imageChangedEvent]=\"imageChangedEvent73\"\n                            [maintainAspectRatio]=\"true\" [aspectRatio]=\"6/4\" format=\"jpeg\"\n                            (imageCropped)=\"imageCroppedProfile($event,3)\" (imageLoaded)=\"imageLoadedProfile()\"\n                            (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                            style=\"height: 230px;width: 170px;\">\n                          </image-cropper>\n                        </span>\n                        <span *ngIf=\"imageChangedEvent74 !=''\">\n                          <image-cropper id=\"ImagecropperProfile1\" [imageChangedEvent]=\"imageChangedEvent74\"\n                            [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                            (imageCropped)=\"imageCroppedProfile($event,4)\" (imageLoaded)=\"imageLoadedProfile()\"\n                            (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                            style=\"height: 230px;width: 170px;\">\n                          </image-cropper>\n                        </span>\n                        <span *ngIf=\"imageChangedEvent75 !=''\">\n                          <image-cropper id=\"ImagecropperProfile1\" [imageChangedEvent]=\"imageChangedEvent75\"\n                            [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                            (imageCropped)=\"imageCroppedProfile($event,5)\" (imageLoaded)=\"imageLoadedProfile()\"\n                            (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                            style=\"height: 230px;width: 170px;\">\n                          </image-cropper>\n                        </span>\n                        <span *ngIf=\"imageChangedEvent76 !=''\">\n                          <image-cropper id=\"ImagecropperProfile1\" [imageChangedEvent]=\"imageChangedEvent76\"\n                            [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                            (imageCropped)=\"imageCroppedProfile($event,6)\" (imageLoaded)=\"imageLoadedProfile()\"\n                            (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                            style=\"height: 230px;width: 170px;\">\n                          </image-cropper>\n                        </span>\n                        <span *ngIf=\"imageChangedEvent77 !=''\">\n                          <image-cropper id=\"ImagecropperProfile1\" [imageChangedEvent]=\"imageChangedEvent77\"\n                            [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                            (imageCropped)=\"imageCroppedProfile($event,7)\" (imageLoaded)=\"imageLoadedProfile()\"\n                            (cropperReady)=\"cropperReadyProfile()\" (loadImageFailed)=\"loadImageFailedProfile()\"\n                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                            style=\"height: 230px;width: 170px;\">\n                          </image-cropper>\n                        </span>\n                      </div>\n                      <div class=\"col-md-5\">\n                        <label>Photos previews</label>\n                        <div class=\"row\">\n                          <div class=\"col-md-4\" *ngIf=\"membernews.templateId == '1'|| membernews.templateId == '3' || membernews.templateId == '7'\">\n                            <img class=\"pro1pic\" [src]=\"url1\" \n                            onerror=\"this.src='../../../assets/images/avtaar/1.jpg';\">\n                          </div>\n                          <div class=\"col-md-8\">\n                            <div class=\"row\">\n                              <div class=\"col-md-6\" *ngIf=\"membernews.templateId == '3' || membernews.templateId == '7'\">\n                                <img class=\"pro2pic\" [src]=\"url2\"\n                                  onerror=\"this.src='../../../assets/images/avtaar/2.jpg';\">\n                              </div>\n                              <div class=\"col-md-6\" *ngIf=\"membernews.templateId == '3' || membernews.templateId == '7'\">\n                                <img class=\"pro2pic\" [src]=\"url3\"\n                                  onerror=\"this.src='../../../assets/images/avtaar/3.jpg';\">\n                              </div>\n                              <div class=\"col-md-3\" *ngIf=\"membernews.templateId == '7'\">\n                                <img class=\"pro3pic\" [src]=\"url4\"\n                                  onerror=\"this.src='../../../assets/images/avtaar/4.jpg';\">\n                              </div>\n                              <div class=\"col-md-3\" *ngIf=\"membernews.templateId == '7'\">\n                                <img class=\"pro3pic\" [src]=\"url5\"\n                                  onerror=\"this.src='../../../assets/images/avtaar/5.jpg';\">\n                              </div>\n                              <div class=\"col-md-3\" *ngIf=\"membernews.templateId == '7'\">\n                                <img class=\"pro3pic\" [src]=\"url6\"\n                                  onerror=\"this.src='../../../assets/images/avtaar/6.jpg';\">\n                              </div>\n                              <div class=\"col-md-3\" *ngIf=\"membernews.templateId == '7'\">\n                                <img class=\"pro3pic\" [src]=\"url7\"\n                                  onerror=\"this.src='../../../assets/images/avtaar/7.jpg';\">\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-3\">\n                <label>Author Name</label>\n                <input type=\"text\" class=\"form-control\" name=\"userName\" id=\"userName\" [(ngModel)]=\"membernews.userName\"\n                  formControlName=\"userName\">\n              </div>\n              <div class=\"col-md-2\">\n                <label>Author Photo</label><br>\n                <div class=\"upload-btn-wrapper\">\n                  <button class=\"btn1\">Upload Photo</button>\n                  <input type=\"file\" name=\"fileUploader\" (change)=\"authorPhoto($event)\">\n                  <input type=\"hidden\" formControlName=\"imagePath\">\n                </div>\n              </div>\n              <div class=\"col-md-3\">\n                <img [src]=\"userCroppedPhoto\" onerror=\"this.src='../../../assets/images/avtaar/1.jpg';\"\n                  style=\"height: 75%;width: 30%;\">\n              </div>\n              <div class=\"col-md-3\">\n                <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent\" [maintainAspectRatio]=\"true\"\n                  [aspectRatio]=\"3/4\" format=\"jpeg\" (imageCropped)=\"userPhotoCropped($event)\"\n                  (imageLoaded)=\"imageLoaded()\" (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                  onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height:230px; width:170px;\">\n                </image-cropper>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <button type=\"button\" class=\"btn btn-success\" (click)=\"OnSubmit()\"\n                style=\"margin: -3% 0% 0% 3%;\">Submit</button>\n              <!-- <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearNewsAndUpdate();\">Clear</button> -->\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"container-fluid\">\n  <div class=\"card \">\n    <div class=\"card-header\">\n      Member News Details\n    </div>\n    <!-- Movie News Table -->\n    <div class=\"card-body\">\n      <table class=\"table table-striped table-bordered table-sm row-border hover\" datatable [dtOptions]=\"dtOptions\"\n        [dtTrigger]=\"dtTrigger\" style=\"width: 100%\">\n        <thead>\n          <tr>\n            <th class=\"newsth\">Sl.No.</th>\n            <th class=\"newsth\">Member Name</th>\n            <th class=\"newsth\">News Title</th>\n            <th class=\"newsth\">Template Type</th>\n            <th class=\"newsth\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let news of memnewsalldata; let i = index;\">\n            <td>{{i+1}}</td>\n            <td>{{news.memberName}}</td>\n            <td>{{news.title}}</td>\n            <td class=\"newsth\">{{news.templateId}}</td>\n            <td class=\"newsth\">\n              <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"\n                (click)=\"editMemberNews(news.membersNewsId)\"></i>&nbsp;&nbsp;\n              <span *ngIf=\"news.isActive == 0\">\n                <button class=\"btn btn-success actdeacbtn\" (click)=\"deleteMemberNews(news)\">Activate</button>\n              </span>\n              <span *ngIf=\"news.isActive == 1\">\n                <button class=\"btn btn-danger actdeacbtn\" (click)=\"deleteMemberNews(news)\">Deactivate</button>\n              </span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/master/mstjobseekerandjobprovider/mstjobseekerandjobprovider.component.html":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/master/mstjobseekerandjobprovider/mstjobseekerandjobprovider.component.html ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n    <div class=\"card\">\n        <div class=\"card-header\">JOB SEEKER / PROVIDER</div>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <form novalidate [formGroup]=\"jobSeekerJobProviderForm\" class=\"form-horizontal\">\n                    <div class=\"card-body\" style=\"padding-top: 0px\">\n                        <div class=\"row\">\n                            <div class=\"col-md-2\">\n                                <div class=\"custom-control custom-radio\">\n                                    <input type=\"radio\" class=\"custom-control-input\" id=\"JobProvider\"\n                                        formControlName=\"job_type\" value=\"JobProvider\"\n                                        [(ngModel)]=\"JobSeekerAndJobProvide.job_type\">\n                                    <label class=\"custom-control-label\" for=\"JobProvider\">Job Provider</label>\n                                </div>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <div class=\"custom-conntrol custom-radio\">\n                                    <input type=\"radio\" class=\"custom-control-input\" id=\"JobSeeker\"\n                                        formControlName=\"job_type\" value=\"JobSeeker\"\n                                        [(ngModel)]=\"JobSeekerAndJobProvide.job_type\">\n                                    <label class=\"custom-control-label\" for=\"JobSeeker\">Job Seeker</label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col-md-2\">\n                                <label for=\"start_date\">Start Date</label><span style=\"color:red;\">*</span>\n                                <input id=\"start_date\" formControlName=\"start_date\" placeholder=\"DD-MM-YYYY\"\n                                    [minDate]=\"minStartDate\" [maxDate]=\"maxStartDate\"\n                                    [(ngModel)]=\"JobSeekerAndJobProvide.start_date\" class=\"form-control\" type=\"text\"\n                                    bsDatepicker [bsConfig]=\"datePickerConfig\" />\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!jobSeekerJobProviderForm.controls.start_date.valid && jobSeekerJobProviderForm.controls.start_date.touched\">\n                                    <div *ngIf=\"jobSeekerJobProviderForm.get('start_date').hasError('required')\">Start\n                                        Date is required\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <label for=\"end_date\">End Date</label><span style=\"color:red;\">*</span>\n                                <input id=\"end_date\" formControlName=\"end_date\" placeholder=\"DD-MM-YYYY\"\n                                    [minDate]=\"minEndDate\" [maxDate]=\"maxEndDate\"\n                                    [(ngModel)]=\"JobSeekerAndJobProvide.end_date\" class=\"form-control\" type=\"text\"\n                                    bsDatepicker [bsConfig]=\"datePickerConfig\" />\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!jobSeekerJobProviderForm.controls.end_date.valid && jobSeekerJobProviderForm.controls.end_date.touched\">\n                                    <div *ngIf=\"jobSeekerJobProviderForm.get('end_date').hasError('required')\">Ent Date\n                                        is required</div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <label>Sequence Number</label>\n                                <input type=\"text\" formControlName=\"sequenceNumber\" class=\"form-control\"\n                                    id=\"sequenceNumber\" maxlength=\"3\"\n                                    [(ngModel)]=\"JobSeekerAndJobProvide.sequenceNumber\">\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!jobSeekerJobProviderForm.controls.sequenceNumber.valid && jobSeekerJobProviderForm.controls.sequenceNumber.touched\">\n                                    <div *ngIf=\"jobSeekerJobProviderForm.get('sequenceNumber').hasError('required')\">\n                                        Sequence Number is required</div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\" style=\"margin-top:25px\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-3\">\n                                        <div class=\"upload-btn-wrapper\">\n                                            <button class=\"btn1\">Upload Photo</button><span style=\"color:red;\">*</span>\n                                            <input type=\"file\" name=\"fileUploader\" (change)=\"newsImageUpload($event)\">\n                                            <input type=\"hidden\" formControlName=\"imagePath\">\n                                            <div class=\"alert alert-danger\" role=\"alert\"\n                                                *ngIf=\"!jobSeekerJobProviderForm.controls.imagePath.valid && jobSeekerJobProviderForm.controls.imagePath.touched\">\n                                                <div\n                                                    *ngIf=\"jobSeekerJobProviderForm.get('imagePath').hasError('required')\">\n                                                    Please Select Image</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-4\">\n                                        <img [src]=\"croppedImage\"\n                                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                            style=\"height: auto;width: 70%;\">\n                                    </div>\n                                    <div class=\"col-md-4\">\n                                        <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent\"\n                                            [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                                            (imageCropped)=\"imageCropped($event)\" (imageLoaded)=\"imageLoaded()\"\n                                            (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                            style=\"height:auto; width:80%;\">\n                                        </image-cropper>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                                <button type=\"button \" class=\"btn btn-success\" style=\"margin-right: 13px;\"\n                                    (click)=\"OnSubmit()\">Submit</button>\n                                <button type=\"button\" class=\"btn btn-primary\"\n                                    (click)=\"clearNewsAndUpdate();\">Clear</button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<ul class=\"container nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\n    <li class=\"nav-item\">\n        <a class=\"nav-link active\" id=\"jp-tab\" data-toggle=\"pill\" href=\"#jp\" role=\"tab\" aria-controls=\"jp\"\n            aria-selected=\"true\">Job Provider</a>\n    </li>\n    <li class=\"nav-item\">\n        <a class=\"nav-link\" id=\"js-tab\" data-toggle=\"pill\" href=\"#js\" role=\"tab\" aria-controls=\"js\"\n            aria-selected=\"false\">Job Seeker</a>\n    </li>\n</ul>\n<div class=\"tab-content\" id=\"pills-tabContent\">\n    <div class=\"tab-pane fade show active\" id=\"jp\" role=\"tabpanel\" aria-labelledby=\"jp-tab\">\n        <div class=\"container-fluid\">\n            <div class=\"card \">\n                <div class=\"card-header\">\n                    JOB PROVIDER LIST\n                </div>\n                <div class=\"card-body\">\n                    <table class=\"table table-striped table-bordered table-sm row-border hover\" datatable\n                        [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" style=\"width: 100%\">\n                        <thead>\n                            <tr>\n                                <th>Sl.No.</th>\n                                <th>Type</th>\n                                <th>Image Previews</th>\n                                <th>StartDate</th>\n                                <th>EndDate</th>\n                                <th>Seq No</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let get of jobproviderList; let i=index\">\n                                <td style=\"text-align: right;\">{{i + 1}}</td>\n                                <td style=\"text-align: center;\">{{get.type}}</td>\n                                <td style=\"text-align: center;\"><img [src]=\"get.image\" style=\"height: 40px;width:30px;\">\n                                </td>\n                                <td>{{get.startdate | date:'dd-MM-yyyy' }}</td>\n                                <td>{{get.enddate | date:'dd-MM-yyyy' }}</td>\n                                <td>{{get.seqno}}</td>\n                                <td style=\"text-align: center;\">\n                                    <i class=\"fa fa-pencil-square-o \" aria-hidden=\"true \"\n                                        (click)=\"EditAndUpdate(get.id)\"></i>&nbsp;&nbsp;\n                                    <!-- <i class=\"fa fa-trash\" aria-hidden=\"true\" style=\"color:#ff0000;font-size: 21px;\" (click)=\"DeleteNewsAndUpdate(get.jspId)\"></i> -->\n                                    <span *ngIf=\"get.isActive == 0\">\n                                        <button class=\"btn btn-success\" style=\"padding: 0% 2%;font-size: 12px;\"\n                                            (click)=\"DeleteNewsAndUpdate(get)\">Activate</button>\n                                    </span>\n                                    <span *ngIf=\"get.isActive == 1\">\n                                        <button class=\"btn btn-danger\" style=\"padding: 0% 2%;font-size: 12px;\"\n                                            (click)=\"DeleteNewsAndUpdate(get)\">Deactivate</button>\n                                    </span>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"tab-pane fade\" id=\"js\" role=\"tabpanel\" aria-labelledby=\"js-tab\">\n        <div class=\"container-fluid\">\n            <div class=\"card \">\n                <div class=\"card-header\">\n                    JOB SEEKER LIST\n                </div>\n                <div class=\"card-body\">\n                    <table class=\"table table-striped table-bordered table-sm row-border hover\" datatable\n                        [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" style=\"width: 100%\">\n                        <thead>\n                            <tr>\n                                <th>Sl.No.</th>\n                                <th>Type</th>\n                                <th>Image Previews</th>\n                                <th>StartDate</th>\n                                <th>EndDate</th>\n                                <th>Seq No</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let get of jobseekerList; let i=index\">\n                                <td style=\"text-align: right;\">{{i + 1}}</td>\n                                <td style=\"text-align: center;\">{{get.type}}</td>\n                                <td style=\"text-align: center;\"><img [src]=\"get.image\" style=\"height: 40px;width:30px;\">\n                                </td>\n                                <td>{{get.startdate | date:'dd-MM-yyyy' }}</td>\n                                <td>{{get.enddate | date:'dd-MM-yyyy' }}</td>\n                                <td>{{get.seqno}}</td>\n                                <td style=\"text-align: center;\">\n                                    <i class=\"fa fa-pencil-square-o \" aria-hidden=\"true \"\n                                        (click)=\"EditAndUpdate(get.id)\"></i>&nbsp;&nbsp;\n                                    <!-- <i class=\"fa fa-trash\" aria-hidden=\"true\" style=\"color:#ff0000;font-size: 21px;\" (click)=\"DeleteNewsAndUpdate(get.jspId)\"></i> -->\n                                    <span *ngIf=\"get.isActive == 0\">\n                                        <button class=\"btn btn-success\" style=\"padding: 0% 2%;font-size: 12px;\"\n                                            (click)=\"DeleteNewsAndUpdate(get)\">Activate</button>\n                                    </span>\n                                    <span *ngIf=\"get.isActive == 1\">\n                                        <button class=\"btn btn-danger\" style=\"padding: 0% 2%;font-size: 12px;\"\n                                            (click)=\"DeleteNewsAndUpdate(get)\">Deactivate</button>\n                                    </span>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/master/mstmakingvideoandevent/mstmakingvideoandevent.component.html":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/master/mstmakingvideoandevent/mstmakingvideoandevent.component.html ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n    <div class=\"card\">\n        <div class=\"card-header\">MAKING / EVENT / SINIGHAMA / YOTUBE VIDEOS</div>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <form novalidate [formGroup]=\"MakingvideoAndEventForm\" class=\"form-horizontal\">\n                    <div class=\"card-body\" style=\"padding-top: 0px\">\n                        <div class=\"row\">\n                            <div class=\"col-md-2\" style=\"margin-left: 23px;\">\n                                <div class=\"custom-conntrol custom-radio\">\n                                    <input type=\"radio\" class=\"custom-control-input\" id=\"MakingVideo\"\n                                        formControlName=\"video_type\" value=\"MakingVideo\"\n                                        [(ngModel)]=\"MakingvideoAndEvent.video_type\">\n                                    <label class=\"custom-control-label\" for=\"MakingVideo\">Making Video</label>\n                                </div>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <div class=\"custom-control custom-radio\">\n                                    <input type=\"radio\" class=\"custom-control-input\" id=\"EventVideo\"\n                                        formControlName=\"video_type\" value=\"EventVideo\"\n                                        [(ngModel)]=\"MakingvideoAndEvent.video_type\">\n                                    <label class=\"custom-control-label\" for=\"EventVideo\">Event Video</label>\n                                </div>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <div class=\"custom-control custom-radio\">\n                                    <input type=\"radio\" class=\"custom-control-input\" id=\"SinighamaVideo\"\n                                        formControlName=\"video_type\" value=\"SinighamaVideo\"\n                                        [(ngModel)]=\"MakingvideoAndEvent.video_type\">\n                                    <label class=\"custom-control-label\" for=\"SinighamaVideo\">Sinighama Video</label>\n                                </div>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <div class=\"custom-control custom-radio\">\n                                    <input type=\"radio\" class=\"custom-control-input\" id=\"SinighamaYoutubeVideo\"\n                                        formControlName=\"video_type\" value=\"SinighamaYoutubeVideo\"\n                                        [(ngModel)]=\"MakingvideoAndEvent.video_type\">\n                                    <label class=\"custom-control-label\" for=\"SinighamaYoutubeVideo\">Youtube\n                                        Video</label>\n                                </div>\n                            </div>\n                            <div class=\"alert alert-danger\" role=\"alert\"\n                                *ngIf=\"!MakingvideoAndEventForm.controls.video_type.valid && MakingvideoAndEventForm.controls.video_type.touched\">\n                                <div *ngIf=\"MakingvideoAndEventForm.get('video_type').hasError('required')\">You must\n                                    select Job Seeker / Job Provider</div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-3\">\n                                <label>Video Title</label><span style=\"color:red;\">*</span>\n                                <input type=\"text\" formControlName=\"title\" placeholder=\"Enter Video Titel\" id=\"title\"\n                                    class=\"form-control\" [(ngModel)]=\"MakingvideoAndEvent.title\" maxlength=\"20\">\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!MakingvideoAndEventForm.controls.title.valid && MakingvideoAndEventForm.controls.title.touched\">\n                                    <div *ngIf=\"MakingvideoAndEventForm.get('title').hasError('required')\">Video Title\n                                        is required</div>\n                                </div>\n                            </div>\n\n                            <div class=\"col-md-3\">\n                                <label>Video Link</label><span style=\"color:red;\">*</span>\n                                <input type=\"text\" formControlName=\"video_link\" placeholder=\"Enter Video Link\"\n                                    id=\"video_link\" class=\"form-control\" [(ngModel)]=\"MakingvideoAndEvent.video_link\">\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!MakingvideoAndEventForm.controls.video_link.valid && MakingvideoAndEventForm.controls.video_link.touched\">\n                                    <div *ngIf=\"MakingvideoAndEventForm.get('video_link').hasError('required')\">Video\n                                        Link is required</div>\n                                </div>\n                            </div>\n\n                            <!-- <div class=\"col-md-3\">\n                                <label for=\"start_date\">Start Date</label><span style=\"color:red;\">*</span>\n                                <input id=\"start_date\" formControlName=\"start_date\" placeholder=\"DD-MM-YYYY\"\n                                    [minDate]=\"minStartDate\" [maxDate]=\"maxStartDate\"\n                                    [(ngModel)]=\"MakingvideoAndEvent.start_date\" class=\"form-control\" type=\"text\"\n                                    bsDatepicker [bsConfig]=\"datePickerConfig\" />\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!MakingvideoAndEventForm.controls.start_date.valid && MakingvideoAndEventForm.controls.start_date.touched\">\n                                    <div *ngIf=\"MakingvideoAndEventForm.get('start_date').hasError('required')\">Start\n                                        Date is required\n                                    </div>\n                                </div>\n                            </div> -->\n                            <!-- <div class=\"col-md-3\">\n                                <label for=\"end_date\">End Date</label><span style=\"color:red;\">*</span>\n                                <input id=\"end_date\" formControlName=\"end_date\" placeholder=\"DD-MM-YYYY\"\n                                    [minDate]=\"minEndDate\" [maxDate]=\"maxEndDate\"\n                                    [(ngModel)]=\"MakingvideoAndEvent.end_date\" class=\"form-control\" type=\"text\"\n                                    bsDatepicker [bsConfig]=\"datePickerConfig\" />\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!MakingvideoAndEventForm.controls.end_date.valid && MakingvideoAndEventForm.controls.end_date.touched\">\n                                    <div *ngIf=\"MakingvideoAndEventForm.get('end_date').hasError('required')\">Ent Date\n                                        is required</div>\n                                </div>\n                            </div> -->\n                            <div class=\"col-md-3\">\n                                <label>Sequence Number</label>\n                                <input type=\"text\" formControlName=\"sequenceNumber\" class=\"form-control\"\n                                    id=\"sequenceNumber\" maxlength=\"3\" [(ngModel)]=\"MakingvideoAndEvent.sequenceNumber\">\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!MakingvideoAndEventForm.controls.sequenceNumber.valid && MakingvideoAndEventForm.controls.sequenceNumber.touched\">\n                                    <div *ngIf=\"MakingvideoAndEventForm.get('sequenceNumber').hasError('required')\">\n                                        Sequence Number is required</div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-3\">\n                                        <div class=\"upload-btn-wrapper\">\n                                            <button class=\"btn1\">Upload Photo</button><span style=\"color:red;\">*</span>\n                                            <input type=\"file\" name=\"fileUploader\" (change)=\"newsImageUpload($event)\">\n                                            <input type=\"hidden\" formControlName=\"imagePath\">\n                                            <div class=\"alert alert-danger\" role=\"alert\"\n                                                *ngIf=\"!MakingvideoAndEventForm.controls.imagePath.valid && MakingvideoAndEventForm.controls.imagePath.touched\">\n                                                <div\n                                                    *ngIf=\"MakingvideoAndEventForm.get('imagePath').hasError('required')\">\n                                                    Please Select Image</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-4\">\n                                        <img [src]=\"croppedImage\"\n                                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                            style=\"height: auto;width: 80%;\">\n                                    </div>\n                                    <div class=\"col-md-4\">\n                                        <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent\"\n                                            [maintainAspectRatio]=\"true\" [aspectRatio]=\"5/3\" format=\"jpeg\"\n                                            (imageCropped)=\"imageCropped($event)\" (imageLoaded)=\"imageLoaded()\"\n                                            (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                            style=\"height:auto; width:80%;\">\n                                        </image-cropper>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                                <button type=\"button \" class=\"btn btn-success\" style=\"margin-right: 13px;\"\n                                    (click)=\"OnSubmit()\">Submit</button>\n                                <button type=\"button\" class=\"btn btn-primary\"\n                                    (click)=\"clearNewsAndUpdate();\">Clear</button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<ul class=\"container nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\n    <li class=\"nav-item\">\n        <a class=\"nav-link active\" id=\"mv-tab\" data-toggle=\"pill\" href=\"#mv\" role=\"tab\" aria-controls=\"mv\"\n            aria-selected=\"true\">Making Video</a>\n    </li>\n    <li class=\"nav-item\">\n        <a class=\"nav-link\" id=\"ev-tab\" data-toggle=\"pill\" href=\"#ev\" role=\"tab\" aria-controls=\"ev\"\n            aria-selected=\"false\">Event Video</a>\n    </li>\n    <li class=\"nav-item\">\n        <a class=\"nav-link\" id=\"sv-tab\" data-toggle=\"pill\" href=\"#sv\" role=\"tab\" aria-controls=\"sv\"\n            aria-selected=\"false\">Sinighama Video</a>\n    </li>\n    <li class=\"nav-item\">\n        <a class=\"nav-link\" id=\"yv-tab\" data-toggle=\"pill\" href=\"#yv\" role=\"tab\" aria-controls=\"yv\"\n            aria-selected=\"false\">Youtube Video</a>\n    </li>\n</ul>\n<div class=\"tab-content\" id=\"pills-tabContent\">\n    <div class=\"tab-pane fade show active\" id=\"mv\" role=\"tabpanel\" aria-labelledby=\"mv-tab\">\n        <div class=\"container-fluid\">\n            <div class=\"card \">\n                <div class=\"card-header\">MAKING VIDEO LIST</div>\n                <div class=\"card-body\">\n                    <table class=\"table table-striped table-bordered table-sm row-border hover\" datatable\n                        [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" style=\"width: 100%\">\n                        <thead>\n                            <tr>\n                                <th>Sl.No.</th>\n                                <th>Video Type</th>\n                                <th>Title</th>\n                                <th>Image Previews</th>\n                                <th>Video Link</th>\n                                <th>Seq No</th>\n                                <th>Created Date</th>\n                                <!-- <th>EndDate</th> -->\n                                <!-- <th>Status</th> -->\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let get of makingvideoList; let i=index\">\n                                <td style=\"text-align:right;\">{{i + 1}}</td>\n                                <td style=\"text-align: center;\">{{get.type}}</td>\n                                <td style=\"text-align: center;\">{{get.title}}</td>\n                                <td style=\"text-align: center;\"><img [src]=\"get.image\" height=\"40px\" width=\"90px\">\n                                </td>\n                                <td>{{get.link}}</td>\n                                <td>{{get.seqno}}</td>\n                                <td>{{get.createdDate | date:'dd-MM-yyyy'}}</td>\n                                <!-- <td>{{get.startdate | date:'dd-MM-yyyy'}}</td>\n                                <td>{{get.enddate | date:'dd-MM-yyyy'}}</td> -->\n                                <td style=\"text-align: center;\">\n                                    <i class=\"fa fa-pencil-square-o \" aria-hidden=\"true \"\n                                        (click)=\"EditAndUpdate(get.id)\"></i>&nbsp;&nbsp;\n                                    <span *ngIf=\"get.isActive == 0\">\n                                        <button class=\"btn btn-success\" style=\"padding: 0% 2%;font-size: 12px;\"\n                                            (click)=\"ActiveDeactive(get)\">Activate</button>\n                                    </span>\n                                    <span *ngIf=\"get.isActive == 1\">\n                                        <button class=\"btn btn-danger\" style=\"padding: 0% 2%;font-size: 12px;\"\n                                            (click)=\"ActiveDeactive(get)\">Deactivate</button>\n                                    </span>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"tab-pane fade\" id=\"ev\" role=\"tabpanel\" aria-labelledby=\"ev-tab\">\n        <div class=\"container-fluid\">\n            <div class=\"card \">\n                <div class=\"card-header\">EVENT VIDEO LIST</div>\n                <div class=\"card-body\">\n                    <table class=\"table table-striped table-bordered table-sm row-border hover\" datatable\n                        [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" style=\"width: 100%\">\n                        <thead>\n                            <tr>\n                                <th>Sl.No.</th>\n                                <th>Video Type</th>\n                                <th>Title</th>\n                                <th>Image Previews</th>\n                                <th>Video Link</th>\n                                <th>Seq No</th>\n                                <th>Created Date</th>\n                                <!-- <th>EndDate</th> -->\n                                <!-- <th>Status</th> -->\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let get of eventvideoList; let i=index\">\n                                <td style=\"text-align:right;\">{{i + 1}}</td>\n                                <td style=\"text-align: center;\">{{get.type}}</td>\n                                <td style=\"text-align: center;\">{{get.title}}</td>\n                                <td style=\"text-align: center;\"><img [src]=\"get.image\" height=\"40px\" width=\"90px\">\n                                </td>\n                                <td>{{get.link}}</td>\n                                <td>{{get.seqno}}</td>\n                                <td>{{get.createdDate | date:'dd-MM-yyyy'}}</td>\n                                <!-- <td>{{get.startdate | date:'dd-MM-yyyy'}}</td>\n                                <td>{{get.enddate | date:'dd-MM-yyyy'}}</td> -->\n                                <td style=\"text-align: center;\">\n                                    <i class=\"fa fa-pencil-square-o \" aria-hidden=\"true \"\n                                        (click)=\"EditAndUpdate(get.id)\"></i>&nbsp;&nbsp;\n                                    <span *ngIf=\"get.isActive == 0\">\n                                        <button class=\"btn btn-success\" style=\"padding: 0% 2%;font-size: 12px;\"\n                                            (click)=\"ActiveDeactive(get)\">Activate</button>\n                                    </span>\n                                    <span *ngIf=\"get.isActive == 1\">\n                                        <button class=\"btn btn-danger\" style=\"padding: 0% 2%;font-size: 12px;\"\n                                            (click)=\"ActiveDeactive(get)\">Deactivate</button>\n                                    </span>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"tab-pane fade\" id=\"sv\" role=\"tabpanel\" aria-labelledby=\"sv-tab\">\n        <div class=\"container-fluid\">\n            <div class=\"card \">\n                <div class=\"card-header\">SINIGHAMA VIDEO LIST</div>\n                <div class=\"card-body\">\n                    <table class=\"table table-striped table-bordered table-sm row-border hover\" datatable\n                        [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" style=\"width: 100%\">\n                        <thead>\n                            <tr>\n                                <th>Sl.No.</th>\n                                <th>Video Type</th>\n                                <th>Title</th>\n                                <th>Image Previews</th>\n                                <th>Video Link</th>\n                                <th>Seq No</th>\n                                <th>Created Date</th>\n                                <!-- <th>EndDate</th> -->\n                                <!-- <th>Status</th> -->\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let get of sinighamavideoList; let i=index\">\n                                <td style=\"text-align:right;\">{{i + 1}}</td>\n                                <td style=\"text-align: center;\">{{get.type}}</td>\n                                <td style=\"text-align: center;\">{{get.title}}</td>\n                                <td style=\"text-align: center;\"><img [src]=\"get.image\" height=\"40px\" width=\"90px\">\n                                </td>\n                                <td>{{get.link}}</td>\n                                <td>{{get.seqno}}</td>\n                                <td>{{get.createdDate | date:'dd-MM-yyyy'}}</td>\n                                <!-- <td>{{get.get.createdDate | date:'dd-MM-yyyy'}}</td> -->\n                                <!-- <td>{{get.enddate | date:'dd-MM-yyyy'}}</td> -->\n                                <td style=\"text-align: center;\">\n                                    <i class=\"fa fa-pencil-square-o \" aria-hidden=\"true \"\n                                        (click)=\"EditAndUpdate(get.id)\"></i>&nbsp;&nbsp;\n                                    <span *ngIf=\"get.isActive == 0\">\n                                        <button class=\"btn btn-success\" style=\"padding: 0% 2%;font-size: 12px;\"\n                                            (click)=\"ActiveDeactive(get)\">Activate</button>\n                                    </span>\n                                    <span *ngIf=\"get.isActive == 1\">\n                                        <button class=\"btn btn-danger\" style=\"padding: 0% 2%;font-size: 12px;\"\n                                            (click)=\"ActiveDeactive(get)\">Deactivate</button>\n                                    </span>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"tab-pane fade\" id=\"yv\" role=\"tabpanel\" aria-labelledby=\"yv-tab\">\n        <div class=\"container-fluid\">\n            <div class=\"card \">\n                <div class=\"card-header\">YOUTUBE VIDEO LIST</div>\n                <div class=\"card-body\">\n                    <table class=\"table table-striped table-bordered table-sm row-border hover\" datatable\n                        [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" style=\"width: 100%\">\n                        <thead>\n                            <tr>\n                                <th>Sl.No.</th>\n                                <th>Video Type</th>\n                                <th>Title</th>\n                                <th>Image Previews</th>\n                                <th>Video Link</th>\n                                <th>Seq No</th>\n                                <th>Created Date</th>\n                                <!-- <th>EndDate</th> -->\n                                <!-- <th>Status</th> -->\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let get of youtubevideoList; let i=index\">\n                                <td style=\"text-align:right;\">{{i + 1}}</td>\n                                <td style=\"text-align: center;\">{{get.type}}</td>\n                                <td style=\"text-align: center;\">{{get.title}}</td>\n                                <td style=\"text-align: center;\"><img [src]=\"get.image\" height=\"40px\" width=\"90px\">\n                                </td>\n                                <td>{{get.link}}</td>\n                                <td>{{get.seqno}}</td>\n                                <td>{{get.createdDate | date:'dd-MM-yyyy'}}</td>\n                                <!-- <td>{{get.startdate | date:'dd-MM-yyyy'}}</td>\n                                <td>{{get.enddate | date:'dd-MM-yyyy'}}</td> -->\n                                <td style=\"text-align: center;\">\n                                    <i class=\"fa fa-pencil-square-o \" aria-hidden=\"true \"\n                                        (click)=\"EditAndUpdate(get.id)\"></i>&nbsp;&nbsp;\n                                    <span *ngIf=\"get.isActive == 0\">\n                                        <button class=\"btn btn-success\" style=\"padding: 0% 2%;font-size: 12px;\"\n                                            (click)=\"ActiveDeactive(get)\">Activate</button>\n                                    </span>\n                                    <span *ngIf=\"get.isActive == 1\">\n                                        <button class=\"btn btn-danger\" style=\"padding: 0% 2%;font-size: 12px;\"\n                                            (click)=\"ActiveDeactive(get)\">Deactivate</button>\n                                    </span>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/master/newsandupdates/newsandupdates.component.html":
/*!***********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/master/newsandupdates/newsandupdates.component.html ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n    <div class=\"card\">\n        <div class=\"card-header\">MOVIE NEWS / TV NEWS / SPECIAL ARTICLES</div>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <form novalidate [formGroup]=\"newsAndUpdatesForm\" class=\"form-horizontal\">\n                    <div class=\"card-body\" style=\"padding-top: 0px\">\n                        <div class=\"row\" style=\"margin: 1% 0%;\">\n                            <div class=\"col-md-2\">\n                                <div class=\"custom-control custom-radio\">\n                                    <input type=\"radio\" class=\"custom-control-input\" id=\"movNews\"\n                                        formControlName=\"news_type\" value=\"MovieNews\"\n                                        [(ngModel)]=\"NewsAndUpdates.news_type\">\n                                    <label class=\"custom-control-label\" for=\"movNews\">Movie News</label>\n                                </div>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <div class=\"custom-control custom-radio\">\n                                    <input type=\"radio\" class=\"custom-control-input\" id=\"tvNews\"\n                                        formControlName=\"news_type\" value=\"TvNews\"\n                                        [(ngModel)]=\"NewsAndUpdates.news_type\">\n                                    <label class=\"custom-control-label\" for=\"tvNews\">Tv News</label>\n                                </div>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <div class=\"custom-control custom-radio\">\n                                    <input type=\"radio\" class=\"custom-control-input\" id=\"special_article\"\n                                        formControlName=\"news_type\" value=\"special_article\"\n                                        [(ngModel)]=\"NewsAndUpdates.news_type\">\n                                    <label class=\"custom-control-label\" for=\"special_article\">Special\n                                        Article</label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-10\">\n                                <label>News Title</label>\n                                <textarea formControlName=\"news_title\" id=\"news_title\" class=\"form-control\"\n                                    [(ngModel)]=\"NewsAndUpdates.news_title\"></textarea>\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!newsAndUpdatesForm.controls.news_title.valid && newsAndUpdatesForm.controls.news_title.touched\">\n                                    <div *ngIf=\"newsAndUpdatesForm.get('news_title').hasError('required')\">News\n                                        Title is required\n                                    </div>\n                                    <div *ngIf=\"newsAndUpdatesForm.get('news_title').hasError('minlength')\">News\n                                        Title must be 3 characters\n                                    </div>\n                                    <div *ngIf=\"newsAndUpdatesForm.get('news_title').hasError('maxlength')\">News\n                                        Title Can't be more than 300 characters long</div>\n                                    <div *ngIf=\"newsAndUpdatesForm.get('news_title').hasError('pattern')\">Please\n                                        enter valid News Title\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-10\" style=\"margin-bottom: 8%;\">\n                                <label>News Description</label>\n                                <quill-editor rows=\"2\" style=\"height: 50px;\" [modules]=\"modules\"\n                                    [(ngModel)]=\"NewsAndUpdates.news_description\" id=\"news_description\"\n                                    formControlName=\"news_description\"></quill-editor>\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!newsAndUpdatesForm.controls.news_description.valid && newsAndUpdatesForm.controls.news_description.touched\">\n                                    <div *ngIf=\"newsAndUpdatesForm.get('news_description').hasError('required')\">\n                                        News Description is required\n                                    </div>\n                                    <div *ngIf=\"newsAndUpdatesForm.get('news_description').hasError('minlength')\">\n                                        News Description must be 3 characters</div>\n                                    <div *ngIf=\"newsAndUpdatesForm.get('news_description').hasError('maxlength')\">\n                                        News Description Can't be more than 8000 characters long</div>\n                                    <div *ngIf=\"newsAndUpdatesForm.get('news_description').hasError('pattern')\">\n                                        Please enter valid News Description\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                                <p style=\"font-weight: bold;margin: unset;\">News Image Template Type</p>\n                            </div>\n                            <div class=\"col-md-6\" style=\"margin: 2% 0%;\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-2\">\n                                        <div class=\"custom-control custom-radio\">\n                                            <input type=\"radio\" class=\"custom-control-input\" id=\"singlePhoto\"\n                                                formControlName=\"photo_type\" value=\"1\"\n                                                [(ngModel)]=\"NewsAndUpdates.photo_type\" checked>\n                                            <label class=\"custom-control-label\" for=\"singlePhoto\">1\n                                                Photo</label>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-2\">\n                                        <div class=\"custom-control custom-radio\">\n                                            <input type=\"radio\" class=\"custom-control-input\" id=\"thriplePhoto\"\n                                                formControlName=\"photo_type\" value=\"3\"\n                                                [(ngModel)]=\"NewsAndUpdates.photo_type\">\n                                            <label class=\"custom-control-label\" for=\"thriplePhoto\">3\n                                                Photo</label>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-2\">\n                                        <div class=\"custom-control custom-radio\">\n                                            <input type=\"radio\" class=\"custom-control-input\" id=\"sevenPhoto\"\n                                                formControlName=\"photo_type\" value=\"7\"\n                                                [(ngModel)]=\"NewsAndUpdates.photo_type\">\n                                            <label class=\"custom-control-label\" for=\"sevenPhoto\">7 Photo</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-12\" *ngIf=\"NewsAndUpdates.photo_type=='1'\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-3\">\n                                        <div class=\"upload-btn-wrapper\">\n                                            <button class=\"btn1\">Upload Photo</button>\n                                            <input type=\"file\" name=\"fileUploader\"\n                                                (change)=\"fileChangeEventFirstType($event,1)\">\n                                            <input type=\"hidden\" formControlName=\"imagePath\">\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-4\">\n                                        <img [src]=\"url01\" onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                            style=\"height: 75%;width: 30%;\">\n                                    </div>\n                                    <div class=\"col-md-4\">\n                                        <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent01\"\n                                            [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                                            (imageCropped)=\"imageCropped($event,1)\" (imageLoaded)=\"imageLoaded()\"\n                                            (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                            style=\"height:230px; width:170px;\">\n                                        </image-cropper>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-12\" *ngIf=\"NewsAndUpdates.photo_type=='3'\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-2\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md-12\">\n                                                <div class=\"upload-btn-wrapper\">\n                                                    <button class=\"btn2\">Upload Photo 1</button><span\n                                                        style=\"color:#ff0000;\"> *</span>\n                                                    <input type=\"file\" id=\"photo1 \" name=\"photo1 \"\n                                                        (change)=\"fileChangeEventSecondType($event,1)\"\n                                                        [(ngModel)]=\"NewsAndUpdates.secondPhoto3\"\n                                                        formControlName=\"imagePath31\">\n                                                    <input type=\"hidden\" name=\"imagePath1\"\n                                                        formControlName=\"imagePath31\" />\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md-12\">\n                                                <div class=\"upload-btn-wrapper\">\n                                                    <button class=\"btn2\">Upload Photo 2</button><span\n                                                        style=\"color:#ff0000;\"> *</span>\n                                                    <input type=\"file\" id=\"photo1 \" name=\"photo1 \"\n                                                        (change)=\"fileChangeEventSecondType($event,2)\"\n                                                        [(ngModel)]=\"NewsAndUpdates.secondPhoto3 \"\n                                                        formControlName=\"imagePath32\">\n                                                    <input type=\"hidden\" name=\"imagePath2\"\n                                                        formControlName=\"imagePath32\" />\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md-12\">\n                                                <div class=\"upload-btn-wrapper\">\n                                                    <button class=\"btn2\">Upload Photo 3</button><span\n                                                        style=\"color:#ff0000;\"> *</span>\n                                                    <input type=\"file\" id=\"photo1 \" name=\"photo1 \"\n                                                        (change)=\"fileChangeEventSecondType($event,3)\"\n                                                        [(ngModel)]=\"NewsAndUpdates.secondPhoto3\"\n                                                        formControlName=\"imagePath33\">\n                                                    <input type=\"hidden\" name=\"imagePath3\"\n                                                        formControlName=\"imagePath33\" />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-4\">\n                                        <span *ngIf=\"imageChangedEvent31 !=''\">\n                                            <image-cropper id=\"imageCroppedSecondType\"\n                                                [imageChangedEvent]=\"imageChangedEvent31\" [maintainAspectRatio]=\"true\"\n                                                [aspectRatio]=\"3/4\" format=\"jpeg\"\n                                                (imageCropped)=\"imageCroppedSecondType($event,1)\"\n                                                (imageLoaded)=\"imageLoadedProfile()\"\n                                                (cropperReady)=\"cropperReadyProfile()\"\n                                                (loadImageFailed)=\"loadImageFailedProfile()\"\n                                                onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                                style=\"height: 230px;width: 170px;\">\n                                            </image-cropper>\n                                        </span>\n                                        <span *ngIf=\"imageChangedEvent32 !=''\">\n                                            <image-cropper id=\"imageCroppedSecondType\"\n                                                [imageChangedEvent]=\"imageChangedEvent32\" [maintainAspectRatio]=\"true\"\n                                                [aspectRatio]=\"6/4\" format=\"jpeg\"\n                                                (imageCropped)=\"imageCroppedSecondType($event,2)\"\n                                                (imageLoaded)=\"imageLoadedProfile()\"\n                                                (cropperReady)=\"cropperReadyProfile()\"\n                                                (loadImageFailed)=\"loadImageFailedProfile()\"\n                                                onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                                style=\"height: 230px;width: 170px;\">\n                                            </image-cropper>\n                                        </span>\n                                        <span *ngIf=\"imageChangedEvent33 !=''\">\n                                            <image-cropper id=\"imageCroppedSecondType\"\n                                                [imageChangedEvent]=\"imageChangedEvent33\" [maintainAspectRatio]=\"true\"\n                                                [aspectRatio]=\"6/4\" format=\"jpeg\"\n                                                (imageCropped)=\"imageCroppedSecondType($event,3)\"\n                                                (imageLoaded)=\"imageLoadedProfile()\"\n                                                (cropperReady)=\"cropperReadyProfile()\"\n                                                (loadImageFailed)=\"loadImageFailedProfile()\"\n                                                onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                                style=\"height: 230px;width: 170px;\">\n                                            </image-cropper>\n                                        </span>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <label>Photos previews</label>\n                                        <div class=\"row\">\n                                            <div class=\"col-md-4\">\n                                                <img [src]=\"url31\"\n                                                    onerror=\"this.src='../../../assets/images/avtaar/1.jpg';\"\n                                                    style=\"height:  230px;width: 170px;\">\n                                            </div>\n                                            <div class=\"col-md-8\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-md-6\">\n                                                        <img [src]=\"url32\"\n                                                            onerror=\"this.src='../../../assets/images/avtaar/2.jpg';\"\n                                                            style=\"height:  120px;width: 165px;\">\n                                                    </div>\n                                                    <div class=\"col-md-6\">\n                                                        <img [src]=\"url33\"\n                                                            onerror=\"this.src='../../../assets/images/avtaar/3.jpg';\"\n                                                            style=\"height:  120px;width: 165px;\">\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-12\" *ngIf=\"NewsAndUpdates.photo_type=='7'\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-12\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md-2\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-md-12\">\n                                                        <div class=\"upload-btn-wrapper\">\n                                                            <button class=\"btn2\">Upload Photo 1</button><span\n                                                                style=\"color:#ff0000;\"> *</span>\n                                                            <input type=\"file\" id=\"photo1 \" name=\"photo1 \"\n                                                                (change)=\"fileChangeEventProfile($event,1)\"\n                                                                >\n                                                            <input type=\"hidden\" name=\"imagePath71\"\n                                                            [(ngModel)]=\"NewsAndUpdates.thirdType1\"\n                                                            formControlName=\"imagePath71\" />\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md-12\">\n                                                        <div class=\"upload-btn-wrapper\">\n                                                            <button class=\"btn2\">Upload Photo 2</button><span\n                                                                style=\"color:#ff0000;\"> *</span>\n                                                            <input type=\"file\" id=\"photo2 \" name=\"photo2 \"\n                                                                (change)=\"fileChangeEventProfile($event,2)\"\n                                                                >\n                                                            <input type=\"hidden\" name=\"imagePath2\"\n                                                            [(ngModel)]=\"NewsAndUpdates.thirdType2\"\n                                                            formControlName=\"imagePath72\" />\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md-12\">\n                                                        <div class=\"upload-btn-wrapper\">\n                                                            <button class=\"btn2\">Upload Photo 3</button><span\n                                                                style=\"color:#ff0000;\"> *</span>\n                                                            <input type=\"file\" id=\"photo3 \" name=\"photo3 \"\n                                                                (change)=\"fileChangeEventProfile($event,3)\"\n                                                               >\n                                                            <input type=\"hidden\" name=\"imagePath3\"\n                                                            [(ngModel)]=\"NewsAndUpdates.thirdType3\"\n                                                            formControlName=\"imagePath73\" />\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md-12\">\n                                                        <div class=\"upload-btn-wrapper\">\n                                                            <button class=\"btn2\">Upload Photo 4</button><span\n                                                                style=\"color:#ff0000;\"> *</span>\n                                                            <input type=\"file\" id=\"photo4 \" name=\"photo4 \"\n                                                                (change)=\"fileChangeEventProfile($event,4)\"\n                                                                >\n                                                            <input type=\"hidden\" name=\"imagePath1\"\n                                                            [(ngModel)]=\"NewsAndUpdates.thirdType4\"\n                                                            formControlName=\"imagePath74\" />\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md-12\">\n                                                        <div class=\"upload-btn-wrapper\">\n                                                            <button class=\"btn2\">Upload Photo 5</button><span\n                                                                style=\"color:#ff0000;\"> *</span>\n                                                            <input type=\"file\" id=\"photo5 \" name=\"photo5 \"\n                                                                (change)=\"fileChangeEventProfile($event,5)\"\n                                                                >\n                                                            <input type=\"hidden\" name=\"imagePath1\"\n                                                            [(ngModel)]=\"NewsAndUpdates.thirdType5\"\n                                                            formControlName=\"imagePath75\" />\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md-12\">\n                                                        <div class=\"upload-btn-wrapper\">\n                                                            <button class=\"btn2\">Upload Photo 6</button><span\n                                                                style=\"color:#ff0000;\"> *</span>\n                                                            <input type=\"file\" id=\"photo6 \" name=\"photo6 \"\n                                                                (change)=\"fileChangeEventProfile($event,6)\"\n                                                               >\n                                                            <input type=\"hidden\" name=\"imagePath1\"\n                                                            [(ngModel)]=\"NewsAndUpdates.thirdType6\"\n                                                            formControlName=\"imagePath76\" />\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md-12\">\n                                                        <div class=\"upload-btn-wrapper\">\n                                                            <button class=\"btn2\">Upload Photo 7</button><span\n                                                                style=\"color:#ff0000;\"> *</span>\n                                                            <input type=\"file\" id=\"photo7 \" name=\"photo7 \"\n                                                                (change)=\"fileChangeEventProfile($event,7)\"\n                                                               >\n                                                            <input type=\"hidden\" name=\"imagePath1\"\n                                                            [(ngModel)]=\"NewsAndUpdates.thirdType7\"\n                                                            formControlName=\"imagePath77\"/>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md-4\">\n                                                <span *ngIf=\"imageChangedEvent71 !=''\">\n                                                    <image-cropper id=\"ImagecropperProfile1\"\n                                                        [imageChangedEvent]=\"imageChangedEvent71\"\n                                                        [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                                                        (imageCropped)=\"imageCroppedProfile($event,1)\"\n                                                        (imageLoaded)=\"imageLoadedProfile()\"\n                                                        (cropperReady)=\"cropperReadyProfile()\"\n                                                        (loadImageFailed)=\"loadImageFailedProfile()\"\n                                                        onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                                        style=\"height: 230px;width: 170px;\">\n                                                    </image-cropper>\n                                                </span>\n                                                <span *ngIf=\"imageChangedEvent72 !=''\">\n                                                    <image-cropper id=\"Imagecropper1\"\n                                                        [imageChangedEvent]=\"imageChangedEvent72\"\n                                                        [maintainAspectRatio]=\"true\" [aspectRatio]=\"6/4\" format=\"jpeg\"\n                                                        (imageCropped)=\"imageCroppedProfile($event,2)\"\n                                                        (imageLoaded)=\"imageLoadedProfile()\"\n                                                        (cropperReady)=\"cropperReadyProfile()\"\n                                                        (loadImageFailed)=\"loadImageFailedProfile()\"\n                                                        onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                                        style=\"height: 230px;width: 170px;\">\n                                                    </image-cropper>\n                                                </span>\n                                                <span *ngIf=\"imageChangedEvent73 !=''\">\n                                                    <image-cropper id=\"ImagecropperProfile1\"\n                                                        [imageChangedEvent]=\"imageChangedEvent73\"\n                                                        [maintainAspectRatio]=\"true\" [aspectRatio]=\"6/4\" format=\"jpeg\"\n                                                        (imageCropped)=\"imageCroppedProfile($event,3)\"\n                                                        (imageLoaded)=\"imageLoadedProfile()\"\n                                                        (cropperReady)=\"cropperReadyProfile()\"\n                                                        (loadImageFailed)=\"loadImageFailedProfile()\"\n                                                        onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                                        style=\"height: 230px;width: 170px;\">\n                                                    </image-cropper>\n                                                </span>\n                                                <span *ngIf=\"imageChangedEvent74 !=''\">\n                                                    <image-cropper id=\"ImagecropperProfile1\"\n                                                        [imageChangedEvent]=\"imageChangedEvent74\"\n                                                        [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                                                        (imageCropped)=\"imageCroppedProfile($event,4)\"\n                                                        (imageLoaded)=\"imageLoadedProfile()\"\n                                                        (cropperReady)=\"cropperReadyProfile()\"\n                                                        (loadImageFailed)=\"loadImageFailedProfile()\"\n                                                        onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                                        style=\"height: 230px;width: 170px;\">\n                                                    </image-cropper>\n                                                </span>\n                                                <span *ngIf=\"imageChangedEvent75 !=''\">\n                                                    <image-cropper id=\"ImagecropperProfile1\"\n                                                        [imageChangedEvent]=\"imageChangedEvent75\"\n                                                        [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                                                        (imageCropped)=\"imageCroppedProfile($event,5)\"\n                                                        (imageLoaded)=\"imageLoadedProfile()\"\n                                                        (cropperReady)=\"cropperReadyProfile()\"\n                                                        (loadImageFailed)=\"loadImageFailedProfile()\"\n                                                        onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                                        style=\"height: 230px;width: 170px;\">\n                                                    </image-cropper>\n                                                </span>\n                                                <span *ngIf=\"imageChangedEvent76 !=''\">\n                                                    <image-cropper id=\"ImagecropperProfile1\"\n                                                        [imageChangedEvent]=\"imageChangedEvent76\"\n                                                        [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                                                        (imageCropped)=\"imageCroppedProfile($event,6)\"\n                                                        (imageLoaded)=\"imageLoadedProfile()\"\n                                                        (cropperReady)=\"cropperReadyProfile()\"\n                                                        (loadImageFailed)=\"loadImageFailedProfile()\"\n                                                        onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                                        style=\"height: 230px;width: 170px;\">\n                                                    </image-cropper>\n                                                </span>\n                                                <span *ngIf=\"imageChangedEvent77 !=''\">\n                                                    <image-cropper id=\"ImagecropperProfile1\"\n                                                        [imageChangedEvent]=\"imageChangedEvent77\"\n                                                        [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                                                        (imageCropped)=\"imageCroppedProfile($event,7)\"\n                                                        (imageLoaded)=\"imageLoadedProfile()\"\n                                                        (cropperReady)=\"cropperReadyProfile()\"\n                                                        (loadImageFailed)=\"loadImageFailedProfile()\"\n                                                        onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                                        style=\"height: 230px;width: 170px;\">\n                                                    </image-cropper>\n                                                </span>\n                                            </div>\n                                            <div class=\"col-md-6\">\n                                                <label>Photos previews</label>\n                                                <div class=\"row\">\n                                                    <div class=\"col-md-4\">\n                                                        <img [src]=\"url1\"\n                                                            onerror=\"this.src='../../../assets/images/avtaar/1.jpg';\"\n                                                            style=\"height:  230px;width: 170px;\">\n                                                    </div>\n                                                    <div class=\"col-md-8\">\n                                                        <div class=\"row\">\n                                                            <div class=\"col-md-6\">\n                                                                <img [src]=\"url2\"\n                                                                    onerror=\"this.src='../../../assets/images/avtaar/2.jpg';\"\n                                                                    style=\"height:  120px;width: 165px;\">\n                                                            </div>\n                                                            <div class=\"col-md-6\">\n                                                                <img [src]=\"url3\"\n                                                                    onerror=\"this.src='../../../assets/images/avtaar/3.jpg';\"\n                                                                    style=\"height:  120px;width: 165px;\">\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"row\">\n                                                            <div class=\"col-md-3\">\n                                                                <img [src]=\"url4\"\n                                                                    onerror=\"this.src='../../../assets/images/avtaar/4.jpg';\"\n                                                                    style=\"height:  100px;width: 75px;\">\n                                                            </div>\n                                                            <div class=\"col-md-3\">\n                                                                <img [src]=\"url5\"\n                                                                    onerror=\"this.src='../../../assets/images/avtaar/5.jpg';\"\n                                                                    style=\"height:  100px;width: 75px;\">\n                                                            </div>\n                                                            <div class=\"col-md-3\">\n                                                                <img [src]=\"url6\"\n                                                                    onerror=\"this.src='../../../assets/images/avtaar/6.jpg';\"\n                                                                    style=\"height:  100px;width: 75px;\">\n                                                            </div>\n                                                            <div class=\"col-md-3\">\n                                                                <img [src]=\"url7\"\n                                                                    onerror=\"this.src='../../../assets/images/avtaar/7.jpg';\"\n                                                                    style=\"height:  100px;width: 75px;\">\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <!-- <div class=\"col-md-1\">\n                                <label>Seq No.</label>\n                                <input type=\"text\" formControlName=\"seq_no\" id=\"seq_no\" class=\"form-control\"\n                                    [(ngModel)]=\"NewsAndUpdates.seq_no\">\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!newsAndUpdatesForm.controls.seq_no.valid && newsAndUpdatesForm.controls.seq_no.touched\">\n                                    <div *ngIf=\"newsAndUpdatesForm.get('seq_no').hasError('required')\">Sequence\n                                        No. is required</div>\n                                </div>\n                            </div> -->\n                            <div class=\"col-md-3\">\n                                <label>Author Name</label>\n                                <input type=\"text\" class=\"form-control\" name=\"userName\" id=\"userName\"\n                                    [(ngModel)]=\"NewsAndUpdates.userName\" formControlName=\"userName\">\n                            </div>\n                            <div class=\"col-md-2\">\n                                <label>Author Photo</label><br>\n                                <div class=\"upload-btn-wrapper\">\n                                    <button class=\"btn1\">Upload Photo</button>\n                                    <input type=\"file\" name=\"fileUploader\" (change)=\"authorPhoto($event)\">\n                                    <input type=\"hidden\" formControlName=\"imagePath\">\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <img [src]=\"userCroppedPhoto\" onerror=\"this.src='../../../assets/images/avtaar/1.jpg';\"\n                                    style=\"height: auto;width: 30%;\">\n                            </div>\n                            <div class=\"col-md-3\">\n                                <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent\"\n                                    [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                                    (imageCropped)=\"userPhotoCropped($event)\" (imageLoaded)=\"imageLoaded()\"\n                                    (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                                    onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                    style=\"height:230px; width:170px;\">\n                                </image-cropper>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-12\" style=\"margin-left: 2%;\">\n                                <button type=\"button \" class=\"btn btn-success\" style=\"margin-right: 13px;\"\n                                    (click)=\"OnSubmit()\">Submit</button>\n                                <button type=\"button\" class=\"btn btn-primary\"\n                                    (click)=\"clearNewsAndUpdate();\">Clear</button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <!-- <div class=\"card\">\n        <div class=\"card-header\">List Of News</div>\n        <div class=\"row\"> -->\n    <ul class=\"container nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\n        <!-- <li class=\"nav-item\">\n                    <a class=\"nav-link\" id=\"AddNews-tab\" data-toggle=\"pill\" href=\"#AddNews\" role=\"tab\" aria-controls=\"AddNews\"\n                        aria-selected=\"false\">Add News</a>\n                </li> -->\n        <li class=\"nav-item\">\n            <a class=\"nav-link active\" id=\"movienews-tab\" data-toggle=\"pill\" href=\"#movienews\" role=\"tab\"\n                aria-controls=\"movienews\" aria-selected=\"true\">Movie News List</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" id=\"tvnews-tab\" data-toggle=\"pill\" href=\"#tvnews\" role=\"tab\" aria-controls=\"tvnews\"\n                aria-selected=\"false\">TV News List</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" id=\"splarticle-tab\" data-toggle=\"pill\" href=\"#splarticle\" role=\"tab\"\n                aria-controls=\"splarticle\" aria-selected=\"false\">Special Articles List</a>\n        </li>\n    </ul>\n    <div class=\"tab-content\" id=\"pills-tabContent\">\n        <!-- <div class=\"tab-pane fade\" id=\"AddNews\" role=\"tabpanel\" aria-labelledby=\"AddNews-tab\">\n            </div> -->\n        <div class=\"tab-pane fade show active\" id=\"movienews\" role=\"tabpanel\" aria-labelledby=\"movienews-tab\">\n            <div class=\"card \">\n                <div class=\"card-header\">\n                    MOVIE NEWS LIST\n                </div>\n                <div class=\"card-body\">\n                    <table class=\"table table-striped table-bordered table-sm row-border hover\" datatable\n                        [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" style=\"width: 100%\">\n                        <thead>\n                            <tr>\n                                <th class=\"newsth\">Sl.No.</th>\n                                <th class=\"newsth\">News Title</th>\n                                <th class=\"newsth\">News Type</th>\n                                <th class=\"newsth\">Template Type</th>\n                                <th class=\"newsth\">Uploaded At</th>\n                                <th class=\"newsth\">Image Previews</th>\n                                <!-- <th class=\"newsth\">Seq No</th> -->\n                                <th class=\"newsth\">Action</th>\n                            </tr>\n                        </thead>\n                        <tbody *ngFor=\"let gd of movieNewsList; let i=index\">\n                            <tr *ngIf=\"gd.type == 'MovieNews'\">\n                                <td style=\"text-align: right;\">{{i + 1}}</td>\n                                <td>{{gd.title |slice:0:50}}</td>\n                                <td>{{gd.type}}</td>\n                                <td style=\"text-align: center;\">{{gd.templateId}}</td>\n                                <td style=\"text-align: center;\">{{gd.createdDate | date:'dd-MM-yyyy hh:mm'}}\n                                </td>\n                                <td style=\"text-align: center;\"><img [src]=\"gd.imagePath\"\n                                        style=\"width: 40px;height: auto;\">\n                                </td>\n                                <!-- <td style=\"text-align: right;\">{{gd.sequenceNumber}}</td> -->\n                                <td style=\"text-align: center;\">\n                                    <i class=\"fa fa-pencil-square-o \" aria-hidden=\"true \"\n                                        (click)=\"EditNewsAndUpdate(gd.id)\"></i>&nbsp;&nbsp;\n                                    <i class=\"fa fa-trash\" aria-hidden=\"true\" (click)=\"DeleteNewsAndUpdate(gd.id)\"></i>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane fade\" id=\"tvnews\" role=\"tabpanel\" aria-labelledby=\"tvnews-tab\">\n            <div class=\"card \">\n                <div class=\"card-header\">\n                    TV NEWS LIST\n                </div>\n                <div class=\"card-body\">\n                    <table class=\"table table-striped table-bordered table-sm row-border hover\" datatable\n                        [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" style=\"width: 100%\">\n                        <thead>\n                            <tr>\n                                <th class=\"newsth\">Sl.No.</th>\n                                <th class=\"newsth\">News Title</th>\n                                <th class=\"newsth\">News Type</th>\n                                <th class=\"newsth\">Template Type</th>\n                                <th class=\"newsth\">Uploaded At</th>\n                                <th class=\"newsth\">Image Previews</th>\n                                <!-- <th class=\"newsth\">Seq No</th> -->\n                                <th class=\"newsth\">Action</th>\n                            </tr>\n                        </thead>\n                        <tbody *ngFor=\"let gd of tvNewsList; let i=index\">\n                            <tr *ngIf=\"gd.type == 'TvNews'\">\n                                <td style=\"text-align: right;\">{{i + 1}}</td>\n                                <td>{{gd.title |slice:0:50}}</td>\n                                <td>{{gd.type}}</td>\n                                <td style=\"text-align: center;\">{{gd.templateId}}</td>\n                                <td style=\"text-align: center;\">{{gd.createdDate | date:'dd-MM-yyyy hh:mm'}}\n                                </td>\n                                <td style=\"text-align: center;\"><img [src]=\"gd.imagePath\"\n                                        style=\"width: 40px;height: auto;\">\n                                </td>\n                                <!-- <td style=\"text-align: right;\">{{gd.sequenceNumber}}</td> -->\n                                <td style=\"text-align: center;\">\n                                    <i class=\"fa fa-pencil-square-o \" aria-hidden=\"true \"\n                                        (click)=\"EditNewsAndUpdate(gd.id)\"></i>&nbsp;&nbsp;\n                                    <i class=\"fa fa-trash\" aria-hidden=\"true\" (click)=\"DeleteNewsAndUpdate(gd.id)\"></i>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane fade\" id=\"splarticle\" role=\"tabpanel\" aria-labelledby=\"splarticle-tab\">\n            <div class=\"card \">\n                <div class=\"card-header\">\n                    SPECIAL ARTICLE LIST\n                </div>\n                <div class=\"card-body\">\n                    <table class=\"table table-striped table-bordered table-sm row-border hover\" datatable\n                        [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" style=\"width: 100%\">\n                        <thead>\n                            <tr>\n                                <th class=\"newsth\">Sl.No.</th>\n                                <th class=\"newsth\">News Title</th>\n                                <th class=\"newsth\">News Type</th>\n                                <th class=\"newsth\">Template Type</th>\n                                <th class=\"newsth\">Uploaded At</th>\n                                <th class=\"newsth\">Image Previews</th>\n                                <!-- <th class=\"newsth\">Seq No</th> -->\n                                <th class=\"newsth\">Action</th>\n                            </tr>\n                        </thead>\n                        <tbody *ngFor=\"let gd of specialArticleList; let i=index\">\n                            <tr *ngIf=\"gd.type == 'special_article'\">\n                                <td style=\"text-align: right;\">{{i + 1}}</td>\n                                <td>{{gd.title |slice:0:50}}</td>\n                                <td>{{gd.type}}</td>\n                                <td style=\"text-align: center;\">{{gd.templateId}}</td>\n                                <td style=\"text-align: center;\">{{gd.createdDate | date:'dd-MM-yyyy hh:mm'}}\n                                </td>\n                                <td style=\"text-align: center;\"><img [src]=\"gd.imagePath\"\n                                        style=\"width: 40px;height: auto;\">\n                                </td>\n                                <!-- <td style=\"text-align: right;\">{{gd.sequenceNumber}}</td> -->\n                                <td style=\"text-align: center;\">\n                                    <i class=\"fa fa-pencil-square-o \" aria-hidden=\"true \"\n                                        (click)=\"EditNewsAndUpdate(gd.id)\"></i>&nbsp;&nbsp;\n                                    <i class=\"fa fa-trash\" aria-hidden=\"true\" (click)=\"DeleteNewsAndUpdate(gd.id)\"></i>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- </div>\n    </div> -->\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/master/notificationchatlist/notificationchatlist.component.html":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/master/notificationchatlist/notificationchatlist.component.html ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"container\">\n  <aside>\n    <header>\n      <input type=\"text\" placeholder=\"search\" (keyup)=\"callUserGetApi($event)\">\n    </header>\n    <ul>\n      <li *ngFor=\"let user of userDetails;let i = index;\" (click)=\"getUserChatDetails(user.userId)\">\n        <img [src]=\"user.userImage\" alt=\"\" >\n        <div>\n          <h2>{{user.userName}}</h2>\n          <h3>\n            <span>last message at {{user.lastMessageDate}}</span>\n          </h3>\n        </div>\n      </li>\n    </ul>\n  </aside>\n  <main>\n    <header>\n      <img [src]=\"chatuserdetails.userImage\" alt=\"\">\n      <div>\n        <h2 style=\"color:#fff;\">{{chatuserdetails.userName}}</h2>\n      </div>\n    </header>\n    <ul id=\"chat\">\n      <div *ngFor=\"let userChat of chatDetails; let i=index;\">\n        <li *ngIf=\"userChat.sentReceivedFlag == 1\" class=\"me\">\n          <div class=\"entete\">\n            <h3>{{userChat.lastMessageDate}}</h3>\n            <span class=\"status blue\"></span>\n          </div>\n          <div class=\"triangle\"></div>\n          <div class=\"message\">\n            {{userChat.message}}\n          </div>\n        </li>\n        <li *ngIf=\"userChat.sentReceivedFlag != 1\" class=\"you\">\n          <div class=\"entete\">\n            <span class=\"status green\"></span>\n            <h3>{{userChat.lastMessageDate}}</h3>\n          </div>\n          <div class=\"triangle\"></div>\n          <div class=\"message\">\n            {{userChat.message}}\n          </div>\n        </li>\n      </div>\n    </ul>\n    <footer>\n      <form novalidate [formGroup]=\"messageForm\" class=\"form-horizontal\">\n        <textarea placeholder=\"Type your message\" formControlName=\"message\"></textarea>\n        <button type=\"submit\" [disabled]=\"!messageForm.valid\" (click)=\"sendMessage()\">Send</button>\n      </form>\n    </footer>\n  </main>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/master/notificationpanel/notificationpanel.component.html":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/master/notificationpanel/notificationpanel.component.html ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container\">\n  <div class=\"card\" style=\"margin-top: 1%\">\n    <div class=\"card-header\">Notification Panel</div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <form novalidate [formGroup]=\"notificationForm\" class=\"form-horizontal\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col-md-2\">\n                <div class=\"custom-control custom-radio\">\n                  <input type=\"radio\" class=\"custom-control-input\" formControlName=\"type\" id=\"basic\" name=\"type\"\n                    value=\"All\" [(ngModel)]=\"notifiModal.type\" (change)=\"selectType(notifiModal.type);\">\n                  <label class=\"custom-control-label\" for=\"basic\">All</label>\n                </div>\n              </div>\n              <!-- <div class=\"col-md-2\">\n                <div class=\"custom-control custom-radio\">\n                  <input type=\"radio\" class=\"custom-control-input\" formControlName=\"type\" id=\"profile\" name=\"type\"\n                    value=\"Individual\" [(ngModel)]=\"notifiModal.type\" (change)=\"selectType(notifiModal.type)\">\n                  <label class=\"custom-control-label\" for=\"profile\">Individual</label>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n              </div>\n              <div class=\"col-md-4\" *ngIf=\"notifiModal.showDropDown\">\n                <label>Search Member</label><span style=\"color:#ff0000;\"> *</span>\n                <angular2-multiselect [data]=\"notifiModal.memberList\" formControlName=\"MemberName\"\n                  [settings]=\"memberNewsSettings\" (onSelect)=\"selectedMemId($event)\" name=\"memname\" id=\"memname\">\n                  <c-search>\n                    <ng-template>\n                      <input type=\"text\" (keyup)=\"getMemberList($event)\" placeholder=\"Search Members\"\n                        style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                    </ng-template>\n                  </c-search>\n                  <c-item>\n                    <ng-template let-item=\"item\">\n                      <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                      <label>{{item.itemName}}</label>\n                    </ng-template>\n                  </c-item>\n                </angular2-multiselect>\n              </div> -->\n              <div class=\"col-md-12\"></div>\n              <!-- <div class=\"col-md-6\">\n                <br>\n                <label>Notification Title</label><span style=\"color:#ff0000;\"> *</span>\n                <textarea class=\"form-control\" formControlName=\"title\" name=\"title\" id=\"title\"\n                  [(ngModel)]=\"notifiModal.title\"></textarea>\n              </div> -->\n              <div class=\"col-md-12\" style=\"height: 5%\">\n                <label class=\"labelhead\">Notification</label><span style=\"color:#ff0000;\"> *</span>\n                <quill-editor rows=\"2\" [modules]=\"modules\" formControlName=\"title\" name=\"title\" id=\"title\"\n                  [(ngModel)]=\"notifiModal.title\" [maxLength]=\"100\" ></quill-editor>\n                <div class=\"alert alert-danger\" role=\"alert\"\n                  *ngIf=\"!notificationForm.controls.title.valid && notificationForm.controls.title.touched\">\n                  <div *ngIf=\"notificationForm.get('title').hasError('required')\">Notification is required\n                  </div>\n                  <div *ngIf=\"notificationForm.get('title').hasError('minlength')\">Notification must be 3 characters\n                  </div>\n                  <div *ngIf=\"notificationForm.get('title').hasError('maxlength')\">Notification Can't be more than 200\n                    characters long</div>\n                </div>\n              </div>\n              <div class=\"col-md-12\">\n                <br>\n                <div class=\"row\">\n                  <div class=\"col-md-1\">\n                    <button type=\"button\" class=\"btn btn-success\" (click)=\"onSubmit()\">Submit</button>\n                  </div>\n                  <div class=\"col-md-1\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearNotificationForm();\">&nbsp;Clear&nbsp;\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n\n  <!-- <div class=\"chatbox-holder\">\n    <div [ngClass]=\"chatBoxClass\">\n      <div class=\"chatbox-top\">\n        <div class=\"chatbox-avatar\">\n          <a target=\"_blank\" href=\"https://www.facebook.com/mfreak\"><img\n              src=\"../../../assets/images/logo/logo.png\" /></a>\n        </div>\n        <div class=\"chat-partner-name\">\n          <span class=\"status online\"></span>\n          <a target=\"_blank\" href=\"https://www.facebook.com/mfreak\">SINIGHAMA</a>\n        </div>\n        <div class=\"chatbox-icons\">\n          <a (click)=\"openCloseChatBox(chatBoxClass)\"><i class=\"fa fa-minus\"></i></a>\n        </div>\n      </div>\n\n      <div class=\"chat-messages\">\n        <div *ngFor=\"let userChat of chatDetails.chatDetailsDtoList; let i=index;\" class=\"message-box-holder\">\n          <div *ngIf=\"userChat.sentReceivedFlag != 1\" class=\"message-box\">\n            {{userChat.message}}\n          </div>\n          <div *ngIf=\"userChat.sentReceivedFlag == 1\" class=\"message-box message-partner\">\n            {{userChat.message}}\n          </div>\n        </div>\n      </div>\n\n      <div class=\"chat-input-holder\">\n        <form novalidate [formGroup]=\"messageForm\" style=\"width:100%\">\n          <div class=\"row\">\n            <div class=\"col-sm-10\">\n              <textarea class=\"chat-input\" formControlName=\"message\" style=\"width:100%\"></textarea>\n            </div>\n            <div class=\"col-sm-2\">\n              <button type=\"submit\" [disabled]=\"!messageForm.valid\" class=\"message-send\"\n                (click)=\"sendMessage()\">Send</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>-->\n</div>\n\n<div class=\"container\">\n  <div class=\"card \" style=\"margin-top: 1%\">\n    <div class=\"card-header\">\n      NOTIFICATION LIST\n    </div>\n    <div class=\"card-body\">\n      <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\n        class=\"table table-striped table-bordered table-sm row-border hover\">\n        <thead>\n          <tr>\n            <th>Sl.no</th>\n            <th>Notification</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let notificationdata of notificationdata;index as i\">\n            <td style=\"text-align: right;\">{{i+1}}</td>\n            <td><p [innerHtml]=\"notificationdata.description\"></p></td>\n            <td style=\"text-align:center;\">\n              <i class=\"fa fa-trash\" aria-hidden=\"true\" (click)=\"deleteNotification(notificationdata.id)\"\n                style=\"color:#ff0000;font-size: 21px;\"></i>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/master/profession/profession.component.html":
/*!***************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/master/profession/profession.component.html ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">PROFESSION</div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <form novalidate [formGroup]=\"form\" class=\"form-horizontal\">\n          <div class=\"card-body\" style=\"padding-top: 0px\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"row\">\n                  <div class=\"col-2\">\n                    <div class=\"custom-control custom-radio\">\n                      <input type=\"radio\" class=\"custom-control-input\" id=\"Individual\"\n                        formControlName=\"individualInstitute\" value=\"Individual\"\n                        [(ngModel)]=\"profession.individualInstitute\" (click)=\"setParentList('Individual')\">\n                      <label class=\"custom-control-label\" for=\"Individual\">Individual</label>\n                    </div>\n                  </div>\n                  <div class=\"col-2\">\n                    <div class=\"custom-control custom-radio\">\n                      <input type=\"radio\" class=\"custom-control-input\" id=\"Institute\"\n                        formControlName=\"individualInstitute\" value=\"Institute\"\n                        [(ngModel)]=\"profession.individualInstitute\" (click)=\"setParentList('Institute')\">\n                      <label class=\"custom-control-label\" for=\"Institute\">Institute</label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-12\">\n                <div class=\"row\">\n                  <div class=\"col-md-4\">\n                    <label>Title</label><span style=\"color:red;\">*</span>\n                    <input type=\"text\" class=\"form-control\" maxlength=\"30\" formControlName=\"title\"\n                      [(ngModel)]=\"profession.title\">\n                    <div *ngIf=\"form.get('title').touched && form.get('title').hasError('required')\"\n                      class=\"showErrorMsg\">\n                      Please Enter Title\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <div class=\"row\">\n                      <div class=\"col-md-12\">\n                        <p style=\"font-weight: bold;\">As a</p>\n                      </div>\n                      <div class=\"col-md-2\">\n                        <div class=\"custom-control custom-radio\">\n                          <input type=\"radio\" class=\"custom-control-input\" id=\"parent\" formControlName=\"parentChildType\"\n                            [(ngModel)]=\"profession.parentChildType\" value=\"0\">\n                          <label class=\"custom-control-label\" for=\"parent\">Parent</label>\n                        </div>\n                      </div>\n                      <div class=\"col-md-2\">\n                        <div class=\"custom-control custom-radio\">\n                          <input type=\"radio\" class=\"custom-control-input\" id=\"child\" formControlName=\"parentChildType\"\n                            [(ngModel)]=\"profession.parentChildType\" value=\"1\">\n                          <label class=\"custom-control-label\" for=\"child\">Child</label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\" *ngIf=\"profession.parentChildType=='1'\">\n                    <label>Parent</label><span style=\"color:red;\">*</span>\n                    <select class=\"custom-select\" aria-label=\"Example select with button addon\"\n                      formControlName=\"parentId\" [(ngModel)]=\"profession.parentId\">\n                      <option value=\"\">---Select Service----</option>\n                      <option *ngFor=\"let parent of parentList\" value=\"{{parent.professionId}}\">{{parent.title}}\n                      </option>\n                    </select>\n                    <div *ngIf=\"form.get('parentId').touched && form.get('parentId').hasError('required')\"\n                      class=\"showErrorMsg\">\n                      Please Select Service\n                    </div>\n                  </div>\n                  \n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12\" style=\"margin-left: 1%;\">\n              <button *ngIf=\"!updateButton\" type=\"button\" class=\"btn btn-success\" style=\"margin-right: 13px;\"\n                [disabled]=\"!form.valid\" (click)=\"saveProfession();\">Submit</button>\n              <!-- <button *ngIf=\"updateButton\" type=\"button\" class=\"btn btn-success\" style=\"margin-right: 13px;\"\n              [disabled]=\"!form.valid\" (click)=\"updateStaff()\">Update</button> -->\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearProfession();\">Clear</button>\n            </div>\n            <div class=\"col-6\" style=\"margin: 1%;\">\n              <div class=\"alert alert-primary\" role=\"alert\">\n                Note: If you are adding Parent make sure to add child to respected Parent, after adding Parent\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"container-fluid\">\n  <div class=\"card \">\n    <div class=\"card-header\">\n      PROFESSION LIST\n    </div>\n    <div class=\"card-body\">\n      <table class=\"table table-striped table-bordered table-sm row-border hover\" datatable [dtOptions]=\"dtOptions\"\n        [dtTrigger]=\"dtTrigger\" style=\"width: 100%\">\n        <thead>\n          <tr>\n            <th class=\"newsth\">Sl.No.</th>\n            <th class=\"newsth\">Profession Type</th>\n            <th class=\"newsth\">Parent Name</th>\n            <th class=\"newsth\">Child Name</th>\n            <th class=\"newsth\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let pl of professionList; let i=index\">\n            <td style=\"text-align: right;\">{{i + 1}}</td>\n            <td>{{pl.individualInstitute}}</td>\n            <td>{{pl.parentName}}</td>\n            <td>{{pl.title}}</td>\n            <td style=\"text-align: center;\">\n              <i class=\"fa fa-pencil-square-o \" aria-hidden=\"true \" (click)=\"editProfession(pl)\"></i>&nbsp;&nbsp;\n              <i class=\"fa fa-trash\" aria-hidden=\"true\" (click)=\"deleteProfession(pl)\"></i>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/master/sinighamaservice/sinighamaservice.component.html":
/*!***************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/master/sinighamaservice/sinighamaservice.component.html ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">SINIGHAMA SERVICES</div>\n        <form [formGroup]=\"form\" class=\"form-horizontal\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col-md-3\">\n                <label>Service Type</label><span style=\"color:red;\">*</span>\n                <select class=\"custom-select\" aria-label=\"Example select with button addon\"\n                  formControlName=\"serviceType\" [(ngModel)]=\"siniservicemodel.refSiniServiceId\">\n                  <option *ngFor=\"let type of serviceTypeList\" value=\"{{type.siniServiceId}}\">{{type.serviceType}}\n                  </option>\n                </select>\n                <div *ngIf=\"form.get('serviceType').touched && form.get('serviceType').hasError('required')\"\n                  class=\"showErrorMsg\">\n                  Please Select Service\n                </div>\n              </div>\n              <div class=\"col-md-3\">\n                <label>Title</label><span style=\"color:red;\">*</span>\n                <input type=\"text\" class=\"form-control\" maxlength=\"50\" formControlName=\"serviceName\"\n                  [(ngModel)]=\"siniservicemodel.serviceName\">\n                <div *ngIf=\"form.get('serviceName').touched && form.get('serviceName').hasError('required')\"\n                  class=\"showErrorMsg\">\n                  Please Enter Title\n                </div>\n              </div>\n              <div class=\"col-md-3\">\n                <label>Link URL</label><span style=\"color:red;\">*</span>\n                <input type=\"text\" class=\"form-control\" formControlName=\"serviceLink\"\n                  [(ngModel)]=\"siniservicemodel.serviceLink\">\n                <div *ngIf=\"form.get('serviceLink').touched && form.get('serviceLink').hasError('required')\"\n                  class=\"showErrorMsg\">\n                  Please Enter Link URL\n                </div>\n              </div>\n              <div class=\"col-md-3\">\n                <label>Sequence Number</label>\n                <input type=\"text\" formControlName=\"sequenceNumber\" class=\"form-control\" id=\"sequenceNumber\"\n                  maxlength=\"3\" [(ngModel)]=\"siniservicemodel.sequenceNumber\">\n                <div *ngIf=\"form.get('sequenceNumber').touched && form.get('sequenceNumber').hasError('required')\"\n                  class=\"showErrorMsg\">\n                  Please Enter Sequence Number\n                </div>\n              </div>\n              <div class=\"col-md-9\" style=\"margin-top:2%\">\n                <div class=\"row\">\n                  <div class=\"col-md-2\">\n                    <label></label>\n                    <div class=\"upload-btn-wrapper\">\n                      <button class=\"btn1\">Upload\n                        Photo</button><span style=\"color:red;\">*</span>\n                      <input type=\"file\" id=\"propic\" name=\"propic\" (change)=\"addImageUpload($event)\">\n                      <input type=\"hidden\" name=\"fileHidden\" formControlName=\"serviceImage\"\n                        [(ngModel)]=\"siniservicemodel.serviceImageURL\">\n                      <div *ngIf=\"form.get('serviceImage').touched && form.get('serviceImage').hasError('required')\"\n                        class=\"showErrorMsg\">\n                        Please Enter Link URL\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-2\">\n                    <img [src]=\"croppedImage\" onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                      style=\"width: 80%;height: auto;\">\n                  </div>\n                  <div class=\"col-md-2\" style=\"margin-left: 2%;\">\n                    <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent\"\n                      [maintainAspectRatio]=\"true\" [aspectRatio]=\"aspectRatio\" format=\"jpeg\"\n                      (imageCropped)=\"imageCropped($event)\" (imageLoaded)=\"imageLoaded()\"\n                      (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                      onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height:auto; width:80%;\">\n                    </image-cropper>\n                  </div>\n                </div>\n              </div>\n              <input type=\"hidden\" formControlName=\"serviceId\" value=\"0\"\n                [(ngModel)]=\"siniservicemodel.trxSiniServiceId\">\n            </div>\n            <div class=\"col-md-12 \">\n              <button *ngIf=\"!updateButton\" type=\"button\" class=\"btn btn-success\" style=\"margin-right: 13px;\"\n                [disabled]=\"!form.valid\" (click)=\"saveSinighamaService();\">Submit</button>\n              <button *ngIf=\"updateButton\" type=\"button\" class=\"btn btn-success\" style=\"margin-right: 13px;\"\n                [disabled]=\"!form.valid\" (click)=\"updateStaff()\">Update</button>\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearForm();\">Clear</button>\n              <!--<button type=\"button\" class=\"btn btn-danger\" style=\"margin-top: 6%;color: #fff\">Close</button> -->\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n<ul class=\"container nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" id=\"sm-tab\" data-toggle=\"pill\" href=\"#sm\" role=\"tab\" aria-controls=\"sm\"\n      aria-selected=\"true\">Social Media</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"sg-tab\" data-toggle=\"pill\" href=\"#sg\" role=\"tab\" aria-controls=\"sg\"\n      aria-selected=\"false\">Sinighama Group</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"sp-tab\" data-toggle=\"pill\" href=\"#sp\" role=\"tab\" aria-controls=\"sp\"\n      aria-selected=\"false\">Sinighama Patners</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"sc-tab\" data-toggle=\"pill\" href=\"#sc\" role=\"tab\" aria-controls=\"sc\"\n      aria-selected=\"false\">Sinighama Co-Sponcers</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" id=\"fo-tab\" data-toggle=\"pill\" href=\"#fo\" role=\"tab\" aria-controls=\"fo\"\n      aria-selected=\"false\">Film Organization</a>\n  </li>\n</ul>\n<div class=\"tab-content\" id=\"pills-tabContent\">\n  <div class=\"tab-pane fade show active\" id=\"sm\" role=\"tabpanel\" aria-labelledby=\"sm-tab\">\n    <div class=\"container-fluid\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          SINIGHAMA SOCIAL NETWORK LIST\n        </div>\n        <div class=\"card-body\">\n          <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\n            class=\"table table-striped table-bordered table-sm row-border hover\">\n            <thead>\n              <tr>\n                <th>Sl.no</th>\n                <th>Service Type</th>\n                <th>Title</th>\n                <th>Link URL</th>\n                <th>Image</th>\n                <th>Seq No</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let vl of sininetworkList; let i=index\">\n                <td>{{i+1}}</td>\n                <td>{{vl.serviceType}}</td>\n                <td>{{vl.serviceName}}</td>\n                <td>{{vl.serviceLink}}</td>\n                <td><img [src]=\"vl.serviceImageURL\" height=\"auto\" width=\"70px\"></td>\n                <td>{{vl.sequenceNumber}}</td>\n                <td> <i class=\"fa fa-pencil-square-o \" aria-hidden=\"true \"\n                    (click)=\"editSiniGhamaService(vl)\"></i>&nbsp;&nbsp;\n                  <i class=\"fa fa-trash\" aria-hidden=\"true \" (click)=\"deleteSinighamaService(vl)\"></i>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"tab-pane fade\" id=\"sg\" role=\"tabpanel\" aria-labelledby=\"sg-tab\">\n    <div class=\"container-fluid\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          SINIGHAMA GROUP LIST\n        </div>\n        <div class=\"card-body\">\n          <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\n            class=\"table table-striped table-bordered table-sm row-border hover\">\n            <thead>\n              <tr>\n                <th>Sl.no</th>\n                <th>Service Type</th>\n                <th>Title</th>\n                <th>Link URL</th>\n                <th>Image</th>\n                <th>Seq No</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let vl of sinigroupList; let i=index\">\n                <td>{{i+1}}</td>\n                <td>{{vl.serviceType}}</td>\n                <td>{{vl.serviceName}}</td>\n                <td>{{vl.serviceLink}}</td>\n                <td><img [src]=\"vl.serviceImageURL\" height=\"auto\" width=\"70px\"></td>\n                <td>{{vl.sequenceNumber}}</td>\n                <td> <i class=\"fa fa-pencil-square-o \" aria-hidden=\"true \"\n                    (click)=\"editSiniGhamaService(vl)\"></i>&nbsp;&nbsp;\n                  <i class=\"fa fa-trash\" aria-hidden=\"true \" (click)=\"deleteSinighamaService(vl)\"></i>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"tab-pane fade\" id=\"sp\" role=\"tabpanel\" aria-labelledby=\"sp-tab\">\n    <div class=\"container-fluid\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          SINIGHAMA PATENRS LIST\n        </div>\n        <div class=\"card-body\">\n          <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\n            class=\"table table-striped table-bordered table-sm row-border hover\">\n            <thead>\n              <tr>\n                <th>Sl.no</th>\n                <th>Service Type</th>\n                <th>Title</th>\n                <th>Link URL</th>\n                <th>Image</th>\n                <th>Seq No</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let vl of sinipatnersList; let i=index\">\n                <td>{{i+1}}</td>\n                <td>{{vl.serviceType}}</td>\n                <td>{{vl.serviceName}}</td>\n                <td>{{vl.serviceLink}}</td>\n                <td><img [src]=\"vl.serviceImageURL\" height=\"auto\" width=\"70px\"></td>\n                <td>{{vl.sequenceNumber}}</td>\n                <td> <i class=\"fa fa-pencil-square-o \" aria-hidden=\"true \"\n                    (click)=\"editSiniGhamaService(vl)\"></i>&nbsp;&nbsp;\n                  <i class=\"fa fa-trash\" aria-hidden=\"true \" (click)=\"deleteSinighamaService(vl)\"></i>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"tab-pane fade\" id=\"sc\" role=\"tabpanel\" aria-labelledby=\"sc-tab\">\n    <div class=\"container-fluid\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          SINIGHAMA CO-SPONCERS LIST\n        </div>\n        <div class=\"card-body\">\n          <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\n            class=\"table table-striped table-bordered table-sm row-border hover\">\n            <thead>\n              <tr>\n                <th>Sl.no</th>\n                <th>Service Type</th>\n                <th>Title</th>\n                <th>Link URL</th>\n                <th>Image</th>\n                <th>Seq No</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let vl of sinicosponcersList; let i=index\">\n                <td>{{i+1}}</td>\n                <td>{{vl.serviceType}}</td>\n                <td>{{vl.serviceName}}</td>\n                <td>{{vl.serviceLink}}</td>\n                <td><img [src]=\"vl.serviceImageURL\" height=\"auto\" width=\"70px\"></td>\n                <td>{{vl.sequenceNumber}}</td>\n                <td> <i class=\"fa fa-pencil-square-o \" aria-hidden=\"true \"\n                    (click)=\"editSiniGhamaService(vl)\"></i>&nbsp;&nbsp;\n                  <i class=\"fa fa-trash\" aria-hidden=\"true \" (click)=\"deleteSinighamaService(vl)\"></i>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"tab-pane fade\" id=\"fo\" role=\"tabpanel\" aria-labelledby=\"fo-tab\">\n    <div class=\"container-fluid\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          Film Organization Details\n        </div>\n        <div class=\"card-body\">\n          <table class=\"table table-striped table-bordered table-sm row-border hover\" datatable [dtOptions]=\"dtOptions\"\n            [dtTrigger]=\"dtTrigger\" style=\"width: 100%\">\n            <thead>\n              <tr>\n                <th>Sl.no</th>\n                <th>Service Type</th>\n                <th>Title</th>\n                <th>Link URL</th>\n                <th>Image</th>\n                <th>Seq No</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let vl of filmoranizationList; let i=index\">\n                <td>{{i+1}}</td>\n                <td>{{vl.serviceType}}</td>\n                <td>{{vl.serviceName}}</td>\n                <td>{{vl.serviceLink}}</td>\n                <td><img [src]=\"vl.serviceImageURL\" height=\"auto\" width=\"70px\"></td>\n                <td>{{vl.sequenceNumber}}</td>\n                <td> <i class=\"fa fa-pencil-square-o \" aria-hidden=\"true \"\n                    (click)=\"editSiniGhamaService(vl)\"></i>&nbsp;&nbsp;\n                  <i class=\"fa fa-trash\" aria-hidden=\"true \" (click)=\"deleteSinighamaService(vl)\"></i>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/master/staff/staff.component.html":
/*!*****************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/master/staff/staff.component.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">Staff Creation</div>\n        <form [formGroup]=\"form\" class=\"form-horizontal\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col-md-3\">\n                <label>Name</label><span style=\"color:red;\">*</span>\n                <input type=\"text\" class=\"form-control\" maxlength=\"30\" formControlName=\"name\">\n                <div *ngIf=\"form.get('name').hasError('pattern')\" class=\"showErrorMsg\">Please enter valid Name\n                </div>\n                <div *ngIf=\"form.get('name').touched && form.get('name').hasError('required')\" class=\"showErrorMsg\">\n                  Please Enter Name\n                </div>\n              </div>\n              <div class=\"col-md-3\">\n                <label>Mobile</label><span style=\"color:red;\">*</span>\n                <input type=\"text\" class=\"form-control\" maxlength=\"10\" formControlName=\"mobile\">\n                <div *ngIf=\"form.get('mobile').hasError('pattern')\" class=\"showErrorMsg\">Please enter valid mobile\n                  number\n                </div>\n                <div *ngIf=\"form.get('mobile').touched && form.get('mobile').hasError('required')\" class=\"showErrorMsg\">\n                  Please Enter Mobile Number\n                </div>\n              </div>\n              <div class=\"col-md-3\">\n                <label>Email</label><span style=\"color:red;\">*</span>\n                <input type=\"text\" class=\"form-control\" maxlength=\"30\" formControlName=\"email\">\n                <div *ngIf=\"form.get('email').hasError('pattern')\" class=\"showErrorMsg\">Please enter valid Email\n                </div>\n                <div *ngIf=\"form.get('email').touched && form.get('email').hasError('required')\" class=\"showErrorMsg\">\n                  Please Enter Email\n                </div>\n              </div>\n              <div class=\"col-md-3\">\n                <label>Address</label><span style=\"color:red;\">*</span>\n                <input type=\"text\" class=\"form-control\" maxlength=\"100\" formControlName=\"address\">\n                \n                <div *ngIf=\"form.get('address').touched && form.get('address').hasError('required')\"\n                  class=\"showErrorMsg\">Please Enter Address\n                </div>\n              </div>\n              <div class=\"col-md-3\">\n                <label>Password</label><span style=\"color:red;\">*</span>\n                <input type=\"password\" style=\"width: 102%;\" class=\"form-control\" maxlength=\"20\" formControlName=\"password\" passwordToggle>\n                <div *ngIf=\"form.get('password').touched && form.get('password').hasError('required')\"\n                  class=\"showErrorMsg\">Please Enter Password\n                </div>\n              </div>\n              <div class=\"col-md-3\">\n                <label>Role</label><span style=\"color:red;\">*</span>\n                <select class=\"custom-select\" aria-label=\"Example select with button addon\" formControlName=\"role\">\n                  <option value=\"\">---Select Role----</option>\n                  <option *ngFor=\"let role of roles\" value=\"{{role.roleId}}\">{{role.roleName}}</option>\n                </select>\n                <div *ngIf=\"form.get('role').touched && form.get('role').hasError('required')\" class=\"showErrorMsg\">\n                  Please Select Role\n                </div>\n              </div>\n              <input type=\"hidden\" formControlName=\"staffId\" value=\"0\">\n            </div>\n            <div class=\"col-md-12 \">\n              <button *ngIf=\"!updateButton\" type=\"button\" class=\"btn btn-success\" style=\"margin-right: 13px;\"\n                [disabled]=\"!form.valid\" (click)=\"saveStaff()\">Submit</button>\n              <button *ngIf=\"updateButton\" type=\"button\" class=\"btn btn-success\" style=\"margin-right: 13px;\"\n                [disabled]=\"!form.valid\" (click)=\"updateStaff()\">Update</button>\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearForm();\">Clear</button>\n              \n\n              <!--<button type=\"button\" class=\"btn btn-danger\" style=\"margin-top: 6%;color: #fff\">Close</button> -->\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n\n\n  <div class=\"card \">\n    <div class=\"card-header\">\n      Staff Details\n    </div>\n    <div class=\"card-body\">\n      <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\n        class=\"table table-striped table-bordered table-sm row-border hover\">\n        <thead>\n          <tr>\n            <th class=\"theader\">Sl.no</th>\n            <th class=\"theader\">Name</th>\n            <th class=\"theader\">Mobile</th>\n            <th class=\"theader\">Email</th>\n            <th class=\"theader\">Address</th>\n            <th class=\"theader\">Role</th>\n            <th class=\"theader\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let vl of staffList; let i=index\">\n            <td style=\"text-align:right ;\">{{i + 1}}</td>\n            <td>{{vl.name}}</td>\n            <td style=\"text-align: center;\">{{vl.mobile}}</td>\n            <td style=\"text-align:center;\">{{vl.email}}</td>\n            <td style=\"text-align:center;\">{{vl.address}}</td>\n            <td style=\"text-align: center;\">{{vl.roleDto.roleName}}</td>\n            <td style=\"text-align:center;\">\n              <i class=\"fa fa-pencil-square-o \" aria-hidden=\"true \" style=\"color:rgb(0, 15, 146); font-size: 21px;\"\n                (click)=\"editStaff(vl.staffId)\"></i>&nbsp;&nbsp;\n              <i class=\"fa fa-trash\" aria-hidden=\"true \" style=\"color:#ff0000;font-size: 21px;\"\n                (click)=\"deleteStaff(vl.staffId)\"></i>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/master/state/state.component.html":
/*!*****************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/master/state/state.component.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">State</div>\n        <form novalidate [formGroup]=\"stateForm\" class=\"form-horizontal\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col-md-3\">\n                <label>State Code</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"stateCode\" name=\"stateCode\" id=\"stateCode\" maxlength=\"30\" [(ngModel)]= \"state.stateCode\" autocomplete=\"off\">\n                <div class=\"alert alert-danger\" role=\"alert\"\n                *ngIf=\"!stateForm.controls.stateCode.valid && stateForm.controls.stateCode.touched\">\n                <div *ngIf=\"stateForm.get('stateCode').hasError('required')\">You must enter State Code\n                </div>\n                <div *ngIf=\"stateForm.get('stateCode').hasError('minlength')\">State Code must be 2 characters\n                </div>\n                <div *ngIf=\"stateForm.get('stateCode').hasError('maxlength')\">State Code must be 5 characters\n                </div>\n              </div>\n              </div>\n              <div class=\"col-md-3\">\n                <label>State Name</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"stateName\" name=\"stateName\" id=\"stateName\" maxlength=\"30\" [(ngModel)]= \"state.stateName\" autocomplete=\"off\">\n                <div class=\"alert alert-danger\" role=\"alert\"\n                *ngIf=\"!stateForm.controls.stateName.valid && stateForm.controls.stateName.touched\">\n                <div *ngIf=\"stateForm.get('stateName').hasError('required')\">You must enter State Name\n                </div>\n                <div *ngIf=\"stateForm.get('stateName').hasError('minlength')\">State Name must be 5 characters\n                </div>\n                <div *ngIf=\"stateForm.get('stateName').hasError('maxlength')\">State Name must be 20 characters\n                </div>\n              </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-12\" style=\"margin-left: 2%;\">\n                <button type=\"button\" class=\"btn btn-success\" style=\"margin-right: 13px;\" (click)=\"saveState();\">Submit</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearStateForm();\">Clear</button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"container-fluid\">\n    <div class=\"card \">\n      <div class=\"card-header\">\n        State Details\n      </div>\n      <div class=\"card-body\">\n          <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\n          class=\"table table-striped table-bordered table-sm row-border hover\">\n          <thead>\n            <tr>\n              <th>Sl.no</th>\n              <th>State Code</th>\n              <th>State Name</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let stdata of statedata;index as i\">\n              <td style=\"text-align: right;\">{{i+1}}</td>\n              <td>{{stdata.stateCode}}</td>\n              <td>{{stdata.stateName}}</td>\n              <td style=\"text-align:center;\">\n                <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\" (click)=\"editState(stdata.stateId)\" style=\"color:rgb(0, 15, 146); font-size: 21px;\"></i>&nbsp;&nbsp;\n                <i class=\"fa fa-trash\" aria-hidden=\"true\" (click)=\"deleteState(stdata.stateId)\" style=\"color:#ff0000;font-size: 21px;\"></i>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/master/trailervideos/trailervideos.component.html":
/*!*********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/master/trailervideos/trailervideos.component.html ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n    <div class=\"card\">\n        <div class=\"card-header\">TRAILER VIDEOS</div>\n        <form novalidate [formGroup]=\"masterTrailerVideoFrom\" class=\"form-horizontal\">\n            <div class=\"card-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-3\">\n                        <label>Video Title</label><span style=\"color:red;\">*</span>\n                        <input type='text' formControlName=\"description\" class=\"form-control\" name=\"description\"\n                            id=\"description\" [(ngModel)]=\"description\">\n                        <div class=\"alert alert-danger\" role=\"alert\"\n                            *ngIf=\"!masterTrailerVideoFrom.controls.description.valid &&  masterTrailerVideoFrom.controls.description.touched\">\n                            <div *ngIf=\"masterTrailerVideoFrom.get('description').hasError('required')\">\n                                You must enter video Title</div>\n                            <!-- <div *ngIf=\"masterTrailerVideoFrom.get('description').hasError('minlength')\">\n                  Title must atleast be 3 characters</div>\n                  <div *ngIf=\"masterTrailerVideoFrom.get('description').hasError('maxlength')\">\n                  title must be less than must be 20 characters</div> -->\n                        </div>\n                    </div>\n                    <!-- <div class=\"col-md-3\">\n                        <label>Start-Date</label><span style=\"color:red;\">*</span>\n                        <i class=\"far fa-calendar-alt\"></i><input type=\"text\" formControlName=\"startDate\" [(ngModel)]=\"startDate\" placeholder=\"DD-MM-YYYY \" class=\"form-control\" [bsConfig]=\"datePickerConfig\" [minDate]=\"minEndDate\" [maxDate]=\"maxEndDate\"\n                            bsDatepicker>\n                        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!masterTrailerVideoFrom.controls.startDate.valid && masterTrailerVideoFrom.controls.startDate.touched\">\n                            <div *ngIf=\"masterTrailerVideoFrom.get('startDate').hasError('required')\">\n                                You must enter startDate</div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-3\">\n                        <label>End-Date</label><span style=\"color:red;\">*</span>\n                        <input type=\"text\" formControlName=\"endDate\" [(ngModel)]=\"endDate\" placeholder=\"DD-MM-YYYY\" class=\"form-control\" [bsConfig]=\"datePickerConfig\" [minDate]=\"minEndDate\" [maxDate]=\"maxEndDate\" bsDatepicker>\n                        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!masterTrailerVideoFrom.controls.endDate.valid &&  masterTrailerVideoFrom.controls.endDate.touched\">\n                            <div *ngIf=\"masterTrailerVideoFrom.get('endDate').hasError('required')\">\n                                You must enter endDate</div>\n                        </div>\n                    </div> -->\n                    <div class=\"col-md-3\">\n                        <label>Sequence Number</label>\n                        <input type='text' formControlName=\"sequenceNumber\" class=\"form-control\" name=\"sequenceNumber\"\n                            [(ngModel)]=\"sequenceNumber\" maxlength=\"3\">\n                        <div class=\"alert alert-danger\" role=\"alert\"\n                            *ngIf=\"!masterTrailerVideoFrom.controls.sequenceNumber.valid && masterTrailerVideoFrom.controls.sequenceNumber.touched\">\n                            <div *ngIf=\"masterTrailerVideoFrom.get('sequenceNumber').hasError('required')\">\n                                You must enter sequenceNumber</div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-3\">\n                        <label>Video URL</label><span style=\"color:red;\">*</span>\n                        <input type='text' formControlName=\"videoURL\" class=\"form-control\" name=\"videoURL\" id=\"videoURL\"\n                            [(ngModel)]=\"videoURL\">\n                        <div class=\"alert alert-danger\" role=\"alert\"\n                            *ngIf=\"!masterTrailerVideoFrom.controls.videoURL.valid && masterTrailerVideoFrom.controls.videoURL.touched\">\n                            <div *ngIf=\"masterTrailerVideoFrom.get('videoURL').hasError('required')\">\n                                You must enter videoURL</div>\n                            <div *ngIf=\"masterTrailerVideoFrom.get('videoURL').hasError('minlength')\">\n                                Title must atleast be 5 characters</div>\n                            <div *ngIf=\"masterTrailerVideoFrom.get('videoURL').hasError('maxlength')\">\n                                title must be less than must be 100 characters</div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-9\" style=\"margin-top:2%\">\n                        <div class=\"row\">\n                            <div class=\"col-md-2\">\n                                <label></label>\n                                <div class=\"upload-btn-wrapper\">\n                                    <button class=\"btn1\">Upload Photo</button><span style=\"color:red;\">*</span>\n                                    <input type=\"file\" id=\"propic\" name=\"propic\" (change)=\"addImageUpload($event)\">\n                                    <input type=\"hidden\" name=\"fileHidden\" formControlName=\"imagePath\">\n\n                                    <div class=\"alert alert-danger\" role=\"alert\"\n                                        *ngIf=\"!masterTrailerVideoFrom.controls.imagePath.valid && masterTrailerVideoFrom.controls.imagePath.touched\">\n                                        <div *ngIf=\"masterTrailerVideoFrom.get('imagePath').hasError('required')\">\n                                            You must select Image</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <img [src]=\"croppedImage\" onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                    style=\"height: auto;width: 70%;\">\n                            </div>\n                            <div class=\"col-md-2\" style=\"margin-left: 2%;\">\n                                <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent\"\n                                    [maintainAspectRatio]=\"true\" [aspectRatio]=\"5/3\" format=\"jpeg\"\n                                    (imageCropped)=\"imageCropped($event)\" (imageLoaded)=\"imageLoaded()\"\n                                    (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                                    onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                    style=\"height:auto; width:500px;\">\n                                </image-cropper>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-12\" style=\"margin-top: 2%;\">\n                    <button type=\"button \" class=\"btn btn-success\" (click)=\"submitDetails()\">Submit</button>&nbsp;&nbsp;\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearTrailer();\">Clear</button>&nbsp;&nbsp;\n                </div>\n            </div>\n        </form>\n    </div>\n\n    <div class=\"card card-table\">\n        <div class=\"card-header\">\n            TRAILER VIDEO LIST\n        </div>\n        <div class=\"card-body\">\n            <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\n                class=\"table table-striped table-bordered table-sm row-border hover\">\n                <thead>\n                    <tr>\n                        <th>Sl.no</th>\n                        <th>Description</th>\n                        <th>Video Preview</th>\n                        <th>Image</th>\n                        <th>Created Date</th>\n                        <!-- <th>EndDate</th> -->\n                        <th>SequenceNumber</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let vl of masterParentVideo; let i=index\">\n                        <td>{{i+1}}</td>\n                        <td>{{vl.description}}</td>\n                        <td><a class=\"btn btn-primary\" target=\"blank\"\n                                [href]='sanitizer.bypassSecurityTrustResourceUrl(vl.link)' style=\"padding: 0% 4%;\"><i\n                                    class=\"fa fa-eye\"></i>Preview</a></td>\n                        <td><img [src]=\"vl.imagePath\" height=\"auto\" width=\"70px\"></td>\n                        <td>{{vl.createdDate | date:'dd-MM-yyyy'}}</td>\n                        <!-- <td>{{vl.endDate}}</td> -->\n                        <td>{{vl.sequenceNumber}}</td>\n                        <td> <i class=\"fa fa-pencil-square-o \" aria-hidden=\"true \"\n                                (click)=\"editMasterVideoById(vl.id)\"></i>&nbsp;&nbsp;\n                            <i class=\"fa fa-trash\" aria-hidden=\"true \" (click)=\"deleteVideoImage(vl.id)\"></i>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/movie/create-movie/create-movie.component.html":
/*!******************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/movie/create-movie/create-movie.component.html ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n  <div class=\"card \">\n    <div class=\"card-header\">\n      <label>MOVIE REGISTRATION</label>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"section\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <label>MOVIE DETAILS</label>\n          </div>\n        </div>\n        <form novalidate [formGroup]=\"basicMovieForm\" class=\"form-horizontal\">\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <div class=\"row\">\n                <div class=\"col-3\">\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" id=\"movie\" formControlName=\"movieOrSerial\"\n                      value=\"movie\" [(ngModel)]=\"create_movie.movieOrSerial\">\n                    <label class=\"custom-control-label\" for=\"movie\">Movie</label>\n                  </div>\n                </div>\n                <div class=\"col-3\">\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" id=\"short\" formControlName=\"movieOrSerial\" value=\"short\"\n                      [(ngModel)]=\"create_movie.movieOrSerial\">\n                    <label class=\"custom-control-label\" for=\"short\">Short Movie</label>\n                  </div>\n                </div>\n                <div class=\"col-3\">\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" id=\"serial\" formControlName=\"movieOrSerial\" value=\"serial\"\n                      [(ngModel)]=\"create_movie.movieOrSerial\">\n                    <label class=\"custom-control-label\" for=\"serial\">Serial</label>\n                  </div>\n                </div>\n                <div class=\"col-3\"></div>\n                <div class=\"col-md-6\">\n                  <label class=\"labelhead\">Movie Title</label><span style=\"color:red;\">*</span>\n                  <input type='text' class=\"form-control\" formControlName=\"title\" name=\"title\" id=\"title\"\n                    [(ngModel)]=\"create_movie.title\">\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMovieForm.controls.title.valid && basicMovieForm.controls.title.touched\">\n                    <div *ngIf=\"basicMovieForm.get('title').hasError('required')\">You must enter Movie Title</div>\n                    <div *ngIf=\"basicMovieForm.get('title').hasError('minlength')\">Movie Title must be 2 characters\n                    </div>\n                    <div *ngIf=\"basicMovieForm.get('title').hasError('maxlength')\">Movie Title must be 200 characters\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-12\" style=\"height: 5%\">\n                  <label class=\"labelhead\">Short Synopsis</label>\n                  <quill-editor rows=\"2\" [modules]=\"modules\" formControlName=\"shortSynopsis\" name=\"shortSynopsis\"\n                    id=\"shortSynopsis\" [(ngModel)]=\"create_movie.shortSynopsis\">\n                  </quill-editor>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMovieForm.controls.shortSynopsis.valid && basicMovieForm.controls.shortSynopsis.touched\">\n                    <div *ngIf=\"basicMovieForm.get('shortSynopsis').hasError('required')\">You must enter Short Synopsis\n                    </div>\n                    <div *ngIf=\"basicMovieForm.get('shortSynopsis').hasError('minlength')\">Short Synopsis must be 2\n                      characters</div>\n                    <div *ngIf=\"basicMovieForm.get('shortSynopsis').hasError('maxlength')\">Short Synopsis must be 5000\n                      characters</div>\n                  </div>\n                </div>\n                <div class=\"col-md-12\" style=\"height: 5%\">\n                  <label class=\"labelhead\">Long Synopsis</label>\n                  <quill-editor rows=\"2\" [modules]=\"modules\" id=\"synopsis\" formControlName=\"synopsis\" name=\"synopsis\"\n                    id=\"synopsis\" [(ngModel)]=\"create_movie.synopsis\"></quill-editor>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMovieForm.controls.synopsis.valid && basicMovieForm.controls.synopsis.touched\">\n                    <div *ngIf=\"basicMovieForm.get('synopsis').hasError('required')\">You must enter Synopsis</div>\n                    <div *ngIf=\"basicMovieForm.get('synopsis').hasError('minlength')\">Synopsis must be 2 characters\n                    </div>\n                    <div *ngIf=\"basicMovieForm.get('synopsis').hasError('maxlength')\">Synopsis must be 10000 characters\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-6\">\n                  <label class=\"labelhead\" for=\"exampleForm2\">Select Geners</label><span style=\"color:red;\">\n                    *</span>\n                  <angular2-multiselect [data]=\"geners_list\" formControlName=\"generslist\" [(ngModel)]=\"geners_data\"\n                    [settings]=\"genersSettings\" (onSelect)=\"ongenersSelect($event)\"\n                    (onDeSelect)=\"ongenersDeSelect($event)\" (onSelectAll)=\"ongenersSelectAll($event)\"\n                    (onDeSelectAll)=\"ongenersDeSelectAll($event)\">\n                  </angular2-multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMovieForm.controls.generslist.valid && basicMovieForm.controls.generslist.touched\">\n                    <div *ngIf=\"basicMovieForm.get('generslist').hasError('required')\">You must select Geners\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\">\n                  <label class=\"labelhead\" for=\"start_date\">Start Date</label><span style=\"color:red;\"> *</span>\n                  <input id=\"start_date\" formControlName=\"yearStarted\" placeholder=\"DD-MM-YYYY\"\n                    [(ngModel)]=\"create_movie.yearStarted\" class=\"form-control\" type=\"text\" bsDatepicker\n                    [bsConfig]=\"datePickerConfig\" />\n                  <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMovieForm.controls.yearStarted.valid && basicMovieForm.controls.yearStarted.touched\">\n                    <div *ngIf=\"basicMovieForm.get('yearStarted').hasError('required')\">You must select Movie Started\n                      Year\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3\">\n                  <label class=\"labelhead\" for=\"end_date\">Release Date</label>\n                  <input id=\"end_date\" formControlName=\"yearCompleted\" placeholder=\"DD-MM-YYYY\"\n                    [(ngModel)]=\"create_movie.yearCompleted\" class=\"form-control\" type=\"text\" bsDatepicker\n                    [bsConfig]=\"datePickerConfig\" />\n                  <!-- <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"!basicMovieForm.controls.yearCompleted.valid && basicMovieForm.controls.yearCompleted.touched\">\n                    <div *ngIf=\"basicMovieForm.get('yearCompleted').hasError('required')\">You must select Movie\n                      Completed Year\n                    </div>\n                  </div> -->\n                </div>\n                <div class=\"col-md-12\">\n                  <label class=\"labelhead\" for=\"exampleForm2\">Select Movie Type</label>\n                  <div class=\"row\">\n                    <div class=\"col-3\">\n                      <div class=\"custom-control custom-radio\">\n                        <input type=\"radio\" class=\"custom-control-input\" id=\"trending\" formControlName=\"movieType\"\n                          value=\"trending\" [(ngModel)]=\"create_movie.movieType\">\n                        <label class=\"custom-control-label\" for=\"trending\" style=\"font-weight: 400;\">Trending\n                          Movie</label>\n                      </div>\n                    </div>\n                    <div class=\"col-3\">\n                      <div class=\"custom-control custom-radio\">\n                        <input type=\"radio\" class=\"custom-control-input\" id=\"upcoming\" formControlName=\"movieType\"\n                          value=\"upcoming\" [(ngModel)]=\"create_movie.movieType\">\n                        <label class=\"custom-control-label\" for=\"upcoming\" style=\"font-weight: 400;\">Upcoming\n                          Movie</label>\n                      </div>\n                    </div>\n                    <div class=\"col-3\">\n                      <div class=\"custom-control custom-radio\">\n                        <input type=\"radio\" class=\"custom-control-input\" id=\"old\" formControlName=\"movieType\"\n                          value=\"old\" [(ngModel)]=\"create_movie.movieType\">\n                        <label class=\"custom-control-label\" for=\"old\" style=\"font-weight: 400;\">Released Movie</label>\n                      </div>\n                    </div>\n                    <!-- <div class=\"col-3\">\n                      <div class=\"custom-control custom-radio\">\n                        <input type=\"radio\" class=\"custom-control-input\" id=\"short\" formControlName=\"movieType\"\n                          value=\"short\" [(ngModel)]=\"create_movie.movieType\">\n                        <label class=\"custom-control-label\" for=\"short\" style=\"font-weight: 400;\">Short\n                          Movies</label>\n                      </div>\n                    </div> -->\n                  </div>\n                </div>\n                <div class=\"col-md-12\" style=\"height: 5%\">\n                  <label class=\"labelhead\">Other Technical Details</label>\n                  <quill-editor rows=\"2\" [modules]=\"modules\" formControlName=\"otherTechnicalDetails\" name=\"otherTechnicalDetails\"\n                    id=\"otherTechnicalDetails\" [(ngModel)]=\"create_movie.otherTechnicalDetails\">\n                  </quill-editor>\n              </div>\n              </div>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"row\">\n                <div class=\"col-3\">\n                  <div class=\"upload-btn-wrapper\">\n                    <button class=\"btn1\">Upload Photo1</button><span style=\"color:red;\">\n                      *</span>\n                    <input type=\"file\" id=\"sp\" name=\"sp\" (change)=\"firstPosterUpload($event)\">\n                    <input type=\"hidden\" name=\"fileHidden\">\n                  </div>\n                </div>\n                <div class=\"col-4\">\n                  <img [src]=\"croppedImage1\" onerror=\"this.src='../../../assets/images/avtaar/1.jpg';\"\n                    style=\"height: auto;width: 40%;\">\n                </div>\n                <div class=\"col-5\">\n                  <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent1\" [maintainAspectRatio]=\"true\"\n                    [aspectRatio]=\"3/4\" format=\"jpeg\" (imageCropped)=\"firstimageCropped($event)\"\n                    (imageLoaded)=\"firstimageLoaded()\" (cropperReady)=\"firstcropperReady()\"\n                    (loadImageFailed)=\"firstloadImageFailed()\"\n                    onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height:250px; width:180px;\">\n                  </image-cropper>\n                </div>\n                <div class=\"col-3\">\n                  <div class=\"upload-btn-wrapper\">\n                    <button class=\"btn1\">Upload Photo2</button><span style=\"color:red;\">\n                      *</span>\n                    <input type=\"file\" id=\"lp\" name=\"lp\" (change)=\"secondPosterUpload($event)\">\n                    <input type=\"hidden\" name=\"fileHidden\">\n                  </div>\n                </div>\n                <div class=\"col-4\">\n                  <img [src]=\"croppedImage2\" onerror=\"this.src='../../../assets/images/avtaar/2.jpg';\"\n                    style=\"height: auto;width: 100%;\">\n                </div>\n                <div class=\"col-5\">\n                  <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent2\" [maintainAspectRatio]=\"true\"\n                    [aspectRatio]=\"3/2\" format=\"jpeg\" (imageCropped)=\"imageCropped($event)\"\n                    (imageLoaded)=\"imageLoaded()\" (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                    onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height:250px; width:180px;\">\n                  </image-cropper>\n                </div>\n              </div>\n              <!-- For update purpose -->\n              <input type=\"hidden\" formControlName=\"movieId\" [(ngModel)]=\"movie_id\">\n            </div>\n            <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n              <button type=\"button \" class=\"btn btn-success\" (click)=\"basicSaveMovie()\">Submit</button>&nbsp;&nbsp;\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearBasicDetails()\">Clear</button>&nbsp;&nbsp;\n            </div>\n          </div>\n        </form>\n      </div>\n\n      <div class=\"section\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <label>PRODUCTION HOUSE</label>\n          </div>\n        </div>\n        <form novalidate [formGroup]=\"productionHouseForm\" class=\"form-horizontal\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div formArrayName=\"prodHouseRows\">\n                <table class=\"table table-bordered\">\n                  <tr>\n                    <th>Production House Name</th>\n                    <th>Production House Name (If not Registered)</th>\n                    <th>Action</th>\n                  </tr>\n                  <tr *ngFor=\"let prodHouseRow of getProductionHouseRows(productionHouseForm); let i=index\"\n                    [formGroupName]=\"i\">\n                    <td style=\"width: 335px;\">\n                      <angular2-multiselect [data]=\"memberList\" formControlName=\"prodHouseTitle\"\n                        [settings]=\"productionHouseSettings\">\n                        <c-search>\n                          <ng-template>\n                            <input type=\"text\" (keyup)=\"getMemberList($event)\" placeholder=\"Search Members\"\n                              style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                          </ng-template>\n                        </c-search>\n                        <c-item>\n                          <ng-template let-item=\"item\">\n                            <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                            <label>{{item.itemName}}</label>\n                          </ng-template>\n                        </c-item>\n                      </angular2-multiselect>\n                    </td>\n                    <td>\n                      <input type=\"text\" class=\"form-control\" name=\"memberName\" formControlName=\"memberName\"\n                        placeholder=\"Type here if Production House not found\">\n                    </td>\n                    <td>\n                      <button type=\"button\" class=\"btn btn-primary addremovebtn\" (click)=\"addProductionHouseRow()\">\n                        Add\n                      </button> &nbsp;&nbsp;\n                      <button type=\"button\" class=\"btn btn-danger addremovebtn\" (click)=\"removeProductionHouseRow(i)\"\n                        *ngIf=\"productionHouseForm.controls.prodHouseRows.controls.length > 1\">\n                        Remove\n                      </button>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n              <button type=\"button\" class=\"btn btn-success\" (click)=\"saveProductionHouse()\">Submit</button>&nbsp;&nbsp;\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearProductionHouse()\">Clear</button>&nbsp;&nbsp;\n            </div>\n          </div>\n        </form>\n      </div>\n\n      <div class=\"section\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <label>PRODUCER</label>\n          </div>\n        </div>\n        <form novalidate [formGroup]=\"producerForm\" class=\"form-horizontal\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div formArrayName=\"producerRow\">\n                <table class=\"table table-bordered\">\n                  <tr>\n                    <th>Producer Name</th>\n                    <th>Producer Name (If not Registered)</th>\n                    <th>Action</th>\n                  </tr>\n                  <tr *ngFor=\"let producerRow of getProducerRow(producerForm); let i=index\" [formGroupName]=\"i\">\n                    <td style=\"width: 335px;\">\n                      <angular2-multiselect [data]=\"memberList\" formControlName=\"producerName\"\n                        [settings]=\"productionHouseSettings\">\n                        <c-search>\n                          <ng-template>\n                            <input type=\"text\" (keyup)=\"getMemberList($event)\" placeholder=\"Search Members\"\n                              style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                          </ng-template>\n                        </c-search>\n                        <c-item>\n                          <ng-template let-item=\"item\">\n                            <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                            <label>{{item.itemName}}</label>\n                          </ng-template>\n                        </c-item>\n                      </angular2-multiselect>\n                    </td>\n                    <td>\n                      <input type=\"text\" class=\"form-control\" name=\"memberName\" formControlName=\"memberName\"\n                        placeholder=\"Type here if Producer Name not found\">\n                    </td>\n                    <td>\n                      <button type=\"button\" class=\"btn btn-primary addremovebtn\" (click)=\"addProducerRow()\">\n                        Add\n                      </button> &nbsp;&nbsp;\n                      <button type=\"button\" class=\"btn btn-danger addremovebtn\" (click)=\"removeProducerRow(i)\"\n                        *ngIf=\"producerForm.controls.producerRow.controls.length > 1\">\n                        Remove\n                      </button>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n              <button type=\"button\" class=\"btn btn-success\" (click)=\"saveProducer()\">Submit</button>&nbsp;&nbsp;\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearProducer()\">Clear</button>&nbsp;&nbsp;\n            </div>\n          </div>\n        </form>\n      </div>\n\n      <div class=\"section\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <label>WRITER</label>\n          </div>\n        </div>\n        <form novalidate [formGroup]=\"writerForm\" class=\"form-horizontal\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div formArrayName=\"writerRow\">\n                <table class=\"table table-bordered\">\n                  <tr>\n                    <th>Writer Name</th>\n                    <th>Writer Name (If not Registered)</th>\n                    <th>Action</th>\n                  </tr>\n                  <tr *ngFor=\"let writerRow of getWriterRow(writerForm); let i=index\" [formGroupName]=\"i\">\n                    <td style=\"width: 335px;\">\n                      <angular2-multiselect [data]=\"memberList\" formControlName=\"writerName\"\n                        [settings]=\"productionHouseSettings\">\n                        <c-search>\n                          <ng-template>\n                            <input type=\"text\" (keyup)=\"getMemberList($event)\" placeholder=\"Search Members\"\n                              style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                          </ng-template>\n                        </c-search>\n                        <c-item>\n                          <ng-template let-item=\"item\">\n                            <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                            <label>{{item.itemName}}</label>\n                          </ng-template>\n                        </c-item>\n                      </angular2-multiselect>\n                    </td>\n                    <td>\n                      <input type=\"text\" class=\"form-control\" name=\"memberName\" formControlName=\"memberName\"\n                        placeholder=\"Type here if Writer Name not found\">\n                    </td>\n                    <td>\n                      <button type=\"button\" class=\"btn btn-primary addremovebtn\" (click)=\"addWriterRow()\">\n                        Add\n                      </button> &nbsp;&nbsp;\n                      <button type=\"button\" class=\"btn btn-danger addremovebtn\" (click)=\"removeWriterRow(i)\"\n                        *ngIf=\"writerForm.controls.writerRow.controls.length > 1\">\n                        Remove\n                      </button>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n              <button type=\"button\" class=\"btn btn-success\" (click)=\"saveWriter()\">Submit</button>&nbsp;&nbsp;\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearWriter()\">Clear</button>&nbsp;&nbsp;\n            </div>\n          </div>\n        </form>\n      </div>\n\n      <div class=\"section\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <label>DIRECTOR</label>\n          </div>\n        </div>\n        <form novalidate [formGroup]=\"directorForm\" class=\"form-horizontal\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div formArrayName=\"directorRow\">\n                <table class=\"table table-bordered\">\n                  <tr>\n                    <th>Director Name</th>\n                    <th>Director Name (If not Registered)</th>\n                    <th>Action</th>\n                  </tr>\n                  <tr *ngFor=\"let directorRow of getDirectorRow(directorForm); let i=index\" [formGroupName]=\"i\">\n                    <td style=\"width: 335px;\">\n                      <angular2-multiselect [data]=\"memberList\" formControlName=\"directorName\"\n                        [settings]=\"productionHouseSettings\">\n                        <c-search>\n                          <ng-template>\n                            <input type=\"text\" (keyup)=\"getMemberList($event)\" placeholder=\"Search Members\"\n                              style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                          </ng-template>\n                        </c-search>\n                        <c-item>\n                          <ng-template let-item=\"item\">\n                            <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                            <label>{{item.itemName}}</label>\n                          </ng-template>\n                        </c-item>\n                      </angular2-multiselect>\n                    </td>\n                    <td>\n                      <input type=\"text\" class=\"form-control\" name=\"memberName\" formControlName=\"memberName\"\n                        placeholder=\"Type here if Director Name not found\">\n                    </td>\n                    <td>\n                      <button type=\"button\" class=\"btn btn-primary addremovebtn\" (click)=\"addDirectorRow()\">\n                        Add\n                      </button> &nbsp;&nbsp;\n                      <button type=\"button\" class=\"btn btn-danger addremovebtn\" (click)=\"removeDirectorRow(i)\"\n                        *ngIf=\"directorForm.controls.directorRow.controls.length > 1\">\n                        Remove\n                      </button>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n              <button type=\"button\" class=\"btn btn-success\" (click)=\"saveDirector()\">Submit</button>&nbsp;&nbsp;\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearDirector()\">Clear</button>&nbsp;&nbsp;\n            </div>\n          </div>\n        </form>\n      </div>\n\n      <div class=\"section\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <label>MUSIC DIRECTOR</label>\n          </div>\n        </div>\n        <form novalidate [formGroup]=\"musicDirectorForm\" class=\"form-horizontal\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div formArrayName=\"musicDirectorRow\">\n                <table class=\"table table-bordered\">\n                  <tr>\n                    <th>Music Director Name</th>\n                    <th>Music Director Name (If not Registered)</th>\n                    <th>Action</th>\n                  </tr>\n                  <tr *ngFor=\"let musicDirectorRow of getMusicDirectorRow(musicDirectorForm); let i=index\"\n                    [formGroupName]=\"i\">\n                    <td style=\"width: 335px;\">\n                      <angular2-multiselect [data]=\"memberList\" formControlName=\"musicDirectorName\"\n                        [settings]=\"productionHouseSettings\">\n                        <c-search>\n                          <ng-template>\n                            <input type=\"text\" (keyup)=\"getMemberList($event)\" placeholder=\"Search Members\"\n                              style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                          </ng-template>\n                        </c-search>\n                        <c-item>\n                          <ng-template let-item=\"item\">\n                            <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                            <label>{{item.itemName}}</label>\n                          </ng-template>\n                        </c-item>\n                      </angular2-multiselect>\n                    </td>\n                    <td>\n                      <input type=\"text\" class=\"form-control\" name=\"memberName\" formControlName=\"memberName\"\n                        placeholder=\"Type here if Music Director Name not found\">\n                    </td>\n                    <td>\n                      <button type=\"button\" class=\"btn btn-primary addremovebtn\" (click)=\"addMusicDirectorRow()\">\n                        Add\n                      </button> &nbsp;&nbsp;\n                      <button type=\"button\" class=\"btn btn-danger addremovebtn\" (click)=\"removeMusicDirectorRow(i)\"\n                        *ngIf=\"musicDirectorForm.controls.musicDirectorRow.controls.length > 1\">\n                        Remove\n                      </button>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n              <button type=\"button\" class=\"btn btn-success\" (click)=\"saveMusicDirector()\">Submit</button>&nbsp;&nbsp;\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearMusicDirector()\">Clear</button>&nbsp;&nbsp;\n            </div>\n          </div>\n        </form>\n      </div>\n\n      <div class=\"section\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <label>STARRING</label>\n          </div>\n        </div>\n        <form novalidate [formGroup]=\"starringForm\" class=\"form-horizontal\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div formArrayName=\"starringRow\">\n                <table class=\"table table-bordered\">\n                  <tr>\n                    <th>Star Name</th>\n                    <th>Star Name (If not Registered)</th>\n                    <th>Action</th>\n                  </tr>\n                  <tr *ngFor=\"let starringRow of getStarringRow(starringForm); let i=index\" [formGroupName]=\"i\">\n                    <td style=\"width: 335px;\">\n                      <angular2-multiselect [data]=\"memberList\" formControlName=\"starringName\"\n                        [settings]=\"productionHouseSettings\">\n                        <c-search>\n                          <ng-template>\n                            <input type=\"text\" (keyup)=\"getMemberList($event)\" placeholder=\"Search Members\"\n                              style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                          </ng-template>\n                        </c-search>\n                        <c-item>\n                          <ng-template let-item=\"item\">\n                            <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                            <label>{{item.itemName}}</label>\n                          </ng-template>\n                        </c-item>\n                      </angular2-multiselect>\n                    </td>\n                    <td>\n                      <input type=\"text\" class=\"form-control\" name=\"memberName\" formControlName=\"memberName\"\n                        placeholder=\"Type here if Star Name not found\">\n                    </td>\n                    <td>\n                      <button type=\"button\" class=\"btn btn-primary addremovebtn\" (click)=\"addStarringRow()\">\n                        Add\n                      </button> &nbsp;&nbsp;\n                      <button type=\"button\" class=\"btn btn-danger addremovebtn\" (click)=\"removeStarringRow(i)\"\n                        *ngIf=\"starringForm.controls.starringRow.controls.length > 1\">\n                        Remove\n                      </button>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n              <button type=\"button\" class=\"btn btn-success\" (click)=\"saveStarring()\">Submit</button>&nbsp;&nbsp;\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearStarring()\">Clear</button>&nbsp;&nbsp;\n            </div>\n          </div>\n        </form>\n      </div>\n\n\n      <form novalidate [formGroup]=\"TechnicianForm\" class=\"form-horizontal\">\n        <div class=\"row section\">\n          <div class=\"col-md-12\">\n            <table class=\"table\">\n              <label>TECHNICIANS</label>\n              <tr>\n                <div formArrayName=\"technicianHeads\">\n                  <div *ngFor=\"let technicianHead of gettechnicianHeads().controls; let TechIndex=index\">\n                    <!-- {{TechIndex}} -->\n                    <table class=\"table table-bordered\" [formGroupName]=\"TechIndex\">\n                      <tbody>\n                        <tr>\n                          <table class=\"table table-bordered\" style=\"width: 80%;\">\n                            <tr>\n                              <th>Profession Title</th>\n                              <th>Profession Title (If not found)</th>\n                              <th>Seq No</th>\n                            </tr>\n                            <tr>\n                              <td>\n                                <angular2-multiselect [data]=\"professionList\" [settings]=\"ProfessionTitleSettings\"\n                                  (onSelect)=\"selectedProfId($event)\" formControlName=\"technicianTypeName\">\n                                  <c-search>\n                                    <ng-template>\n                                      <input type=\"text\" (keyup)=\"getProfessionList($event)\"\n                                        placeholder=\"Search Profession Title\"\n                                        style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                                    </ng-template>\n                                  </c-search>\n                                  <c-item>\n                                    <ng-template let-item=\"item\">\n                                      <label>{{item.itemName}}</label>\n                                    </ng-template>\n                                  </c-item>\n                                </angular2-multiselect>\n                              </td>\n                              <td>\n                                <input type=\"text\" class=\"form-control\" name=\"technicianTypeNameIfNot\"\n                                  formControlName=\"technicianTypeNameIfNot\"\n                                  placeholder=\"Type here if Profession Title not found\">\n                              </td>\n                              <td>\n                                <input type=\"text\" class=\"form-control\" maxlength=\"2\" name=\"seqNo\" formControlName=\"seqNo\">\n                              </td>\n                            </tr>\n                          </table>\n                        </tr>\n\n                        <tr>\n                          <td>\n                            <div formArrayName=\"technicians\">\n                              <table class=\"table table-bordered\">\n                                <tr>\n                                  <th>Member Name</th>\n                                  <th>Member Name (If not Registered)</th>\n                                  <th>Seq No</th>\n                                  <th>Action</th>\n                                </tr>\n                                <tr\n                                  *ngFor=\"let technicianName of getTechnicians(TechIndex).controls; let technicianNameIndex=index\"\n                                  [formGroupName]=\"technicianNameIndex\">\n                                  <!-- <td>\n                                                        <input type=\"text\" class=\"form-control\" name=\"technicianName\" formControlName=\"technicianName\">\n                                                    </td> -->\n                                  <td>\n                                    <angular2-multiselect [data]=\"memberList\" [settings]=\"TechniciansSettings\"\n                                      (onSelect)=\"selectedMemId($event)\" formControlName=\"technicianName\">\n                                      <c-search>\n                                        <ng-template>\n                                          <input type=\"text\" (keyup)=\"getMemberList($event)\"\n                                            placeholder=\"Search Members\"\n                                            style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                                        </ng-template>\n                                      </c-search>\n                                      <c-item>\n                                        <ng-template let-item=\"item\">\n                                          <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                                          <label>{{item.itemName}}</label>\n                                        </ng-template>\n                                      </c-item>\n                                    </angular2-multiselect>\n                                  </td>\n                                  <td>\n                                    <input type=\"text\" class=\"form-control\" name=\"technicianNameIfNot\"\n                                      formControlName=\"technicianNameIfNot\"\n                                      placeholder=\"Type here if Member Name not found\">\n                                  </td>\n                                  <td>\n                                    <input type=\"text\" class=\"form-control\" maxlength=\"2\" name=\"seqNo\" \n                                    formControlName=\"seqNo\">\n                                  </td>\n                                  <td>\n                                    <span class=\"btn btn-primary\" (click)=\"addTechnicianHeadTechnician(TechIndex)\">\n                                      <i class=\"fa fa-plus-square addremoveicon\" aria-hidden=\"true\"></i>\n                                    </span>&nbsp;&nbsp;\n                                    <span class=\"btn btn-danger\"\n                                      (click)=\"removeTechnicianHeadTechnician(TechIndex,technicianNameIndex)\"\n                                      *ngIf=\"TechnicianForm.controls.technicianHeads.controls[TechIndex].controls.technicians.controls.length > 1\">\n                                      <i class=\"fa fa-minus-square addremoveicon\" aria-hidden=\"true\"></i>\n                                    </span>\n                                  </td>\n                                </tr>\n                              </table>\n                            </div>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <div class=\"row\">\n                              <div class=\"col-md-12\" style=\"text-align:right;\">\n                                <button type=\"button\" class=\"btn btn-primary addremovebtn\"\n                                  (click)=\"addTechnicianHead()\">\n                                  Add\n                                </button>&nbsp;&nbsp;\n                                <button type=\"button\" class=\"btn btn-danger addremovebtn\"\n                                  (click)=\"removeTechnicianHead(TechIndex)\"\n                                  *ngIf=\"TechnicianForm.controls.technicianHeads.controls.length > 1\">\n                                  Remove\n                                </button>\n                              </div>\n                            </div>\n                          </td>\n                        </tr>\n                      </tbody>\n                      <tfoot>\n                        <tr>\n                          <div class=\"row\">\n                            <div class=\"col-md-12\" style=\"text-align:center;padding: 1%;\">\n                              <button type=\"button\" class=\"btn btn-success addremovebtn\"\n                                (click)=\"onTechniciansSubmit(TechIndex)\">Submit</button>&nbsp;&nbsp;\n                              <button type=\"button\" class=\"btn btn-primary addremovebtn\"\n                                (click)=\"onClearTechnicians(TechIndex)\">\n                                Clear\n                              </button>\n                            </div>\n                          </div>\n                        </tr>\n                      </tfoot>\n                    </table>\n                  </div>\n                </div>\n              </tr>\n            </table>\n          </div>\n        </div>\n      </form>\n\n      <div class=\"section\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <label>GALLERY</label>\n          </div>\n        </div>\n        <form novalidate [formGroup]=\"galleryForm\" class=\"form-horizontal\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div formArrayName=\"galleryRow\">\n                <table class=\"table table-bordered\">\n                  <tr>\n                    <th>Choose Photo</th>\n                    <th>Crop</th>\n                    <th>Preview</th>\n                    <th>Action</th>\n                  </tr>\n                  <tr *ngFor=\"let galleryRow of getGalleryRow(galleryForm); let i=index\" [formGroupName]=\"i\">\n                    <td>\n                      <div class=\"upload-btn-wrapper\">\n                        <button class=\"btn1\">Upload Photo {{i+1}}</button>\n                        <input type='file' id=\"galaryfakePath\" (change)=\"galleryImageUpload($event,i)\"\n                          accept=\".jpg,.jpeg,.png\">\n                        <input type=\"hidden\" name=\"galleryPathHidden\" formControlName=\"galaryPath\" />\n                      </div>\n                    </td>\n                    <td>\n                      <span *ngIf=\"imageChangedEventGalary[i] !=''\">\n                        <image-cropper id=\"{{'imageGalary'+i}}\" [imageChangedEvent]=\"imageChangedEventGalary[i]\"\n                          [maintainAspectRatio]=\"false\" format=\"jpeg\" (imageCropped)=\"imageCroppedGalary($event,i)\"\n                          (imageLoaded)=\"imageLoadedGalary()\" (cropperReady)=\"cropperReadyGalary()\"\n                          (loadImageFailed)=\"loadImageFailedGalary()\"\n                          onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                          style=\"height: 130px; width: 220px;\">\n                        </image-cropper>\n                      </span>\n                    </td>\n                    <td>\n                      <img [src]=\"galImg[i]\" onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                        style=\"height: auto;width: 90px;\">\n                    </td>\n                    <td>\n                      <button type=\"button\" (click)=\"addGalleryRowInPosition(i)\" class=\"btn btn-primary addremovebtn\">\n                        Add\n                      </button>\n                      &nbsp;&nbsp;\n                      <button type=\"button\" (click)=\"deleteGalleryRow(i)\" class=\"btn btn-danger addremovebtn\"\n                        *ngIf=\"galleryForm.controls.galleryRow.controls.length > 1\">\n                        Remove\n                      </button>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n              <button type=\"button \" class=\"btn btn-success\" (click)=\"saveGallery()\">Submit</button>&nbsp;&nbsp;\n              <button type=\"button\" class=\"btn btn-primary\">Clear</button>&nbsp;&nbsp;\n            </div>\n          </div>\n        </form>\n      </div>\n\n      <div class=\"section\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <label>IMAGE ARTICLE</label>\n          </div>\n        </div>\n        <form novalidate [formGroup]=\"articleForm\" class=\"form-horizontal\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div formArrayName=\"articleRow\">\n                <table class=\"table table-bordered\">\n                  <tr>\n                    <td>Choose Article</td>\n                    <td>Preview</td>\n                    <th>Action</th>\n                  </tr>\n                  <tr *ngFor=\"let articlerow of getArticleRow(articleForm); let i=index\" [formGroupName]=\"i\">\n                    <td>\n                      <div class=\"upload-btn-wrapper\">\n                        <button class=\"btn1\">Upload Article {{i+1}}</button>\n                        <input type=\"file\" name=\"articlefakePath\" accept=\".jpg,.jpeg,.png\"\n                          (change)=\"multipartArticleUpload($event,i)\">\n                        <input type=\"hidden\" name=\"articlefakePathHidden\" formControlName=\"articlePath\" />\n                      </div>\n                    </td>\n                    <td>\n                      <img [src]=\"articleImg[i]\" onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                        style=\"height: auto;width: 90px;\">\n                    </td>\n                    <td>\n                      <button type=\"button\" (click)=\"addArticleRowInPosition(i)\" class=\"btn btn-primary addremovebtn\">\n                        Add\n                      </button> &nbsp;&nbsp;\n                      <button type=\"button\" (click)=\"deleteArticleRow(i)\" class=\"btn btn-danger addremovebtn\"\n                        *ngIf=\"articleForm.controls.articleRow.controls.length > 1\">\n                        Remove\n                      </button>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n              <button type=\"button \" class=\"btn btn-success\" (click)=\"saveImageArticle()\">Submit</button>&nbsp;&nbsp;\n              <button type=\"button\" class=\"btn btn-primary\">Clear</button>\n            </div>\n          </div>\n        </form>\n      </div>\n\n      <div class=\"section\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <label>PDF ARTICLE</label>\n          </div>\n        </div>\n        <form novalidate [formGroup]=\"articlePdfForm\" class=\"form-horizontal\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div formArrayName=\"articlePdfRow\">\n                <table class=\"table table-bordered\">\n                  <tr>\n                    <th>Choose Article Pdf</th>\n                    <th>Preview</th>\n                    <th>Action</th>\n                  </tr>\n                  <tr *ngFor=\"let articlepdfrow of getArticlePdfRow(articlePdfForm); let i=index\" [formGroupName]=\"i\">\n                    <td>\n                      <div class=\"upload-btn-wrapper\">\n                        <button class=\"btn1\">Upload Article {{i+1}}</button>\n                        <input type=\"file\" name=\"articlepdffakePath\" accept=\"application/pdf\"\n                          (change)=\"multipartArticlePdfUpload($event,i)\">\n                        <input type=\"hidden\" name=\"articlefakePathHidden\" formControlName=\"articlePdfPath\" />\n                      </div>\n                    </td>\n                    <td>\n                      <span *ngIf=\"articlePdf[i] !=''\">\n                        <a [href]=\"sanitizer.bypassSecurityTrustResourceUrl(articlePdf[i])\" download>PDF</a>\n                      </span>\n                    </td>\n                    <td>\n                      <button type=\"button\" (click)=\"addArticlePdfRowInPosition(i)\"\n                        class=\"btn btn-primary addremovebtn\">\n                        Add\n                      </button> &nbsp;&nbsp;\n                      <button type=\"button\" (click)=\"deleteArticlePdfRow(i)\" class=\"btn btn-danger addremovebtn\"\n                        *ngIf=\"articlePdfForm.controls.articlePdfRow.controls.length > 1\">\n                        Remove\n                      </button>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n              <button type=\"button \" class=\"btn btn-success\" (click)=\"savePdfArticle()\">Submit</button>&nbsp;&nbsp;\n              <button type=\"button\" class=\"btn btn-primary\">Clear</button>&nbsp;&nbsp;\n            </div>\n          </div>\n        </form>\n      </div>\n\n      <div class=\"section\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <label>OPINION</label>\n          </div>\n        </div>\n        <form novalidate [formGroup]=\"memberOpinionForm\" class=\"form-horizontal\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div formArrayName=\"memberOpinionRow\">\n                <table class=\"table table-bordered\">\n                  <tr>\n                    <th>Member Name</th>\n                    <th>Members Opinion</th>\n                    <th>Action</th>\n                  </tr>\n                  <tr *ngFor=\"let memberOpinionRow of getMemberOpinionRow(memberOpinionForm); let i=index\"\n                    [formGroupName]=\"i\">\n                    <td style=\"width: 335px;\">\n                      <angular2-multiselect [data]=\"memberList\" formControlName=\"memberOpinionName\"\n                        [settings]=\"productionHouseSettings\">\n                        <c-search>\n                          <ng-template>\n                            <input type=\"text\" (keyup)=\"getMemberList($event)\" placeholder=\"Search Members\"\n                              style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                          </ng-template>\n                        </c-search>\n                        <c-item>\n                          <ng-template let-item=\"item\">\n                            <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                            <label>{{item.itemName}}</label>\n                          </ng-template>\n                        </c-item>\n                      </angular2-multiselect>\n                    </td>\n                    <td>\n                      <textarea name=\"description\" formControlName=\"memberOpinionDescription\" class=\"form-control\"\n                        #description></textarea>\n                    </td>\n                    <td>\n                      <button type=\"button\" class=\"btn btn-primary addremovebtn\" (click)=\"addMemberOpinionRow()\">\n                        Add\n                      </button> &nbsp;&nbsp;\n                      <button type=\"button\" class=\"btn btn-danger addremovebtn\" (click)=\"removeMemberOpinionRow(i)\"\n                        *ngIf=\"memberOpinionForm.controls.memberOpinionRow.controls.length > 1\">\n                        Remove\n                      </button>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n              <button type=\"button \" class=\"btn btn-success\" (click)=\"saveMemberOpenion()\">Submit</button>&nbsp;&nbsp;\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearMemberOpenion()\">Clear</button>&nbsp;&nbsp;\n            </div>\n          </div>\n        </form>\n      </div>\n\n      <div class=\"section\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <label>VIDEOS</label>\n          </div>\n        </div>\n        <form novalidate [formGroup]=\"videoForm\" class=\"form-horizontal\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div formArrayName=\"videoRow\">\n                <table class=\"table table-bordered\">\n                  <th>Video Name</th>\n                  <th>Video URL</th>\n                  <th>Action</th>\n                  <tr *ngFor=\"let videorow of getVideoRow(videoForm); let i=index\" [formGroupName]=\"i\">\n                    <td>\n                      <input type='text' formControlName=\"videoName\" class=\"form-control\">\n                    </td>\n                    <td>\n                      <input type='text' formControlName=\"videoURL\" class=\"form-control\">\n                    </td>\n                    <td>\n                      <button type=\"button\" (click)=\"addVideoRowInPosition()\" class=\"btn btn-primary addremovebtn\">\n                        Add\n                      </button>\n                      &nbsp;&nbsp;\n                      <button type=\"button\" (click)=\"deleteVideoRow(i)\" class=\"btn btn-danger addremovebtn\"\n                        *ngIf=\"videoForm.controls.videoRow.controls.length > 1\">\n                        Remove\n                      </button>\n                    </td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n            <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n              <button type=\"button \" class=\"btn btn-success\" (click)=\"saveMovieVideos()\">Submit</button>&nbsp;&nbsp;\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearMovieVideos()\">Clear</button>&nbsp;&nbsp;\n            </div>\n          </div>\n        </form>\n      </div>\n\n      <div class=\"section\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <label>SOCIAL MEDIA LINKS</label>\n          </div>\n        </div>\n        <form novalidate [formGroup]=\"socialMediaForm\" class=\"form-horizontal\">\n          <div class=\"row\" formArrayName=\"socialLinkRow\">\n            <div class=\"col-md-4\">\n              <table class=\"table table-bordered\">\n                <tr>\n                  <td>Social Media</td>\n                  <td>URL</td>\n                </tr>\n                <tr *ngFor=\"let social of socialMediaLinks; let i=index\" [formGroupName]=\"i\">\n                  <td>\n                    <img src={{social.icon}} height=\"20px\" width=\"20px\">\n                    &nbsp;&nbsp; {{social.socialLinksName}}\n                  </td>\n                  <td>\n                    <input class=\"form-control\" type=\"text\" maxlength=\"100\" formControlName=\"socialLinksUrl\"\n                      [(ngModel)]=\"social.socialLinksUrl\">\n                  </td>\n                </tr>\n              </table>\n            </div>\n            <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n              <button type=\"button \" class=\"btn btn-success\" (click)=\"saveSocialMedias()\">Submit</button>&nbsp;&nbsp;\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearSocialMedias()\">Clear</button>&nbsp;&nbsp;\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n  <!-- </span> -->\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/movie/dummy-table/dummy-table.component.html":
/*!****************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/movie/dummy-table/dummy-table.component.html ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n    <div class=\"card \">\n        <div class=\"card-header\">\n            Movie List\n        </div>\n        <div class=\"card-body\">\n            <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\">\n                <thead>\n                    <tr>\n                        <th>Sl.no</th>\n                        <th>First name</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let person of persons; let i =index\">\n                        <td>{{i+1}}</td>\n                        <td>{{ person.title }}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/movie/mastergeners/mastergeners.component.html":
/*!******************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/movie/mastergeners/mastergeners.component.html ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">MOVIE GENERS</div>\n    <form novalidate [formGroup]=\"masterGenersForm\" class=\"form-horizontal\">\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <div class=\"row\">\n              <div class=\"col-md-3\">\n                <label>Geners Name</label><span style=\"color:red;\">*</span>\n                <input type=\"text\" class=\"form-control\" formControlName=\"name\" id=\"name\" name=\"name\" maxlength=\"20\"\n                  [(ngModel)]=\"mastergeners.name\" autocomplete=\"off\">\n                <div class=\"alert alert-danger\" role=\"alert\"\n                  *ngIf=\"!masterGenersForm.controls.name.valid && masterGenersForm.controls.name.touched\">\n                  <div *ngIf=\"masterGenersForm.get('name').hasError('required')\">You must enter Geners Name\n                  </div>\n                  <div *ngIf=\"masterGenersForm.get('name').hasError('minlength')\">Geners Name must be 2 characters\n                  </div>\n                  <div *ngIf=\"masterGenersForm.get('name').hasError('maxlength')\">Geners Name must be 20 characters\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-12\" style=\"margin-top: 1%;\">\n                <button type=\"button\" class=\"btn btn-success\" style=\"margin-right: 13px;\"\n                  (click)=\"saveMasterGeners();\">Submit</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearMasterGenersForm();\">Clear</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n\n<div class=\"container-fluid\">\n  <div class=\"card \">\n    <div class=\"card-header\">\n      GENERS LIST\n    </div>\n    <div class=\"card-body\">\n      <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\n        class=\"table table-striped table-bordered table-sm row-border hover\">\n        <thead>\n          <tr>\n            <th>Sl.no</th>\n            <th>Geners Name</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let mastergenersdata of mastergenersdata;index as i\">\n            <td style=\"text-align: right;\">{{i+1}}</td>\n            <td>{{mastergenersdata.name}}</td>\n            <td style=\"text-align:center;\">\n              <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\" (click)=\"editMasterGeners(mastergenersdata.genersId)\"\n                style=\"color:rgb(0, 15, 146); font-size: 21px;\"></i>&nbsp;&nbsp;\n              <i class=\"fa fa-trash\" aria-hidden=\"true\" (click)=\"deleteMasterGeners(mastergenersdata.genersId)\"\n                style=\"color:#ff0000;font-size: 21px;\"></i>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/movie/membermoviemapping/membermoviemapping.component.html":
/*!******************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/movie/membermoviemapping/membermoviemapping.component.html ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n  <div class=\"card\">\n    <div class=\"card-header\">MEMBER MOVIE MAPPING</div>\n    <div class=\"card-body\">\n      <form novalidate [formGroup]=\"memberMovieForm\" class=\"form-horizontal\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-md-4\">\n              <label>Member Name</label><span style=\"color:#ff0000;\"> *</span>\n              <angular2-multiselect [data]=\"memberList\" formControlName=\"memberName\" [settings]=\"memberNameSettings\"\n                (onSelect)=\"getMovieByMember($event)\">\n                <c-search>\n                  <ng-template>\n                    <input type=\"text\" placeholder=\"Search Member\" (keyup)=\"getMemberList($event)\"\n                      style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                  </ng-template>\n                </c-search>\n                <c-item>\n                  <ng-template let-item=\"item\">\n                    <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                    <label>{{item.itemName}}</label>\n                  </ng-template>\n                </c-item>\n              </angular2-multiselect>\n            </div>\n            <div class=\"col-md-4\">\n              <label>Movie Name</label><span style=\"color:#ff0000;\"> *</span>\n              <angular2-multiselect [data]=\"movieList\" formControlName=\"movieName\" [(ngModel)]=\"selectedMovie\"\n                [settings]=\"movieNameSettings\">\n                <c-search>\n                  <ng-template>\n                    <input type=\"text\" placeholder=\"Search Movie\" (keyup)=\"getMovieList($event)\"\n                      style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                  </ng-template>\n                </c-search>\n                <c-item>\n                  <ng-template let-item=\"item\">\n                    <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                    <label>{{item.itemName}}</label>\n                  </ng-template>\n                </c-item>\n              </angular2-multiselect>\n            </div>\n            <div class=\"col-md-12\" style=\"margin-top: 1%;\">\n              <button type=\"button\" class=\"btn btn-success\" style=\"margin-right: 13px;\"\n                (click)=\"saveMovieMember()\">Submit</button>\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearMapping()\">Clear</button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/movie/movielist/movielist.component.html":
/*!************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/movie/movielist/movielist.component.html ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n  <span *ngIf=\"listMovie\">\n    <div class=\"card \">\n      <div class=\"card-header\">\n        <label>MOVIE LIST</label>\n      </div>\n      <div class=\"card-body\">\n        <table class=\"table table-striped table-bordered table-sm row-border hover\" datatable [dtOptions]=\"dtOptions\"\n          [dtTrigger]=\"dtTrigger\" style=\"width: 100%\">\n          <thead>\n            <tr>\n              <th>Sl no</th>\n              <th>Title</th>\n              <th>Movie/Serial</th>\n              <!-- <th>Year Started</th>\n                        <th>Year Completed</th>\n                        <th>Geners</th> -->\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let movie of movieList;let i = index\">\n              <td>{{i+1}}</td>\n              <td class=\"moviename\">{{movie.title}}</td>\n              <td class=\"movieOrSerial\">{{movie.movieOrSerial}}</td>\n              <!-- <td>{{movie.yearStarted}}</td>\n                        <td>{{movie.yearCompleted}}</td>\n                        <td>{{movie.generesName}}</td> -->\n              <td style=\"text-align: center;\">\n                <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\" (click)=\"editMovie(movie.movieId)\"></i>&nbsp;&nbsp;\n                <i class=\"fa fa-trash facursor\" aria-hidden=\"true\" (click)=\"deleteMovie(movie.movieId)\"></i></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </span>\n  <span *ngIf=\"enableEditMovie\">\n    <div class=\"card \">\n      <div class=\"card-header\">\n        <div class=\"row\">\n          <div class=\"col-10\">\n            <label>EDIT MOVIE {{create_movie.title}}</label>\n          </div>\n          <div class=\"col-2\">\n            <button type=\"button\" class=\"btn btn-warning backbtn\" (click)=\"backtoList()\"><i class=\"fa fa-arrow-left\"\n                aria-hidden=\"true\" style=\"color: #000;\"></i> Back to List</button>\n          </div>\n        </div>\n      </div>\n      <div class=\"card-body\">\n        <div class=\"section\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <label>MOVIE DETAILS</label>\n            </div>\n          </div>\n          <form novalidate [formGroup]=\"basicMovieForm\" class=\"form-horizontal\">\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"row\">\n              <div class=\"col-3\">\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" id=\"movie\" formControlName=\"movieOrSerial\"\n                      value=\"movie\" [(ngModel)]=\"create_movie.movieOrSerial\">\n                    <label class=\"custom-control-label\" for=\"movie\">Movie</label>\n                  </div>\n                </div>\n                <div class=\"col-3\">\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" id=\"short\" formControlName=\"movieOrSerial\" value=\"short\"\n                      [(ngModel)]=\"create_movie.movieOrSerial\">\n                    <label class=\"custom-control-label\" for=\"short\">Short Movie</label>\n                  </div>\n                </div>\n                <div class=\"col-3\">\n                  <div class=\"custom-control custom-radio\">\n                    <input type=\"radio\" class=\"custom-control-input\" id=\"serial\" formControlName=\"movieOrSerial\" value=\"serial\"\n                      [(ngModel)]=\"create_movie.movieOrSerial\">\n                    <label class=\"custom-control-label\" for=\"serial\">Serial</label>\n                  </div>\n                </div>\n                </div>\n              <div class=\"col-md-6\"></div>\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <label class=\"labelhead\">Movie Title</label><span style=\"color:red;\">*</span>\n                    <input type='text' class=\"form-control\" formControlName=\"title\" name=\"title\" id=\"title\"\n                      [(ngModel)]=\"create_movie.title\">\n                    <div class=\"alert alert-danger\" role=\"alert\"\n                      *ngIf=\"!basicMovieForm.controls.title.valid && basicMovieForm.controls.title.touched\">\n                      <div *ngIf=\"basicMovieForm.get('title').hasError('required')\">You must enter Movie Title</div>\n                      <div *ngIf=\"basicMovieForm.get('title').hasError('minlength')\">Movie Title must be 2 characters\n                      </div>\n                      <div *ngIf=\"basicMovieForm.get('title').hasError('maxlength')\">Movie Title must be 200 characters\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-12\" style=\"height: 5%\">\n                    <label class=\"labelhead\">Short Synopsis</label><span style=\"color:red;\">*</span>\n                    <quill-editor rows=\"2\" [modules]=\"modules\" formControlName=\"shortSynopsis\" name=\"shortSynopsis\"\n                      id=\"shortSynopsis\" [(ngModel)]=\"create_movie.shortSynopsis\">\n                    </quill-editor>\n                    <div class=\"alert alert-danger\" role=\"alert\"\n                      *ngIf=\"!basicMovieForm.controls.shortSynopsis.valid && basicMovieForm.controls.shortSynopsis.touched\">\n                      <div *ngIf=\"basicMovieForm.get('shortSynopsis').hasError('required')\">You must enter Short\n                        Synopsis\n                      </div>\n                      <div *ngIf=\"basicMovieForm.get('shortSynopsis').hasError('minlength')\">Short Synopsis must be 2\n                        characters</div>\n                      <div *ngIf=\"basicMovieForm.get('shortSynopsis').hasError('maxlength')\">Short Synopsis must be 5000\n                        characters</div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-12\" style=\"height: 5%\">\n                    <label class=\"labelhead\">Long Synopsis</label><span style=\"color:red;\">*</span>\n                    <quill-editor rows=\"2\" [modules]=\"modules\" id=\"synopsis\" formControlName=\"synopsis\" name=\"synopsis\"\n                      id=\"synopsis\" [(ngModel)]=\"create_movie.synopsis\"></quill-editor>\n                    <div class=\"alert alert-danger\" role=\"alert\"\n                      *ngIf=\"!basicMovieForm.controls.synopsis.valid && basicMovieForm.controls.synopsis.touched\">\n                      <div *ngIf=\"basicMovieForm.get('synopsis').hasError('required')\">You must enter Synopsis</div>\n                      <div *ngIf=\"basicMovieForm.get('synopsis').hasError('minlength')\">Synopsis must be 2 characters\n                      </div>\n                      <div *ngIf=\"basicMovieForm.get('synopsis').hasError('maxlength')\">Synopsis must be 10000\n                        characters\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <label class=\"labelhead\" for=\"exampleForm2\">Select Geners</label><span style=\"color:red;\">\n                      *</span>\n                    <angular2-multiselect [data]=\"geners_list\" formControlName=\"generslist\" [(ngModel)]=\"geners_data\"\n                      [settings]=\"genersSettings\" (onSelect)=\"ongenersSelect($event)\"\n                      (onDeSelect)=\"ongenersDeSelect($event)\" (onSelectAll)=\"ongenersSelectAll($event)\"\n                      (onDeSelectAll)=\"ongenersDeSelectAll($event)\">\n                    </angular2-multiselect>\n                    <div class=\"alert alert-danger\" role=\"alert\"\n                      *ngIf=\"!basicMovieForm.controls.generslist.valid && basicMovieForm.controls.generslist.touched\">\n                      <div *ngIf=\"basicMovieForm.get('generslist').hasError('required')\">You must select Geners\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-3\">\n                    <label class=\"labelhead\" for=\"start_date\">Start Date</label><span style=\"color:red;\"> *</span>\n                    <input id=\"start_date\" formControlName=\"yearStarted\" placeholder=\"DD-MM-YYYY\"\n                      [(ngModel)]=\"create_movie.yearStarted\" class=\"form-control\" type=\"text\" \n                      bsDatepicker [bsConfig]=\"datePickerConfig\" />\n                    <div class=\"alert alert-danger\" role=\"alert\"\n                      *ngIf=\"!basicMovieForm.controls.yearStarted.valid && basicMovieForm.controls.yearStarted.touched\">\n                      <div *ngIf=\"basicMovieForm.get('yearStarted').hasError('required')\">You must select Movie Started\n                        Year\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-3\">\n                    <label class=\"labelhead\" for=\"end_date\">Release Date</label>\n                    <input id=\"end_date\" formControlName=\"yearCompleted\" placeholder=\"DD-MM-YYYY\"\n                    [(ngModel)]=\"create_movie.yearCompleted\" \n                    class=\"form-control\" type=\"text\" bsDatepicker [bsConfig]=\"datePickerConfig\" />\n                    <!-- <div class=\"alert alert-danger\" role=\"alert\"\n                      *ngIf=\"!basicMovieForm.controls.yearCompleted.valid && basicMovieForm.controls.yearCompleted.touched\">\n                      <div *ngIf=\"basicMovieForm.get('yearCompleted').hasError('required')\">You must select Movie\n                        Completed Year\n                      </div>\n                    </div> -->\n                  </div>\n                  <div class=\"col-md-12\">\n                    <label class=\"labelhead\" for=\"exampleForm2\">Select Movie Type</label><span\n                      style=\"color:red;\">*</span>\n                    <div class=\"row\">\n                      <div class=\"col-3\">\n                        <div class=\"custom-control custom-radio\">\n                          <input type=\"radio\" class=\"custom-control-input\" id=\"trending\" formControlName=\"movieType\"\n                            value=\"trending\" [(ngModel)]=\"create_movie.movieType\">\n                          <label class=\"custom-control-label\" for=\"trending\" style=\"font-weight: 400;\">Trending\n                            Movie</label>\n                        </div>\n                      </div>\n                      <div class=\"col-3\">\n                        <div class=\"custom-control custom-radio\">\n                          <input type=\"radio\" class=\"custom-control-input\" id=\"upcoming\" formControlName=\"movieType\"\n                            value=\"upcoming\" [(ngModel)]=\"create_movie.movieType\">\n                          <label class=\"custom-control-label\" for=\"upcoming\" style=\"font-weight: 400;\">Upcoming\n                            Movie</label>\n                        </div>\n                      </div>\n                      <div class=\"col-3\">\n                        <div class=\"custom-control custom-radio\">\n                          <input type=\"radio\" class=\"custom-control-input\" id=\"old\" formControlName=\"movieType\"\n                            value=\"old\" [(ngModel)]=\"create_movie.movieType\">\n                          <label class=\"custom-control-label\" for=\"old\" style=\"font-weight: 400;\">Released Movie</label>\n                        </div>\n                      </div>\n                      <!-- <div class=\"col-3\">\n                        <div class=\"custom-control custom-radio\">\n                          <input type=\"radio\" class=\"custom-control-input\" id=\"short\" formControlName=\"movieType\"\n                            value=\"short\" [(ngModel)]=\"create_movie.movieType\">\n                          <label class=\"custom-control-label\" for=\"short\" style=\"font-weight: 400;\">Short\n                            Movie</label>\n                        </div>\n                      </div> -->\n                    </div>\n                  </div>\n                  <div class=\"col-md-12\" style=\"height: 5%\">\n                    <label class=\"labelhead\">Other Technical Details</label>\n                    <quill-editor rows=\"2\" [modules]=\"modules\" formControlName=\"otherTechnicalDetails\" name=\"otherTechnicalDetails\"\n                      id=\"otherTechnicalDetails\" [(ngModel)]=\"create_movie.otherTechnicalDetails\">\n                    </quill-editor>\n                </div>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"row\">\n                  <div class=\"col-3\">\n                    <div class=\"upload-btn-wrapper\">\n                      <button class=\"btn1\">Upload Photo1</button><span style=\"color:red;\">*</span>\n                      <input type=\"file\" id=\"sp\" name=\"sp\" (change)=\"firstPosterUpload($event)\">\n                      <input type=\"hidden\" name=\"fileHidden\">\n                    </div>\n                  </div>\n                  <div class=\"col-4\">\n                    <img [src]=\"croppedImage1\" onerror=\"this.src='../../../assets/images/avtaar/1.jpg';\"\n                      style=\"height: auto;width: 40%;\">\n                  </div>\n                  <div class=\"col-5\">\n                    <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent1\"\n                      [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                      (imageCropped)=\"firstimageCropped($event)\" (imageLoaded)=\"firstimageLoaded()\"\n                      (cropperReady)=\"firstcropperReady()\" (loadImageFailed)=\"firstloadImageFailed()\"\n                      onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height:250px; width:180px;\">\n                    </image-cropper>\n                  </div>\n                  <div class=\"col-3\">\n                    <div class=\"upload-btn-wrapper\">\n                      <button class=\"btn1\">Upload Photo2</button><span style=\"color:red;\">*</span>\n                      <input type=\"file\" id=\"lp\" name=\"lp\" (change)=\"secondPosterUpload($event)\">\n                      <input type=\"hidden\" name=\"fileHidden\">\n                    </div>\n                  </div>\n                  <div class=\"col-4\">\n                    <img [src]=\"croppedImage2\" onerror=\"this.src='../../../assets/images/avtaar/2.jpg';\"\n                      style=\"height: auto;width: 100%;\">\n                  </div>\n                  <div class=\"col-5\">\n                    <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent2\"\n                      [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/2\" format=\"jpeg\"\n                      (imageCropped)=\"imageCropped($event)\" (imageLoaded)=\"imageLoaded()\"\n                      (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                      onerror=\"this.src='../../../assets/images/avtaar/no.png';\" style=\"height:250px; width:180px;\">\n                    </image-cropper>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n                <button type=\"button \" class=\"btn btn-success\" (click)=\"basicSaveMovie()\">Update</button>&nbsp;&nbsp;\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearBasicDetails()\">Clear</button>&nbsp;&nbsp;\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div class=\"section\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <label>PRODUCTION HOUSE</label>\n            </div>\n          </div>\n          <form novalidate [formGroup]=\"productionHouseForm\" class=\"form-horizontal\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div formArrayName=\"prodHouseRows\">\n                  <table class=\"table table-bordered\">\n                    <tr>\n                      <th>Production House Name</th>\n                      <th>Production House Name (If not Registered)</th>\n                      <th>Action</th>\n                    </tr>\n                    <tr *ngFor=\"let prodHouseRow of getProductionHouseRows(productionHouseForm); let i=index\"\n                      [formGroupName]=\"i\">\n                      <td style=\"width: 335px;\">\n                        <angular2-multiselect [data]=\"memberList\" formControlName=\"prodHouseTitle\"\n                          [settings]=\"productionHouseSettings\" [(ngModel)]=\"selectedItems[i]\">\n                          <c-search>\n                            <ng-template>\n                              <input type=\"text\" (keyup)=\"getMemberList($event)\" placeholder=\"Search Members\"\n                                style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                            </ng-template>\n                          </c-search>\n                          <c-item>\n                            <ng-template let-item=\"item\">\n                              <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                              <label>{{item.itemName}}</label>\n                            </ng-template>\n                          </c-item>\n                        </angular2-multiselect>\n                      </td>\n                      <td>\n                        <input type=\"text\" class=\"form-control\" name=\"memberName\" formControlName=\"memberName\"\n                          placeholder=\"Type here if Production House not found\">\n                      </td>\n                      <td>\n                        <button type=\"button\" class=\"btn btn-primary addremovebtn\" (click)=\"addProductionHouseRow()\">\n                          Add\n                        </button> &nbsp;&nbsp;\n                        <button type=\"button\" class=\"btn btn-danger addremovebtn\" (click)=\"removeProductionHouseRow(i)\"\n                          *ngIf=\"productionHouseForm.controls.prodHouseRows.controls.length > 1\">\n                          Remove\n                        </button>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n              <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n                <button type=\"button\" class=\"btn btn-success\"\n                  (click)=\"saveProductionHouse()\">Update</button>&nbsp;&nbsp;\n                <button type=\"button\" class=\"btn btn-primary\"\n                  (click)=\"clearProductionHouse()\">Clear</button>&nbsp;&nbsp;\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div class=\"section\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <label>PRODUCER</label>\n            </div>\n          </div>\n          <form novalidate [formGroup]=\"producerForm\" class=\"form-horizontal\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div formArrayName=\"producerRow\">\n                  <table class=\"table table-bordered\">\n                    <tr>\n                      <th>Producer Name</th>\n                      <th>Producer Name (If not Registered)</th>\n                      <th>Action</th>\n                    </tr>\n                    <tr *ngFor=\"let producerRow of getProducerRow(producerForm); let i=index\" [formGroupName]=\"i\">\n                      <td style=\"width: 335px;\">\n                        <angular2-multiselect [data]=\"memberList\" formControlName=\"producerName\"\n                          [settings]=\"producerSettings\" [(ngModel)]=\"selectedProducerItems[i]\">\n                          <c-search>\n                            <ng-template>\n                              <input type=\"text\" (keyup)=\"getMemberList($event)\" placeholder=\"Search Members\"\n                                style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                            </ng-template>\n                          </c-search>\n                          <c-item>\n                            <ng-template let-item=\"item\">\n                              <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                              <label>{{item.itemName}}</label>\n                            </ng-template>\n                          </c-item>\n                        </angular2-multiselect>\n                      </td>\n                      <td>\n                        <input type=\"text\" class=\"form-control\" name=\"memberName\" formControlName=\"memberName\"\n                          placeholder=\"Type here if Producer Name not found\">\n                      </td>\n                      <td>\n                        <button type=\"button\" class=\"btn btn-primary addremovebtn\" (click)=\"addProducerRow()\">\n                          Add\n                        </button> &nbsp;&nbsp;\n                        <button type=\"button\" class=\"btn btn-danger addremovebtn\" (click)=\"removeProducerRow(i)\"\n                          *ngIf=\"producerForm.controls.producerRow.controls.length > 1\">\n                          Remove\n                        </button>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n              <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"saveProducer()\">Submit</button>&nbsp;&nbsp;\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearProducer()\">Clear</button>&nbsp;&nbsp;\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div class=\"section\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <label>WRITER</label>\n            </div>\n          </div>\n          <form novalidate [formGroup]=\"writerForm\" class=\"form-horizontal\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div formArrayName=\"writerRow\">\n                  <table class=\"table table-bordered\">\n                    <tr>\n                      <th>Writer Name</th>\n                      <th>Writer Name (If not Registered)</th>\n                      <th>Action</th>\n                    </tr>\n                    <tr *ngFor=\"let writerRow of getWriterRow(writerForm); let i=index\" [formGroupName]=\"i\">\n                      <td style=\"width: 335px;\">\n                        <angular2-multiselect [data]=\"memberList\" formControlName=\"writerName\"\n                          [settings]=\"writerSettings\" [(ngModel)]=\"selectedWriterItems[i]\">\n                          <c-search>\n                            <ng-template>\n                              <input type=\"text\" (keyup)=\"getMemberList($event)\" placeholder=\"Search Members\"\n                                style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                            </ng-template>\n                          </c-search>\n                          <c-item>\n                            <ng-template let-item=\"item\">\n                              <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                              <label>{{item.itemName}}</label>\n                            </ng-template>\n                          </c-item>\n                        </angular2-multiselect>\n                      </td>\n                      <td>\n                        <input type=\"text\" class=\"form-control\" name=\"memberName\" formControlName=\"memberName\"\n                          placeholder=\"Type here if Writer Name not found\">\n                      </td>\n                      <td>\n                        <button type=\"button\" class=\"btn btn-primary addremovebtn\" (click)=\"addWriterRow()\">\n                          Add\n                        </button> &nbsp;&nbsp;\n                        <button type=\"button\" class=\"btn btn-danger addremovebtn\" (click)=\"removeWriterRow(i)\"\n                          *ngIf=\"writerForm.controls.writerRow.controls.length > 1\">\n                          Remove\n                        </button>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n              <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"saveWriter()\">Submit</button>&nbsp;&nbsp;\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearWriter()\">Clear</button>&nbsp;&nbsp;\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div class=\"section\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <label>DIRECTOR</label>\n            </div>\n          </div>\n          <form novalidate [formGroup]=\"directorForm\" class=\"form-horizontal\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div formArrayName=\"directorRow\">\n                  <table class=\"table table-bordered\">\n                    <tr>\n                      <th>Director Name</th>\n                      <th>Director Name (If not Registered)</th>\n                      <th>Action</th>\n                    </tr>\n                    <tr *ngFor=\"let directorRow of getDirectorRow(directorForm); let i=index\" [formGroupName]=\"i\">\n                      <td style=\"width: 335px;\">\n                        <angular2-multiselect [data]=\"memberList\" formControlName=\"directorName\"\n                          [settings]=\"directorSettings\" [(ngModel)]=\"selectedDirectorItems[i]\">\n                          <c-search>\n                            <ng-template>\n                              <input type=\"text\" (keyup)=\"getMemberList($event)\" placeholder=\"Search Members\"\n                                style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                            </ng-template>\n                          </c-search>\n                          <c-item>\n                            <ng-template let-item=\"item\">\n                              <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                              <label>{{item.itemName}}</label>\n                            </ng-template>\n                          </c-item>\n                        </angular2-multiselect>\n                      </td>\n                      <td>\n                        <input type=\"text\" class=\"form-control\" name=\"memberName\" formControlName=\"memberName\"\n                          placeholder=\"Type here if Director Name not found\">\n                      </td>\n                      <td>\n                        <button type=\"button\" class=\"btn btn-primary addremovebtn\" (click)=\"addDirectorRow()\">\n                          Add\n                        </button> &nbsp;&nbsp;\n                        <button type=\"button\" class=\"btn btn-danger addremovebtn\" (click)=\"removeDirectorRow(i)\"\n                          *ngIf=\"directorForm.controls.directorRow.controls.length > 1\">\n                          Remove\n                        </button>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n              <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"saveDirector()\">Submit</button>&nbsp;&nbsp;\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearDirector()\">Clear</button>&nbsp;&nbsp;\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div class=\"section\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <label>MUSIC DIRECTOR</label>\n            </div>\n          </div>\n          <form novalidate [formGroup]=\"musicDirectorForm\" class=\"form-horizontal\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div formArrayName=\"musicDirectorRow\">\n                  <table class=\"table table-bordered\">\n                    <tr>\n                      <th>Music Director Name</th>\n                      <th>Music Director Name (If not Registered)</th>\n                      <th>Action</th>\n                    </tr>\n                    <tr *ngFor=\"let musicDirectorRow of getMusicDirectorRow(musicDirectorForm); let i=index\"\n                      [formGroupName]=\"i\">\n                      <td style=\"width: 335px;\">\n                        <angular2-multiselect [data]=\"memberList\" formControlName=\"musicDirectorName\"\n                          [settings]=\"musicDirectorSettings\" [(ngModel)]=\"selectedMusicDirectorItems[i]\">\n                          <c-search>\n                            <ng-template>\n                              <input type=\"text\" (keyup)=\"getMemberList($event)\" placeholder=\"Search Members\"\n                                style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                            </ng-template>\n                          </c-search>\n                          <c-item>\n                            <ng-template let-item=\"item\">\n                              <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                              <label>{{item.itemName}}</label>\n                            </ng-template>\n                          </c-item>\n                        </angular2-multiselect>\n                      </td>\n                      <td>\n                        <input type=\"text\" class=\"form-control\" name=\"memberName\" formControlName=\"memberName\"\n                          placeholder=\"Type here if Music Director Name not found\">\n                      </td>\n                      <td>\n                        <button type=\"button\" class=\"btn btn-primary addremovebtn\" (click)=\"addMusicDirectorRow()\">\n                          Add\n                        </button> &nbsp;&nbsp;\n                        <button type=\"button\" class=\"btn btn-danger addremovebtn\" (click)=\"removeMusicDirectorRow(i)\"\n                          *ngIf=\"musicDirectorForm.controls.musicDirectorRow.controls.length > 1\">\n                          Remove\n                        </button>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n              <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"saveMusicDirector()\">Submit</button>&nbsp;&nbsp;\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearMusicDirector();\">Clear</button>&nbsp;&nbsp;\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div class=\"section\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <label>STARRING</label>\n            </div>\n          </div>\n          <form novalidate [formGroup]=\"starringForm\" class=\"form-horizontal\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div formArrayName=\"starringRow\">\n                  <table class=\"table table-bordered\">\n                    <tr>\n                      <th>Star Name</th>\n                      <th>Star Name (If not Registered)</th>\n                      <th>Action</th>\n                    </tr>\n                    <tr *ngFor=\"let starringRow of getStarringRow(starringForm); let i=index\" [formGroupName]=\"i\">\n                      <td style=\"width: 335px;\">\n                        <angular2-multiselect [data]=\"memberList\" formControlName=\"starringName\"\n                          [settings]=\"staringSettings\" [(ngModel)]=\"selectedStaringItems[i]\">\n                          <c-search>\n                            <ng-template>\n                              <input type=\"text\" (keyup)=\"getMemberList($event)\" placeholder=\"Search Members\"\n                                style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                            </ng-template>\n                          </c-search>\n                          <c-item>\n                            <ng-template let-item=\"item\">\n                              <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                              <label>{{item.itemName}}</label>\n                            </ng-template>\n                          </c-item>\n                        </angular2-multiselect>\n                      </td>\n                      <td>\n                        <input type=\"text\" class=\"form-control\" name=\"memberName\" formControlName=\"memberName\"\n                          placeholder=\"Type here if Star Name not found\">\n                      </td>\n                      <td>\n                        <button type=\"button\" class=\"btn btn-primary addremovebtn\" (click)=\"addStarringRow()\">\n                          Add\n                        </button> &nbsp;&nbsp;\n                        <button type=\"button\" class=\"btn btn-danger addremovebtn\" (click)=\"removeStarringRow(i)\"\n                          *ngIf=\"starringForm.controls.starringRow.controls.length > 1\">\n                          Remove\n                        </button>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n              <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"saveStarring()\">Submit</button>&nbsp;&nbsp;\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearStarring()\">Clear</button>&nbsp;&nbsp;\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <form novalidate [formGroup]=\"TechnicianForm\" class=\"form-horizontal\">\n          <div class=\"row section\">\n            <div class=\"col-md-12\">\n              <table class=\"table\">\n                <label>TECHNICIANS</label>\n                <tr>\n                  <div formArrayName=\"technicianHeads\">\n                    <div *ngFor=\"let technicianHead of gettechnicianHeads().controls; let TechIndex=index\">\n                      <!-- {{TechIndex}} -->\n                      <table class=\"table table-bordered\" [formGroupName]=\"TechIndex\">\n                        <tbody>\n                          <tr>\n                            <table class=\"table table-bordered\" style=\"width: 80%;\">\n                              <tr>\n                                <th>Profession Title</th>\n                                <th>Profession Title (If not found)</th>\n                                <th>Seq No</th>\n                              </tr>\n                              <tr>\n                                <td>\n                                  <angular2-multiselect [data]=\"professionList\" [settings]=\"ProfessionTitleSettings\"\n                                    (onSelect)=\"selectedProfId($event)\" formControlName=\"technicianTypeName\"\n                                    [(ngModel)]=\"selectedTechHeadItems[TechIndex]\">\n                                    <c-search>\n                                      <ng-template>\n                                        <input type=\"text\" (keyup)=\"getProfessionList($event)\"\n                                          placeholder=\"Search Profession Title\"\n                                          style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                                      </ng-template>\n                                    </c-search>\n                                    <c-item>\n                                      <ng-template let-item=\"item\">\n                                        <label>{{item.itemName}}</label>\n                                      </ng-template>\n                                    </c-item>\n                                  </angular2-multiselect>\n                                </td>\n                                <td>\n                                  <input type=\"text\" class=\"form-control\" name=\"technicianTypeNameIfNot\"\n                                    formControlName=\"technicianTypeNameIfNot\"\n                                    placeholder=\"Type here if Profession Title not found\">\n                                </td>\n                                <td>\n                                  <input type=\"text\" class=\"form-control\" maxlength=\"2\" name=\"seqNo\" formControlName=\"seqNo\">\n                                </td>\n                              </tr>\n                            </table>\n                          </tr>\n\n                          <tr>\n                            <td>\n                              <div formArrayName=\"technicians\">\n                                <table class=\"table table-bordered\">\n                                  <tr>\n                                    <th>Member Name</th>\n                                    <th>Member Name (If not Registered)</th>\n                                    <th>Seq No</th>\n                                    <th>Action</th>\n                                  </tr>\n                                  <tr\n                                    *ngFor=\"let technicianName of getTechnicians(TechIndex).controls; let technicianNameIndex=index\"\n                                    [formGroupName]=\"technicianNameIndex\">\n                                    <!-- <td>\n                                                          <input type=\"text\" class=\"form-control\" name=\"technicianName\" formControlName=\"technicianName\">\n                                                      </td> -->\n                                    <td>\n                                      <angular2-multiselect [data]=\"memberList\" [settings]=\"TechniciansSettings\"\n                                        (onSelect)=\"selectedMemId($event)\" formControlName=\"technicianName\">\n                                        <c-search>\n                                          <ng-template>\n                                            <input type=\"text\" (keyup)=\"getMemberList($event)\"\n                                              placeholder=\"Search Members\"\n                                              style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                                          </ng-template>\n                                        </c-search>\n                                        <c-item>\n                                          <ng-template let-item=\"item\">\n                                            <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                                            <label>{{item.itemName}}</label>\n                                          </ng-template>\n                                        </c-item>\n                                      </angular2-multiselect>\n                                    </td>\n                                    <td>\n                                      <input type=\"text\" class=\"form-control\" name=\"technicianNameIfNot\"\n                                        formControlName=\"technicianNameIfNot\"\n                                        placeholder=\"Type here if Member Name not found\">\n                                      <!-- <input type=\"text\" name=\"movieTechId\" formControlName=\"movieTechId\"> -->\n                                    </td>\n                                    <td>\n                                      <input type=\"text\" class=\"form-control\" maxlength=\"2\" name=\"seqNo\" \n                                      formControlName=\"seqNo\">\n                                    </td>\n                                    <td>\n                                      <span class=\"btn btn-primary\" (click)=\"addTechnicianHeadTechnician(TechIndex)\">\n                                        <i class=\"fa fa-plus-square addremoveicon\" aria-hidden=\"true\"></i>\n                                      </span>&nbsp;&nbsp;\n                                      <span class=\"btn btn-danger\"\n                                        (click)=\"removeTechnicianHeadTechnician(TechIndex,technicianNameIndex)\"\n                                        *ngIf=\"TechnicianForm.controls.technicianHeads.controls[TechIndex].controls.technicians.controls.length > 1\">\n                                        <i class=\"fa fa-minus-square addremoveicon\" aria-hidden=\"true\"></i>\n                                      </span>\n                                    </td>\n                                  </tr>\n                                </table>\n                              </div>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td>\n                              <div class=\"row\">\n                                <div class=\"col-md-12\" style=\"text-align:right;\">\n                                  <button type=\"button\" class=\"btn btn-primary addremovebtn\"\n                                    (click)=\"addTechnicianHead()\">\n                                    Add\n                                  </button>&nbsp;&nbsp;\n                                  <button type=\"button\" class=\"btn btn-danger addremovebtn\"\n                                    (click)=\"removeTechnicianHead(TechIndex)\"\n                                    *ngIf=\"TechnicianForm.controls.technicianHeads.controls.length > 1\">\n                                    Remove\n                                  </button>\n                                </div>\n                              </div>\n                            </td>\n                          </tr>\n                        </tbody>\n                        <tfoot>\n                          <tr>\n                            <div class=\"row\">\n                              <div class=\"col-md-12\" style=\"text-align:center;padding: 1%;\">\n                                <button type=\"button\" class=\"btn btn-success addremovebtn\"\n                                  (click)=\"onTechniciansSubmit(TechIndex)\">Submit</button>&nbsp;&nbsp;\n                                <button type=\"button\" class=\"btn btn-primary addremovebtn\"\n                                  (click)=\"onClearTechnicians(TechIndex)\">\n                                  Clear\n                                </button>\n                              </div>\n                            </div>\n                          </tr>\n                        </tfoot>\n                      </table>\n                    </div>\n                  </div>\n                </tr>\n              </table>\n            </div>\n          </div>\n        </form>\n\n        <div class=\"section\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <label>GALLERY</label>\n            </div>\n          </div>\n          <form novalidate [formGroup]=\"galleryForm\" class=\"form-horizontal\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div formArrayName=\"galleryRow\">\n                  <table class=\"table table-bordered\">\n                    <tr>\n                      <th>Choose Photo</th>\n                      <th>Crop</th>\n                      <th>Preview</th>\n                      <th>Action</th>\n                    </tr>\n                    <tr *ngFor=\"let galleryRow of getGalleryRow(galleryForm); let i=index\" [formGroupName]=\"i\">\n                      <td>\n                        <div class=\"upload-btn-wrapper\">\n                          <button class=\"btn1\">Upload Photo {{i+1}}</button>\n                          <input type='file' id=\"galaryfakePath\" (change)=\"galleryImageUpload($event,i)\"\n                            accept=\".jpg,.jpeg,.png\">\n                          <input type=\"hidden\" name=\"galleryPathHidden\" formControlName=\"galaryPath\" />\n                        </div>\n                      </td>\n                      <td>\n                        <span *ngIf=\"imageChangedEventGalary[i] !=''\">\n                          <image-cropper id=\"{{'imageGalary'+i}}\" [imageChangedEvent]=\"imageChangedEventGalary[i]\"\n                            [maintainAspectRatio]=\"false\" format=\"jpeg\" (imageCropped)=\"imageCroppedGalary($event,i)\"\n                            (imageLoaded)=\"imageLoadedGalary()\" (cropperReady)=\"cropperReadyGalary()\"\n                            (loadImageFailed)=\"loadImageFailedGalary()\"\n                            onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                            style=\"height: auto; width: 220px;\">\n                          </image-cropper>\n                        </span>\n                      </td>\n                      <td>\n                        <img [src]=\"galImg[i]\" onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                          style=\"height: auto;width: 90px;\">\n                      </td>\n                      <td>\n                        <button type=\"button\" (click)=\"addGalleryRowInPosition(i)\" class=\"btn btn-primary addremovebtn\">\n                          Add\n                        </button>\n                        &nbsp;&nbsp;\n                        <button type=\"button\" (click)=\"deleteGalleryRow(i)\" class=\"btn btn-danger addremovebtn\"\n                          *ngIf=\"galleryForm.controls.galleryRow.controls.length > 1\">\n                          Remove\n                        </button>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n              <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n                <button type=\"button \" class=\"btn btn-success\" (click)=\"saveGallery()\">Submit</button>&nbsp;&nbsp;\n                <button type=\"button\" class=\"btn btn-primary\">Clear</button>&nbsp;&nbsp;\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div class=\"section\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <label>IMAGE ARTICLE</label>\n            </div>\n          </div>\n          <form novalidate [formGroup]=\"articleForm\" class=\"form-horizontal\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div formArrayName=\"articleRow\">\n                  <table class=\"table table-bordered\">\n                    <tr>\n                      <td>Choose Article</td>\n                      <td>Preview</td>\n                      <th>Action</th>\n                    </tr>\n                    <tr *ngFor=\"let articlerow of getArticleRow(articleForm); let i=index\" [formGroupName]=\"i\">\n                      <td>\n                        <div class=\"upload-btn-wrapper\">\n                          <button class=\"btn1\">Upload Article {{i+1}}</button>\n                          <input type=\"file\" name=\"articlefakePath\" accept=\".jpg,.jpeg,.png\"\n                            (change)=\"multipartArticleUpload($event,i)\">\n                          <input type=\"hidden\" name=\"articlefakePathHidden\" formControlName=\"articlePath\" />\n                        </div>\n                      </td>\n                      <td>\n                        <img [src]=\"articleImg[i]\" onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                          style=\"height: auto;width: 90px;\">\n                      </td>\n                      <td>\n                        <button type=\"button\" (click)=\"addArticleRowInPosition(i)\" class=\"btn btn-primary addremovebtn\">\n                          Add\n                        </button> &nbsp;&nbsp;\n                        <button type=\"button\" (click)=\"deleteArticleRow(i)\" class=\"btn btn-danger addremovebtn\"\n                          *ngIf=\"articleForm.controls.articleRow.controls.length > 1\">\n                          Remove\n                        </button>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n              <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n                <button type=\"button \" class=\"btn btn-success\" (click)=\"saveImageArticle()\">Submit</button>&nbsp;&nbsp;\n                <button type=\"button\" class=\"btn btn-primary\">Clear</button>\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div class=\"section\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <label>PDF ARTICLE</label>\n            </div>\n          </div>\n          <form novalidate [formGroup]=\"articlePdfForm\" class=\"form-horizontal\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div formArrayName=\"articlePdfRow\">\n                  <table class=\"table table-bordered\">\n                    <tr>\n                      <th>Choose Article Pdf</th>\n                      <th>Preview</th>\n                      <th>Action</th>\n                    </tr>\n                    <tr *ngFor=\"let articlepdfrow of getArticlePdfRow(articlePdfForm); let i=index\" [formGroupName]=\"i\">\n                      <td>\n                        <div class=\"upload-btn-wrapper\">\n                          <button class=\"btn1\">Upload Article {{i+1}}</button>\n                          <input type=\"file\" name=\"articlepdffakePath\" accept=\"application/pdf\"\n                            (change)=\"multipartArticlePdfUpload($event,i)\">\n                          <input type=\"hidden\" name=\"articlefakePathHidden\" formControlName=\"articlePdfPath\" />\n                        </div>\n                      </td>\n                      <td>\n                        <span *ngIf=\"articlePdf[i] !=''\">\n                          <a [href]=\"sanitizer.bypassSecurityTrustResourceUrl(articlePdf[i])\" download>PDF</a>\n                        </span>\n                      </td>\n                      <td>\n                        <button type=\"button\" (click)=\"addArticlePdfRowInPosition(i)\"\n                          class=\"btn btn-primary addremovebtn\">\n                          Add\n                        </button> &nbsp;&nbsp;\n                        <button type=\"button\" (click)=\"deleteArticlePdfRow(i)\" class=\"btn btn-danger addremovebtn\"\n                          *ngIf=\"articlePdfForm.controls.articlePdfRow.controls.length > 1\">\n                          Remove\n                        </button>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n              <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n                <button type=\"button \" class=\"btn btn-success\" (click)=\"savePdfArticle()\">Submit</button>&nbsp;&nbsp;\n                <button type=\"button\" class=\"btn btn-primary\">Clear</button>&nbsp;&nbsp;\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div class=\"section\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <label>OPINION</label>\n            </div>\n          </div>\n          <form novalidate [formGroup]=\"memberOpinionForm\" class=\"form-horizontal\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div formArrayName=\"memberOpinionRow\">\n                  <table class=\"table table-bordered\">\n                    <tr>\n                      <th>Member Name</th>\n                      <th>Members Opinion</th>\n                      <th>Action</th>\n                    </tr>\n                    <tr *ngFor=\"let memberOpinionRow of getMemberOpinionRow(memberOpinionForm); let i=index\"\n                      [formGroupName]=\"i\">\n                      <td style=\"width: 335px;\">\n                        <angular2-multiselect [data]=\"memberList\" formControlName=\"memberOpinionName\"\n                          [settings]=\"openionSettings\" [(ngModel)]=\"selectedOpenionItems[i]\">\n                          <c-search>\n                            <ng-template>\n                              <input type=\"text\" (keyup)=\"getMemberList($event)\" placeholder=\"Search Members\"\n                                style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                            </ng-template>\n                          </c-search>\n                          <c-item>\n                            <ng-template let-item=\"item\">\n                              <img [src]=\"item.profileImage\" style=\"width: 30px;\" />\n                              <label>{{item.itemName}}</label>\n                            </ng-template>\n                          </c-item>\n                        </angular2-multiselect>\n                      </td>\n                      <td>\n                        <textarea name=\"description\" id=\"description\" formControlName=\"memberOpinionDescription\"\n                          class=\"form-control\" #description></textarea>\n                      </td>\n                      <td>\n                        <button type=\"button\" class=\"btn btn-primary addremovebtn\" (click)=\"addMemberOpinionRow()\">\n                          Add\n                        </button> &nbsp;&nbsp;\n                        <button type=\"button\" class=\"btn btn-danger addremovebtn\" (click)=\"removeMemberOpinionRow(i)\"\n                          *ngIf=\"memberOpinionForm.controls.memberOpinionRow.controls.length > 1\">\n                          Remove\n                        </button>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n              <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n                <button type=\"button \" class=\"btn btn-success\" (click)=\"saveMemberOpenion()\">Submit</button>&nbsp;&nbsp;\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearMemberOpenion()\">Clear</button>&nbsp;&nbsp;\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div class=\"section\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <label>VIDEOS</label>\n            </div>\n          </div>\n          <form novalidate [formGroup]=\"videoForm\" class=\"form-horizontal\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div formArrayName=\"videoRow\">\n                  <table class=\"table table-bordered\">\n                    <th>Video Name</th>\n                    <th>Video URL</th>\n                    <th>Action</th>\n                    <tr *ngFor=\"let videorow of getVideoRow(videoForm); let i=index\" [formGroupName]=\"i\">\n                      <td>\n                        <input type='text' formControlName=\"videoName\" class=\"form-control\">\n                      </td>\n                      <td>\n                        <input type='text' formControlName=\"videoURL\" class=\"form-control\">\n                      </td>\n                      <td>\n                        <button type=\"button\" (click)=\"addVideoRowInPosition()\" class=\"btn btn-primary addremovebtn\">\n                          Add\n                        </button>\n                        &nbsp;&nbsp;\n                        <button type=\"button\" (click)=\"deleteVideoRow(i)\" class=\"btn btn-danger addremovebtn\"\n                          *ngIf=\"videoForm.controls.videoRow.controls.length > 1\">\n                          Remove\n                        </button>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </div>\n              <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n                <button type=\"button \" class=\"btn btn-success\" (click)=\"saveMovieVideos()\">Submit</button>&nbsp;&nbsp;\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearMovieVideos()\">Clear</button>&nbsp;&nbsp;\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div class=\"section\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <label>SOCIAL MEDIA LINKS</label>\n            </div>\n          </div>\n          <form novalidate [formGroup]=\"socialMediaForm\" class=\"form-horizontal\">\n            <div class=\"row\" formArrayName=\"socialLinkRow\">\n              <div class=\"col-md-4\">\n                <table class=\"table table-bordered\">\n                  <tr>\n                    <td>Social Media</td>\n                    <td>URL</td>\n                  </tr>\n                  <tr *ngFor=\"let social of socialMediaLinks; let i=index\" [formGroupName]=\"i\">\n                    <td>\n                      <img src={{social.icon}} height=\"20px\" width=\"20px\">\n                      &nbsp;&nbsp; {{social.socialLinksName}}\n                    </td>\n                    <td>\n                      <input class=\"form-control\" type=\"text\" maxlength=\"100\" formControlName=\"socialLinksUrl\"\n                        [(ngModel)]=\"social.socialLinksUrl\">\n                    </td>\n                  </tr>\n                </table>\n              </div>\n              <div class=\"col-md-12\" style=\"margin: 2% 0%\">\n                <button type=\"button \" class=\"btn btn-success\" (click)=\"saveSocialMedias()\">Submit</button>&nbsp;&nbsp;\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearSocialMedias()\">Clear</button>&nbsp;&nbsp;\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </span>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/movie/movienews/movienews.component.html":
/*!************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/movie/movienews/movienews.component.html ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container-fluid\">\n    <div class=\"card\">\n        <div class=\"card-header\">MOVIE NEWS</div>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <form novalidate [formGroup]=\"movieNewsForm\" class=\"form-horizontal\">\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-md-3\">\n                                <label>Search Movie</label><span style=\"color:#ff0000;\"> *</span>\n                                <angular2-multiselect  formControlName=\"MovieName\" [settings]=\"movieNewsSettings\"\n                            [data]=\"movieList\"  (onSelect)=\"selectedMovieId($event)\" [(ngModel)]=\"selectedMovie\">\n                              <c-search>\n                                <ng-template>\n                                  <input type=\"text\" (keyup)=\"getMovieList($event)\" placeholder=\"Search Movie\"\n                                    style=\"border: none;width: 100%; height: 100%;outline: none;\" />\n                                </ng-template>\n                              </c-search>\n                              <c-item>\n                                <ng-template let-item=\"item\">\n                                  <img [src]=\"item.profileImage\" style=\"width: 30px;\"/>\n                                  <label class=\"ddname\">{{item.itemName}}</label>\n                                </ng-template>\n                              </c-item>\n                            </angular2-multiselect>\n                            </div>\n                            <div class=\"col-md-9\">\n                                <label>News Title</label><span style=\"color:#ff0000;\"> *</span>\n                                <textarea class=\"form-control\" formControlName=\"newsTitle\"\n                                    [(ngModel)]=\"movienews.newsTitle\"></textarea>\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!movieNewsForm.controls.newsTitle.valid && movieNewsForm.controls.newsTitle.touched\">\n                                    <div *ngIf=\"movieNewsForm.get('newsTitle').hasError('required')\">News Title is\n                                        required\n                                    </div>\n                                    <div *ngIf=\"movieNewsForm.get('newsTitle').hasError('minlength')\">News Title must be\n                                        3 characters\n                                    </div>\n                                    <div *ngIf=\"movieNewsForm.get('newsTitle').hasError('maxlength')\">News Title Can't\n                                        be more than 300 characters\n                                        long</div>\n                                    <div *ngIf=\"movieNewsForm.get('newsTitle').hasError('pattern')\">Please enter valid\n                                        News Title\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-12\" style=\"margin-bottom: 8%;\">\n                                <label>News Description</label><span style=\"color:#ff0000;\"> *</span>\n                                <quill-editor [modules]=\"modules\" rows=\"1\" formControlName=\"newsDescription\"\n                                    [(ngModel)]=\"movienews.newsDescription\">\n                                </quill-editor>\n                                <div class=\"alert alert-danger\" role=\"alert\"\n                                    *ngIf=\"!movieNewsForm.controls.newsDescription.valid && movieNewsForm.controls.newsDescription.touched\">\n                                    <div *ngIf=\"movieNewsForm.get('newsDescription').hasError('required')\">News\n                                        Description is required\n                                    </div>\n                                    <div *ngIf=\"movieNewsForm.get('newsDescription').hasError('minlength')\">News\n                                        Description must be 3 characters\n                                    </div>\n                                    <div *ngIf=\"movieNewsForm.get('newsDescription').hasError('maxlength')\">News\n                                        Description Can't be more than\n                                        8000 characters long</div>\n                                    <div *ngIf=\"movieNewsForm.get('newsDescription').hasError('pattern')\">Please enter\n                                        valid News Description\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-12\">\n                                <p>Template Type</p>\n                            </div>\n                            <div class=\"col-md-1\">\n                                <div class=\"custom-control custom-radio\">\n                                    <input type=\"radio\" class=\"custom-control-input\" name=\"newsTemplateId\"\n                                        id=\"singlePhoto\" formControlName=\"newsTemplateId\" value=\"1\"\n                                        [(ngModel)]=\"movienews.newsTemplateId\">\n                                    <label class=\"custom-control-label\" for=\"singlePhoto\">1 Photo</label>\n                                </div>\n                            </div>\n                            <div class=\"col-md-1\">\n                                <div class=\"custom-control custom-radio\">\n                                    <input type=\"radio\" class=\"custom-control-input\" name=\"newsTemplateId\"\n                                        id=\"thriplePhoto\" formControlName=\"newsTemplateId\" value=\"3\"\n                                        [(ngModel)]=\"movienews.newsTemplateId\">\n                                    <label class=\"custom-control-label\" for=\"thriplePhoto\">3 Photo</label>\n                                </div>\n                            </div>\n                            <div class=\"col-md-1\">\n                                <div class=\"custom-control custom-radio\">\n                                    <input type=\"radio\" class=\"custom-control-input\" name=\"newsTemplateId\"\n                                        id=\"sevenPhoto\" formControlName=\"newsTemplateId\" value=\"7\"\n                                        [(ngModel)]=\"movienews.newsTemplateId\">\n                                    <label class=\"custom-control-label\" for=\"sevenPhoto\">7 Photo</label>\n                                </div>\n                            </div>\n                            <div class=\"col-md-9\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-12\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md-2\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-md-12\" *ngIf=\"movienews.newsTemplateId == '1'\">\n                                                        <div class=\"row\">\n                                                            <div div class=\"col-md-12\">\n                                                                <div class=\"upload-btn-wrapper\">\n                                                                    <button class=\"btn1\">Upload Photo 1</button><span\n                                                                        style=\"color:#ff0000;\"> *</span>\n                                                                    <input type=\"file\" id=\"photo1\" name=\"photo1\"\n                                                                        (change)=\"fileChangeEventProfile($event,1)\"\n                                                                       >\n                                                                    <input type=\"hidden\" name=\"imagePath71\"\n                                                                    [(ngModel)]=\"movieNewsForm.thirdType1\"\n                                                                    formControlName=\"imagePath71\" />\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md-12\" *ngIf=\"movienews.newsTemplateId == '3'\">\n                                                        <div class=\"row\">\n                                                            <div div class=\"col-md-12\">\n                                                                <div class=\"upload-btn-wrapper\">\n                                                                    <button class=\"btn1\">Upload Photo 1</button><span\n                                                                        style=\"color:#ff0000;\"> *</span>\n                                                                    <input type=\"file\" id=\"photo1\" name=\"photo1\"\n                                                                        (change)=\"fileChangeEventProfile($event,1)\"\n                                                                        >\n                                                                    <input type=\"hidden\" name=\"imagePath71\"\n                                                                    [(ngModel)]=\"movieNewsForm.thirdType1\"\n                                                                    formControlName=\"imagePath71\"/>\n                                                                </div>\n                                                            </div>\n                                                            <div div class=\"col-md-12\">\n                                                                <div class=\"upload-btn-wrapper\">\n                                                                    <button class=\"btn1\">Upload Photo 2</button><span\n                                                                        style=\"color:#ff0000;\"> *</span>\n                                                                    <input type=\"file\" id=\"photo1 \" name=\"photo1 \"\n                                                                        (change)=\"fileChangeEventProfile($event,2)\"\n                                                                       >\n                                                                    <input type=\"hidden\" name=\"imagePath2\"\n                                                                    [(ngModel)]=\"movieNewsForm.thirdType2\"\n                                                                    formControlName=\"imagePath72\" />\n                                                                </div>\n                                                            </div>\n                                                            <div div class=\"col-md-12\">\n                                                                <div class=\"upload-btn-wrapper\">\n                                                                    <button class=\"btn1\">Upload Photo 3</button><span\n                                                                        style=\"color:#ff0000;\"> *</span>\n                                                                    <input type=\"file\" id=\"photo1 \" name=\"photo1 \"\n                                                                        (change)=\"fileChangeEventProfile($event,3)\"\n                                                                       >\n                                                                    <input type=\"hidden\" name=\"imagePath3\"\n                                                                    [(ngModel)]=\"movieNewsForm.thirdType3\"\n                                                                    formControlName=\"imagePath73\"/>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-md-12\" *ngIf=\"movienews.newsTemplateId == '7'\">\n                                                        <div class=\"row\">\n                                                            <div div class=\"col-md-12\">\n                                                                <div class=\"upload-btn-wrapper\">\n                                                                    <button class=\"btn1\">Upload Photo 1</button><span\n                                                                        style=\"color:#ff0000;\"> *</span>\n                                                                    <input type=\"file\" id=\"photo1\" name=\"photo1\"\n                                                                        (change)=\"fileChangeEventProfile($event,1)\"\n                                                                       >\n                                                                    <input type=\"hidden\" name=\"imagePath71\"\n                                                                    [(ngModel)]=\"movieNewsForm.thirdType1\"\n                                                                    formControlName=\"imagePath71\"/>\n                                                                </div>\n                                                            </div>\n                                                            <div div class=\"col-md-12\">\n                                                                <div class=\"upload-btn-wrapper\">\n                                                                    <button class=\"btn1\">Upload Photo 2</button><span\n                                                                        style=\"color:#ff0000;\"> *</span>\n                                                                    <input type=\"file\" id=\"photo1 \" name=\"photo1 \"\n                                                                        (change)=\"fileChangeEventProfile($event,2)\"\n                                                                       >\n                                                                    <input type=\"hidden\" name=\"imagePath2\"\n                                                                    [(ngModel)]=\"movieNewsForm.thirdType2\"\n                                                                    formControlName=\"imagePath72\"/>\n                                                                </div>\n                                                            </div>\n                                                            <div div class=\"col-md-12\">\n                                                                <div class=\"upload-btn-wrapper\">\n                                                                    <button class=\"btn1\">Upload Photo 3</button><span\n                                                                        style=\"color:#ff0000;\"> *</span>\n                                                                    <input type=\"file\" id=\"photo1 \" name=\"photo1 \"\n                                                                        (change)=\"fileChangeEventProfile($event,3)\"\n                                                                       >\n                                                                    <input type=\"hidden\" name=\"imagePath3\"\n                                                                    [(ngModel)]=\"movieNewsForm.thirdType3\"\n                                                                    formControlName=\"imagePath73\"/>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"col-md-12\">\n                                                                <div class=\"upload-btn-wrapper\">\n                                                                    <button class=\"btn1\">Upload Photo 4</button><span\n                                                                        style=\"color:#ff0000;\"> *</span>\n                                                                    <input type=\"file\" id=\"photo1 \" name=\"photo1 \"\n                                                                        (change)=\"fileChangeEventProfile($event,4)\"\n                                                                        >\n                                                                    <input type=\"hidden\" name=\"imagePath1\"\n                                                                    [(ngModel)]=\"movieNewsForm.thirdType4\"\n                                                                    formControlName=\"imagePath74\"/>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"col-md-12\">\n                                                                <div class=\"upload-btn-wrapper\">\n                                                                    <button class=\"btn1\">Upload Photo 5</button><span\n                                                                        style=\"color:#ff0000;\"> *</span>\n                                                                    <input type=\"file\" id=\"photo1 \" name=\"photo1 \"\n                                                                        (change)=\"fileChangeEventProfile($event,5)\"\n                                                                       >\n                                                                    <input type=\"hidden\" name=\"imagePath1\"\n                                                                    [(ngModel)]=\"movieNewsForm.thirdType5\"\n                                                                    formControlName=\"imagePath75\"/>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"col-md-12\">\n                                                                <div class=\"upload-btn-wrapper\">\n                                                                    <button class=\"btn1\">Upload Photo 6</button><span\n                                                                        style=\"color:#ff0000;\"> *</span>\n                                                                    <input type=\"file\" id=\"photo1 \" name=\"photo1 \"\n                                                                        (change)=\"fileChangeEventProfile($event,6)\"\n                                                                      >\n                                                                    <input type=\"hidden\" name=\"imagePath1\"\n                                                                    [(ngModel)]=\"movieNewsForm.thirdType6\"\n                                                                    formControlName=\"imagePath76\" />\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"col-md-12\">\n                                                                <div class=\"upload-btn-wrapper\">\n                                                                    <button class=\"btn1\">Upload Photo 7</button><span\n                                                                        style=\"color:#ff0000;\"> *</span>\n                                                                    <input type=\"file\" id=\"photo1 \" name=\"photo1 \"\n                                                                        (change)=\"fileChangeEventProfile($event,7)\"\n                                                                       >\n                                                                    <input type=\"hidden\" name=\"imagePath1\"\n                                                                    [(ngModel)]=\"movieNewsForm.thirdType7\"\n                                                                    formControlName=\"imagePath77\" />\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md-4\">\n                                                <span *ngIf=\"imageChangedEvent71 !=''\">\n                                                    <image-cropper id=\"ImagecropperProfile1\"\n                                                        [imageChangedEvent]=\"imageChangedEvent71\"\n                                                        [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                                                        (imageCropped)=\"imageCroppedProfile($event,1)\"\n                                                        (imageLoaded)=\"imageLoadedProfile()\"\n                                                        (cropperReady)=\"cropperReadyProfile()\"\n                                                        (loadImageFailed)=\"loadImageFailedProfile()\"\n                                                        onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                                        style=\"height: 230px;width: 170px;\">\n                                                    </image-cropper>\n                                                </span>\n                                                <span *ngIf=\"imageChangedEvent72 !=''\">\n                                                    <image-cropper id=\"Imagecropper1\"\n                                                        [imageChangedEvent]=\"imageChangedEvent72\"\n                                                        [maintainAspectRatio]=\"true\" [aspectRatio]=\"6/4\" format=\"jpeg\"\n                                                        (imageCropped)=\"imageCroppedProfile($event,2)\"\n                                                        (imageLoaded)=\"imageLoadedProfile()\"\n                                                        (cropperReady)=\"cropperReadyProfile()\"\n                                                        (loadImageFailed)=\"loadImageFailedProfile()\"\n                                                        onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                                        style=\"height: 230px;width: 170px;\">\n                                                    </image-cropper>\n                                                </span>\n                                                <span *ngIf=\"imageChangedEvent73 !=''\">\n                                                    <image-cropper id=\"ImagecropperProfile1\"\n                                                        [imageChangedEvent]=\"imageChangedEvent73\"\n                                                        [maintainAspectRatio]=\"true\" [aspectRatio]=\"6/4\" format=\"jpeg\"\n                                                        (imageCropped)=\"imageCroppedProfile($event,3)\"\n                                                        (imageLoaded)=\"imageLoadedProfile()\"\n                                                        (cropperReady)=\"cropperReadyProfile()\"\n                                                        (loadImageFailed)=\"loadImageFailedProfile()\"\n                                                        onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                                        style=\"height: 230px;width: 170px;\">\n                                                    </image-cropper>\n                                                </span>\n                                                <span *ngIf=\"imageChangedEvent74 !=''\">\n                                                    <image-cropper id=\"ImagecropperProfile1\"\n                                                        [imageChangedEvent]=\"imageChangedEvent74\"\n                                                        [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                                                        (imageCropped)=\"imageCroppedProfile($event,4)\"\n                                                        (imageLoaded)=\"imageLoadedProfile()\"\n                                                        (cropperReady)=\"cropperReadyProfile()\"\n                                                        (loadImageFailed)=\"loadImageFailedProfile()\"\n                                                        onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                                        style=\"height: 230px;width: 170px;\">\n                                                    </image-cropper>\n                                                </span>\n                                                <span *ngIf=\"imageChangedEvent75 !=''\">\n                                                    <image-cropper id=\"ImagecropperProfile1\"\n                                                        [imageChangedEvent]=\"imageChangedEvent75\"\n                                                        [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                                                        (imageCropped)=\"imageCroppedProfile($event,5)\"\n                                                        (imageLoaded)=\"imageLoadedProfile()\"\n                                                        (cropperReady)=\"cropperReadyProfile()\"\n                                                        (loadImageFailed)=\"loadImageFailedProfile()\"\n                                                        onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                                        style=\"height: 230px;width: 170px;\">\n                                                    </image-cropper>\n                                                </span>\n                                                <span *ngIf=\"imageChangedEvent76 !=''\">\n                                                    <image-cropper id=\"ImagecropperProfile1\"\n                                                        [imageChangedEvent]=\"imageChangedEvent76\"\n                                                        [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                                                        (imageCropped)=\"imageCroppedProfile($event,6)\"\n                                                        (imageLoaded)=\"imageLoadedProfile()\"\n                                                        (cropperReady)=\"cropperReadyProfile()\"\n                                                        (loadImageFailed)=\"loadImageFailedProfile()\"\n                                                        onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                                        style=\"height: 230px;width: 170px;\">\n                                                    </image-cropper>\n                                                </span>\n                                                <span *ngIf=\"imageChangedEvent77 !=''\">\n                                                    <image-cropper id=\"ImagecropperProfile1\"\n                                                        [imageChangedEvent]=\"imageChangedEvent77\"\n                                                        [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                                                        (imageCropped)=\"imageCroppedProfile($event,7)\"\n                                                        (imageLoaded)=\"imageLoadedProfile()\"\n                                                        (cropperReady)=\"cropperReadyProfile()\"\n                                                        (loadImageFailed)=\"loadImageFailedProfile()\"\n                                                        onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                                        style=\"height: 230px;width: 170px;\">\n                                                    </image-cropper>\n                                                </span>\n                                            </div>\n                                            <div class=\"col-md-5\">\n                                                <label>Photos previews</label>\n                                                <div class=\"row\">\n                                                    <div class=\"col-md-4\"\n                                                        *ngIf=\"movienews.newsTemplateId == '1'|| movienews.newsTemplateId == '3' || movienews.newsTemplateId == '7'\">\n                                                        <img class=\"pro1pic\" [src]=\"url1\"\n                                                            onerror=\"this.src='../../../assets/images/avtaar/1.jpg';\">\n                                                    </div>\n                                                    <div class=\"col-md-8\">\n                                                        <div class=\"row\">\n                                                            <div class=\"col-md-6\"\n                                                                *ngIf=\"movienews.newsTemplateId == '3' || movienews.newsTemplateId == '7'\">\n                                                                <img class=\"pro2pic\" [src]=\"url2\"\n                                                                    onerror=\"this.src='../../../assets/images/avtaar/2.jpg';\">\n                                                            </div>\n                                                            <div class=\"col-md-6\"\n                                                                *ngIf=\"movienews.newsTemplateId == '3' || movienews.newsTemplateId == '7'\">\n                                                                <img class=\"pro2pic\" [src]=\"url3\"\n                                                                    onerror=\"this.src='../../../assets/images/avtaar/3.jpg';\">\n                                                            </div>\n                                                            <div class=\"col-md-3\"\n                                                                *ngIf=\"movienews.newsTemplateId == '7'\">\n                                                                <img class=\"pro3pic\" [src]=\"url4\"\n                                                                    onerror=\"this.src='../../../assets/images/avtaar/4.jpg';\">\n                                                            </div>\n                                                            <div class=\"col-md-3\"\n                                                                *ngIf=\"movienews.newsTemplateId == '7'\">\n                                                                <img class=\"pro3pic\" [src]=\"url5\"\n                                                                    onerror=\"this.src='../../../assets/images/avtaar/5.jpg';\">\n                                                            </div>\n                                                            <div class=\"col-md-3\"\n                                                                *ngIf=\"movienews.newsTemplateId == '7'\">\n                                                                <img class=\"pro3pic\" [src]=\"url6\"\n                                                                    onerror=\"this.src='../../../assets/images/avtaar/6.jpg';\">\n                                                            </div>\n                                                            <div class=\"col-md-3\"\n                                                                *ngIf=\"movienews.newsTemplateId == '7'\">\n                                                                <img class=\"pro3pic\" [src]=\"url7\"\n                                                                    onerror=\"this.src='../../../assets/images/avtaar/7.jpg';\">\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <label>Author Name</label>\n                                <input type=\"text\" class=\"form-control\" name=\"userName\" id=\"userName\"\n                                    [(ngModel)]=\"movienews.userName\" formControlName=\"userName\">\n                            </div>\n                            <div class=\"col-md-2\">\n                                <label>Author Photo</label><br>\n                                <div class=\"upload-btn-wrapper\">\n                                    <button class=\"btn1\">Upload Photo</button>\n                                    <input type=\"file\" name=\"fileUploader\" (change)=\"authorPhoto($event)\">\n                                    <input type=\"hidden\" formControlName=\"newsImagePath\">\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <img [src]=\"userCroppedPhoto\" onerror=\"this.src='../../../assets/images/avtaar/1.jpg';\"\n                                    style=\"height: 75%;width: 30%;\">\n                            </div>\n                            <div class=\"col-md-3\">\n                                <image-cropper id=\"Imagecropper\" [imageChangedEvent]=\"imageChangedEvent\"\n                                    [maintainAspectRatio]=\"true\" [aspectRatio]=\"3/4\" format=\"jpeg\"\n                                    (imageCropped)=\"userPhotoCropped($event)\" (imageLoaded)=\"imageLoaded()\"\n                                    (cropperReady)=\"cropperReady()\" (loadImageFailed)=\"loadImageFailed()\"\n                                    onerror=\"this.src='../../../assets/images/avtaar/no.png';\"\n                                    style=\"height:230px; width:170px;\">\n                                </image-cropper>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                          <button type=\"button\" class=\"btn btn-success\" (click)=\"OnSubmit()\"\n                            style=\"margin: -3% 0% 0% 3%;\">Submit</button>\n                          <!-- <button type=\"button\" class=\"btn btn-primary\" (click)=\"clearNewsAndUpdate();\">Clear</button> -->\n                        </div>\n                      </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid\">\n    <div class=\"card \">\n      <div class=\"card-header\">\n        MOVIE NEWS LIST\n      </div>\n      <!-- Movie News Table -->\n      <div class=\"card-body\">\n        <table class=\"table table-striped table-bordered table-sm row-border hover\" datatable [dtOptions]=\"dtOptions\"\n          [dtTrigger]=\"dtTrigger\" style=\"width: 100%\">\n          <thead>\n            <tr>\n              <th class=\"newsth\">Sl.No.</th>\n              <th class=\"newsth\">Movie Name</th>\n              <th class=\"newsth\">Movie News Title</th>\n              <th class=\"newsth\">Template Type</th>\n              <th class=\"newsth\">Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let news of movienewsalldata; let i = index;\">\n              <td>{{i+1}}</td>\n              <td>{{news.title}}</td>\n              <td>{{news.newsTitle}}</td>\n              <td class=\"newsth\">{{news.newsTemplateId}}</td>\n              <td class=\"newsth\">\n                <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"\n                  (click)=\"editMovieNews(news.movieNewsId)\"></i>&nbsp;&nbsp;\n                  <i class=\"fa fa-trash\" aria-hidden=\"true \" (click)=\"deleteMovieNews(news.movieNewsId)\"></i>\n                <!-- <span *ngIf=\"news.isActive == 0\">\n                  <button class=\"btn btn-success actdeacbtn\" (click)=\"deleteMemberNews(news)\">Activate</button>\n                </span>\n                <span *ngIf=\"news.isActive == 1\">\n                  <button class=\"btn btn-danger actdeacbtn\" (click)=\"deleteMemberNews(news)\">Deactivate</button>\n                </span> -->\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>"

/***/ }),

/***/ "./src/app/Reports/memberreport/memberreport.component.scss":
/*!******************************************************************!*\
  !*** ./src/app/Reports/memberreport/memberreport.component.scss ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#component1 {\n  border: 1px solid #c6c5c5;\n  padding: 10px 10px;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\n.report-heading {\n  margin-bottom: 0;\n  font-size: 150%;\n  font-weight: 600;\n  font-family: Noto Sans Kannada, sans-serif;\n}\n\n.report-name {\n  font-size: 100%;\n  font-weight: bold;\n  margin: -1% 0% 0% 0%;\n}\n\n.date {\n  font-size: 100%;\n  font-weight: bold;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL1JlcG9ydHMvbWVtYmVycmVwb3J0L21lbWJlcnJlcG9ydC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvUmVwb3J0cy9tZW1iZXJyZXBvcnQvbWVtYmVycmVwb3J0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUJBQUE7RUFDQSxrQkFBQTtBQ0NKOztBRENBO0VBQ0kseUJBQUE7RUFDQSxjQUFBO0FDRUo7O0FEQUE7RUFDSSxnQkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLDBDQUFBO0FDR0o7O0FEREE7RUFDSSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxvQkFBQTtBQ0lKOztBREZBO0VBQ0ksZUFBQTtFQUNBLGlCQUFBO0FDS0oiLCJmaWxlIjoic3JjL2FwcC9SZXBvcnRzL21lbWJlcnJlcG9ydC9tZW1iZXJyZXBvcnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjY29tcG9uZW50MSB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2M2YzVjNTtcbiAgICBwYWRkaW5nOiAxMHB4IDEwcHg7XG59XG4uY2FyZC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gICAgY29sb3I6ICNmYmUxMTY7XG59XG4ucmVwb3J0LWhlYWRpbmcge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgZm9udC1zaXplOiAxNTAlO1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgZm9udC1mYW1pbHk6IE5vdG8gU2FucyBLYW5uYWRhLCBzYW5zLXNlcmlmO1xufVxuLnJlcG9ydC1uYW1lIHtcbiAgICBmb250LXNpemU6IDEwMCU7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgbWFyZ2luOiAtMSUgMCUgMCUgMCU7XG59XG4uZGF0ZSB7XG4gICAgZm9udC1zaXplOiAxMDAlO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuIiwiI2NvbXBvbmVudDEge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzZjNWM1O1xuICBwYWRkaW5nOiAxMHB4IDEwcHg7XG59XG5cbi5jYXJkLWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gIGNvbG9yOiAjZmJlMTE2O1xufVxuXG4ucmVwb3J0LWhlYWRpbmcge1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBmb250LXNpemU6IDE1MCU7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtZmFtaWx5OiBOb3RvIFNhbnMgS2FubmFkYSwgc2Fucy1zZXJpZjtcbn1cblxuLnJlcG9ydC1uYW1lIHtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbWFyZ2luOiAtMSUgMCUgMCUgMCU7XG59XG5cbi5kYXRlIHtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBmb250LXdlaWdodDogYm9sZDtcbn0iXX0= */"

/***/ }),

/***/ "./src/app/Reports/memberreport/memberreport.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/Reports/memberreport/memberreport.component.ts ***!
  \****************************************************************/
/*! exports provided: MemberreportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MemberreportComponent", function() { return MemberreportComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../../app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var xlsx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! xlsx */ "./node_modules/xlsx/xlsx.js");
/* harmony import */ var xlsx__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(xlsx__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! file-saver */ "./node_modules/file-saver/dist/FileSaver.min.js");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _memberreport__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./memberreport */ "./src/app/Reports/memberreport/memberreport.ts");









let MemberreportComponent = class MemberreportComponent {
    constructor(apiService, fb, loaderService, datePipe) {
        this.apiService = apiService;
        this.fb = fb;
        this.loaderService = loaderService;
        this.datePipe = datePipe;
        this.title = 'Excel';
        this.startDate = new Date();
        this.MemberReport = new _memberreport__WEBPACK_IMPORTED_MODULE_8__["MemberReport"]();
        this.showStaffList = false;
        this.MemberReportForm = this.fb.group({
            adminFlag: [''],
            remarks: [''],
            startDate: [''],
            endDate: [''],
            staffUserId: ['']
        });
        this.datePickerConfig = Object.assign({}, {
            containerClass: 'theme-dark-blue',
            showWeekNumbers: false,
            dateInputFormat: 'DD-MM-YYYY'
        });
    }
    ngOnInit() {
        this.getAllStaff();
        this.MemberReport.adminFlag = '';
        this.MemberReport.remarks = "";
        this.MemberReport.startDate = "";
        this.MemberReport.endDate = "";
        this.MemberReport.staffUserId = "";
    }
    getAllStaff() {
        this.apiService.getDATA('staff/getAll').subscribe((result) => {
            if (result.success == true) {
                if (result.object != null && result.object != undefined) {
                    this.staffdata = result.object;
                }
            }
        });
    }
    onItemChange(value) {
        if (value == 1) {
            this.showStaffList = true;
        }
        else {
            this.showStaffList = false;
        }
    }
    OndateChange(sdate) {
        if (sdate != null) {
            let startDate = new Date(this.MemberReport.startDate);
            this.minendDate = new Date(this.startDate.setDate(startDate.getDate()));
            if (this.MemberReport.startDate == undefined) {
                let EndDate = new Date(this.MemberReport.endDate);
                this.maxstartDate = new Date(EndDate.setDate(EndDate.getDate()));
            }
        }
    }
    generateReport() {
        var sd = new Date(this.MemberReport.startDate);
        var ed = new Date(this.MemberReport.endDate);
        let reqData = {
            "adminFlag": this.MemberReport.adminFlag,
            "remarks": this.MemberReport.remarks,
            "startDate": sd.getFullYear() + '-' + (sd.getMonth() + 1) + '-' + sd.getDate(),
            "endDate": ed.getFullYear() + '-' + (ed.getMonth() + 1) + '-' + ed.getDate(),
            "staffUserId": this.MemberReport.staffUserId
        };
        this.loaderService.display(true);
        console.log(reqData);
        this.currentDate = new Date();
        this.apiService.Create("report/membershipReportForAllDetails", reqData).subscribe((result) => {
            this.loaderService.display(false);
            console.log(result);
            if (result.success == true) {
                if (result.object != null && result.object != undefined) {
                    this.memberRecords = result.object;
                }
            }
        }, (error) => {
            this.loaderService.display(false);
        });
    }
    Clear() {
        this.MemberReportForm.reset();
        this.MemberReport.adminFlag = "";
        this.MemberReport.remarks = "";
        this.MemberReport.startDate = "";
        this.MemberReport.endDate = "";
        this.MemberReport.staffUserId = "";
        this.Details = [];
    }
    ExportToExcel() {
        const ws = xlsx__WEBPACK_IMPORTED_MODULE_6__["utils"].table_to_sheet(this.TABLE.nativeElement);
        const wb = xlsx__WEBPACK_IMPORTED_MODULE_6__["utils"].book_new();
        xlsx__WEBPACK_IMPORTED_MODULE_6__["utils"].book_append_sheet(wb, ws, 'Sheet1');
        xlsx__WEBPACK_IMPORTED_MODULE_6__["writeFile"](wb, 'MemberReport.xlsx');
        Object(file_saver__WEBPACK_IMPORTED_MODULE_7__["saveAs"])(new Blob(xlsx__WEBPACK_IMPORTED_MODULE_6__["write"](wb), { type: "application/octet-stream" }), "test.xlsx");
    }
    printComponent(printSectionId) {
        const printContents = document.getElementById(printSectionId).innerHTML;
        const stylesHtml = this.getTagsHtml('style');
        const linksHtml = this.getTagsHtml('link');
        const popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');
        popupWin.document.open();
        popupWin.document.write(`
    <html>
        <head>
            ${linksHtml}
            ${stylesHtml}
        </head>
        <body onload="window.print(); window.close()">
            ${printContents}
        </body>
    </html>
    `);
        popupWin.document.close();
    }
    getTagsHtml(tagName) {
        const htmlStr = [];
        const elements = document.getElementsByTagName(tagName);
        for (let idx = 0; idx < elements.length; idx++) {
            htmlStr.push(elements[idx].outerHTML);
        }
        return htmlStr.join('\r\n');
    }
};
MemberreportComponent.ctorParameters = () => [
    { type: _core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_4__["LoaderService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('TABLE', { static: false })
], MemberreportComponent.prototype, "TABLE", void 0);
MemberreportComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-memberreport',
        template: __webpack_require__(/*! raw-loader!./memberreport.component.html */ "./node_modules/raw-loader/index.js!./src/app/Reports/memberreport/memberreport.component.html"),
        styles: [__webpack_require__(/*! ./memberreport.component.scss */ "./src/app/Reports/memberreport/memberreport.component.scss")]
    })
], MemberreportComponent);



/***/ }),

/***/ "./src/app/Reports/memberreport/memberreport.ts":
/*!******************************************************!*\
  !*** ./src/app/Reports/memberreport/memberreport.ts ***!
  \******************************************************/
/*! exports provided: MemberReport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MemberReport", function() { return MemberReport; });
class MemberReport {
}


/***/ }),

/***/ "./src/app/Reports/usernotregistration/usernotregistration.component.scss":
/*!********************************************************************************!*\
  !*** ./src/app/Reports/usernotregistration/usernotregistration.component.scss ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL1JlcG9ydHMvdXNlcm5vdHJlZ2lzdHJhdGlvbi91c2Vybm90cmVnaXN0cmF0aW9uLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9SZXBvcnRzL3VzZXJub3RyZWdpc3RyYXRpb24vdXNlcm5vdHJlZ2lzdHJhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0VBQ0EsY0FBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvUmVwb3J0cy91c2Vybm90cmVnaXN0cmF0aW9uL3VzZXJub3RyZWdpc3RyYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gICAgY29sb3I6ICNmYmUxMTY7XG59IiwiLmNhcmQtaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJkM2U1MDtcbiAgY29sb3I6ICNmYmUxMTY7XG59Il19 */"

/***/ }),

/***/ "./src/app/Reports/usernotregistration/usernotregistration.component.ts":
/*!******************************************************************************!*\
  !*** ./src/app/Reports/usernotregistration/usernotregistration.component.ts ***!
  \******************************************************************************/
/*! exports provided: UsernotregistrationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UsernotregistrationComponent", function() { return UsernotregistrationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _userreport_UserReportModal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../userreport/UserReportModal */ "./src/app/Reports/userreport/UserReportModal.ts");
/* harmony import */ var _core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var xlsx__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! xlsx */ "./node_modules/xlsx/xlsx.js");
/* harmony import */ var xlsx__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(xlsx__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! file-saver */ "./node_modules/file-saver/dist/FileSaver.min.js");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_9__);










let UsernotregistrationComponent = class UsernotregistrationComponent {
    constructor(apiService, fb, loaderService, datePipe) {
        this.apiService = apiService;
        this.fb = fb;
        this.loaderService = loaderService;
        this.datePipe = datePipe;
        this.title = 'Excel';
        this.UserReport = new _userreport_UserReportModal__WEBPACK_IMPORTED_MODULE_2__["UserReportModal"]();
        this.startDate = new Date();
        this.UserReportForm = this.fb.group({
            startDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            endDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]
        });
        this.datePickerConfig = Object.assign({}, {
            containerClass: 'theme-dark-blue',
            showWeekNumbers: false,
            dateInputFormat: 'DD-MM-YYYY'
        });
    }
    ngOnInit() { }
    OndateChange(sdate) {
        if (sdate != null) {
            let startDate = new Date(this.UserReport.startDate);
            this.minendDate = new Date(this.startDate.setDate(startDate.getDate()));
            if (this.UserReport.startDate == undefined) {
                let EndDate = new Date(this.UserReport.endDate);
                this.maxstartDate = new Date(EndDate.setDate(EndDate.getDate()));
            }
        }
    }
    OnSubmit() {
        if (this.UserReportForm.valid) {
            let data = this.UserReport;
            var sd = new Date(this.UserReport.startDate);
            var ed = new Date(this.UserReport.endDate);
            this.Details = [];
            //this.loaderService.display(true);
            let jsonData = {
                "startDate": sd.getFullYear() + '-' + (sd.getMonth() + 1) + '-' + sd.getDate(),
                "endDate": ed.getFullYear() + '-' + (ed.getMonth() + 1) + '-' + ed.getDate()
            };
            this.apiService.Create("user/getUserOnDate", jsonData).subscribe(Response => {
                this.loaderService.display(false);
                if (Response.object != undefined) {
                    this.Details = Response.object;
                    if (this.Details.length == 0) {
                        sweetalert2__WEBPACK_IMPORTED_MODULE_9___default.a.fire("Records Not Available!");
                    }
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_9___default.a.fire(Response.message);
                }
            }, (err) => {
                if (err.status === 400) {
                    // handle validation error
                    let validationErrorDictionary = JSON.parse(err.text());
                    for (var fieldName in validationErrorDictionary) {
                        if (validationErrorDictionary.hasOwnProperty(fieldName)) {
                            if (this.UserReportForm.controls[fieldName]) {
                                // integrate into angular's validation if we have field validation
                                this.UserReportForm.controls[fieldName].setErrors({ invalid: true });
                            }
                            else {
                                // if we have cross field validation then show the validation error at the top of the screen
                                sweetalert2__WEBPACK_IMPORTED_MODULE_9___default.a.fire(validationErrorDictionary[fieldName]);
                            }
                        }
                    }
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_9___default.a.fire("something went wrong!");
                }
            });
        }
        else {
            this.apiService.validateAllFormFields(this.UserReportForm);
        }
    }
    Clear() {
        this.UserReportForm.reset();
        this.Details = [];
    }
    ExportToExcel() {
        const ws = xlsx__WEBPACK_IMPORTED_MODULE_7__["utils"].table_to_sheet(this.TABLE.nativeElement);
        const wb = xlsx__WEBPACK_IMPORTED_MODULE_7__["utils"].book_new();
        xlsx__WEBPACK_IMPORTED_MODULE_7__["utils"].book_append_sheet(wb, ws, 'Sheet1');
        xlsx__WEBPACK_IMPORTED_MODULE_7__["writeFile"](wb, 'UserReport.xlsx');
        Object(file_saver__WEBPACK_IMPORTED_MODULE_8__["saveAs"])(new Blob(xlsx__WEBPACK_IMPORTED_MODULE_7__["write"](wb), { type: "application/octet-stream" }), "test.xlsx");
    }
    printComponent(printSectionId) {
        const printContents = document.getElementById(printSectionId).innerHTML;
        const stylesHtml = this.getTagsHtml('style');
        const linksHtml = this.getTagsHtml('link');
        const popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');
        popupWin.document.open();
        popupWin.document.write(`
    <html>
        <head>
            ${linksHtml}
            ${stylesHtml}
        </head>
        <body onload="window.print(); window.close()">
            ${printContents}
        </body>
    </html>
    `);
        popupWin.document.close();
    }
    getTagsHtml(tagName) {
        const htmlStr = [];
        const elements = document.getElementsByTagName(tagName);
        for (let idx = 0; idx < elements.length; idx++) {
            htmlStr.push(elements[idx].outerHTML);
        }
        return htmlStr.join('\r\n');
    }
};
UsernotregistrationComponent.ctorParameters = () => [
    { type: _core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"] },
    { type: src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_5__["LoaderService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_6__["DatePipe"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('TABLE', { static: false })
], UsernotregistrationComponent.prototype, "TABLE", void 0);
UsernotregistrationComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-usernotregistration',
        template: __webpack_require__(/*! raw-loader!./usernotregistration.component.html */ "./node_modules/raw-loader/index.js!./src/app/Reports/usernotregistration/usernotregistration.component.html"),
        styles: [__webpack_require__(/*! ./usernotregistration.component.scss */ "./src/app/Reports/usernotregistration/usernotregistration.component.scss")]
    })
], UsernotregistrationComponent);



/***/ }),

/***/ "./src/app/Reports/userregistration-new/userreg.ts":
/*!*********************************************************!*\
  !*** ./src/app/Reports/userregistration-new/userreg.ts ***!
  \*********************************************************/
/*! exports provided: Userreg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Userreg", function() { return Userreg; });
class Userreg {
}


/***/ }),

/***/ "./src/app/Reports/userregistration-new/userregistration-new.component.scss":
/*!**********************************************************************************!*\
  !*** ./src/app/Reports/userregistration-new/userregistration-new.component.scss ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL1JlcG9ydHMvdXNlcnJlZ2lzdHJhdGlvbi1uZXcvdXNlcnJlZ2lzdHJhdGlvbi1uZXcuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL1JlcG9ydHMvdXNlcnJlZ2lzdHJhdGlvbi1uZXcvdXNlcnJlZ2lzdHJhdGlvbi1uZXcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtFQUNBLGNBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL1JlcG9ydHMvdXNlcnJlZ2lzdHJhdGlvbi1uZXcvdXNlcnJlZ2lzdHJhdGlvbi1uZXcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gICAgY29sb3I6ICNmYmUxMTY7XG59IiwiLmNhcmQtaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJkM2U1MDtcbiAgY29sb3I6ICNmYmUxMTY7XG59Il19 */"

/***/ }),

/***/ "./src/app/Reports/userregistration-new/userregistration-new.component.ts":
/*!********************************************************************************!*\
  !*** ./src/app/Reports/userregistration-new/userregistration-new.component.ts ***!
  \********************************************************************************/
/*! exports provided: UserregistrationNewComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserregistrationNewComponent", function() { return UserregistrationNewComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _userreg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./userreg */ "./src/app/Reports/userregistration-new/userreg.ts");
/* harmony import */ var _core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var xlsx__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! xlsx */ "./node_modules/xlsx/xlsx.js");
/* harmony import */ var xlsx__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(xlsx__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! file-saver */ "./node_modules/file-saver/dist/FileSaver.min.js");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_9__);










let UserregistrationNewComponent = class UserregistrationNewComponent {
    constructor(apiService, fb, loaderService, datePipe) {
        this.apiService = apiService;
        this.fb = fb;
        this.loaderService = loaderService;
        this.datePipe = datePipe;
        this.title = 'Excel';
        this.UserReport = new _userreg__WEBPACK_IMPORTED_MODULE_2__["Userreg"]();
        this.startDate = new Date();
        this.UserReportForm = this.fb.group({
            startDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            endDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            paidTypeId: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]
        });
        this.datePickerConfig = Object.assign({}, {
            containerClass: 'theme-dark-blue',
            showWeekNumbers: false,
            dateInputFormat: 'DD-MM-YYYY'
        });
    }
    ngOnInit() { }
    OndateChange(sdate) {
        if (sdate != null) {
            let startDate = new Date(this.UserReport.startDate);
            this.minendDate = new Date(this.startDate.setDate(startDate.getDate()));
            // this.minendDate = new Date();
            if (this.UserReport.startDate == undefined) {
                let EndDate = new Date(this.UserReport.endDate);
                this.maxstartDate = new Date(EndDate.setDate(EndDate.getDate()));
            }
        }
    }
    OnSubmit() {
        //   let dates={
        //   "startDate":this.datePipe.transform(this.UserReport.startDate, "yyyy-MM-dd"),
        //   "endDate":this.datePipe.transform(this.UserReport.endDate, "yyyy-MM-dd")
        // }
        var sd = new Date(this.UserReport.startDate);
        var ed = new Date(this.UserReport.endDate);
        //this.loaderService.display(true);
        let jsonData = {
            "startDate": sd.getFullYear() + '-' + (sd.getMonth() + 1) + '-' + sd.getDate(),
            "endDate": ed.getFullYear() + '-' + (ed.getMonth() + 1) + '-' + ed.getDate()
        };
        this.Details = [];
        this.apiService.Create("memberReport/getMemberDataOnDate", jsonData).subscribe(Response => {
            this.loaderService.display(false);
            if (Response.object != undefined) {
                this.Details = Response.object;
                if (this.Details.length == 0) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_9___default.a.fire("Records Not Available!");
                }
            }
            else {
                sweetalert2__WEBPACK_IMPORTED_MODULE_9___default.a.fire(Response.message);
            }
        }, (err) => {
            if (err.status === 400) {
                // handle validation error
                let validationErrorDictionary = JSON.parse(err.text());
                for (var fieldName in validationErrorDictionary) {
                    if (validationErrorDictionary.hasOwnProperty(fieldName)) {
                        if (this.UserReportForm.controls[fieldName]) {
                            // integrate into angular's validation if we have field validation
                            this.UserReportForm.controls[fieldName].setErrors({ invalid: true });
                        }
                        else {
                            // if we have cross field validation then show the validation error at the top of the screen
                            sweetalert2__WEBPACK_IMPORTED_MODULE_9___default.a.fire(validationErrorDictionary[fieldName]);
                        }
                    }
                }
            }
            else {
                sweetalert2__WEBPACK_IMPORTED_MODULE_9___default.a.fire("something went wrong!");
            }
        });
    }
    Clear() {
        this.UserReportForm.reset();
        this.Details = [];
    }
    ExportToExcel() {
        const ws = xlsx__WEBPACK_IMPORTED_MODULE_7__["utils"].table_to_sheet(this.TABLE.nativeElement);
        const wb = xlsx__WEBPACK_IMPORTED_MODULE_7__["utils"].book_new();
        xlsx__WEBPACK_IMPORTED_MODULE_7__["utils"].book_append_sheet(wb, ws, 'Sheet1');
        xlsx__WEBPACK_IMPORTED_MODULE_7__["writeFile"](wb, 'UserReport.xlsx');
        Object(file_saver__WEBPACK_IMPORTED_MODULE_8__["saveAs"])(new Blob(xlsx__WEBPACK_IMPORTED_MODULE_7__["write"](wb), { type: "application/octet-stream" }), "test.xlsx");
    }
    printComponent(printSectionId) {
        const printContents = document.getElementById(printSectionId).innerHTML;
        const stylesHtml = this.getTagsHtml('style');
        const linksHtml = this.getTagsHtml('link');
        const popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');
        popupWin.document.open();
        popupWin.document.write(`
    <html>
        <head>
            ${linksHtml}
            ${stylesHtml}
        </head>
        <body onload="window.print(); window.close()">
            ${printContents}
        </body>
    </html>
    `);
        popupWin.document.close();
    }
    getTagsHtml(tagName) {
        const htmlStr = [];
        const elements = document.getElementsByTagName(tagName);
        for (let idx = 0; idx < elements.length; idx++) {
            htmlStr.push(elements[idx].outerHTML);
        }
        return htmlStr.join('\r\n');
    }
};
UserregistrationNewComponent.ctorParameters = () => [
    { type: _core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"] },
    { type: src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_5__["LoaderService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_6__["DatePipe"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('TABLE', { static: false })
], UserregistrationNewComponent.prototype, "TABLE", void 0);
UserregistrationNewComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-userregistration-new',
        template: __webpack_require__(/*! raw-loader!./userregistration-new.component.html */ "./node_modules/raw-loader/index.js!./src/app/Reports/userregistration-new/userregistration-new.component.html"),
        styles: [__webpack_require__(/*! ./userregistration-new.component.scss */ "./src/app/Reports/userregistration-new/userregistration-new.component.scss")]
    })
], UserregistrationNewComponent);



/***/ }),

/***/ "./src/app/Reports/userreport/UserReportModal.ts":
/*!*******************************************************!*\
  !*** ./src/app/Reports/userreport/UserReportModal.ts ***!
  \*******************************************************/
/*! exports provided: UserReportModal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserReportModal", function() { return UserReportModal; });
class UserReportModal {
    constructor() {
        this.paidTypeId = "";
    }
}


/***/ }),

/***/ "./src/app/Reports/userreport/userreport.component.scss":
/*!**************************************************************!*\
  !*** ./src/app/Reports/userreport/userreport.component.scss ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL1JlcG9ydHMvdXNlcnJlcG9ydC91c2VycmVwb3J0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9SZXBvcnRzL3VzZXJyZXBvcnQvdXNlcnJlcG9ydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0VBQ0EsY0FBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvUmVwb3J0cy91c2VycmVwb3J0L3VzZXJyZXBvcnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gICAgY29sb3I6ICNmYmUxMTY7XG59IiwiLmNhcmQtaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJkM2U1MDtcbiAgY29sb3I6ICNmYmUxMTY7XG59Il19 */"

/***/ }),

/***/ "./src/app/Reports/userreport/userreport.component.ts":
/*!************************************************************!*\
  !*** ./src/app/Reports/userreport/userreport.component.ts ***!
  \************************************************************/
/*! exports provided: UserreportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserreportComponent", function() { return UserreportComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _UserReportModal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UserReportModal */ "./src/app/Reports/userreport/UserReportModal.ts");
/* harmony import */ var _core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var xlsx__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! xlsx */ "./node_modules/xlsx/xlsx.js");
/* harmony import */ var xlsx__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(xlsx__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! file-saver */ "./node_modules/file-saver/dist/FileSaver.min.js");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_9__);










let UserreportComponent = class UserreportComponent {
    constructor(apiService, fb, loaderService, datePipe) {
        this.apiService = apiService;
        this.fb = fb;
        this.loaderService = loaderService;
        this.datePipe = datePipe;
        this.title = 'Excel';
        this.UserReport = new _UserReportModal__WEBPACK_IMPORTED_MODULE_2__["UserReportModal"]();
        this.startDate = new Date();
        this.UserReportForm = this.fb.group({
            startDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            endDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            paidTypeId: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]
        });
        this.datePickerConfig = Object.assign({}, {
            containerClass: 'theme-dark-blue',
            showWeekNumbers: false,
            dateInputFormat: 'DD-MM-YYYY'
        });
    }
    ngOnInit() { }
    OndateChange(sdate) {
        if (sdate != null) {
            let startDate = new Date(this.UserReport.startDate);
            this.minendDate = new Date(this.startDate.setDate(startDate.getDate()));
            if (this.UserReport.startDate == undefined) {
                let EndDate = new Date(this.UserReport.endDate);
                this.maxstartDate = new Date(EndDate.setDate(EndDate.getDate()));
            }
        }
    }
    OnSubmit() {
        debugger;
        if (this.UserReportForm.valid) {
            let data = this.UserReport;
            this.Details = [];
            this.apiService.Create("memberReport/getmemberData", JSON.stringify(data)).subscribe(Response => {
                this.loaderService.display(false);
                if (Response.object != undefined) {
                    this.Details = Response.object;
                    if (this.Details.length == 0) {
                        sweetalert2__WEBPACK_IMPORTED_MODULE_9___default.a.fire("Records Not Available!");
                    }
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_9___default.a.fire(Response.message);
                }
            }, (err) => {
                if (err.status === 400) {
                    // handle validation error
                    let validationErrorDictionary = JSON.parse(err.text());
                    for (var fieldName in validationErrorDictionary) {
                        if (validationErrorDictionary.hasOwnProperty(fieldName)) {
                            if (this.UserReportForm.controls[fieldName]) {
                                // integrate into angular's validation if we have field validation
                                this.UserReportForm.controls[fieldName].setErrors({ invalid: true });
                            }
                            else {
                                // if we have cross field validation then show the validation error at the top of the screen
                                sweetalert2__WEBPACK_IMPORTED_MODULE_9___default.a.fire(validationErrorDictionary[fieldName]);
                            }
                        }
                    }
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_9___default.a.fire("something went wrong!");
                }
            });
        }
        else {
            this.apiService.validateAllFormFields(this.UserReportForm);
        }
    }
    Clear() {
        this.UserReportForm.reset();
        this.Details = [];
    }
    ExportToExcel() {
        const ws = xlsx__WEBPACK_IMPORTED_MODULE_7__["utils"].table_to_sheet(this.TABLE.nativeElement);
        const wb = xlsx__WEBPACK_IMPORTED_MODULE_7__["utils"].book_new();
        xlsx__WEBPACK_IMPORTED_MODULE_7__["utils"].book_append_sheet(wb, ws, 'Sheet1');
        xlsx__WEBPACK_IMPORTED_MODULE_7__["writeFile"](wb, 'UserReport.xlsx');
        Object(file_saver__WEBPACK_IMPORTED_MODULE_8__["saveAs"])(new Blob(xlsx__WEBPACK_IMPORTED_MODULE_7__["write"](wb), { type: "application/octet-stream" }), "test.xlsx");
    }
    printComponent(printSectionId) {
        const printContents = document.getElementById(printSectionId).innerHTML;
        const stylesHtml = this.getTagsHtml('style');
        const linksHtml = this.getTagsHtml('link');
        const popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');
        popupWin.document.open();
        popupWin.document.write(`
    <html>
        <head>
            ${linksHtml}
            ${stylesHtml}
        </head>
        <body onload="window.print(); window.close()">
            ${printContents}
        </body>
    </html>
    `);
        popupWin.document.close();
    }
    getTagsHtml(tagName) {
        const htmlStr = [];
        const elements = document.getElementsByTagName(tagName);
        for (let idx = 0; idx < elements.length; idx++) {
            htmlStr.push(elements[idx].outerHTML);
        }
        return htmlStr.join('\r\n');
    }
};
UserreportComponent.ctorParameters = () => [
    { type: _core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"] },
    { type: src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_5__["LoaderService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_6__["DatePipe"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('TABLE', { static: false })
], UserreportComponent.prototype, "TABLE", void 0);
UserreportComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-userreport',
        template: __webpack_require__(/*! raw-loader!./userreport.component.html */ "./node_modules/raw-loader/index.js!./src/app/Reports/userreport/userreport.component.html"),
        styles: [__webpack_require__(/*! ./userreport.component.scss */ "./src/app/Reports/userreport/userreport.component.scss")]
    })
], UserreportComponent);



/***/ }),

/***/ "./src/app/SuperAdmin/contentrest/contentconfiguration.ts":
/*!****************************************************************!*\
  !*** ./src/app/SuperAdmin/contentrest/contentconfiguration.ts ***!
  \****************************************************************/
/*! exports provided: ContentConfiguration */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ContentConfiguration", function() { return ContentConfiguration; });
class ContentConfiguration {
}


/***/ }),

/***/ "./src/app/SuperAdmin/contentrest/contentrest.component.scss":
/*!*******************************************************************!*\
  !*** ./src/app/SuperAdmin/contentrest/contentrest.component.scss ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container-fluid {\n  margin-top: 1%;\n  margin-bottom: 1%;\n}\n\n.row {\n  padding: 1% 0%;\n}\n\n.col-3 {\n  padding: 1% 1%;\n}\n\n.col-4 {\n  padding: 1% 1%;\n}\n\n.col-1 {\n  padding: 1% 1%;\n}\n\n.col-2 {\n  padding: 1% 1%;\n}\n\n.col-12 {\n  padding: 1% 1%;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL1N1cGVyQWRtaW4vY29udGVudHJlc3QvY29udGVudHJlc3QuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL1N1cGVyQWRtaW4vY29udGVudHJlc3QvY29udGVudHJlc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0EsaUJBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7QUNDSjs7QURFQTtFQUNJLHlCQUFBO0VBQ0EsY0FBQTtBQ0NKOztBRENBO0VBQ0ksZ0JBQUE7QUNFSjs7QURDQTtFQUNJLGdCQUFBO0FDRUo7O0FEQ0E7RUFDSSxzQkFBQTtFQUNBLFdBQUE7RUFDQSx1QkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUNFSjs7QURDQTtFQUNJLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxxQkFBQTtBQ0VKOztBRENBO0VBQ0ksZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxNQUFBO0VBQ0EsVUFBQTtBQ0VKIiwiZmlsZSI6InNyYy9hcHAvU3VwZXJBZG1pbi9jb250ZW50cmVzdC9jb250ZW50cmVzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXItZmx1aWQge1xuICAgIG1hcmdpbi10b3A6IDElO1xuICAgIG1hcmdpbi1ib3R0b206IDElO1xufVxuXG4ucm93IHtcbiAgICBwYWRkaW5nOiAxJSAwJTtcbn1cblxuLmNvbC0zIHtcbiAgICBwYWRkaW5nOiAxJSAxJTtcbn1cblxuLmNvbC00IHtcbiAgICBwYWRkaW5nOiAxJSAxJTtcbn1cblxuLmNvbC0xIHtcbiAgICBwYWRkaW5nOiAxJSAxJTtcbn1cblxuLmNvbC0yIHtcbiAgICBwYWRkaW5nOiAxJSAxJTtcbn1cblxuLmNvbC0xMiB7XG4gICAgcGFkZGluZzogMSUgMSU7XG59XG5cbi5jYXJkLWhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJkM2U1MDtcbiAgICBjb2xvcjogI2ZiZTExNjtcbn1cbmxhYmVsIHtcbiAgICBmb250LXdlaWdodDogNzAwO1xufVxuLy8gRm9yIEltYWdlIENyb3BpbmcgZGF0ZToxMi0wMy0yMDIwLS0tLS0tLS0tLS0tU3RhcnQtLS0tLS0tLS0tLS0tLVxubGFiZWwge1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5idG4xIHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCBncmF5O1xuICAgIGNvbG9yOiBncmF5O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDRweCA4cHg7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xuICAgIGZvbnQtc2l6ZTogMTAwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIG9wYWNpdHk6IDA7XG59XG4vLyBGb3IgSW1hZ2UgQ3JvcGluZyBkYXRlOjEyLTAzLTIwMjAtLS1FbmQtLS0tLS0tLS0tIiwiLmNvbnRhaW5lci1mbHVpZCB7XG4gIG1hcmdpbi10b3A6IDElO1xuICBtYXJnaW4tYm90dG9tOiAxJTtcbn1cblxuLnJvdyB7XG4gIHBhZGRpbmc6IDElIDAlO1xufVxuXG4uY29sLTMge1xuICBwYWRkaW5nOiAxJSAxJTtcbn1cblxuLmNvbC00IHtcbiAgcGFkZGluZzogMSUgMSU7XG59XG5cbi5jb2wtMSB7XG4gIHBhZGRpbmc6IDElIDElO1xufVxuXG4uY29sLTIge1xuICBwYWRkaW5nOiAxJSAxJTtcbn1cblxuLmNvbC0xMiB7XG4gIHBhZGRpbmc6IDElIDElO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG5sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5idG4xIHtcbiAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcbiAgY29sb3I6IGdyYXk7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nOiA0cHggOHB4O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPWZpbGVdIHtcbiAgZm9udC1zaXplOiAxMDBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIG9wYWNpdHk6IDA7XG59Il19 */"

/***/ }),

/***/ "./src/app/SuperAdmin/contentrest/contentrest.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/SuperAdmin/contentrest/contentrest.component.ts ***!
  \*****************************************************************/
/*! exports provided: ContentrestComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ContentrestComponent", function() { return ContentrestComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _contentconfiguration__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./contentconfiguration */ "./src/app/SuperAdmin/contentrest/contentconfiguration.ts");






let ContentrestComponent = class ContentrestComponent {
    constructor(apiService, fb) {
        this.apiService = apiService;
        this.fb = fb;
        this.contentConfig = new _contentconfiguration__WEBPACK_IMPORTED_MODULE_5__["ContentConfiguration"]();
        this.ContentRestForm = this.fb.group({
            news_limit: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('[0-9 ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(3), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(1)])],
            galary_limit: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('[0-9 ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(3), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(1)])],
            article_image_limit: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('[0-9 ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(3), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(1)])],
            article_pdf_limit: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('[0-9 ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(3), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(1)])],
            video_limit: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('[0-9 ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(3), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(1)])]
        });
    }
    ngOnInit() {
        this.getOnloadData();
    }
    getOnloadData() {
        debugger;
        this.apiService.getDATA("masterConfiguration/getAll").subscribe(data => {
            if (data.object != null && data.object != undefined) {
                if (data.object.masterConfigurationDtoList.length > 0) {
                    this.contentConfig = data.object.masterConfigurationDtoList[0];
                }
            }
        });
    }
    onSubmit() {
        this.apiService.Create("masterConfiguration/save", this.contentConfig).subscribe(response => {
            if (response.success == true) {
                this.getOnloadData();
                sweetalert2__WEBPACK_IMPORTED_MODULE_4___default.a.fire(response.message);
                this.getOnloadData();
            }
        });
    }
};
ContentrestComponent.ctorParameters = () => [
    { type: _core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] }
];
ContentrestComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-contentrest',
        template: __webpack_require__(/*! raw-loader!./contentrest.component.html */ "./node_modules/raw-loader/index.js!./src/app/SuperAdmin/contentrest/contentrest.component.html"),
        styles: [__webpack_require__(/*! ./contentrest.component.scss */ "./src/app/SuperAdmin/contentrest/contentrest.component.scss")]
    })
], ContentrestComponent);



/***/ }),

/***/ "./src/app/SuperAdmin/membercontrest/MemberConfigModel.ts":
/*!****************************************************************!*\
  !*** ./src/app/SuperAdmin/membercontrest/MemberConfigModel.ts ***!
  \****************************************************************/
/*! exports provided: MemberConfigModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MemberConfigModel", function() { return MemberConfigModel; });
class MemberConfigModel {
}


/***/ }),

/***/ "./src/app/SuperAdmin/membercontrest/membercontrest.component.scss":
/*!*************************************************************************!*\
  !*** ./src/app/SuperAdmin/membercontrest/membercontrest.component.scss ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\ninput[type=checkbox] {\n  transform: scale(2);\n  -ms-transform: scale(2);\n  -webkit-transform: scale(1.5);\n  padding: 5px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL1N1cGVyQWRtaW4vbWVtYmVyY29udHJlc3QvbWVtYmVyY29udHJlc3QuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL1N1cGVyQWRtaW4vbWVtYmVyY29udHJlc3QvbWVtYmVyY29udHJlc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtFQUNBLGNBQUE7QUNDSjs7QURHQTtFQUNJLHNCQUFBO0VBQ0EsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQ0FKOztBREdBO0VBQ0ksa0JBQUE7RUFDQSxnQkFBQTtFQUNBLHFCQUFBO0FDQUo7O0FER0E7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsT0FBQTtFQUNBLE1BQUE7RUFDQSxVQUFBO0FDQUo7O0FETUE7RUFDSSxtQkFBQTtFQUNBLHVCQUFBO0VBQ0EsNkJBQUE7RUFDQSxZQUFBO0FDSEoiLCJmaWxlIjoic3JjL2FwcC9TdXBlckFkbWluL21lbWJlcmNvbnRyZXN0L21lbWJlcmNvbnRyZXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtaGVhZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICAgIGNvbG9yOiAjZmJlMTE2O1xufVxuXG4vLyBGb3IgSW1hZ2UgQ3JvcGluZyBkYXRlOjEyLTAzLTIwMjAtLS0tLS0tLS0tLS1TdGFydC0tLS0tLS0tLS0tLS0tXG4uYnRuMSB7XG4gICAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcbiAgICBjb2xvcjogZ3JheTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiA0cHggOHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPWZpbGVdIHtcbiAgICBmb250LXNpemU6IDEwMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICBvcGFjaXR5OiAwO1xufVxuXG5cbi8vIEZvciBJbWFnZSBDcm9waW5nIGRhdGU6MTItMDMtMjAyMC0tLUVuZC0tLS0tLS0tLS1cblxuaW5wdXRbdHlwZT1jaGVja2JveF0ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMik7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMik7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuNSk7XG4gICAgcGFkZGluZzogNXB4O1xufSIsIi5jYXJkLWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gIGNvbG9yOiAjZmJlMTE2O1xufVxuXG4uYnRuMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gIGNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogNHB4IDhweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1maWxlXSB7XG4gIGZvbnQtc2l6ZTogMTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBvcGFjaXR5OiAwO1xufVxuXG5pbnB1dFt0eXBlPWNoZWNrYm94XSB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMik7XG4gIC1tcy10cmFuc2Zvcm06IHNjYWxlKDIpO1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMS41KTtcbiAgcGFkZGluZzogNXB4O1xufSJdfQ== */"

/***/ }),

/***/ "./src/app/SuperAdmin/membercontrest/membercontrest.component.ts":
/*!***********************************************************************!*\
  !*** ./src/app/SuperAdmin/membercontrest/membercontrest.component.ts ***!
  \***********************************************************************/
/*! exports provided: MembercontrestComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MembercontrestComponent", function() { return MembercontrestComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _MemberConfigModel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./MemberConfigModel */ "./src/app/SuperAdmin/membercontrest/MemberConfigModel.ts");






let MembercontrestComponent = class MembercontrestComponent {
    constructor(apiService, fb) {
        this.apiService = apiService;
        this.fb = fb;
        this.memberConfigModel = new _MemberConfigModel__WEBPACK_IMPORTED_MODULE_5__["MemberConfigModel"]();
        this.MemberContRestForm = this.fb.group({
            individualInstitute: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            news: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('[0-9 ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(3), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(1)])],
            gallery: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('[0-9 ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(3), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(1)])],
            artimages: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('[0-9 ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(3), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(1)])],
            artpdf: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('[0-9 ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(3), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(1)])],
            videos: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('[0-9 ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(3), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(1)])],
            MemberName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            enableMovieAccess: ['']
        });
    }
    ngOnInit() {
        this.proffessionSettings = {
            text: 'Select Member',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search ' + this.memberConfigModel.memberProfession,
            badgeShowLimit: 5,
            groupBy: "category"
        };
    }
    GetOtherMemberList(evt) {
        this.IndividualList = [];
        let memberName = evt.target.value;
        let membership_id = evt.target.value;
        let name = {
            "firstName": memberName
        };
        membership_id = {
            "membership_id": membership_id
        };
        if (memberName.length >= 2) {
            this.apiService.Create("member/getMemberDetailsByMemberName", name).subscribe(data => {
                if (data.success == true) {
                    if (data != null && data != undefined) {
                        if (data.success == true) {
                            if (data.object != undefined) {
                                let membershipDtoList = data.object;
                                let IndvidualList = [];
                                let InstituteList = [];
                                membershipDtoList.forEach(memname => {
                                    if (memname.membershipId > 0) {
                                        IndvidualList.push({ "id": memname.membershipId, "itemName": memname.firstName, "profileImage": memname.profileImage });
                                    }
                                });
                                this.IndividualList = IndvidualList;
                                this.InstitutionList = InstituteList;
                            }
                        }
                    }
                }
            }, error => {
                console.log(error);
            });
        }
    }
    onproffessionSelect(item) {
        console.log(item);
        let data;
        this.memberConfigModel.membershipId = item.id;
        data = {
            "membershipId": item.id
        };
        this.apiService.Create("masterContentRestrictConfig/getByMemberId", data).subscribe((data1) => {
            if (data1.success == true) {
                this.memberConfigModel = data1.object;
                this.memberConfigModel.membershipId = data1.object.membershipDto.membershipId;
            }
            else if (data1.success == false) {
                // this.memberConfigModel.membershipId = ;
            }
        });
    }
    submitContent() {
        let data = {
            "membershipId": this.memberConfigModel.membershipId,
            "newsLimit": this.memberConfigModel.newsLimit,
            "galaryLimit": this.memberConfigModel.galaryLimit,
            "articleImageLimit": this.memberConfigModel.articleImageLimit,
            "articlePdfLimit": this.memberConfigModel.articlePdfLimit,
            "videoLimit": this.memberConfigModel.videoLimit,
            "enableMovieAccess": this.memberConfigModel.enableMovieAccess
        };
        this.apiService.Create("masterContentRestrictConfig/save", data).subscribe(response => {
            if (response.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_4___default.a.fire(response.message);
            }
        });
        // this.ngOnInit();
        // this.MemberContRestForm.reset();
    }
    clearContent() {
        this.MemberContRestForm.reset();
    }
};
MembercontrestComponent.ctorParameters = () => [
    { type: _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] }
];
MembercontrestComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-membercontrest',
        template: __webpack_require__(/*! raw-loader!./membercontrest.component.html */ "./node_modules/raw-loader/index.js!./src/app/SuperAdmin/membercontrest/membercontrest.component.html"),
        styles: [__webpack_require__(/*! ./membercontrest.component.scss */ "./src/app/SuperAdmin/membercontrest/membercontrest.component.scss")]
    })
], MembercontrestComponent);



/***/ }),

/***/ "./src/app/SuperAdmin/moviecontrest/MovieConfigModel.ts":
/*!**************************************************************!*\
  !*** ./src/app/SuperAdmin/moviecontrest/MovieConfigModel.ts ***!
  \**************************************************************/
/*! exports provided: MovieConfigModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MovieConfigModel", function() { return MovieConfigModel; });
class MovieConfigModel {
}


/***/ }),

/***/ "./src/app/SuperAdmin/moviecontrest/moviecontrest.component.scss":
/*!***********************************************************************!*\
  !*** ./src/app/SuperAdmin/moviecontrest/moviecontrest.component.scss ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\ninput[type=checkbox] {\n  transform: scale(2);\n  -ms-transform: scale(2);\n  -webkit-transform: scale(1.5);\n  padding: 5px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL1N1cGVyQWRtaW4vbW92aWVjb250cmVzdC9tb3ZpZWNvbnRyZXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9TdXBlckFkbWluL21vdmllY29udHJlc3QvbW92aWVjb250cmVzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0VBQ0EsY0FBQTtBQ0NKOztBREdBO0VBQ0ksc0JBQUE7RUFDQSxXQUFBO0VBQ0EsdUJBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0FDQUo7O0FER0E7RUFDSSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EscUJBQUE7QUNBSjs7QURHQTtFQUNJLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxPQUFBO0VBQ0EsTUFBQTtFQUNBLFVBQUE7QUNBSjs7QURNQTtFQUNJLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSw2QkFBQTtFQUNBLFlBQUE7QUNISiIsImZpbGUiOiJzcmMvYXBwL1N1cGVyQWRtaW4vbW92aWVjb250cmVzdC9tb3ZpZWNvbnRyZXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtaGVhZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICAgIGNvbG9yOiAjZmJlMTE2O1xufVxuXG4vLyBGb3IgSW1hZ2UgQ3JvcGluZyBkYXRlOjEyLTAzLTIwMjAtLS0tLS0tLS0tLS1TdGFydC0tLS0tLS0tLS0tLS0tXG4uYnRuMSB7XG4gICAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcbiAgICBjb2xvcjogZ3JheTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiA0cHggOHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPWZpbGVdIHtcbiAgICBmb250LXNpemU6IDEwMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICBvcGFjaXR5OiAwO1xufVxuXG5cbi8vIEZvciBJbWFnZSBDcm9waW5nIGRhdGU6MTItMDMtMjAyMC0tLUVuZC0tLS0tLS0tLS1cblxuaW5wdXRbdHlwZT1jaGVja2JveF0ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMik7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMik7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuNSk7XG4gICAgcGFkZGluZzogNXB4O1xufSIsIi5jYXJkLWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gIGNvbG9yOiAjZmJlMTE2O1xufVxuXG4uYnRuMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gIGNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogNHB4IDhweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1maWxlXSB7XG4gIGZvbnQtc2l6ZTogMTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBvcGFjaXR5OiAwO1xufVxuXG5pbnB1dFt0eXBlPWNoZWNrYm94XSB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMik7XG4gIC1tcy10cmFuc2Zvcm06IHNjYWxlKDIpO1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMS41KTtcbiAgcGFkZGluZzogNXB4O1xufSJdfQ== */"

/***/ }),

/***/ "./src/app/SuperAdmin/moviecontrest/moviecontrest.component.ts":
/*!*********************************************************************!*\
  !*** ./src/app/SuperAdmin/moviecontrest/moviecontrest.component.ts ***!
  \*********************************************************************/
/*! exports provided: MoviecontrestComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MoviecontrestComponent", function() { return MoviecontrestComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _MovieConfigModel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./MovieConfigModel */ "./src/app/SuperAdmin/moviecontrest/MovieConfigModel.ts");







let MoviecontrestComponent = class MoviecontrestComponent {
    constructor(apiService, fb, loaderService) {
        this.apiService = apiService;
        this.fb = fb;
        this.loaderService = loaderService;
        this.movieConfigModel = new _MovieConfigModel__WEBPACK_IMPORTED_MODULE_6__["MovieConfigModel"]();
        this.selectedItems = [];
        this.MovieContRestForm = this.fb.group({
            news: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('[0-9 ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(3), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(1)])],
            gallery: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('[0-9 ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(3), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(1)])],
            artimages: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('[0-9 ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(3), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(1)])],
            artpdf: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('[0-9 ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(3), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(1)])],
            videos: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('[0-9 ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(3), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(1)])],
            MovieName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
    }
    ngOnInit() {
        this.proffessionSettings = {
            text: 'Select',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search ',
            badgeShowLimit: 5,
            groupBy: "category"
        };
        this.submitContent();
    }
    getMovieList(event) {
        let movieName = event.target.value;
        let movieNameSearch = {
            "title": movieName
        };
        this.loaderService.display(true);
        this.apiService.Create("movieDetails/searchmovie", movieNameSearch).subscribe(data => {
            this.loaderService.display(false);
            let memList = [];
            let memdata = data.object;
            if (memdata != null && memdata != undefined) {
                memdata.forEach(ml => {
                    memList.push({ "id": ml.movieId, "itemName": ml.title, "profileImage": ml.movieImagesDtoList[0].poster });
                });
                this.movieList = memList;
            }
        });
    }
    selectedMovieId(movdata) {
        this.selectedMoviesId = movdata.id;
    }
    onproffessionSelect(item) {
        console.log(item);
        let data;
        this.movieConfigModel.movieId = item.id;
        data = {
            "movieId": item.id
        };
        this.apiService.Create("moviecontentresriction/getByMovieId", data).subscribe((data1) => {
            if (data1.success == true) {
                this.movieConfigModel = data1.object;
                this.movieConfigModel.movieId = data1.object.movieDetailsDto.movieId;
            }
            else if (data1.success == false) {
                // this.memberConfigModel.membershipId = ;
            }
        });
    }
    submitContent() {
        debugger;
        let data = {
            "movieId": this.movieConfigModel.movieId,
            "newsLimit": this.movieConfigModel.newsLimit,
            "galaryLimit": this.movieConfigModel.galaryLimit,
            "articleImageLimit": this.movieConfigModel.articleImageLimit,
            "articlePdfLimit": this.movieConfigModel.articlePdfLimit,
            "videoLimit": this.movieConfigModel.videoLimit,
        };
        this.apiService.Create("moviecontentresriction/save", data).subscribe(response => {
            if (response.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(response.message);
            }
        });
        //  this.ngOnInit();
        //  this.MovieContRestForm.reset();
    }
    clearContent() {
        this.MovieContRestForm.reset();
        this.ngOnInit();
    }
};
MoviecontrestComponent.ctorParameters = () => [
    { type: _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_4__["LoaderService"] }
];
MoviecontrestComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-moviecontrest',
        template: __webpack_require__(/*! raw-loader!./moviecontrest.component.html */ "./node_modules/raw-loader/index.js!./src/app/SuperAdmin/moviecontrest/moviecontrest.component.html"),
        styles: [__webpack_require__(/*! ./moviecontrest.component.scss */ "./src/app/SuperAdmin/moviecontrest/moviecontrest.component.scss")]
    })
], MoviecontrestComponent);



/***/ }),

/***/ "./src/app/account/account.module.ts":
/*!*******************************************!*\
  !*** ./src/app/account/account.module.ts ***!
  \*******************************************/
/*! exports provided: AccountModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountModule", function() { return AccountModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _angular_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/http */ "./node_modules/@angular/http/fesm2015/http.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _login_login_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./login/login.component */ "./src/app/account/login/login.component.ts");
/* harmony import */ var _sanitize_html_pipe__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../sanitize-html.pipe */ "./src/app/sanitize-html.pipe.ts");
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../app-routing.module */ "./src/app/app-routing.module.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var angular2_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! angular2-multiselect-dropdown */ "./node_modules/angular2-multiselect-dropdown/fesm2015/angular2-multiselect-dropdown.js");
/* harmony import */ var ngx_image_cropper__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ngx-image-cropper */ "./node_modules/ngx-image-cropper/fesm2015/ngx-image-cropper.js");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var ngx_image_compress__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ngx-image-compress */ "./node_modules/ngx-image-compress/fesm2015/ngx-image-compress.js");
/* harmony import */ var ngx_quill__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ngx-quill */ "./node_modules/ngx-quill/fesm2015/ngx-quill.js");
/* harmony import */ var _memberpendinglist_memberpendinglist_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./memberpendinglist/memberpendinglist.component */ "./src/app/account/memberpendinglist/memberpendinglist.component.ts");
/* harmony import */ var ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ngx-bootstrap/datepicker */ "./node_modules/ngx-bootstrap/datepicker/fesm2015/ngx-bootstrap-datepicker.js");
/* harmony import */ var _memberregbyadmin_memberregbyadmin_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./memberregbyadmin/memberregbyadmin.component */ "./src/app/account/memberregbyadmin/memberregbyadmin.component.ts");
/* harmony import */ var _memberapprovallistnew_memberapprovallistnew_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./memberapprovallistnew/memberapprovallistnew.component */ "./src/app/account/memberapprovallistnew/memberapprovallistnew.component.ts");
/* harmony import */ var _memberactivatedeactivate_memberactivatedeactivate_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./memberactivatedeactivate/memberactivatedeactivate.component */ "./src/app/account/memberactivatedeactivate/memberactivatedeactivate.component.ts");
/* harmony import */ var _auditioncreation_auditioncreation_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./auditioncreation/auditioncreation.component */ "./src/app/account/auditioncreation/auditioncreation.component.ts");
/* harmony import */ var ngx_password_toggle__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ngx-password-toggle */ "./node_modules/ngx-password-toggle/ngx-password-toggle.umd.js");
/* harmony import */ var ngx_password_toggle__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(ngx_password_toggle__WEBPACK_IMPORTED_MODULE_21__);
/* harmony import */ var _comparison_comparison_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./comparison/comparison.component */ "./src/app/account/comparison/comparison.component.ts");
/* harmony import */ var _useractivedeactive_useractivedeactive_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./useractivedeactive/useractivedeactive.component */ "./src/app/account/useractivedeactive/useractivedeactive.component.ts");
/* harmony import */ var _extendmembervalidity_extendmembervalidity_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./extendmembervalidity/extendmembervalidity.component */ "./src/app/account/extendmembervalidity/extendmembervalidity.component.ts");

























let AccountModule = class AccountModule {
};
AccountModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        declarations: [
            _login_login_component__WEBPACK_IMPORTED_MODULE_6__["LoginComponent"],
            _sanitize_html_pipe__WEBPACK_IMPORTED_MODULE_7__["SanitizeHtmlPipe"],
            _memberpendinglist_memberpendinglist_component__WEBPACK_IMPORTED_MODULE_15__["MemberpendinglistComponent"],
            _memberregbyadmin_memberregbyadmin_component__WEBPACK_IMPORTED_MODULE_17__["MemberregbyadminComponent"],
            _memberapprovallistnew_memberapprovallistnew_component__WEBPACK_IMPORTED_MODULE_18__["MemberapprovallistnewComponent"],
            _memberactivatedeactivate_memberactivatedeactivate_component__WEBPACK_IMPORTED_MODULE_19__["MemberactivatedeactivateComponent"],
            _auditioncreation_auditioncreation_component__WEBPACK_IMPORTED_MODULE_20__["AuditioncreationComponent"],
            _comparison_comparison_component__WEBPACK_IMPORTED_MODULE_22__["ComparisonComponent"],
            _useractivedeactive_useractivedeactive_component__WEBPACK_IMPORTED_MODULE_23__["UseractivedeactiveComponent"],
            _extendmembervalidity_extendmembervalidity_component__WEBPACK_IMPORTED_MODULE_24__["ExtendmembervalidityComponent"]
        ],
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_5__["CommonModule"],
            _app_routing_module__WEBPACK_IMPORTED_MODULE_8__["AppRoutingModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_9__["FormsModule"],
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__["BrowserModule"],
            _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClientModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_9__["ReactiveFormsModule"],
            _angular_http__WEBPACK_IMPORTED_MODULE_4__["HttpModule"],
            angular2_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_10__["AngularMultiSelectModule"],
            ngx_image_cropper__WEBPACK_IMPORTED_MODULE_11__["ImageCropperModule"],
            angular_datatables__WEBPACK_IMPORTED_MODULE_12__["DataTablesModule"],
            ngx_password_toggle__WEBPACK_IMPORTED_MODULE_21__["NgxPasswordToggleModule"],
            ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_16__["BsDatepickerModule"],
            ngx_quill__WEBPACK_IMPORTED_MODULE_14__["QuillModule"].forRoot(),
        ],
        exports: [
            _sanitize_html_pipe__WEBPACK_IMPORTED_MODULE_7__["SanitizeHtmlPipe"]
        ],
        providers: [_sanitize_html_pipe__WEBPACK_IMPORTED_MODULE_7__["SanitizeHtmlPipe"], ngx_image_compress__WEBPACK_IMPORTED_MODULE_13__["NgxImageCompressService"]]
    })
], AccountModule);



/***/ }),

/***/ "./src/app/account/auditioncreation/auditioncreation.component.scss":
/*!**************************************************************************!*\
  !*** ./src/app/account/auditioncreation/auditioncreation.component.scss ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.newsth {\n  text-align: center;\n}\n\n.fa-pencil-square-o {\n  color: #000f92;\n  font-size: 20px;\n}\n\n.actdeacbtn {\n  padding: 0% 2%;\n  font-size: 12px;\n  margin-right: 1%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL2FjY291bnQvYXVkaXRpb25jcmVhdGlvbi9hdWRpdGlvbmNyZWF0aW9uLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hY2NvdW50L2F1ZGl0aW9uY3JlYXRpb24vYXVkaXRpb25jcmVhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0VBQ0EsY0FBQTtBQ0NKOztBREVBO0VBQ0ksc0JBQUE7RUFDQSxXQUFBO0VBQ0EsdUJBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0FDQ0o7O0FERUE7RUFDSSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EscUJBQUE7QUNDSjs7QURFQTtFQUNJLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxPQUFBO0VBQ0EsTUFBQTtFQUNBLFVBQUE7QUNDSjs7QURFQTtFQUNJLGtCQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0VBQ0EsZUFBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvYWNjb3VudC9hdWRpdGlvbmNyZWF0aW9uL2F1ZGl0aW9uY3JlYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gICAgY29sb3I6ICNmYmUxMTY7XG59XG5cbi5idG4xIHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCBncmF5O1xuICAgIGNvbG9yOiBncmF5O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDRweCA4cHg7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xuICAgIGZvbnQtc2l6ZTogMTAwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIG9wYWNpdHk6IDA7XG59XG5cbi5uZXdzdGgge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmZhLXBlbmNpbC1zcXVhcmUtbyB7XG4gICAgY29sb3I6IHJnYigwLCAxNSwgMTQ2KTtcbiAgICBmb250LXNpemU6IDIwcHg7XG59XG5cbi5hY3RkZWFjYnRuIHtcbiAgICBwYWRkaW5nOiAwJSAyJTtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAxJTtcbn0iLCIuY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxuLmJ0bjEge1xuICBib3JkZXI6IDJweCBzb2xpZCBncmF5O1xuICBjb2xvcjogZ3JheTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDRweCA4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xuICBmb250LXNpemU6IDEwMHB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgb3BhY2l0eTogMDtcbn1cblxuLm5ld3N0aCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmZhLXBlbmNpbC1zcXVhcmUtbyB7XG4gIGNvbG9yOiAjMDAwZjkyO1xuICBmb250LXNpemU6IDIwcHg7XG59XG5cbi5hY3RkZWFjYnRuIHtcbiAgcGFkZGluZzogMCUgMiU7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgbWFyZ2luLXJpZ2h0OiAxJTtcbn0iXX0= */"

/***/ }),

/***/ "./src/app/account/auditioncreation/auditioncreation.component.ts":
/*!************************************************************************!*\
  !*** ./src/app/account/auditioncreation/auditioncreation.component.ts ***!
  \************************************************************************/
/*! exports provided: AuditioncreationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuditioncreationComponent", function() { return AuditioncreationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../../app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var ngx_image_compress__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-image-compress */ "./node_modules/ngx-image-compress/fesm2015/ngx-image-compress.js");
/* harmony import */ var _auditioncreation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./auditioncreation */ "./src/app/account/auditioncreation/auditioncreation.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");










let AuditioncreationComponent = class AuditioncreationComponent {
    constructor(apiService, fb, loaderService, imageCompress, datePipe) {
        this.apiService = apiService;
        this.fb = fb;
        this.loaderService = loaderService;
        this.imageCompress = imageCompress;
        this.datePipe = datePipe;
        this.auditionCreation = new _auditioncreation__WEBPACK_IMPORTED_MODULE_7__["Auditioncreation"]();
        this.imageChangedEvent = "";
        this.croppedImage = '';
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_9__["Subject"]();
        this.isDtInitialized = false;
        this.modules = {};
        this.auditionOwnerList = [];
        this.auditionList = [];
        this.AuditionCreationForm = this.fb.group({
            auditionOwnerName: [''],
            auditionTitle: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(2)])],
            auditionDescription: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(8000), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(2)])],
            startDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            endDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            imagePath: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
        this.datePickerConfig = Object.assign({}, {
            containerClass: 'theme-dark-blue',
            showWeekNumbers: false,
            dateInputFormat: 'DD-MM-YYYY'
        });
        this.minStartDate = new Date();
        this.minEndDate = new Date();
        this.minEndDate.setDate(this.minEndDate.getDate());
        this.modules = {
            'toolbar': [
                ['bold', 'italic', 'underline', 'strike'],
                [{ 'header': 1 }, { 'header': 2 }],
                [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                // [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript
                // [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
                // [{ 'direction': 'rtl' }],                         // text direction
                [{ 'size': ['small', false, 'large', 'huge'] }],
                // [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                [{ 'color': [] }, { 'background': [] }],
                [{ 'font': [] }],
                [{ 'align': [] }],
            ]
        };
    }
    ngOnInit() {
        this.proffessionSettings = {
            text: 'Select ',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search ',
            badgeShowLimit: 5,
            groupBy: "category"
        };
        this.getAllAuditionList();
    }
    getAuditionOwnerList(evt) {
        this.auditionOwnerList = [];
        let memberName = evt.target.value;
        let name = {
            "firstName": memberName
        };
        if (memberName.length >= 2) {
            this.apiService.Create("member/getMemberDetailsByMemberName", name).subscribe(data => {
                if (data.success == true) {
                    if (data != null && data != undefined) {
                        if (data.success == true) {
                            if (data.object != undefined) {
                                let membershipDtoList = data.object;
                                let ownerList = [];
                                membershipDtoList.forEach(memname => {
                                    if (memname.membershipId > 0) {
                                        ownerList.push({ "id": memname.membershipId, "itemName": memname.firstName, "profileImage": memname.profileImage });
                                    }
                                });
                                this.auditionOwnerList = ownerList;
                            }
                        }
                    }
                }
            }, error => {
                console.log(error);
            });
        }
    }
    selectedMemberId(memdata) {
        this.selectedMemId = memdata.id;
    }
    imageUpload(e) {
        this.loaderService.display(true);
        this.imageChangedEvent = e;
        $('#file-upload').removeAttr('src');
        this.filename = "";
        this.filetype = "";
        this.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB 
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.filename = file.name;
                    this.filetype = file.type;
                    this.imagePath = reader.result;
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG") {
                this.filename = "";
                this.filetype = "";
                this.imagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Image format should be jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.filename = "";
                this.filetype = "";
                this.imagePath = "";
                // this.adminPage.profileImagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Document size should be less than 10MB");
                return;
            }
        }
    }
    imageCropped(event) {
        var orientation = 1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        console.log('Size in bytes was:', isbc);
        if (isbc < 200000) {
            console.log('1st scenario:', isbc);
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.auditionCreation.auditionImage = result;
                console.log('Size in bytes is now:', this.imageCompress.byteCount(this.auditionCreation.auditionImage));
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.AuditionCreationForm.controls.imagePath.setValue(this.auditionCreation.auditionImage);
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            console.log('2nd scenario:', isbc);
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                this.auditionCreation.auditionImage = result;
                console.log('Size in bytes is now:', this.imageCompress.byteCount(this.auditionCreation.auditionImage));
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.AuditionCreationForm.controls.imagePath.setValue(this.auditionCreation.auditionImage);
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            console.log('3rd scenario:', isbc);
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.auditionCreation.auditionImage = result;
                console.log('Size in bytes is now:', this.imageCompress.byteCount(this.auditionCreation.auditionImage));
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.AuditionCreationForm.controls.imagePath.setValue(this.auditionCreation.auditionImage);
            });
        }
    }
    imageLoaded() {
        // show cropper
    }
    cropperReady() {
        // cropper ready
    }
    loadImageFailed() {
        // show message
    }
    onSubmit() {
        var auditiondata;
        let StartDate = this.auditionCreation.startDate.toString();
        let EndDate = this.auditionCreation.endDate.toString();
        if (StartDate.length > 10 && EndDate.length == 10) {
            auditiondata = {
                "auditionId": this.auditionCreation.auditionId,
                "memberId": this.selectedMemId,
                "auditionTitle": this.auditionCreation.auditionTitle,
                "auditionDescription": this.auditionCreation.auditionDescription,
                "auditionImage": this.auditionCreation.auditionImage,
                "startDate": this.datePipe.transform(this.auditionCreation.startDate, "dd-MM-yyyy"),
                "endDate": this.auditionCreation.endDate
            };
        }
        else if (EndDate.length > 10 && StartDate.length == 10) {
            auditiondata = {
                "auditionId": this.auditionCreation.auditionId,
                "memberId": this.selectedMemId,
                "auditionTitle": this.auditionCreation.auditionTitle,
                "auditionDescription": this.auditionCreation.auditionDescription,
                "auditionImage": this.auditionCreation.auditionImage,
                "startDate": this.auditionCreation.startDate,
                "endDate": this.datePipe.transform(this.auditionCreation.endDate, "dd-MM-yyyy")
            };
        }
        else if (StartDate.length > 10 && EndDate.length > 10) {
            auditiondata = {
                "auditionId": this.auditionCreation.auditionId,
                "memberId": this.selectedMemId,
                "auditionTitle": this.auditionCreation.auditionTitle,
                "auditionDescription": this.auditionCreation.auditionDescription,
                "auditionImage": this.auditionCreation.auditionImage,
                "startDate": this.datePipe.transform(this.auditionCreation.startDate, "dd-MM-yyyy"),
                "endDate": this.datePipe.transform(this.auditionCreation.endDate, "dd-MM-yyyy")
            };
        }
        else {
            auditiondata = {
                "auditionId": this.auditionCreation.auditionId,
                "memberId": this.selectedMemId,
                "auditionTitle": this.auditionCreation.auditionTitle,
                "auditionDescription": this.auditionCreation.auditionDescription,
                "auditionImage": this.auditionCreation.auditionImage,
                "startDate": this.auditionCreation.startDate,
                "endDate": this.auditionCreation.endDate
            };
        }
        this.loaderService.display(true);
        this.apiService.Create("masterAuditionCreation/save", auditiondata).subscribe(data => {
            this.loaderService.display(false);
            if (data.success = true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_4___default.a.fire(data.message);
                this.clearAudition();
                this.getAllAuditionList();
            }
        });
    }
    getAllAuditionList() {
        this.apiService.getDATA("masterAuditionCreation/getAllActive").subscribe(data => {
            if (data.object != null && data.object != undefined) {
                this.auditionList = data.object.masterAuditionCreationDtoList;
                if (this.isDtInitialized) {
                    this.dtElement.dtInstance.then((dtInstance) => {
                        dtInstance.destroy();
                        this.dtTrigger.next();
                    });
                }
                else {
                    this.isDtInitialized = true;
                    this.dtTrigger.next();
                }
            }
            // this.dtTrigger.next();
        });
    }
    editAudition(auditionId) {
        let aid = {
            "auditionId": auditionId
        };
        this.apiService.Create("masterAuditionCreation/getByAuditionId", aid).subscribe(data => {
            if (data.object != null && data.object != undefined) {
                this.auditionCreation.auditionId = auditionId;
                this.auditionCreation.auditionTitle = data.object[0].auditionTitle;
                this.auditionCreation.auditionDescription = data.object[0].auditionDescription;
                this.auditionCreation.startDate = this.datePipe.transform(data.object[0].startDate, "dd-MM-yyyy");
                this.auditionCreation.endDate = this.datePipe.transform(data.object[0].endDate, "dd-MM-yyyy");
                this.auditionCreation.auditionImage = data.object[0].auditionImage;
                this.selectedMember = [{ "id": data.object[0].memberId, "itemName": data.object[0].memberName, "profileImage": data.object[0].memberImage }];
                this.selectedMemId = data.object[0].memberId;
            }
        });
    }
    actDeacAudition(actdeacdata) {
        if (actdeacdata.isActive == 0) {
            actdeacdata.isActive = 1;
        }
        else {
            actdeacdata.isActive = 0;
        }
        let id = actdeacdata.auditionId;
        let actdeac = actdeacdata.isActive;
        let addata = {
            "auditionId": id,
            "isActive": actdeac
        };
        this.loaderService.display(true);
        this.apiService.Create("masterAuditionCreation/activeOrDeactiveByAuditionId", addata).subscribe(data => {
            this.loaderService.display(false);
            if (data != undefined) {
                if (data.success) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_4___default.a.fire(data.message);
                }
            }
        });
    }
    clearAudition() {
        this.AuditionCreationForm.reset();
        this.auditionCreation.auditionImage = "";
        this.selectedMemId = "";
    }
};
AuditioncreationComponent.ctorParameters = () => [
    { type: _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_5__["LoaderService"] },
    { type: ngx_image_compress__WEBPACK_IMPORTED_MODULE_6__["NgxImageCompressService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_8__["DatePipe"] }
];
AuditioncreationComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-auditioncreation',
        template: __webpack_require__(/*! raw-loader!./auditioncreation.component.html */ "./node_modules/raw-loader/index.js!./src/app/account/auditioncreation/auditioncreation.component.html"),
        styles: [__webpack_require__(/*! ./auditioncreation.component.scss */ "./src/app/account/auditioncreation/auditioncreation.component.scss")]
    })
], AuditioncreationComponent);



/***/ }),

/***/ "./src/app/account/auditioncreation/auditioncreation.ts":
/*!**************************************************************!*\
  !*** ./src/app/account/auditioncreation/auditioncreation.ts ***!
  \**************************************************************/
/*! exports provided: Auditioncreation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Auditioncreation", function() { return Auditioncreation; });
class Auditioncreation {
}


/***/ }),

/***/ "./src/app/account/comparison/comparison.component.scss":
/*!**************************************************************!*\
  !*** ./src/app/account/comparison/comparison.component.scss ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL2FjY291bnQvY29tcGFyaXNvbi9jb21wYXJpc29uLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hY2NvdW50L2NvbXBhcmlzb24vY29tcGFyaXNvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0VBQ0EsY0FBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvYWNjb3VudC9jb21wYXJpc29uL2NvbXBhcmlzb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gICAgY29sb3I6ICNmYmUxMTY7XG59IiwiLmNhcmQtaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJkM2U1MDtcbiAgY29sb3I6ICNmYmUxMTY7XG59Il19 */"

/***/ }),

/***/ "./src/app/account/comparison/comparison.component.ts":
/*!************************************************************!*\
  !*** ./src/app/account/comparison/comparison.component.ts ***!
  \************************************************************/
/*! exports provided: ComparisonComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComparisonComponent", function() { return ComparisonComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let ComparisonComponent = class ComparisonComponent {
    constructor() { }
    ngOnInit() {
    }
};
ComparisonComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-comparison',
        template: __webpack_require__(/*! raw-loader!./comparison.component.html */ "./node_modules/raw-loader/index.js!./src/app/account/comparison/comparison.component.html"),
        styles: [__webpack_require__(/*! ./comparison.component.scss */ "./src/app/account/comparison/comparison.component.scss")]
    })
], ComparisonComponent);



/***/ }),

/***/ "./src/app/account/extendmembervalidity/extendmembervalidity.component.scss":
/*!**********************************************************************************!*\
  !*** ./src/app/account/extendmembervalidity/extendmembervalidity.component.scss ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".row {\n  padding: 1% 0%;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\n.content {\n  margin: 1% 2%;\n}\n\n.has-search .form-control {\n  padding-left: 2.375rem;\n}\n\n.has-search .form-control-feedback {\n  position: absolute;\n  z-index: 2;\n  display: block;\n  width: 2.375rem;\n  height: 2.375rem;\n  line-height: 2.375rem;\n  text-align: center;\n  pointer-events: none;\n  color: #aaa;\n}\n\n.actdeacbtn {\n  padding: 0% 2%;\n  font-size: 12px;\n  margin-right: 1%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL2FjY291bnQvZXh0ZW5kbWVtYmVydmFsaWRpdHkvZXh0ZW5kbWVtYmVydmFsaWRpdHkuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FjY291bnQvZXh0ZW5kbWVtYmVydmFsaWRpdHkvZXh0ZW5kbWVtYmVydmFsaWRpdHkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtFQUNBLGNBQUE7QUNDSjs7QURFQTtFQUNJLGFBQUE7QUNDSjs7QURFQTtFQUNJLHNCQUFBO0FDQ0o7O0FERUE7RUFDSSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EscUJBQUE7RUFDQSxrQkFBQTtFQUNBLG9CQUFBO0VBQ0EsV0FBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvYWNjb3VudC9leHRlbmRtZW1iZXJ2YWxpZGl0eS9leHRlbmRtZW1iZXJ2YWxpZGl0eS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yb3cge1xuICAgIHBhZGRpbmc6IDElIDAlO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gICAgY29sb3I6ICNmYmUxMTY7XG59XG5cbi5jb250ZW50IHtcbiAgICBtYXJnaW46IDElIDIlO1xufVxuXG4uaGFzLXNlYXJjaCAuZm9ybS1jb250cm9sIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDIuMzc1cmVtO1xufVxuXG4uaGFzLXNlYXJjaCAuZm9ybS1jb250cm9sLWZlZWRiYWNrIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgei1pbmRleDogMjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMi4zNzVyZW07XG4gICAgaGVpZ2h0OiAyLjM3NXJlbTtcbiAgICBsaW5lLWhlaWdodDogMi4zNzVyZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIGNvbG9yOiAjYWFhO1xufVxuXG4uYWN0ZGVhY2J0biB7XG4gICAgcGFkZGluZzogMCUgMiU7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIG1hcmdpbi1yaWdodDogMSU7XG59IiwiLnJvdyB7XG4gIHBhZGRpbmc6IDElIDAlO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxuLmNvbnRlbnQge1xuICBtYXJnaW46IDElIDIlO1xufVxuXG4uaGFzLXNlYXJjaCAuZm9ybS1jb250cm9sIHtcbiAgcGFkZGluZy1sZWZ0OiAyLjM3NXJlbTtcbn1cblxuLmhhcy1zZWFyY2ggLmZvcm0tY29udHJvbC1mZWVkYmFjayB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAyLjM3NXJlbTtcbiAgaGVpZ2h0OiAyLjM3NXJlbTtcbiAgbGluZS1oZWlnaHQ6IDIuMzc1cmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICBjb2xvcjogI2FhYTtcbn1cblxuLmFjdGRlYWNidG4ge1xuICBwYWRkaW5nOiAwJSAyJTtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBtYXJnaW4tcmlnaHQ6IDElO1xufSJdfQ== */"

/***/ }),

/***/ "./src/app/account/extendmembervalidity/extendmembervalidity.component.ts":
/*!********************************************************************************!*\
  !*** ./src/app/account/extendmembervalidity/extendmembervalidity.component.ts ***!
  \********************************************************************************/
/*! exports provided: ExtendmembervalidityComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExtendmembervalidityComponent", function() { return ExtendmembervalidityComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var _modals_SearchData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../modals/SearchData */ "./src/app/modals/SearchData.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_modals_ExtendMembership__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/modals/ExtendMembership */ "./src/app/modals/ExtendMembership.ts");
/* harmony import */ var src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_7__);








let ExtendmembervalidityComponent = class ExtendmembervalidityComponent {
    constructor(apiService, loaderService) {
        this.apiService = apiService;
        this.loaderService = loaderService;
        this.memberlist = [];
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.modal = new _modals_SearchData__WEBPACK_IMPORTED_MODULE_3__["SearchData"]();
        this.adminPage = new src_app_modals_ExtendMembership__WEBPACK_IMPORTED_MODULE_5__["ExtendMembership"]();
    }
    ngOnInit() {
        this.adminPage = new src_app_modals_ExtendMembership__WEBPACK_IMPORTED_MODULE_5__["ExtendMembership"]();
        this.getMemberList();
        this.getMembershipTypeGetAll();
    }
    getMemberListSearchData(e) {
        let name = e.target.value;
        let roleData = JSON.parse(localStorage.getItem('staffLogin')).object.roleDto;
        let userData = JSON.parse(localStorage.getItem('staffLogin')).object.userDto;
        let data = {
            "generalSearch": name,
            "offset": 0,
            "limit": 20,
            "audtionId": "0",
            "createdByRoleId": roleData.roleId,
            "createdByUserId": userData.userId
        };
        // }
        if (name.length >= 2) {
            this.loaderService.display(true);
            this.memberlist = [];
            this.apiService.Create("member/memberSeacrhDetails", data).subscribe(data => {
                this.loaderService.display(false);
                if (data != undefined) {
                    if (data.success) {
                        if (data.object != undefined) {
                            this.modal.totalRecords = data.object.totalRecords;
                            this.modal.noOfPages = data.object.noOfPages;
                            //  console.log(JSON.stringify(this.modal));
                            if (data.object.records != undefined && data.object.records != null) {
                                this.memberlist = data.object.records;
                                //   console.log(JSON.stringify(this.memberlist));
                                this.dtTrigger.next();
                            }
                        }
                    }
                }
            }, error => {
                console.log(error);
                this.loaderService.display(false);
            });
        }
    }
    SelectedMember(da) {
        this.adminPage.membershipId = da.memberId;
        debugger;
    }
    getMemberList() {
        this.loaderService.display(true);
        this.memberlist = [];
        // let roleData = JSON.parse(localStorage.getItem('staffLogin')).object.roleDto;
        // let userData = JSON.parse(localStorage.getItem('staffLogin')).object.userDto;
        let datedata = {
            "ageGroup": this.modal.ageGroup,
            "gender": this.modal.gender,
            "individualInstitute": this.modal.individualInstitute,
            "experienceType": this.modal.experienceType,
            "yearOfExp": this.modal.yearOfExp,
            "generalSearch": this.modal.generalSearch,
            "refProfessionId": this.modal.refProfessionId,
            "offset": this.modal.offset,
            "limit": this.modal.limit,
        };
        this.apiService.Create("member/activateOrDeactivateMember", datedata).subscribe(data => {
            this.loaderService.display(false);
            if (data != undefined) {
                if (data.success) {
                    if (data.object != undefined) {
                        this.modal.totalRecords = data.object.totalRecords;
                        this.modal.noOfPages = data.object.noOfPages;
                        if (data.object.records != undefined && data.object.records != null) {
                            this.memberlist = data.object.records;
                            this.dtTrigger.next();
                        }
                    }
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    clickOnNextButton() {
        this.modal.offset = this.modal.offset + 20;
        this.getMemberList();
    }
    clickOnPreviousButton() {
        this.modal.offset = this.modal.offset - 20;
        this.getMemberList();
    }
    getMembershipTypeGetAll() {
        this.apiService.getDATA('membershipType/getAll').subscribe((data) => {
            if (data.success == true) {
                this.membershipTypeList = data.object.membershipTypeDtoList;
            }
        });
    }
    updateextendVal() {
        let userData = JSON.parse(localStorage.getItem('staffLogin')).object.userDto;
        if (this.adminPage.extendedDate != "" && this.adminPage.extendedDate != null && this.adminPage.memberTypeId != "0") {
            var sd = new Date(this.adminPage.extendedDate);
            let reqData = {
                "id": "",
                "memberTypeId": this.adminPage.memberTypeId,
                "membershipId": this.adminPage.membershipId,
                "extendedDate": sd.getFullYear() + '-' + (sd.getMonth() + 1) + '-' + sd.getDate(),
                "remark": this.adminPage.remark,
                "createdBy": userData.userId
            };
            this.loaderService.display(true);
            console.log(reqData);
            debugger;
            this.apiService.Create("extendvalidity/extendmemval", reqData).subscribe((result) => {
                this.loaderService.display(false);
                console.log(result);
                if (result.success) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Membership extended successfully..!");
                    this.ngOnInit();
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(result.message);
                }
            }, (error) => {
                this.loaderService.display(false);
            });
        }
        else {
            sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Please select All The Mandatory Fields");
        }
    }
    OndateChange(sdate) {
        if (sdate != null) {
        }
    }
};
ExtendmembervalidityComponent.ctorParameters = () => [
    { type: src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_6__["ApiService"] },
    { type: _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_2__["LoaderService"] }
];
ExtendmembervalidityComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-extendmembervalidity',
        template: __webpack_require__(/*! raw-loader!./extendmembervalidity.component.html */ "./node_modules/raw-loader/index.js!./src/app/account/extendmembervalidity/extendmembervalidity.component.html"),
        styles: [__webpack_require__(/*! ./extendmembervalidity.component.scss */ "./src/app/account/extendmembervalidity/extendmembervalidity.component.scss")]
    })
], ExtendmembervalidityComponent);



/***/ }),

/***/ "./src/app/account/login/login.component.scss":
/*!****************************************************!*\
  !*** ./src/app/account/login/login.component.scss ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".row {\n  margin-left: 0;\n  margin-right: 0;\n}\n\n.container .row {\n  margin-left: -15px;\n  margin-right: -15px;\n}\n\n.form-elegant .modal-header {\n  border-bottom: none;\n}\n\n.modal-content {\n  width: 80%;\n  display: block;\n  margin: 20% auto;\n  box-shadow: 0px 1px 15px 0.5px #000000;\n}\n\n.modal-body {\n  padding: 0 3rem 3rem;\n}\n\n.subbtn {\n  width: 100%;\n  margin-top: 5%;\n  background: linear-gradient(45deg, #ffce44, #fcff3a);\n  color: #000;\n  border: none;\n  font-weight: 600;\n  box-shadow: 0px 1px 5px 0.5px #000;\n}\n\n.subbtn:hover {\n  background: linear-gradient(45deg, #ff833b, #e8f53a);\n}\n\n@media only screen and (max-width: 768px) {\n  .loginpageimg {\n    display: none !important;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL2FjY291bnQvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FjY291bnQvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0EsZUFBQTtBQ0NKOztBREdJO0VBQ0ksa0JBQUE7RUFDQSxtQkFBQTtBQ0FSOztBREdBO0VBQ0ksbUJBQUE7QUNBSjs7QURFQTtFQUNJLFVBQUE7RUFDQSxjQUFBO0VBQ0EsZ0JBQUE7RUFDQSxzQ0FBQTtBQ0NKOztBREVBO0VBQ0ksb0JBQUE7QUNDSjs7QURFQTtFQUNJLFdBQUE7RUFDQSxjQUFBO0VBQ0Esb0RBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0VBQ0Esa0NBQUE7QUNDSjs7QURDQTtFQUNJLG9EQUFBO0FDRUo7O0FEQ0E7RUFDSTtJQUNJLHdCQUFBO0VDRU47QUFDRiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm93IHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG59XG5cbi5jb250YWluZXIge1xuICAgIC5yb3cge1xuICAgICAgICBtYXJnaW4tbGVmdDogLTE1cHg7XG4gICAgICAgIG1hcmdpbi1yaWdodDogLTE1cHg7XG4gICAgfVxufVxuLmZvcm0tZWxlZ2FudCAubW9kYWwtaGVhZGVyIHtcbiAgICBib3JkZXItYm90dG9tOiBub25lO1xufVxuLm1vZGFsLWNvbnRlbnR7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDIwJSBhdXRvO1xuICAgIGJveC1zaGFkb3c6IDBweCAxcHggMTVweCAwLjVweCAjMDAwMDAwO1xufVxuXG4ubW9kYWwtYm9keXtcbiAgICBwYWRkaW5nOiAwIDNyZW0gM3JlbTtcbn1cblxuLnN1YmJ0bntcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tdG9wOiA1JTtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICNmZmNlNDQsICNmY2ZmM2EpO1xuICAgIGNvbG9yOiAjMDAwO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIGJveC1zaGFkb3c6IDBweCAxcHggNXB4IDAuNXB4ICMwMDA7XG59XG4uc3ViYnRuOmhvdmVye1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgI2ZmODMzYiwgI2U4ZjUzYSk7XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDo3NjhweCkge1xuICAgIC5sb2dpbnBhZ2VpbWd7XG4gICAgICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgICB9XG59IiwiLnJvdyB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBtYXJnaW4tcmlnaHQ6IDA7XG59XG5cbi5jb250YWluZXIgLnJvdyB7XG4gIG1hcmdpbi1sZWZ0OiAtMTVweDtcbiAgbWFyZ2luLXJpZ2h0OiAtMTVweDtcbn1cblxuLmZvcm0tZWxlZ2FudCAubW9kYWwtaGVhZGVyIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbn1cblxuLm1vZGFsLWNvbnRlbnQge1xuICB3aWR0aDogODAlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAyMCUgYXV0bztcbiAgYm94LXNoYWRvdzogMHB4IDFweCAxNXB4IDAuNXB4ICMwMDAwMDA7XG59XG5cbi5tb2RhbC1ib2R5IHtcbiAgcGFkZGluZzogMCAzcmVtIDNyZW07XG59XG5cbi5zdWJidG4ge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLXRvcDogNSU7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgI2ZmY2U0NCwgI2ZjZmYzYSk7XG4gIGNvbG9yOiAjMDAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGJveC1zaGFkb3c6IDBweCAxcHggNXB4IDAuNXB4ICMwMDA7XG59XG5cbi5zdWJidG46aG92ZXIge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICNmZjgzM2IsICNlOGY1M2EpO1xufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5sb2dpbnBhZ2VpbWcge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxufSJdfQ== */"

/***/ }),

/***/ "./src/app/account/login/login.component.ts":
/*!**************************************************!*\
  !*** ./src/app/account/login/login.component.ts ***!
  \**************************************************/
/*! exports provided: LoginComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginComponent", function() { return LoginComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../../app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../auth/auth.service */ "./src/app/auth/auth.service.ts");
/* harmony import */ var _account_login_login__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../account/login/login */ "./src/app/account/login/login.ts");
/* harmony import */ var src_app_services_account_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/services/account.service */ "./src/app/services/account.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_9__);










let LoginComponent = class LoginComponent {
    constructor(apiService, fb, loaderService, authService, acc, router, route) {
        this.apiService = apiService;
        this.fb = fb;
        this.loaderService = loaderService;
        this.authService = authService;
        this.acc = acc;
        this.router = router;
        this.route = route;
        this.Mobile = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"]();
        this.Password = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"]();
        this.login = new _account_login_login__WEBPACK_IMPORTED_MODULE_6__["Login"]();
    }
    ngOnInit() {
        //   this.login = new Login();
        if (localStorage.getItem('staffLogin')) {
            localStorage.clear();
            location.reload();
        }
        this.Mobile = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"]('', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]);
        this.Password = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"]('', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]);
        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';
        this.loginForm = this.fb.group({
            "Mobile": this.Mobile,
            "Password": this.Password
        });
    }
    OnSubmit() {
        debugger;
        if (this.loginForm.valid) {
            let userLogin = this.loginForm.value;
            this.acc.Login(userLogin.Mobile, userLogin.Password).subscribe(result => {
                //this.router.navigate(['home']);
                //this.invalidLogin = false;
                if (result.success == true) {
                    let data = result.object;
                    if (data.roleDto != undefined && data.roleDto != null) {
                        this.router.navigate(['home']);
                    }
                    else {
                        sweetalert2__WEBPACK_IMPORTED_MODULE_9___default.a.fire("Role Not Found, Please Contact Super Admin");
                    }
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_9___default.a.fire(result.message);
                }
            }, error => {
                this.invalidLogin = true;
                this.errorMessage = "Invalid Usre Details!";
            });
        }
        else {
            this.apiService.validateAllFormFields(this.loginForm);
            //swal.fire("Please enter all the fields");
        }
    }
    isLogin() {
        this.authService.login(this.login);
    }
};
LoginComponent.ctorParameters = () => [
    { type: _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_2__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_4__["LoaderService"] },
    { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_5__["AuthService"] },
    { type: src_app_services_account_service__WEBPACK_IMPORTED_MODULE_7__["AccountService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["ActivatedRoute"] }
];
LoginComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-login',
        template: __webpack_require__(/*! raw-loader!./login.component.html */ "./node_modules/raw-loader/index.js!./src/app/account/login/login.component.html"),
        styles: [__webpack_require__(/*! ./login.component.scss */ "./src/app/account/login/login.component.scss")]
    })
], LoginComponent);



/***/ }),

/***/ "./src/app/account/login/login.ts":
/*!****************************************!*\
  !*** ./src/app/account/login/login.ts ***!
  \****************************************/
/*! exports provided: Login */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Login", function() { return Login; });
class Login {
}


/***/ }),

/***/ "./src/app/account/memberactivatedeactivate/memberactivatedeactivate.component.scss":
/*!******************************************************************************************!*\
  !*** ./src/app/account/memberactivatedeactivate/memberactivatedeactivate.component.scss ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".row {\n  padding: 1% 0%;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\n.content {\n  margin: 1% 2%;\n}\n\n.has-search .form-control {\n  padding-left: 2.375rem;\n}\n\n.has-search .form-control-feedback {\n  position: absolute;\n  z-index: 2;\n  display: block;\n  width: 2.375rem;\n  height: 2.375rem;\n  line-height: 2.375rem;\n  text-align: center;\n  pointer-events: none;\n  color: #aaa;\n}\n\n.actdeacbtn {\n  padding: 0% 2%;\n  font-size: 12px;\n  margin-right: 1%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL2FjY291bnQvbWVtYmVyYWN0aXZhdGVkZWFjdGl2YXRlL21lbWJlcmFjdGl2YXRlZGVhY3RpdmF0ZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYWNjb3VudC9tZW1iZXJhY3RpdmF0ZWRlYWN0aXZhdGUvbWVtYmVyYWN0aXZhdGVkZWFjdGl2YXRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtBQ0NKOztBREVBO0VBQ0kseUJBQUE7RUFDQSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxhQUFBO0FDQ0o7O0FERUE7RUFDSSxzQkFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxVQUFBO0VBQ0EsY0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLHFCQUFBO0VBQ0Esa0JBQUE7RUFDQSxvQkFBQTtFQUNBLFdBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvbWVtYmVyYWN0aXZhdGVkZWFjdGl2YXRlL21lbWJlcmFjdGl2YXRlZGVhY3RpdmF0ZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yb3cge1xuICAgIHBhZGRpbmc6IDElIDAlO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gICAgY29sb3I6ICNmYmUxMTY7XG59XG5cbi5jb250ZW50IHtcbiAgICBtYXJnaW46IDElIDIlO1xufVxuXG4uaGFzLXNlYXJjaCAuZm9ybS1jb250cm9sIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDIuMzc1cmVtO1xufVxuXG4uaGFzLXNlYXJjaCAuZm9ybS1jb250cm9sLWZlZWRiYWNrIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgei1pbmRleDogMjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMi4zNzVyZW07XG4gICAgaGVpZ2h0OiAyLjM3NXJlbTtcbiAgICBsaW5lLWhlaWdodDogMi4zNzVyZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIGNvbG9yOiAjYWFhO1xufVxuXG4uYWN0ZGVhY2J0biB7XG4gICAgcGFkZGluZzogMCUgMiU7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIG1hcmdpbi1yaWdodDogMSU7XG59IiwiLnJvdyB7XG4gIHBhZGRpbmc6IDElIDAlO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxuLmNvbnRlbnQge1xuICBtYXJnaW46IDElIDIlO1xufVxuXG4uaGFzLXNlYXJjaCAuZm9ybS1jb250cm9sIHtcbiAgcGFkZGluZy1sZWZ0OiAyLjM3NXJlbTtcbn1cblxuLmhhcy1zZWFyY2ggLmZvcm0tY29udHJvbC1mZWVkYmFjayB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAyLjM3NXJlbTtcbiAgaGVpZ2h0OiAyLjM3NXJlbTtcbiAgbGluZS1oZWlnaHQ6IDIuMzc1cmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICBjb2xvcjogI2FhYTtcbn1cblxuLmFjdGRlYWNidG4ge1xuICBwYWRkaW5nOiAwJSAyJTtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBtYXJnaW4tcmlnaHQ6IDElO1xufSJdfQ== */"

/***/ }),

/***/ "./src/app/account/memberactivatedeactivate/memberactivatedeactivate.component.ts":
/*!****************************************************************************************!*\
  !*** ./src/app/account/memberactivatedeactivate/memberactivatedeactivate.component.ts ***!
  \****************************************************************************************/
/*! exports provided: MemberactivatedeactivateComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MemberactivatedeactivateComponent", function() { return MemberactivatedeactivateComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var _modals_SearchData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../modals/SearchData */ "./src/app/modals/SearchData.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_6__);







let MemberactivatedeactivateComponent = class MemberactivatedeactivateComponent {
    constructor(apiService, loaderService) {
        this.apiService = apiService;
        this.loaderService = loaderService;
        this.memberlist = [];
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.modal = new _modals_SearchData__WEBPACK_IMPORTED_MODULE_3__["SearchData"]();
    }
    ngOnInit() {
        this.getMemberList();
    }
    getMemberListSearchData(e) {
        let name = e.target.value;
        let roleData = JSON.parse(localStorage.getItem('staffLogin')).object.roleDto;
        let userData = JSON.parse(localStorage.getItem('staffLogin')).object.userDto;
        // let data = {};
        // if (roleData.roleId == 9) {
        //   data = {
        //     "generalSearch": name,
        //     "offset": 0,
        //     "limit": 20,
        //     "audtionId": "0",
        //     "createdByRoleId": roleData.roleId,
        //     "createdByUserId": userData.userId
        //   }
        // }
        // else {
        let data = {
            "generalSearch": name,
            "offset": 0,
            "limit": 20,
            "audtionId": "0",
            "createdByRoleId": roleData.roleId,
            "createdByUserId": userData.userId
        };
        // }
        if (name.length >= 2) {
            this.loaderService.display(true);
            this.memberlist = [];
            this.apiService.Create("member/memberSeacrhDetails", data).subscribe(data => {
                this.loaderService.display(false);
                if (data != undefined) {
                    if (data.success) {
                        if (data.object != undefined) {
                            this.modal.totalRecords = data.object.totalRecords;
                            this.modal.noOfPages = data.object.noOfPages;
                            //  console.log(JSON.stringify(this.modal));
                            if (data.object.records != undefined && data.object.records != null) {
                                this.memberlist = data.object.records;
                                //   console.log(JSON.stringify(this.memberlist));
                                this.dtTrigger.next();
                            }
                        }
                    }
                }
            }, error => {
                console.log(error);
                this.loaderService.display(false);
            });
        }
    }
    getMemberList() {
        this.loaderService.display(true);
        this.memberlist = [];
        // let roleData = JSON.parse(localStorage.getItem('staffLogin')).object.roleDto;
        // let userData = JSON.parse(localStorage.getItem('staffLogin')).object.userDto;
        let datedata = {
            "ageGroup": this.modal.ageGroup,
            "gender": this.modal.gender,
            "individualInstitute": this.modal.individualInstitute,
            "experienceType": this.modal.experienceType,
            "yearOfExp": this.modal.yearOfExp,
            "generalSearch": this.modal.generalSearch,
            "refProfessionId": this.modal.refProfessionId,
            "offset": this.modal.offset,
            "limit": this.modal.limit,
        };
        this.apiService.Create("member/activateOrDeactivateMember", datedata).subscribe(data => {
            this.loaderService.display(false);
            if (data != undefined) {
                if (data.success) {
                    if (data.object != undefined) {
                        this.modal.totalRecords = data.object.totalRecords;
                        this.modal.noOfPages = data.object.noOfPages;
                        if (data.object.records != undefined && data.object.records != null) {
                            this.memberlist = data.object.records;
                            this.dtTrigger.next();
                        }
                    }
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    clickOnNextButton() {
        this.modal.offset = this.modal.offset + 20;
        this.getMemberList();
    }
    clickOnPreviousButton() {
        this.modal.offset = this.modal.offset - 20;
        this.getMemberList();
    }
    basicActiveDeactive(ml) {
        if (ml.isActive == 0) {
            ml.isActive = 1;
        }
        else {
            ml.isActive = 0;
        }
        let memberId = ml.memberId;
        let isActive = ml.isActive;
        var da = {
            "membershipId": memberId,
            "isActive": isActive
        };
        this.loaderService.display(true);
        this.apiService.Create("member/activeOrDeactiveMember", da).subscribe(data => {
            this.loaderService.display(false);
            //  console.log(data)
            if (data != undefined) {
                if (data.success) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(data.message);
                    let object = data.object;
                    //    console.log(JSON.stringify(object));
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    profileActiveDeactive(ml) {
        if (ml.profileIsActive == 0) {
            ml.profileIsActive = 1;
        }
        else {
            ml.profileIsActive = 0;
        }
        let profileMemId = ml.proMembershipId;
        let isActive = ml.profileIsActive;
        var da = {
            "proMemberId": profileMemId,
            "isActive": isActive
        };
        this.loaderService.display(true);
        this.apiService.Create("profileMembership/activeOrDeactiveProfile", da).subscribe(data => {
            this.loaderService.display(false);
            if (data != undefined) {
                if (data.success) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(data.message);
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    webPageActiveDeactive(ml) {
        if (ml.webpageIsActive == 0) {
            ml.webpageIsActive = 1;
        }
        else {
            ml.webpageIsActive = 0;
        }
        let webPageMemId = ml.webPageId;
        let isActive = ml.webpageIsActive;
        var da = {
            "webPageId": webPageMemId,
            "isActive": isActive
        };
        this.loaderService.display(true);
        this.apiService.Create("myWebPageMembership/activeOrDeaciveWebPageMembership", da).subscribe(data => {
            this.loaderService.display(false);
            if (data != undefined) {
                if (data.success) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(data.message);
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    ngOnDestroy() {
        // Do not forget to unsubscribe the event
        this.dtTrigger.unsubscribe();
    }
};
MemberactivatedeactivateComponent.ctorParameters = () => [
    { type: src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_5__["ApiService"] },
    { type: _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_2__["LoaderService"] }
];
MemberactivatedeactivateComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-memberactivatedeactivate',
        template: __webpack_require__(/*! raw-loader!./memberactivatedeactivate.component.html */ "./node_modules/raw-loader/index.js!./src/app/account/memberactivatedeactivate/memberactivatedeactivate.component.html"),
        styles: [__webpack_require__(/*! ./memberactivatedeactivate.component.scss */ "./src/app/account/memberactivatedeactivate/memberactivatedeactivate.component.scss")]
    })
], MemberactivatedeactivateComponent);



/***/ }),

/***/ "./src/app/account/memberapprovallistnew/memberapprovallistnew.component.scss":
/*!************************************************************************************!*\
  !*** ./src/app/account/memberapprovallistnew/memberapprovallistnew.component.scss ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".row {\n  padding: 1% 0%;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\n.content {\n  margin: 1% 2%;\n}\n\n.viewname {\n  font-size: 140%;\n  font-weight: 700;\n  color: #000064;\n}\n\n.viewprofessional {\n  font-size: 110%;\n  font-weight: 600;\n  color: #d96e00;\n}\n\n.viewotherskill {\n  font-weight: 700;\n  color: #b00092;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 8px 20px;\n  border-radius: 8px;\n  font-size: 20px;\n  font-weight: bold;\n}\n\n.btn2 {\n  border: 1px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 12px;\n  font-weight: bold;\n}\n\n.addremovebtn {\n  padding: 0px 10px;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.btn-primary1 {\n  color: #fff;\n  background-color: #e430ff;\n  border-color: #f100ff;\n  padding: 1% 10%;\n}\n\n.has-search .form-control {\n  padding-left: 2.375rem;\n}\n\n.has-search .form-control-feedback {\n  position: absolute;\n  z-index: 2;\n  display: block;\n  width: 2.375rem;\n  height: 2.375rem;\n  line-height: 2.375rem;\n  text-align: center;\n  pointer-events: none;\n  color: #aaa;\n}\n\n.indinstname {\n  margin: auto;\n  color: #2d3e50;\n  font-size: 128%;\n  font-weight: 700;\n  text-transform: uppercase;\n}\n\n.status-badge {\n  width: 100%;\n  padding: 0% 2%;\n  font-size: 12px;\n}\n\n.pro1pic {\n  height: auto;\n  width: 107%;\n  margin: auto;\n  display: block;\n}\n\n.pro2pic {\n  height: auto;\n  width: 107%;\n  margin: auto;\n  display: block;\n}\n\n.pro3pic {\n  height: auto;\n  width: 119%;\n  margin: auto;\n  display: block;\n}\n\n.statusbtn {\n  padding: 0% 2%;\n  font-size: 12px;\n  margin: 0% 2%;\n  width: 30%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL2FjY291bnQvbWVtYmVyYXBwcm92YWxsaXN0bmV3L21lbWJlcmFwcHJvdmFsbGlzdG5ldy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYWNjb3VudC9tZW1iZXJhcHByb3ZhbGxpc3RuZXcvbWVtYmVyYXBwcm92YWxsaXN0bmV3LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtBQ0NKOztBREVBO0VBQ0kseUJBQUE7RUFDQSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxhQUFBO0FDQ0o7O0FER0E7RUFDSSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxjQUFBO0FDQUo7O0FER0E7RUFDSSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxjQUFBO0FDQUo7O0FER0E7RUFDSSxnQkFBQTtFQUNBLGNBQUE7QUNBSjs7QURHQTtFQUNJLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxxQkFBQTtBQ0FKOztBREdBO0VBQ0ksc0JBQUE7RUFDQSxXQUFBO0VBQ0EsdUJBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0FDQUo7O0FER0E7RUFDSSxzQkFBQTtFQUNBLFdBQUE7RUFDQSx1QkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUNBSjs7QURHQTtFQUNJLGlCQUFBO0FDQUo7O0FER0E7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsT0FBQTtFQUNBLE1BQUE7RUFDQSxVQUFBO0FDQUo7O0FER0E7RUFDSSxXQUFBO0VBQ0EseUJBQUE7RUFDQSxxQkFBQTtFQUNBLGVBQUE7QUNBSjs7QURHQTtFQUNJLHNCQUFBO0FDQUo7O0FER0E7RUFDSSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EscUJBQUE7RUFDQSxrQkFBQTtFQUNBLG9CQUFBO0VBQ0EsV0FBQTtBQ0FKOztBREdBO0VBQ0ksWUFBQTtFQUNBLGNBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSx5QkFBQTtBQ0FKOztBREdBO0VBQ0ksV0FBQTtFQUNBLGNBQUE7RUFDQSxlQUFBO0FDQUo7O0FER0E7RUFDSSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FDQUo7O0FER0E7RUFDSSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FDQUo7O0FER0E7RUFDSSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FDQUo7O0FER0E7RUFDSSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGFBQUE7RUFDQSxVQUFBO0FDQUoiLCJmaWxlIjoic3JjL2FwcC9hY2NvdW50L21lbWJlcmFwcHJvdmFsbGlzdG5ldy9tZW1iZXJhcHByb3ZhbGxpc3RuZXcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm93IHtcbiAgICBwYWRkaW5nOiAxJSAwJTtcbn1cblxuLmNhcmQtaGVhZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICAgIGNvbG9yOiAjZmJlMTE2O1xufVxuXG4uY29udGVudCB7XG4gICAgbWFyZ2luOiAxJSAyJTtcbn1cblxuLy92aWV3IGNzc1xuLnZpZXduYW1lIHtcbiAgICBmb250LXNpemU6IDE0MCU7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBjb2xvcjogIzAwMDA2NDtcbn1cblxuLnZpZXdwcm9mZXNzaW9uYWwge1xuICAgIGZvbnQtc2l6ZTogMTEwJTtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIGNvbG9yOiAjZDk2ZTAwO1xufVxuXG4udmlld290aGVyc2tpbGwge1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgY29sb3I6ICNiMDAwOTI7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmJ0bjEge1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gICAgY29sb3I6IGdyYXk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgcGFkZGluZzogOHB4IDIwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmJ0bjIge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyYXk7XG4gICAgY29sb3I6IGdyYXk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgcGFkZGluZzogNHB4IDhweDtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4uYWRkcmVtb3ZlYnRuIHtcbiAgICBwYWRkaW5nOiAwcHggMTBweDtcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPWZpbGVdIHtcbiAgICBmb250LXNpemU6IDEwMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICBvcGFjaXR5OiAwO1xufVxuXG4uYnRuLXByaW1hcnkxIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTQzMGZmO1xuICAgIGJvcmRlci1jb2xvcjogI2YxMDBmZjtcbiAgICBwYWRkaW5nOiAxJSAxMCU7XG59XG5cbi5oYXMtc2VhcmNoIC5mb3JtLWNvbnRyb2wge1xuICAgIHBhZGRpbmctbGVmdDogMi4zNzVyZW07XG59XG5cbi5oYXMtc2VhcmNoIC5mb3JtLWNvbnRyb2wtZmVlZGJhY2sge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAyO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAyLjM3NXJlbTtcbiAgICBoZWlnaHQ6IDIuMzc1cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAyLjM3NXJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgY29sb3I6ICNhYWE7XG59XG5cbi5pbmRpbnN0bmFtZSB7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIGNvbG9yOiAjMmQzZTUwO1xuICAgIGZvbnQtc2l6ZTogMTI4JTtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi5zdGF0dXMtYmFkZ2Uge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDAlIDIlO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuLnBybzFwaWMge1xuICAgIGhlaWdodDogYXV0bztcbiAgICB3aWR0aDogMTA3JTtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5wcm8ycGljIHtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgd2lkdGg6IDEwNyU7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ucHJvM3BpYyB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIHdpZHRoOiAxMTklO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnN0YXR1c2J0biB7XG4gICAgcGFkZGluZzogMCUgMiU7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIG1hcmdpbjogMCUgMiU7XG4gICAgd2lkdGg6IDMwJTtcbn0iLCIucm93IHtcbiAgcGFkZGluZzogMSUgMCU7XG59XG5cbi5jYXJkLWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gIGNvbG9yOiAjZmJlMTE2O1xufVxuXG4uY29udGVudCB7XG4gIG1hcmdpbjogMSUgMiU7XG59XG5cbi52aWV3bmFtZSB7XG4gIGZvbnQtc2l6ZTogMTQwJTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgY29sb3I6ICMwMDAwNjQ7XG59XG5cbi52aWV3cHJvZmVzc2lvbmFsIHtcbiAgZm9udC1zaXplOiAxMTAlO1xuICBmb250LXdlaWdodDogNjAwO1xuICBjb2xvcjogI2Q5NmUwMDtcbn1cblxuLnZpZXdvdGhlcnNraWxsIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgY29sb3I6ICNiMDAwOTI7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmJ0bjEge1xuICBib3JkZXI6IDJweCBzb2xpZCBncmF5O1xuICBjb2xvcjogZ3JheTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDhweCAyMHB4O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5idG4yIHtcbiAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcbiAgY29sb3I6IGdyYXk7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nOiA0cHggOHB4O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5hZGRyZW1vdmVidG4ge1xuICBwYWRkaW5nOiAwcHggMTBweDtcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPWZpbGVdIHtcbiAgZm9udC1zaXplOiAxMDBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5idG4tcHJpbWFyeTEge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U0MzBmZjtcbiAgYm9yZGVyLWNvbG9yOiAjZjEwMGZmO1xuICBwYWRkaW5nOiAxJSAxMCU7XG59XG5cbi5oYXMtc2VhcmNoIC5mb3JtLWNvbnRyb2wge1xuICBwYWRkaW5nLWxlZnQ6IDIuMzc1cmVtO1xufVxuXG4uaGFzLXNlYXJjaCAuZm9ybS1jb250cm9sLWZlZWRiYWNrIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDIuMzc1cmVtO1xuICBoZWlnaHQ6IDIuMzc1cmVtO1xuICBsaW5lLWhlaWdodDogMi4zNzVyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIGNvbG9yOiAjYWFhO1xufVxuXG4uaW5kaW5zdG5hbWUge1xuICBtYXJnaW46IGF1dG87XG4gIGNvbG9yOiAjMmQzZTUwO1xuICBmb250LXNpemU6IDEyOCU7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi5zdGF0dXMtYmFkZ2Uge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMCUgMiU7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuLnBybzFwaWMge1xuICBoZWlnaHQ6IGF1dG87XG4gIHdpZHRoOiAxMDclO1xuICBtYXJnaW46IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ucHJvMnBpYyB7XG4gIGhlaWdodDogYXV0bztcbiAgd2lkdGg6IDEwNyU7XG4gIG1hcmdpbjogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5wcm8zcGljIHtcbiAgaGVpZ2h0OiBhdXRvO1xuICB3aWR0aDogMTE5JTtcbiAgbWFyZ2luOiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnN0YXR1c2J0biB7XG4gIHBhZGRpbmc6IDAlIDIlO1xuICBmb250LXNpemU6IDEycHg7XG4gIG1hcmdpbjogMCUgMiU7XG4gIHdpZHRoOiAzMCU7XG59Il19 */"

/***/ }),

/***/ "./src/app/account/memberapprovallistnew/memberapprovallistnew.component.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/account/memberapprovallistnew/memberapprovallistnew.component.ts ***!
  \**********************************************************************************/
/*! exports provided: MemberapprovallistnewComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MemberapprovallistnewComponent", function() { return MemberapprovallistnewComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _modals_SearchData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../modals/SearchData */ "./src/app/modals/SearchData.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _modals_adminpage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../modals/adminpage */ "./src/app/modals/adminpage.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _app_modals_profilemember__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../../app/modals/profilemember */ "./src/app/modals/profilemember.ts");
/* harmony import */ var _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../../app/modals/premiumprofile */ "./src/app/modals/premiumprofile.ts");
/* harmony import */ var _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../../../app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var ngx_image_compress__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ngx-image-compress */ "./node_modules/ngx-image-compress/fesm2015/ngx-image-compress.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _app_modals_permission__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./../../../app/modals/permission */ "./src/app/modals/permission.ts");
/* harmony import */ var _modals_validityprofile__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../modals/validityprofile */ "./src/app/modals/validityprofile.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_services_account_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/app/services/account.service */ "./src/app/services/account.service.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var src_app_modals_MasterContentRestriction__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! src/app/modals/MasterContentRestriction */ "./src/app/modals/MasterContentRestriction.ts");




















let MemberapprovallistnewComponent = class MemberapprovallistnewComponent {
    constructor(apiService, fb, router, loaderService, imageCompress, sanitizer, _compiler, acc) {
        this.apiService = apiService;
        this.fb = fb;
        this.router = router;
        this.loaderService = loaderService;
        this.imageCompress = imageCompress;
        this.sanitizer = sanitizer;
        this._compiler = _compiler;
        this.acc = acc;
        this.memberlist = [];
        this.membership = "1";
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.modal = new _modals_SearchData__WEBPACK_IMPORTED_MODULE_3__["SearchData"]();
        //city nation
        this.otherMemberList = [];
        this.selectedItems = [];
        this.otherMembersettings = {};
        //place = 'Individual';
        this.member = 'exp';
        this.memberinst = 'experinst';
        this.selectedrefmem = [];
        this.adminPage = new _modals_adminpage__WEBPACK_IMPORTED_MODULE_6__["AdminPage"]();
        this.profileMember = new _app_modals_profilemember__WEBPACK_IMPORTED_MODULE_8__["ProfileMember"]();
        this.premiumProfile = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["PremiumProfile"]();
        this.article = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
        this.validityProfile = new _modals_validityprofile__WEBPACK_IMPORTED_MODULE_14__["ValidityProfile"]();
        this.basicUpdateButton = true;
        this.profileUpdateButton = true;
        this.webPageUpdateButton = true;
        this.contentRestriction = new src_app_modals_MasterContentRestriction__WEBPACK_IMPORTED_MODULE_18__["MasterContentRestriction"]();
        this.articleImageLimit = 0;
        this.articlePdfLimit = 0;
        this.galaryLimit = 0;
        this.videoLimit = 0;
        this.showEditForm = false;
        this.permission = new _app_modals_permission__WEBPACK_IMPORTED_MODULE_13__["Permission"]();
        this.modules = {};
        this.log = 0;
        this.showLog = false;
        this.memberList = [];
        this.imageChangedEvent = ''; // image crop
        this.croppedImage = ''; // image crop
        this.imageChangedEvent1Profile = '';
        this.imageChangedEvent2Profile = '';
        this.imageChangedEvent3Profile = '';
        this.imageChangedEvent4Profile = '';
        this.imageChangedEvent5Profile = '';
        this.imageChangedEvent6Profile = '';
        this.imageChangedEvent7Profile = '';
        this.imageSendArr = [];
        //gallery method 
        this.urls = [];
        // for my web page hd photo
        this.hdimageChangedEvent = ''; // image crop
        this.croppedhdphoto = '';
        this.croppedGalary = '';
        this.acc.currentUser.subscribe(x => this.currentUser = x);
        this.GenerateForm();
        this.modules = {
            'toolbar': [
                ['bold', 'italic', 'underline', 'strike'],
                [{ 'header': 1 }, { 'header': 2 }],
                [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                // [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript
                // [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
                // [{ 'direction': 'rtl' }],                         // text direction
                [{ 'size': ['small', false, 'large', 'huge'] }],
                // [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                [{ 'color': [] }, { 'background': [] }],
                [{ 'font': [] }],
                [{ 'align': [] }],
            ]
        };
    }
    ngOnInit() {
        this.modal.offset = 0;
        this.modal.limit = 20;
        this.basicUpdateButton = false;
        this.profileUpdateButton = false;
        this.webPageUpdateButton = false;
        //  this.modal = new SearchData();
        this.GetMemberList();
        this.dtOptions = {
            pagingType: 'full_numbers',
            pageLength: this.modal.limit
        };
        this.getProfessionList();
        this.getOnLoadData();
        this.permission = JSON.parse(localStorage.getItem('staffLogin')).object.rolePermissionDto;
        this.memberNewsSettings = {
            text: 'Select',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search',
            badgeShowLimit: 5,
            groupBy: "category"
        };
    }
    GenerateForm() {
        this.basicMemberForm = this.fb.group({
            individualInstitute: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            experienceType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            firstName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(2)])],
            middleName: [''],
            lastName: [''],
            yearOfExp: [''],
            ageGroup: [''],
            gender: [''],
            profession: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            otherskills: [''],
            mobile: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(10), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(10)])],
            mobileVisibility: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            email: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(5), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(60)])],
            emailVisibility: [''],
            address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(256)])],
            addressVisibility: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            profileImage: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            since: [''],
            contactPerson: [''],
            leagueTypeId: [''],
            instructionByMember: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(1200)])],
            MemberName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
        });
        this.statusForm = this.fb.group({
            status: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            remarks: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
        });
        this.profileMemberForm = this.fb.group({
            qualification: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            motherTounge: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            otherLanguages: [''],
            height: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern("^[3-9]+\'[ ]?[0-9]{1,2}[\"]?$")])],
            weight: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern("^[0-9]{1,3}")])],
            dob: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern("^([0]?[1-9]|[1|2][0-9]|[3][0|1])[./-]([0]?[1-9]|[1][0-2])$")])],
            birthPlace: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            nationality: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(600), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(30)])],
            aboutMe: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(25000), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(30)])],
            experience: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(25000), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(30)])],
            otherOpenionRows: this.fb.array([this.initotherOpenionRows()]),
            ProfileimagePath1: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            ProfileimagePath2: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            ProfileimagePath3: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            ProfileimagePath4: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            ProfileimagePath5: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            ProfileimagePath6: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            ProfileimagePath7: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
        });
        this.premiumMemberForm = this.fb.group({
            mainPhotoPath: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            webPrivatePublicFlag: [''],
            socialLinkRows: this.fb.array([]),
            articleRows: this.fb.array([this.initarticleRows()]),
            articlePdfRows: this.fb.array([this.initarticlePdfRows()]),
            newsRows: this.fb.array([this.initnewsRows()]),
            galleryRows: this.fb.array([this.initgalleryRows()]),
            videoRows: this.fb.array([this.initvideoRows()])
        });
        if (this.socialLinksDtoList != null && this.socialLinksDtoList != undefined) {
            for (var i = 0; i < this.socialLinksDtoList.length; i++) {
                this.addNewsocialLinkDetails();
                const control = this.premiumMemberForm.controls['socialLinkRows'];
                control.controls[i].get('socialLinksUrl').setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(6), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(200)]);
                control.controls[i].get('socialLinksUrl').updateValueAndValidity();
            }
        }
    }
    clickOnNextButton() {
        this.modal.offset = this.modal.offset + 20;
        // this.modal.limit = this.modal.limit + 10;
        this.GetMemberList();
    }
    clickOnPreviousButton() {
        this.modal.offset = this.modal.offset - 20;
        //this.modal.limit = this.modal.limit - 10;
        this.GetMemberList();
    }
    GetMemberList() {
        debugger;
        this.loaderService.display(true);
        this.memberlist = [];
        let roleData = JSON.parse(localStorage.getItem('staffLogin')).object.roleDto;
        let userData = JSON.parse(localStorage.getItem('staffLogin')).object.userDto;
        let datedata;
        if (roleData.roleId === 9) {
            datedata = {
                "ageGroup": this.modal.ageGroup,
                "limit": this.modal.limit,
                "createdByRoleId": "",
                "createdByUserId": userData.userId,
                "experienceType": this.modal.experienceType,
                "gender": this.modal.gender,
                "generalSearch": this.modal.generalSearch,
                "individualInstitute": this.modal.individualInstitute,
                "offset": this.modal.offset,
                "refProfessionId": this.modal.refProfessionId,
                "yearOfExp": this.modal.yearOfExp
            };
        }
        else {
            datedata = {
                "ageGroup": this.modal.ageGroup,
                "limit": this.modal.limit,
                "createdByRoleId": roleData.roleId,
                "createdByUserId": 0,
                "experienceType": this.modal.experienceType,
                "gender": this.modal.gender,
                "generalSearch": this.modal.generalSearch,
                "individualInstitute": this.modal.individualInstitute,
                "offset": this.modal.offset,
                "refProfessionId": this.modal.refProfessionId,
                "yearOfExp": this.modal.yearOfExp
            };
        }
        this.apiService.Create("member/approvedMemberdata", datedata).subscribe(data => {
            this.loaderService.display(false);
            if (data != undefined) {
                if (data.success) {
                    if (data.object != undefined) {
                        this.modal.totalRecords = data.object.totalRecords;
                        this.modal.noOfPages = data.object.noOfPages;
                        if (data.object.records != undefined && data.object.records != null) {
                            this.memberlist = data.object.records;
                            this.dtTrigger.next();
                        }
                    }
                }
            }
        }, error => {
            this.loaderService.display(false);
        });
    }
    getMemberListSearchData(e) {
        let roleData = JSON.parse(localStorage.getItem('staffLogin')).object.roleDto;
        let userData = JSON.parse(localStorage.getItem('staffLogin')).object.userDto;
        let name = e.target.value;
        // let data = {};
        // if (roleData.roleId == 9) {
        //   data = {
        //     "generalSearch": name,
        //     "offset": 0,
        //     "limit": 20,
        //     "audtionId": "0",
        //     "createdByRoleId": roleData.roleId,
        //     "createdByUserId": userData.userId
        //   }
        // }
        // else {
        // let data = {
        //   "generalSearch": name,
        //   "offset": 0,
        //   "limit": 20,
        //   "audtionId": "0",
        //   "createdByRoleId": roleData.roleId,
        //   "createdByUserId": userData.userId
        // }
        //  }
        let cuid;
        if (roleData.roleId == 9) {
            cuid = userData.userId;
        }
        else {
            cuid = 0;
        }
        let data = {
            "ageGroup": this.modal.ageGroup,
            "limit": this.modal.limit,
            "createdByRoleId": "",
            "createdByUserId": cuid,
            "experienceType": this.modal.experienceType,
            "gender": this.modal.gender,
            "generalSearch": name,
            "individualInstitute": this.modal.individualInstitute,
            "offset": this.modal.offset,
            "refProfessionId": this.modal.refProfessionId,
            "yearOfExp": this.modal.yearOfExp
        };
        if (name.length >= 2) {
            this.loaderService.display(true);
            this.memberlist = [];
            this.apiService.Create("member/approvedMemberdata", data).subscribe(data => {
                this.loaderService.display(false);
                if (data != undefined) {
                    if (data.success) {
                        if (data.object != undefined) {
                            this.modal.totalRecords = data.object.totalRecords;
                            this.modal.noOfPages = data.object.noOfPages;
                            if (data.object.records != undefined && data.object.records != null) {
                                this.memberlist = data.object.records;
                                this.dtTrigger.next();
                            }
                        }
                    }
                }
            }, error => {
                console.log(error);
                this.loaderService.display(false);
            });
        }
    }
    EditMemberDetails(data) {
        this.GenerateForm();
        this.adminPage = new _modals_adminpage__WEBPACK_IMPORTED_MODULE_6__["AdminPage"]();
        this.profileMember = new _app_modals_profilemember__WEBPACK_IMPORTED_MODULE_8__["ProfileMember"]();
        this.premiumProfile = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["PremiumProfile"]();
        // this.premiumProfile.articleImg=[];
        this.premiumProfile.galImg = [];
        this.premiumProfile.newsImg = [];
        // this.selectedproffession = [];
        // this.selectedotherSkill = [];
        //  this.selectedstatename = [];
        //  this.selectedcity= [];
        // this.selectedmotherTounge = [];
        // this.selectedotherLanguages = [];
        // this.selectednation  = [];
        this.premiumProfile.articleImg = [];
        this.premiumProfile.articlePdf = [];
        // this.premiumProfile.articleImg.push(this.article);
        this.selectedstatename = [];
        this.selectedcity = [];
        this.selectedproffession = [];
        this.selectedotherSkill = [];
        this.selectedotherLanguages = [];
        this.selectednation = [];
        this.otherMemberList = [];
        this.selectedItems = [];
        this.selectedrefmem = [];
        //console.log(JSON.stringify(data));
        this._compiler.clearCache();
        this.croppedImage = "";
        //  this.basicMemberForm.controls.profileImage.setValue("");
        this.imageChangedEvent = "";
        this.croppedhdphoto = "";
        this.hdimageChangedEvent = "";
        this.url1 = "";
        this.url2 = "";
        this.url3 = "";
        this.url4 = "";
        this.url5 = "";
        this.url6 = "";
        this.url7 = "";
        this.url11 = "";
        this.url22 = "";
        this.url33 = "";
        this.url44 = "";
        this.url55 = "";
        this.url66 = "";
        this.url77 = "";
        let memberId = data.memberId;
        var da = {
            "memberId": memberId
        };
        this.loaderService.display(true);
        this.apiService.Create("memberProfileWebDetails/detailsURIByMemberId", da).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_17__["delay"])(500)).toPromise().then(data => {
            this.loaderService.display(false);
            this.adminPage = new _modals_adminpage__WEBPACK_IMPORTED_MODULE_6__["AdminPage"]();
            if (data != undefined) {
                if (data.success) {
                    this.showEditForm = true;
                    if (data.object != undefined) {
                        debugger;
                        this.validityProfile.memberValidUptoDate = data.object.memberListDto.memberValidUptoDate.substr(0, 10);
                        this.validityProfile.memberValidUptoDays = data.object.memberListDto.memberValidUptoDays;
                        this.validityProfile.memberValidUptoStatus = data.object.memberListDto.memberValidUptoStatus;
                        if (data.object.memberListDto != undefined) {
                            let memberobject;
                            if (data.object.changeMemberListDto != null) {
                                memberobject = data.object.changeMemberListDto;
                                this.basicUpdateButton = true;
                            }
                            else {
                                memberobject = data.object.memberListDto;
                                this.basicUpdateButton = false;
                            }
                            this.adminPage = memberobject;
                            this.adminPage.membershipId = memberobject.memberId;
                            this.adminPage.refMembershipTypeId = memberobject.refMembershipTypeId.toString();
                            this.adminPage.individualInstitute = memberobject.individualORInstitute.toString();
                            this.adminPage.experienceType = memberobject.experienceType.toString();
                            this.adminPage.mobile = memberobject.mobileNumber.toString();
                            this.adminPage.mobileVisibility = memberobject.mobileVisibility.toString();
                            this.adminPage.emailVisibility = memberobject.emailVisibility.toString();
                            this.adminPage.addressVisibility = memberobject.addressVisibility.toString();
                            if (data.object.memberListDto != undefined && data.object.memberListDto != null) {
                                let referedMem = data.object.memberListDto;
                                this.selectedrefmem = [
                                    { "id": referedMem.referedMemerId, "itemName": referedMem.referedMemername, "profileImage": referedMem.referedMemerImage }
                                ];
                            }
                            this.SetDetailsByindividualInstitute();
                            this.SetexperienceTypeChange();
                            let stateid = memberobject.refStateId;
                            let cityid = memberobject.refCityId;
                            this.selectedstatename = [];
                            this.selectedcity = [];
                            this.adminPage.leagueTypeId = memberobject.leagueTypeId;
                            if (stateid != null && stateid != undefined) {
                                let currentS = this.statenameList.filter((lang) => lang.id == stateid)[0];
                                if (currentS != undefined && currentS != null) {
                                    this.selectedstatename.push({ "id": currentS.id, "itemName": currentS.itemName });
                                }
                            }
                            if (cityid != null && cityid != undefined && stateid != null && stateid != undefined) {
                                this.SelectCityByOnselectedState(stateid, cityid);
                            }
                            this.proffessionList = this.originalproffessionListData.filter((type) => type.itemProfession == this.adminPage.individualInstitute);
                            if (memberobject.refProfessionId != null && memberobject.refProfessionId != undefined) {
                                let refProfessionId = memberobject.refProfessionId;
                                if (refProfessionId != undefined && refProfessionId != null && refProfessionId != "" && refProfessionId > 0) {
                                    let current = this.proffessionList.filter((lang) => lang.id == refProfessionId)[0];
                                    if (current != undefined && current != null) {
                                        this.selectedproffession.push({ "id": current.id, "itemName": current.itemName, "category": current.category });
                                    }
                                }
                            }
                            else {
                                // this.selectedproffession =[{ "id": "", "itemName": "", "category": "" }];
                            }
                            this.otherSkillList = this.originalproffessionListData.filter((type) => type.itemProfession == this.adminPage.individualInstitute);
                            if (memberobject.otherSkillListDtoList != undefined && memberobject.otherSkillListDtoList != null) {
                                if (memberobject.otherSkillListDtoList.length > 0) {
                                    let otherSkill = [];
                                    otherSkill = memberobject.otherSkillListDtoList;
                                    otherSkill.forEach(curent => {
                                        if (curent.refProfessionId > 0) {
                                            if (this.otherSkillList.length > 0) {
                                                let current = this.otherSkillList.filter((lang) => lang.id == curent.refProfessionId)[0];
                                                if (current != undefined && current != null) {
                                                    this.selectedotherSkill.push({ "id": current.id, "itemName": current.itemName, "category": current.category });
                                                }
                                            }
                                        }
                                    });
                                }
                            }
                            else {
                                //this.selectedotherSkill = [{ "id": "", "itemName": "", "category": "" }];
                            }
                            if (memberobject.profileImage != "" && (memberobject.profileImage != undefined)) {
                                let imageUrl = memberobject.profileImage;
                                this.croppedImage = imageUrl;
                                this.basicMemberForm.controls.profileImage.setValue(imageUrl);
                            }
                        }
                        // Disabled Form element
                        if (!this.validityProfile.memberValidUptoStatus) {
                            this.disabledMemberForm();
                        }
                        else {
                            this.enableMemberForm();
                        }
                        let contRestin = data.object.memberListDto.leagueTypeId;
                        if (contRestin != 1) {
                            //content restriction section
                            this.GetMemberContentRestrictionDetails();
                        }
                        else {
                            this.contentRestriction.articleImageLimit = 500;
                            this.contentRestriction.articlePdfLimit = 500;
                            this.contentRestriction.galaryLimit = 500;
                            this.contentRestriction.videoLimit = 500;
                        }
                        //Profile Details
                        if ((data.object.memberProfileViewDto != undefined && data.object.memberProfileViewDto != null) || data.object.changeMemberProfileViewDto != null) {
                            this.profileMember.refMemberId = data.object.memberListDto.memberId;
                            //Validity code here
                            this.validityProfile.profileValidUptoDate = data.object.memberProfileViewDto.profileValidUptoDate.substr(0, 10);
                            this.validityProfile.profileValidUptoDays = data.object.memberProfileViewDto.profileValidUptoDays;
                            this.validityProfile.profileValidUptoStatus = data.object.memberProfileViewDto.profileValidUptoStatus;
                            let memberProfileobject;
                            if (data.object.changeMemberProfileViewDto != null) {
                                memberProfileobject = data.object.changeMemberProfileViewDto;
                                this.profileUpdateButton = true;
                            }
                            else {
                                memberProfileobject = data.object.memberProfileViewDto;
                                this.profileUpdateButton = false;
                            }
                            this.profileMember = memberProfileobject;
                            this.profileMember.membershipId = data.object.memberListDto.memberId;
                            let motherTounge = memberProfileobject.motherTounge;
                            if (motherTounge != null && motherTounge != undefined) {
                                this.selectedmotherTounge = [];
                                let currentM = this.motherToungeList.filter((lang) => lang.id == motherTounge)[0];
                                if (currentM != undefined && currentM != null) {
                                    this.selectedmotherTounge.push({ "id": currentM.id, "itemName": currentM.itemName });
                                }
                            }
                            let otherLanguageLists = memberProfileobject.otherLanguageLists;
                            this.selectedotherLanguages = [];
                            if (otherLanguageLists != undefined && otherLanguageLists != null) {
                                if (otherLanguageLists.length > 0) {
                                    otherLanguageLists.forEach(curent => {
                                        if (curent.refLanguageId > 0) {
                                            let current = this.otherLanguagesList.filter((lang) => lang.id == curent.refLanguageId)[0];
                                            if (current != undefined && current != null) {
                                                this.selectedotherLanguages.push({ "id": current.id, "itemName": current.itemName });
                                            }
                                        }
                                    });
                                }
                            }
                            let refNationalityId = memberProfileobject.refNationalityId;
                            if (refNationalityId != null && refNationalityId != undefined) {
                                this.selectednation = [];
                                let currentS = this.nationList.filter((lang) => lang.id == refNationalityId)[0];
                                if (currentS != undefined && currentS != null) {
                                    this.selectednation.push({ "id": currentS.id, "itemName": currentS.itemName });
                                }
                            }
                            this.imageSendArr = [];
                            if (memberProfileobject.myProfileMultiplePhotoDtoList != undefined && memberProfileobject.myProfileMultiplePhotoDtoList != null) {
                                if (memberProfileobject.myProfileMultiplePhotoDtoList.length > 0) {
                                    let profilePhotos = memberProfileobject.myProfileMultiplePhotoDtoList;
                                    profilePhotos.forEach(pro => {
                                        if (pro.profileMembershipPhotoId > 0) {
                                            if (pro.seqNum != undefined && pro.seqNum != null && pro.seqNum != "" && pro.imagePath != undefined && pro.imagePath != null && pro.imagePath != "") {
                                                let imageUrl = pro.imagePath;
                                                let seqno = pro.seqNum;
                                                //let imagebase64 = pro.imagePathBase64
                                                if (seqno == 1) {
                                                    this.profileMember.ProfileimagePath1 = imageUrl;
                                                    this.profileMemberForm.controls.ProfileimagePath1.setValue(imageUrl);
                                                    this.url1 = imageUrl;
                                                    this.url11 = imageUrl;
                                                }
                                                else if (seqno == 2) {
                                                    this.profileMember.ProfileimagePath2 = imageUrl;
                                                    this.profileMemberForm.controls.ProfileimagePath2.setValue(imageUrl);
                                                    this.url2 = imageUrl;
                                                    this.url22 = imageUrl;
                                                }
                                                else if (seqno == 3) {
                                                    this.profileMember.ProfileimagePath3 = imageUrl;
                                                    this.profileMemberForm.controls.ProfileimagePath3.setValue(imageUrl);
                                                    this.url3 = imageUrl;
                                                    this.url33 = imageUrl;
                                                }
                                                else if (seqno == 4) {
                                                    this.profileMember.ProfileimagePath4 = imageUrl;
                                                    this.profileMemberForm.controls.ProfileimagePath4.setValue(imageUrl);
                                                    this.url4 = imageUrl;
                                                    this.url44 = imageUrl;
                                                }
                                                else if (seqno == 5) {
                                                    this.profileMember.ProfileimagePath5 = imageUrl;
                                                    this.profileMemberForm.controls.ProfileimagePath5.setValue(imageUrl);
                                                    this.url5 = imageUrl;
                                                    this.url55 = imageUrl;
                                                }
                                                else if (seqno == 6) {
                                                    this.profileMember.ProfileimagePath6 = imageUrl;
                                                    this.profileMemberForm.controls.ProfileimagePath6.setValue(imageUrl);
                                                    this.url6 = imageUrl;
                                                    this.url66 = imageUrl;
                                                }
                                                else if (seqno == 7) {
                                                    this.profileMember.ProfileimagePath7 = imageUrl;
                                                    this.profileMemberForm.controls.ProfileimagePath7.setValue(imageUrl);
                                                    this.url7 = imageUrl;
                                                    this.url77 = imageUrl;
                                                }
                                            }
                                        }
                                    });
                                }
                            }
                            this.otherMemberList = [];
                            this.selectedItems = [];
                            const control = this.profileMemberForm.controls['otherOpenionRows'];
                            while (control.controls.length > 0) {
                                this.deleteotherOpenionRow(0);
                            }
                            if (memberProfileobject.otherOpinionListDtoList != undefined && memberProfileobject.otherOpinionListDtoList != null) {
                                if (memberProfileobject.otherOpinionListDtoList.length > 0) {
                                    let otherOpinions = memberProfileobject.otherOpinionListDtoList;
                                    for (var i = 0; i < otherOpinions.length; i++) {
                                        this.addNewotherOpenionRow();
                                        const control = this.profileMemberForm.controls['otherOpenionRows'];
                                        control.controls[i].get('opinionId').setValue(otherOpinions[i].opinionId);
                                        control.controls[i].get('description').setValue(otherOpinions[i].description);
                                        control.controls[i].get('otherMemberImage').setValue(otherOpinions[i].otherMemberImage);
                                        // this.setOtherOpenionMerberByName(otherOpinions[i].firstName,otherOpinions[i].meberId,i);
                                        control.controls[i].get('otherMemberName').setValue(otherOpinions[i].meberId);
                                        this.otherMemberList.push({ "id": otherOpinions[i].meberId, "itemName": otherOpinions[i].firstName, "profileImage": otherOpinions[i].otherMemberImage });
                                        //  let curr = this.otherMemberList.filter(aa => aa.id == parseInt(otherOpinions[i].meberId))[0];
                                        //this.selectedItems.push(curr);
                                    }
                                    for (var i = 0; i < otherOpinions.length; i++) {
                                        let values = [];
                                        let curr = this.otherMemberList.filter(aa => aa.id == parseInt(otherOpinions[i].meberId))[0];
                                        //  values.push(curr);
                                        this.selectedItems.push(Array.of(curr));
                                    }
                                }
                                else {
                                    this.addNewotherOpenionRow();
                                }
                            }
                            else {
                                this.addNewotherOpenionRow();
                            }
                        }
                        else {
                            //this.validityProfile.profileValidUptoStatus = true;
                            this.validityProfile.profileValidUptoDate = data.object.registrationValidityDto.profileValidUptoDate.substr(0, 10);
                            this.validityProfile.profileValidUptoDays = data.object.registrationValidityDto.profileValidUptoDays;
                            this.validityProfile.profileValidUptoStatus = data.object.registrationValidityDto.profileValidUptoStatus;
                        }
                        // Disabled Profile form
                        if (!this.validityProfile.profileValidUptoStatus) {
                            this.disabledProfileForm();
                        }
                        else {
                            this.enableProfileForm();
                        }
                        //My Web Page details
                        this.premiumProfile.articleImg = [];
                        const controla = this.premiumMemberForm.controls['articleRows'];
                        while (controla.controls.length > 0) {
                            this.deletearticleRow(0);
                        }
                        this.premiumProfile.articlePdf = [];
                        const controlap = this.premiumMemberForm.controls['articlePdfRows'];
                        while (controlap.controls.length > 0) {
                            this.deletearticlePdfRow(0);
                        }
                        this.premiumProfile.newsImg = [];
                        const control = this.premiumMemberForm.controls['newsRows'];
                        while (control.controls.length > 0) {
                            this.deletenewsRow(0);
                        }
                        this.premiumProfile.galImg = [];
                        const controlg = this.premiumMemberForm.controls['galleryRows'];
                        while (controlg.controls.length > 0) {
                            this.deletegalleryRow(0);
                        }
                        const controlv = this.premiumMemberForm.controls['videoRows'];
                        while (controlv.controls.length > 0) {
                            this.deletevideoRow(0);
                        }
                        if ((data.object.memberWebViewDto != undefined && data.object.memberWebViewDto != null) || data.object.changeMemberWebViewDto != null) {
                            this.premiumProfile.refProfileMembershipId = data.object.memberListDto.memberId;
                            // Validity code here
                            this.validityProfile.myWebPageValidUptoDate = data.object.memberWebViewDto.myWebPageValidUptoDate.substr(0, 10);
                            this.validityProfile.myWebPageValidUptoDays = data.object.memberWebViewDto.myWebPageValidUptoDays;
                            this.validityProfile.myWebPageValidUptoStstus = data.object.memberWebViewDto.myWebPageValidUptoStatus;
                            let memberWebViewobject;
                            if (data.object.changeMemberWebViewDto != null) {
                                memberWebViewobject = data.object.changeMemberWebViewDto;
                                this.webPageUpdateButton = true;
                            }
                            else {
                                memberWebViewobject = data.object.memberWebViewDto;
                                this.webPageUpdateButton = false;
                            }
                            // this.premiumProfile.refProfileMembershipId = data.object.memberListDto.memberId;
                            // this.croppedhdphoto = memberWebViewobject.mainPhotoPath;
                            this.premiumProfile.webPrivatePublicFlag = memberWebViewobject.webPrivatePublicFlag;
                            if (memberWebViewobject.mainPhotoPath != "" && memberWebViewobject.mainPhotoPath != undefined && memberWebViewobject.mainPhotoPath != null) {
                                let MainimageUrl = memberWebViewobject.mainPhotoPath;
                                this.croppedhdphoto = MainimageUrl;
                                this.premiumMemberForm.controls.mainPhotoPath.setValue(MainimageUrl);
                            }
                            debugger;
                            if (memberWebViewobject.webPageSocialLinkListDtoList != undefined && memberWebViewobject.webPageSocialLinkListDtoList != null) {
                                if (memberWebViewobject.webPageSocialLinkListDtoList.length > 0) {
                                    let sociallinks = memberWebViewobject.webPageSocialLinkListDtoList;
                                    for (var i = 0; i < this.socialLinksDtoList.length; i++) {
                                        for (var j = 0; j < sociallinks.length; j++) {
                                            if (this.socialLinksDtoList[i].socialLinksId == sociallinks[j].socialLinksId) {
                                                this.socialLinksDtoList[i].socialLinksUrl = sociallinks[j].socialLinkUrl;
                                                const control = this.premiumMemberForm.controls['socialLinkRows'];
                                                control.controls[i].get('socialLinksUrl').setValue(sociallinks[j].socialLinkUrl);
                                            }
                                        }
                                    }
                                }
                            }
                            if (memberWebViewobject.webPageArticlesListDtoList != undefined && memberWebViewobject.webPageArticlesListDtoList != null) {
                                if (memberWebViewobject.webPageArticlesListDtoList.length > 0) {
                                    let webPageArticles = memberWebViewobject.webPageArticlesListDtoList;
                                    var j = 0;
                                    for (var i = 0; i < webPageArticles.length; i++) {
                                        if (i <= this.contentRestriction.articleImageLimit) {
                                            var filename = webPageArticles[i].articalPath;
                                            var nameArray = filename.split('.');
                                            var exten = nameArray[nameArray.length - 1];
                                            if (exten.localeCompare("pdf") != 0) {
                                                this.addarticleRow();
                                                let selectedarticle = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
                                                const control = this.premiumMemberForm.controls['articleRows'];
                                                // control.controls[i].get('description').setValue(webPageGallary[i].description);
                                                //  control.controls[i].get('articlefakePath').setValue(webPageArticles[i].articalPath);
                                                control.controls[j].get('articleTitle').setValue(webPageArticles[i].articalTitle);
                                                let articlePath = webPageArticles[i].articalPath;
                                                let articalPathFileType = webPageArticles[i].articalPathFileType;
                                                if (articalPathFileType == undefined) {
                                                    articalPathFileType = "";
                                                }
                                                if (articlePath != "" && articlePath != undefined && articlePath != null) {
                                                    //let result = webPageArticles[i].articalPathBase64;
                                                    control.controls[j].get('articlePath').setValue(articlePath);
                                                    selectedarticle.articalPath = articlePath;
                                                    selectedarticle.articalPathFileType = articalPathFileType;
                                                    selectedarticle.articalPathPDF = articlePath;
                                                }
                                                else {
                                                    control.controls[j].get('articlePath').setValue("");
                                                    selectedarticle.articalPath = "";
                                                    selectedarticle.articalPathFileType = "";
                                                    selectedarticle.articalPathPDF = "";
                                                }
                                                this.premiumProfile.articleImg[j] = selectedarticle;
                                                j++;
                                            }
                                        }
                                    }
                                    if (j == 0) {
                                        this.addarticleRow();
                                    }
                                }
                                else {
                                    this.addarticleRow();
                                }
                            }
                            else {
                                this.addarticleRow();
                            }
                            if (memberWebViewobject.webPageArticlesListDtoList != undefined && memberWebViewobject.webPageArticlesListDtoList != null) {
                                if (memberWebViewobject.webPageArticlesListDtoList.length > 0) {
                                    let webPageArticles = memberWebViewobject.webPageArticlesListDtoList;
                                    var j = 0;
                                    for (var i = 0; i < webPageArticles.length; i++) {
                                        if (i <= this.contentRestriction.articlePdfLimit) {
                                            var filename = webPageArticles[i].articalPath;
                                            var nameArray = filename.split('.');
                                            var exten = nameArray[nameArray.length - 1];
                                            if (exten.localeCompare("pdf") != -1) {
                                                this.addarticlePdfRow();
                                                let selectedarticle = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
                                                const control = this.premiumMemberForm.controls['articlePdfRows'];
                                                // control.controls[i].get('description').setValue(webPageGallary[i].description);
                                                //  control.controls[i].get('articlefakePath').setValue(webPageArticles[i].articalPath);
                                                control.controls[j].get('articlePdfTitle').setValue(webPageArticles[i].articalTitle);
                                                let articlePdfPath = webPageArticles[i].articalPath;
                                                let articalPdfPathFileType = webPageArticles[i].articalPathFileType;
                                                if (articalPdfPathFileType == undefined) {
                                                    articalPdfPathFileType = "";
                                                }
                                                if (articlePdfPath != "" && articlePdfPath != undefined && articlePdfPath != null) {
                                                    //let result = webPageArticles[i].articalPathBase64;
                                                    control.controls[j].get('articlePdfPath').setValue(articlePdfPath);
                                                    selectedarticle.articalPath = articlePdfPath;
                                                    selectedarticle.articalPathFileType = articalPdfPathFileType;
                                                    selectedarticle.articalPathPDF = articlePdfPath;
                                                }
                                                else {
                                                    control.controls[j].get('articlePdfPath').setValue("");
                                                    selectedarticle.articalPath = "";
                                                    selectedarticle.articalPathFileType = "";
                                                    selectedarticle.articalPathPDF = "";
                                                }
                                                this.premiumProfile.articlePdf[j] = selectedarticle;
                                                j++;
                                            }
                                        }
                                    }
                                    if (j == 0) {
                                        this.addarticlePdfRow();
                                    }
                                }
                                else {
                                    this.addarticlePdfRow();
                                }
                            }
                            else {
                                this.addarticlePdfRow();
                            }
                            if (memberWebViewobject.webPageNewsListDtoList != undefined && memberWebViewobject.webPageNewsListDtoList != null) {
                                if (memberWebViewobject.webPageNewsListDtoList.length > 0) {
                                    let webPageNews = memberWebViewobject.webPageNewsListDtoList;
                                    for (var i = 0; i < webPageNews.length; i++) {
                                        if (i <= this.contentRestriction.newsLimit) {
                                            this.addnewsRow();
                                            const control = this.premiumMemberForm.controls['newsRows'];
                                            control.controls[i].get('title').setValue(webPageNews[i].title);
                                            control.controls[i].get('description').setValue(webPageNews[i].description);
                                            let newsImagePath = webPageNews[i].newsImagePath;
                                            if (newsImagePath != "" && newsImagePath != undefined && newsImagePath != null) {
                                                //let result = webPageNews[i].newsImagePathBase64;
                                                control.controls[i].get('newsImagePath').setValue(newsImagePath);
                                                this.premiumProfile.newsImg[i] = newsImagePath;
                                            }
                                            else {
                                                control.controls[i].get('newsImagePath').setValue("");
                                                this.premiumProfile.newsImg[i] = "";
                                            }
                                        }
                                    }
                                }
                                else {
                                    this.addnewsRow();
                                }
                            }
                            else {
                                this.addnewsRow();
                            }
                            if (memberWebViewobject.webPageGallaryListDtoList != undefined && memberWebViewobject.webPageGallaryListDtoList != null) {
                                if (memberWebViewobject.webPageGallaryListDtoList.length > 0) {
                                    let webPageGallary = memberWebViewobject.webPageGallaryListDtoList;
                                    for (var i = 0; i < webPageGallary.length; i++) {
                                        if (i <= this.contentRestriction.galaryLimit) {
                                            this.addgalleryRow();
                                            const control = this.premiumMemberForm.controls['galleryRows'];
                                            let galaryPath = webPageGallary[i].galaryPath;
                                            if (galaryPath != "" && galaryPath != undefined && galaryPath != null) {
                                                //let result = webPageGallary[i].galaryPathBase64;
                                                control.controls[i].get('galaryPath').setValue(galaryPath);
                                                this.premiumProfile.galImg[i] = galaryPath;
                                            }
                                            else {
                                                control.controls[i].get('galaryPath').setValue("");
                                                this.premiumProfile.galImg[i] = "";
                                            }
                                        }
                                    }
                                }
                                else {
                                    this.addgalleryRow();
                                }
                            }
                            else {
                                this.addgalleryRow();
                            }
                            if (memberWebViewobject.webPageVideosListDtoList != undefined && memberWebViewobject.webPageVideosListDtoList != null) {
                                if (memberWebViewobject.webPageVideosListDtoList.length > 0) {
                                    let webPageVideos = memberWebViewobject.webPageVideosListDtoList;
                                    for (var i = 0; i < webPageVideos.length; i++) {
                                        if (i <= this.contentRestriction.galaryLimit) {
                                            this.addvideoRow();
                                            const control = this.premiumMemberForm.controls['videoRows'];
                                            control.controls[i].get('videoName').setValue(webPageVideos[i].videoName);
                                            control.controls[i].get('videoURL').setValue(webPageVideos[i].videoURL);
                                        }
                                    }
                                }
                                else {
                                    this.addvideoRow();
                                }
                            }
                            else {
                                this.addvideoRow();
                            }
                        }
                        else {
                            this.validityProfile.myWebPageValidUptoDate = data.object.registrationValidityDto.myWebPageValidUptoDate.substr(0, 10);
                            this.validityProfile.myWebPageValidUptoDays = data.object.registrationValidityDto.myWebPageValidUptoDays;
                            this.validityProfile.myWebPageValidUptoStstus = data.object.registrationValidityDto.myWebPageValidUptoStatus;
                            this.addarticleRow();
                            this.addnewsRow();
                            this.addgalleryRow();
                            this.addvideoRow();
                            this.premiumProfile.webPrivatePublicFlag = "1";
                        }
                        if (!this.validityProfile.myWebPageValidUptoStstus) {
                            this.disabledWebPageForm();
                        }
                        else {
                            this.enableWebPageForm();
                        }
                    }
                    // else {
                    //   this.validityProfile.myWebPageValidUptoDate = data.object.registrationValidityDto.myWebPageValidUptoDate.substr(0, 10);
                    //   this.validityProfile.myWebPageValidUptoDays = data.object.registrationValidityDto.myWebPageValidUptoDays;
                    //   this.validityProfile.myWebPageValidUptoStstus = data.object.registrationValidityDto.myWebPageValidUptoStatus;
                    //   this.addarticleRow();
                    //   this.addarticlePdfRow();
                    //   this.addgalleryRow();
                    //   this.addvideoRow();
                    // }
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    GetMemberContentRestrictionDetails() {
        var data = { "membershipId": this.adminPage.membershipId };
        this.apiService.Create("masterContentRestrictConfig/getByMemberId", data).subscribe(data => {
            if (data.success) {
                if (data.object != undefined && data.object != null) {
                    if (data.object != undefined) {
                        debugger;
                        this.contentRestriction = data.object;
                        debugger;
                    }
                }
            }
            else {
                this.GetContentRestrictionDetails();
            }
        });
    }
    GetContentRestrictionDetails() {
        var data = { "configId": "1" };
        this.apiService.Create("masterConfiguration/getByConfigId", data).subscribe(data => {
            if (data.success) {
                if (data.object != undefined && data.object != null) {
                    if (data.object != undefined) {
                        this.contentRestriction = data.object;
                        debugger;
                    }
                }
            }
        });
    }
    SelectCityByOnselectedState(stateid, cityid) {
        this.cityList = [];
        this.selectedcity = [];
        this.basicMemberForm.controls.city.setValue("");
        if (stateid != undefined && stateid != 0) {
            let refStateId = stateid;
            var Cdata = { "refStateId": refStateId };
            this.apiService.Create("city/getAllCityByStateId", Cdata).subscribe(data => {
                if (data.success) {
                    if (data.object != undefined && data.object != null) {
                        if (data.object != undefined) {
                            let cityDtoList = data.object;
                            let cityList = [];
                            cityDtoList.forEach(city => {
                                if (city.cityId > 0) {
                                    cityList.push({ "id": city.cityId, "itemName": city.cityName });
                                    //this.adminPage.refCityId = city.cityId;
                                }
                            });
                            this.cityList = cityList;
                            let currentS = this.cityList.filter((lang) => lang.id == cityid)[0];
                            if (currentS != undefined && currentS != null) {
                                this.selectedcity.push({ "id": currentS.id, "itemName": currentS.itemName });
                                this.basicMemberForm.controls.city.setValue(this.selectedcity);
                            }
                        }
                    }
                }
            });
        }
    }
    setStatusData() {
        this.statusForm.get('status').setValidators(null);
        this.statusForm.get('status').updateValueAndValidity();
        this.statusForm.get('remarks').setValidators(null);
        this.statusForm.get('remarks').updateValueAndValidity();
    }
    SetDetailsByindividualInstitute() {
        if (this.adminPage.individualInstitute == 'Institute') {
            this.adminPage.individualInstituteName = "Institute Name";
            this.adminPage.ProfessionService = 'Service';
            this.adminPage.OtherSkillsOtherServices = 'Other Services';
            this.profileMember.motherTounge = 1;
            this.basicMemberForm.get('middleName').setValidators(null);
            this.basicMemberForm.get('middleName').updateValueAndValidity();
            this.basicMemberForm.get('lastName').setValidators(null);
            this.basicMemberForm.get('lastName').updateValueAndValidity();
            this.basicMemberForm.get('ageGroup').setValidators(null);
            this.basicMemberForm.get('ageGroup').updateValueAndValidity();
            this.basicMemberForm.get('gender').setValidators(null);
            this.basicMemberForm.get('gender').updateValueAndValidity();
            this.basicMemberForm.get('since').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern('[0-9]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(4), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(4)]));
            this.basicMemberForm.get('since').updateValueAndValidity();
            this.basicMemberForm.get('contactPerson').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(3)]));
            this.basicMemberForm.get('contactPerson').updateValueAndValidity();
            //Profile
            this.profileMemberForm.get('qualification').setValidators(null);
            this.profileMemberForm.get('qualification').updateValueAndValidity();
            this.profileMemberForm.get('motherTounge').setValidators(null);
            this.profileMemberForm.get('motherTounge').updateValueAndValidity();
            this.profileMemberForm.get('otherLanguages').setValidators(null);
            this.profileMemberForm.get('otherLanguages').updateValueAndValidity();
            this.profileMemberForm.get('height').setValidators(null);
            this.profileMemberForm.get('height').updateValueAndValidity();
            this.profileMemberForm.get('weight').setValidators(null);
            this.profileMemberForm.get('weight').updateValueAndValidity();
            this.profileMemberForm.get('dob').setValidators(null);
            this.profileMemberForm.get('dob').updateValueAndValidity();
            this.profileMemberForm.get('birthPlace').setValidators(null);
            this.profileMemberForm.get('birthPlace').updateValueAndValidity();
        }
        else if (this.adminPage.individualInstitute == 'Individual') {
            this.adminPage.individualInstituteName = "First Name";
            this.adminPage.ProfessionService = 'Profession';
            this.adminPage.OtherSkillsOtherServices = 'Other Skills';
            this.basicMemberForm.get('middleName').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(30)]));
            this.basicMemberForm.get('middleName').updateValueAndValidity();
            this.basicMemberForm.get('lastName').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(30)]));
            this.basicMemberForm.get('lastName').updateValueAndValidity();
            this.basicMemberForm.get('ageGroup').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]));
            this.basicMemberForm.get('ageGroup').updateValueAndValidity();
            this.basicMemberForm.get('gender').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]));
            this.basicMemberForm.get('gender').updateValueAndValidity();
            this.basicMemberForm.get('since').setValidators(null);
            this.basicMemberForm.get('since').updateValueAndValidity();
            this.basicMemberForm.get('contactPerson').setValidators(null);
            this.basicMemberForm.get('contactPerson').updateValueAndValidity();
            //Profile
            this.profileMemberForm.get('qualification').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(2)]));
            this.profileMemberForm.get('qualification').updateValueAndValidity();
            this.profileMemberForm.get('motherTounge').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]));
            this.profileMemberForm.get('motherTounge').updateValueAndValidity();
            //this.profileMemberForm.get('otherLanguages').setValidators(Validators.compose([Validators.required]));
            this.profileMemberForm.get('otherLanguages').updateValueAndValidity();
            // this.profileMemberForm.get('height').setValidators(Validators.compose([Validators.required]));
            // this.profileMemberForm.get('height').updateValueAndValidity();
            // this.profileMemberForm.get('weight').setValidators(Validators.compose([Validators.required]));
            // this.profileMemberForm.get('weight').updateValueAndValidity();
            this.profileMemberForm.get('dob').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern('^([0]?[1-9]|[1|2][0-9]|[3][0|1])[./-]([0]?[1-9]|[1][0-2])$')]));
            this.profileMemberForm.get('dob').updateValueAndValidity();
            this.profileMemberForm.get('birthPlace').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(3)]));
            this.profileMemberForm.get('birthPlace').updateValueAndValidity();
        }
        this.proffessionSettings = {
            text: 'Select ' + this.adminPage.ProfessionService,
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search ' + this.adminPage.ProfessionService,
            badgeShowLimit: 5,
            groupBy: "category"
        };
        this.otherSkillSettings = {
            singleSelection: false,
            text: 'Select ' + this.adminPage.OtherSkillsOtherServices,
            enableCheckAll: false,
            enableFilterSelectAll: false,
            searchPlaceholderText: 'Search ' + this.adminPage.OtherSkillsOtherServices,
            enableSearchFilter: true,
            badgeShowLimit: 8,
            groupBy: "category",
            limitSelection: 8
        };
    }
    ActiveDeactiveMemberDetails(ml) {
        if (ml.isActive == 0) {
            ml.isActive = 1;
        }
        else {
            ml.isActive = 0;
        }
        let memberId = ml.memberId;
        let isActive = ml.isActive;
        var da = {
            "membershipId": memberId,
            "isActive": isActive
        };
        this.loaderService.display(true);
        this.apiService.Create("member/activeOrDeactiveMember", da).subscribe(data => {
            this.loaderService.display(false);
            if (data != undefined) {
                if (data.success) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
                    let object = data.object;
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    ngOnDestroy() {
        // Do not forget to unsubscribe the event
        this.dtTrigger.unsubscribe();
    }
    onShowLog() {
        this.showLog = true;
        return this.log = this.log + 1;
    }
    // init otherOpenion
    initotherOpenionRows() {
        return this.fb.group({
            opinionId: [''],
            otherMemberName: [''],
            otherMemberImage: [''],
            description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(1200), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(30)])]
        });
    }
    initarticleRows() {
        return this.fb.group({
            articleTitle: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(100), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(3)])],
            articleDescription: [''],
            articlefakePath: [''],
            articlePath: ['']
        });
    }
    initarticlePdfRows() {
        return this.fb.group({
            articlePdfTitle: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(100), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(3)])],
            articlePdfDescription: [''],
            articlefakePdfPath: [''],
            articlePdfPath: ['']
        });
    }
    initnewsRows() {
        return this.fb.group({
            title: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(100), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(3)])],
            description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(10000), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(30)])],
            newsImagePath: [''],
            newsImagefakePath: ['']
        });
    }
    initgalleryRows() {
        return this.fb.group({
            galaryPath: [''],
            galaryfakePath: ['']
        });
    }
    initvideoRows() {
        return this.fb.group({
            videoName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(100), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(3)])],
            videoURL: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(200), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(6)])]
        });
    }
    // get otherOpenionRows
    getotherOpenionRows(profileMemberForm) {
        return profileMemberForm.get('otherOpenionRows').controls;
    }
    //Dynamically Add New Field otherOpenion
    addNewotherOpenionRow() {
        const control = this.profileMemberForm.controls['otherOpenionRows'];
        control.push(this.initotherOpenionRows());
    }
    //Dynamically Remove existing Field otherOpenion
    deleteotherOpenionRow(index) {
        const control = this.profileMemberForm.controls['otherOpenionRows'];
        control.removeAt(index);
        this.selectedItems.splice(index, 1);
    }
    // #endregion
    // get articleRows
    getarticleRows(premiumMemberForm) {
        return premiumMemberForm.get('articleRows').controls;
    }
    //Dynamically Add New Field article
    addarticleRow() {
        this.article = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
        const control = this.premiumMemberForm.controls['articleRows'];
        control.push(this.initarticleRows());
        this.premiumProfile.articleImg.push(this.article);
    }
    addarticleRowInPosition(index) {
        this.article = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
        const control = this.premiumMemberForm.controls['articleRows'];
        //control.push(this.initarticleRows());
        control.insert(index + 1, this.initarticleRows());
        this.premiumProfile.articleImg.splice(index + 1, 0, this.article);
    }
    //Dynamically Remove existing Field article
    deletearticleRow(index) {
        this.premiumProfile.articleImg.splice(index, 1);
        const control = this.premiumMemberForm.controls['articleRows'];
        control.removeAt(index);
    }
    // #endregion
    // get articleRows
    getarticlePdfRows(premiumMemberForm) {
        return premiumMemberForm.get('articlePdfRows').controls;
    }
    //Dynamically Add New Field article
    addarticlePdfRow() {
        this.article = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
        const control = this.premiumMemberForm.controls['articlePdfRows'];
        control.push(this.initarticlePdfRows());
        this.premiumProfile.articlePdf.push(this.article);
    }
    addarticlePdfRowInPosition(index) {
        this.article = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
        const control = this.premiumMemberForm.controls['articlePdfRows'];
        control.insert(index + 1, this.initarticlePdfRows());
        this.premiumProfile.articlePdf.splice(index + 1, 0, this.article);
    }
    //Dynamically Remove existing Field article
    deletearticlePdfRow(index) {
        this.premiumProfile.articlePdf.splice(index, 1);
        const control = this.premiumMemberForm.controls['articlePdfRows'];
        control.removeAt(index);
    }
    // get newsRows
    getnewsRows(premiumMemberForm) {
        return premiumMemberForm.get('newsRows').controls;
    }
    //Dynamically Add New Field news
    addnewsRow() {
        const control = this.premiumMemberForm.controls['newsRows'];
        control.push(this.initnewsRows());
    }
    //Dynamically Remove existing Field news
    deletenewsRow(index) {
        const control = this.premiumMemberForm.controls['newsRows'];
        control.removeAt(index);
    }
    // #endregion
    // get galleryRows
    getgalleryRows(premiumMemberForm) {
        return premiumMemberForm.get('galleryRows').controls;
    }
    addgalleryRowInPosition(index) {
        const control = this.premiumMemberForm.controls['galleryRows'];
        control.insert(index + 1, this.initgalleryRows());
        this.premiumProfile.galImg.splice(index + 1, 0, "");
        this.imageChangedEventGalary.splice(index + 1, 0, "");
        //control.push(this.initgalleryRows());
    }
    //Dynamically Add New Field gallery
    addgalleryRow() {
        const control = this.premiumMemberForm.controls['galleryRows'];
        control.push(this.initgalleryRows());
    }
    //Dynamically Remove existing Field gallery
    deletegalleryRow(index) {
        this.premiumProfile.galImg.splice(index, 1);
        this.imageChangedEventGalary.splice(index, 1);
        const control = this.premiumMemberForm.controls['galleryRows'];
        control.removeAt(index);
    }
    // #endregion
    // get videoRows
    getvideoRows(premiumMemberForm) {
        return premiumMemberForm.get('videoRows').controls;
    }
    //Dynamically Add New Field video
    addvideoRow() {
        const control = this.premiumMemberForm.controls['videoRows'];
        control.push(this.initvideoRows());
    }
    addvideoRowInPosition(index) {
        const control = this.premiumMemberForm.controls['videoRows'];
        control.insert(index + 1, this.initvideoRows());
        //control.push(this.initvideoRows());
    }
    //Dynamically Remove existing Field video
    deletevideoRow(index) {
        const control = this.premiumMemberForm.controls['videoRows'];
        control.removeAt(index);
    }
    // #endregion
    // init kycdocumentDetails
    initsocialLinkDetails() {
        return this.fb.group({
            socialLinksUrl: ['']
        });
    }
    // get socialLinkDetails
    getsocialLinkDetails(Form) {
        return Form.get('socialLinkRows').controls;
    }
    //Dynamically Add New Field socialLinkDetails
    addNewsocialLinkDetails() {
        const control = this.premiumMemberForm.controls['socialLinkRows'];
        control.push(this.initsocialLinkDetails());
    }
    //Dynamically Remove existing Field kycdocumentDetails
    deletesocialLinkDetails(index) {
        const control = this.premiumMemberForm.controls['socialLinkRows'];
        control.removeAt(index);
    }
    // #endregion
    AppendDate(value) {
        var numChars = value.length;
        if (numChars === 2) {
            var thisVal = this.profileMember.dob;
            thisVal += '-';
            // $jqDate.val(thisVal);
            this.profileMember.dob = thisVal;
        }
    }
    getReferedMemberList(event) {
        let memberName = event.target.value;
        let memName = {
            "firstName": memberName
        };
        this.apiService.Create("member/getMemberDetailsByMemberName", memName).subscribe(data => {
            let memList = [];
            let memdata = data.object;
            if (memdata != null && memdata != undefined) {
                memdata.forEach(ml => {
                    memList.push({ "id": ml.membershipId, "itemName": ml.firstName, "profileImage": ml.profileImage, "webPageId": ml.webpageId });
                });
                this.memberList = memList;
            }
        });
    }
    selectedMemId(memdata) {
        debugger;
        this.selectedMemWebId = memdata.id;
        this.selectedMemberName = memdata.itemName;
        this.selectedMemberPhoto = memdata.profileImage;
    }
    onproffessionSelect(item) {
        let proffessionid = this.selectedproffession[0].id;
        this.adminPage.refProfessionId = proffessionid;
    }
    onproffessionDeSelect(item) {
        //  console.log(item);
    }
    onproffessionSelectAll(items) {
        // console.log(items);
    }
    onproffessionDeSelectAll(items) {
        // console.log(items);
    }
    onotherSkillSelect(item) {
        //  console.log(item);
    }
    onotherSkillDeSelect(item) {
        // console.log(item);
    }
    onotherSkillSelectAll(items) {
        //  console.log(items);
    }
    onotherSkillDeSelectAll(items) {
        //  console.log(items);
    }
    motherToungeSelect(item) {
        //  console.log(item);
        this.selectedmotherTounge.forEach(curent => {
            if (curent.id > 0) {
                this.profileMember.motherTounge = curent.id;
            }
        });
    }
    motherToungeDeSelect(item) {
        //  console.log(item);
    }
    motherToungeSelectAll(items) {
        // console.log(items);
    }
    motherToungeDeSelectAll(items) {
        //  console.log(items);
    }
    otherLanguagesSelect(item) {
        //  console.log(item);
        let listlang = new Array();
        this.selectedotherLanguages.forEach(curent => {
            if (curent.id > 0) {
                listlang.push(curent.id);
                this.profileMember.otherLanguage = listlang;
            }
        });
    }
    otherLanguagesDeSelect(item) {
        //  console.log(item);
    }
    otherLanguagesSelectAll(items) {
        //  console.log(items);
    }
    otherLanguagesDeSelectAll(items) {
        //  console.log(items);
    }
    openionmembernameSelect(item) {
        // console.log(item);
        let membername = this.selectedopenionmembername[0].id;
        this.profileMember.refMemberId = membername;
    }
    openionmembernameDeSelect(item) {
        //  console.log(item);
    }
    openionmembernameSelectAll(items) {
        //  console.log(items);
    }
    openionmembernameDeSelectAll(items) {
        //  console.log(items);
    }
    statenameSelect(item) {
        //  console.log(item);
        let stateid = this.selectedstatename[0].id;
        this.adminPage.refStateId = stateid;
        this.GetCityDetailsByStateId();
    }
    statenameDeSelect(item) {
        //  console.log(item);
    }
    statenameSelectAll(items) {
        //  console.log(items);
    }
    statenameDeSelectAll(items) {
        //  console.log(items);
    }
    nationnameSelect(item) {
        // console.log(item);
        let nationid = this.selectednation[0].id;
        //this.adminPage.refStateId = stateid;
        this.profileMember.refNationalityId = nationid;
    }
    nationnameDeSelect(item) {
        //   console.log(item);
    }
    nationnameSelectAll(items) {
        //  console.log(items);
    }
    nationnameDeSelectAll(items) {
        //  console.log(items);
    }
    oncitySelect(item) {
        let refCityId = this.selectedcity[0].id;
        this.adminPage.refCityId = refCityId;
    }
    oncityDeSelect(item) {
        //  console.log(item);
    }
    oncitySelectAll(items) {
        //  console.log(items);
    }
    oncityDeSelectAll(items) {
        // console.log(items);
    }
    //upload file
    fileChangeEvent(e) {
        $('#file-upload').removeAttr('src');
        this.adminPage.filename = "";
        this.adminPage.filetype = "";
        this.adminPage.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "JPG" || extention == "jpg") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB 
             {
                this.loaderService.display(true);
                this.imageChangedEvent = e; // image crop
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.adminPage.filename = file.name;
                    this.adminPage.filetype = file.type;
                    // const csv: string = reader.result as string;
                    // this.adminPage.profileImage = csv.replace("data:image/jpeg;base64,", "");
                    this.adminPage.profileImage = reader.result;
                };
                this.basicMemberForm.controls.profileImage.setValue(this.adminPage.profileImage);
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG") {
                this.adminPage.filename = "";
                this.adminPage.filetype = "";
                this.adminPage.profileImage = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.adminPage.filename = "";
                this.adminPage.filetype = "";
                this.adminPage.profileImage = "";
                // this.adminPage.profileImagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Document size should be less than 10MB");
                return;
            }
        }
    }
    imageCropped(event) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMemberForm.controls.profileImage.setValue(this.croppedImage);
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMemberForm.controls.profileImage.setValue(this.croppedImage);
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMemberForm.controls.profileImage.setValue(this.croppedImage);
            });
        }
    }
    imageLoaded() {
        // show cropper
    }
    cropperReady() {
        // cropper ready
    }
    loadImageFailed() {
        // show message
    }
    fileChangeEventProfile(e, seqno) {
        debugger;
        this.loaderService.display(true);
        this.imageChangedEvent1Profile = "";
        this.imageChangedEvent2Profile = "";
        this.imageChangedEvent3Profile = "";
        this.imageChangedEvent4Profile = "";
        this.imageChangedEvent5Profile = "";
        this.imageChangedEvent6Profile = "";
        this.imageChangedEvent7Profile = "";
        var orientation = 1;
        //alert(e.target.files[0]);
        // $('#photo1').removeAttr('src');
        // $('#photo2').removeAttr('src');
        // $('#photo3').removeAttr('src');
        // $('#photo4').removeAttr('src');
        // $('#photo5').removeAttr('src');
        // $('#photo6').removeAttr('src');
        // $('#photo7').removeAttr('src');
        this.profileMember.filename = "";
        this.profileMember.filetype = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "JPG" || extention == "jpg") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB 
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    if (seqno == 1) {
                        this.url1 = reader.result;
                        this.url11 = reader.result;
                        this.imageChangedEvent1Profile = e;
                    }
                    else if (seqno == 2) {
                        this.url2 = reader.result;
                        this.url22 = reader.result;
                        this.imageChangedEvent2Profile = e;
                    }
                    else if (seqno == 3) {
                        this.url3 = reader.result;
                        this.url33 = reader.result;
                        this.imageChangedEvent3Profile = e;
                    }
                    else if (seqno == 4) {
                        this.url4 = reader.result;
                        this.url44 = reader.result;
                        this.imageChangedEvent4Profile = e;
                    }
                    else if (seqno == 5) {
                        this.url5 = reader.result;
                        this.url55 = reader.result;
                        this.imageChangedEvent5Profile = e;
                    }
                    else if (seqno == 6) {
                        this.url6 = reader.result;
                        this.url66 = reader.result;
                        this.imageChangedEvent6Profile = e;
                    }
                    else if (seqno == 7) {
                        this.url7 = reader.result;
                        this.url77 = reader.result;
                        this.imageChangedEvent7Profile = e;
                    }
                    this.profileMember.filename = file.name;
                    this.profileMember.filetype = file.type;
                    //const csv: string = reader.result as string;
                    // this.profileMember.imageBase64String = csv.replace("data:image/jpeg;base64,", "");
                    //this.adminPage.profileImagePath = this.adminPage.imageBase64String;
                    //this.model.user_imagepath = this.model.imageBase64String;
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "JPG" && extention != "jpg") {
                this.profileMember.filename = "";
                this.profileMember.filetype = "";
                if (seqno == 1) {
                    this.url1 = "";
                    this.url11 = "";
                    this.profileMemberForm.controls.ProfileimagePath1.setValue("");
                }
                else if (seqno == 2) {
                    this.url2 = "";
                    this.url22 = "";
                    this.profileMemberForm.controls.ProfileimagePath2.setValue("");
                }
                else if (seqno == 3) {
                    this.url3 = "";
                    this.url33 = "";
                    this.profileMemberForm.controls.ProfileimagePath3.setValue("");
                }
                else if (seqno == 4) {
                    this.url4 = "";
                    this.url44 = "";
                    this.profileMemberForm.controls.ProfileimagePath4.setValue("");
                }
                else if (seqno == 5) {
                    this.url5 = "";
                    this.url55 = "";
                    this.profileMemberForm.controls.ProfileimagePath5.setValue("");
                }
                else if (seqno == 6) {
                    this.url6 = "";
                    this.url66 = "";
                    this.profileMemberForm.controls.ProfileimagePath6.setValue("");
                }
                else if (seqno == 7) {
                    this.url7 = "";
                    this.url77 = "";
                    this.profileMemberForm.controls.ProfileimagePath7.setValue("");
                }
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.profileMember.filename = "";
                this.profileMember.filetype = "";
                //  $('#file-upload').removeAttr('src');
                if (seqno == 1) {
                    this.url1 = "";
                    this.url11 = "";
                    this.profileMemberForm.controls.ProfileimagePath1.setValue("");
                }
                else if (seqno == 2) {
                    this.url2 = "";
                    this.url22 = "";
                    this.profileMemberForm.controls.ProfileimagePath2.setValue("");
                }
                else if (seqno == 3) {
                    this.url3 = "";
                    this.url33 = "";
                    this.profileMemberForm.controls.ProfileimagePath3.setValue("");
                }
                else if (seqno == 4) {
                    this.url4 = "";
                    this.url44 = "";
                    this.profileMemberForm.controls.ProfileimagePath4.setValue("");
                }
                else if (seqno == 5) {
                    this.url5 = "";
                    this.url55 = "";
                    this.profileMemberForm.controls.ProfileimagePath5.setValue("");
                }
                else if (seqno == 6) {
                    this.url6 = "";
                    this.url66 = "";
                    this.profileMemberForm.controls.ProfileimagePath6.setValue("");
                }
                else if (seqno == 7) {
                    this.url7 = "";
                    this.url77 = "";
                    this.profileMemberForm.controls.ProfileimagePath7.setValue("");
                }
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Document size should be less than 10MB");
                return;
            }
        }
    }
    imageCroppedProfile(event, seqno) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        var fileName = "MemberProfilePhoto" + seqno;
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                let data = {
                    'mobile': this.adminPage.mobile,
                    'fileName': fileName,
                    'base64': result
                };
                this.apiService.Create('file/uploadBase64', data).subscribe((data1) => {
                    this.loaderService.display(false);
                    if (this.imageChangedEvent1Profile) {
                        this.url1 = result;
                        this.url11 = data1.object;
                    }
                    else if (this.imageChangedEvent2Profile) {
                        this.url2 = result;
                        this.url22 = data1.object;
                    }
                    else if (this.imageChangedEvent3Profile) {
                        this.url3 = result;
                        this.url33 = data1.object;
                    }
                    else if (this.imageChangedEvent4Profile) {
                        this.url4 = result;
                        this.url44 = data1.object;
                    }
                    else if (this.imageChangedEvent5Profile) {
                        this.url5 = result;
                        this.url55 = data1.object;
                    }
                    else if (this.imageChangedEvent6Profile) {
                        this.url6 = result;
                        this.url66 = data1.object;
                    }
                    else if (this.imageChangedEvent7Profile) {
                        this.url7 = result;
                        this.url77 = data1.object;
                    }
                });
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                let data = {
                    'mobile': this.adminPage.mobile,
                    'fileName': fileName,
                    'base64': result
                };
                this.apiService.Create('file/uploadBase64', data).subscribe((data1) => {
                    this.loaderService.display(false);
                    if (this.imageChangedEvent1Profile) {
                        this.url1 = result;
                        this.url11 = data1.object;
                    }
                    else if (this.imageChangedEvent2Profile) {
                        this.url2 = result;
                        this.url22 = data1.object;
                    }
                    else if (this.imageChangedEvent3Profile) {
                        this.url3 = result;
                        this.url33 = data1.object;
                    }
                    else if (this.imageChangedEvent4Profile) {
                        this.url4 = result;
                        this.url44 = data1.object;
                    }
                    else if (this.imageChangedEvent5Profile) {
                        this.url5 = result;
                        this.url55 = data1.object;
                    }
                    else if (this.imageChangedEvent6Profile) {
                        this.url6 = result;
                        this.url66 = data1.object;
                    }
                    else if (this.imageChangedEvent7Profile) {
                        this.url7 = result;
                        this.url77 = data1.object;
                    }
                });
            });
        }
        else if (isbc > 500000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                let data = {
                    'mobile': this.adminPage.mobile,
                    'fileName': fileName,
                    'base64': result
                };
                this.apiService.Create('file/uploadBase64', data).subscribe((data1) => {
                    this.loaderService.display(false);
                    if (this.imageChangedEvent1Profile) {
                        this.url1 = result;
                        this.url11 = data1.object;
                    }
                    else if (this.imageChangedEvent2Profile) {
                        this.url2 = result;
                        this.url22 = data1.object;
                    }
                    else if (this.imageChangedEvent3Profile) {
                        this.url3 = result;
                        this.url33 = data1.object;
                    }
                    else if (this.imageChangedEvent4Profile) {
                        this.url4 = result;
                        this.url44 = data1.object;
                    }
                    else if (this.imageChangedEvent5Profile) {
                        this.url5 = result;
                        this.url55 = data1.object;
                    }
                    else if (this.imageChangedEvent6Profile) {
                        this.url6 = result;
                        this.url66 = data1.object;
                    }
                    else if (this.imageChangedEvent7Profile) {
                        this.url7 = result;
                        this.url77 = data1.object;
                    }
                });
            });
        }
    }
    imageLoadedProfile() {
        // show cropper
    }
    cropperReadyProfile() {
        // cropper ready
    }
    loadImageFailedProfile() {
        // show message
    }
    getOnLoadData() {
        this.adminPage = new _modals_adminpage__WEBPACK_IMPORTED_MODULE_6__["AdminPage"]();
        this.profileMember = new _app_modals_profilemember__WEBPACK_IMPORTED_MODULE_8__["ProfileMember"]();
        this.premiumProfile = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["PremiumProfile"]();
        this.adminPage.individualInstitute = "Individual";
        this.adminPage.experienceType = "Experienced";
        this.adminPage.refMembershipTypeId = "1";
        this.adminPage.mobileVisibility = "1";
        this.adminPage.emailVisibility = "1";
        this.adminPage.addressVisibility = "1";
        this.adminPage.leagueTypeId = "";
        // this.premiumProfile.articleImg = [];
        this.premiumProfile.galImg = [];
        this.premiumProfile.newsImg = [];
        this.premiumProfile.articleImg = [];
        this.premiumProfile.articlePdf = [];
        this.imageChangedEventGalary = [];
        //this.premiumProfile.articleImg.push(this.article);
        this.premiumProfile.webPrivatePublicFlag = "1";
        this.croppedImage = "";
        this.url1 = "";
        this.url2 = "";
        this.url3 = "";
        this.url4 = "";
        this.url5 = "";
        this.url6 = "";
        this.url7 = "";
        this.url11 = "";
        this.url22 = "";
        this.url33 = "";
        this.url44 = "";
        this.url55 = "";
        this.url66 = "";
        this.url77 = "";
        this.croppedhdphoto = "";
        this.OnindividualInstituteChange();
        this.OnexperienceTypeChange();
        this.motherToungeSettings = {
            text: "Select Mother Tounge",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Mother Tounge',
            badgeShowLimit: 5,
        };
        this.otherLanguagesSettings = {
            text: "Select Other Languages",
            singleSelection: false,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Other Languages',
            badgeShowLimit: 5,
        };
        this.openionmembernameSettings = {
            text: "Select Member",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Member',
            badgeShowLimit: 5
        };
        this.citySettings = {
            text: "Select City",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search City',
            badgeShowLimit: 5
        };
        this.statenameSettings = {
            text: "Select State",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search State',
            badgeShowLimit: 5
        };
        this.nationSettings = {
            text: "Select Nation",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Nation',
            badgeShowLimit: 5
        };
        //
        this.otherMembersettings = {
            text: "Select Member",
            classes: "myclass custom-class",
            noDataLabel: "Search Member...",
            enableSearchFilter: true,
            singleSelection: true,
            enableCheckAll: false,
            enableFilterSelectAll: false,
        };
        this.motherToungeList = [];
        this.otherLanguagesList = [];
        this.openionmembernameList = [];
        this.statenameList = [];
        this.cityList = [];
        this.nationList = [];
        this.otherMemberList = [];
        this.proffessionList = [];
        this.originalproffessionListData = [];
        this.selectedItems = [];
        this.getlanguageDtoList();
        this.getstateDtoList();
        this.getproffessionList();
        this.getnationalityDtoList();
        this.getSocialLinksList();
    }
    //get languageDtoList lists
    getlanguageDtoList() {
        this.loaderService.display(true);
        this.apiService.getDATA("language/getAll").toPromise().then(data => {
            this.loaderService.display(false);
            if (data.success == true) {
                if (data.object != null && data.object != undefined) {
                    let object = data.object;
                    if (object.languageDtoList != undefined) {
                        let languageDtoList = object.languageDtoList;
                        let otherLanguagesList = [];
                        languageDtoList.forEach(otherlang => {
                            if (otherlang.lanaguageId > 0) {
                                otherLanguagesList.push({ "id": otherlang.lanaguageId, "itemName": otherlang.title });
                            }
                        });
                        this.motherToungeList = otherLanguagesList;
                        this.otherLanguagesList = otherLanguagesList;
                    }
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    //get getstateDtoList lists
    getstateDtoList() {
        this.loaderService.display(true);
        this.apiService.getDATA("state/getAllActive").toPromise().then(data => {
            this.loaderService.display(false);
            if (data.success == true) {
                if (data.object != null && data.object != undefined) {
                    let object = data.object;
                    this.statenameList = [];
                    if (object.stateDtoList != undefined) {
                        let stateDtoList = object.stateDtoList;
                        stateDtoList.forEach(statename => {
                            if (statename.stateId > 0) {
                                this.statenameList.push({ "id": statename.stateId, "itemName": statename.stateName });
                            }
                        });
                    }
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    //get proffessionList lists
    getproffessionList() {
        this.loaderService.display(true);
        this.apiService.getDATA("profession/getAllActive").toPromise().then(data => {
            this.loaderService.display(false);
            if (data.success == true) {
                if (data.object != null && data.object != undefined) {
                    let object = data.object;
                    this.proffessionList = [];
                    if (object.professionDtoList != undefined) {
                        object.professionDtoList.forEach(professionname => {
                            if (professionname.professionId > 0) {
                                this.proffessionList.push({ "id": professionname.professionId, "itemName": professionname.title, "category": professionname.parentName, "itemProfession": professionname.individualInstitute });
                            }
                        });
                    }
                    this.originalproffessionListData = this.proffessionList;
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    //get nationalityDtoList lists
    getnationalityDtoList() {
        this.loaderService.display(true);
        this.apiService.getDATA("nationality/getAll").toPromise().then(data => {
            this.loaderService.display(false);
            if (data.success == true) {
                if (data.object != null && data.object != undefined) {
                    let object = data.object;
                    if (object.nationalityDtoList != undefined) {
                        let nationalityDtoList = object.nationalityDtoList;
                        nationalityDtoList.forEach(nationname => {
                            if (nationname.nationalityId > 0) {
                                this.nationList.push({ "id": nationname.nationalityId, "itemName": nationname.title });
                            }
                        });
                    }
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    //Get master sociallinks
    getSocialLinksList() {
        this.loaderService.display(true);
        this.apiService.getDATA("socialLinks/getAllActive").toPromise().then(data => {
            this.loaderService.display(false);
            if (data.success == true) {
                if (data.object != null && data.object != undefined) {
                    let object = data.object;
                    if (object.socialLinksDtoList != undefined) {
                        this.socialLinksDtoList = object.socialLinksDtoList;
                        // console.log(JSON.stringify(object.socialLinksDtoList));
                        for (var i = 0; i < this.socialLinksDtoList.length; i++) {
                            this.addNewsocialLinkDetails();
                            const control = this.premiumMemberForm.controls['socialLinkRows'];
                            control.controls[i].get('socialLinksUrl').setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(6), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(200)]);
                            control.controls[i].get('socialLinksUrl').updateValueAndValidity();
                        }
                    }
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    getOtherMemberDetails(i, membershipId) {
        if (membershipId != "" && membershipId != undefined) {
            let curMemb = this.openionmembernameList.filter(aa => aa.membershipId == parseInt(membershipId))[0];
            const ctrl = this.profileMemberForm.controls['otherOpenionRows'];
            // if(curMemb.profileImage !=undefined && curMemb.profileImage !=""){
            //   ctrl.controls[i].get('otherMemberImage').setValue(curMemb.profileImage);
            // }
        }
    }
    getProfessionList() {
        this.proffessionList = [];
        this.originalproffessionListData = [];
        this.otherSkillList = [];
        this.adminPage.individualInstitute = "Individual";
        this.loaderService.display(true);
        this.apiService.Create("profession/getAll", this.adminPage).subscribe(data => {
            this.loaderService.display(false);
            if (data != undefined) {
                if (data.success) {
                    let object = data.object;
                    if (object.professionDtoList != undefined) {
                        let professionDtoList = [];
                        professionDtoList = object.professionDtoList;
                        let proffessionList = [];
                        if (professionDtoList.length > 0) {
                            for (let i = 0; i < professionDtoList.length; i++) {
                                let professional = professionDtoList[i];
                                if (professional.professionId > 0) {
                                    proffessionList.push({ "id": professional.professionId, "itemName": professional.title, "category": professional.parentName, "itemProfession": professional.individualInstitute });
                                }
                            }
                        }
                        this.proffessionList = proffessionList;
                        this.originalproffessionListData = this.proffessionList;
                    }
                    if (object.professionDtoList != undefined) {
                        let professionDtoList = [];
                        professionDtoList = object.professionDtoList;
                        let otherSkillList = [];
                        if (professionDtoList.length > 0) {
                            for (let i = 0; i < professionDtoList.length; i++) {
                                let otherskill = professionDtoList[i];
                                if (otherskill.professionId > 0) {
                                    let category = otherskill.parentName.trim();
                                    otherSkillList.push({ "id": otherskill.professionId, "itemName": otherskill.title, "category": otherskill.parentName, "itemProfession": otherskill.individualInstitute });
                                }
                            }
                        }
                        this.otherSkillList = otherSkillList;
                    }
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    SetexperienceTypeChange() {
        if (this.adminPage.experienceType == "Experienced") {
            this.basicMemberForm.get('yearOfExp').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]));
            this.basicMemberForm.get('yearOfExp').updateValueAndValidity();
        }
        else {
            this.basicMemberForm.get('yearOfExp').setValidators(null);
            this.basicMemberForm.get('yearOfExp').updateValueAndValidity();
        }
    }
    OnexperienceTypeChange() {
        this.adminPage.yearOfExp = "";
        if (this.adminPage.experienceType == "Experienced") {
            this.basicMemberForm.get('yearOfExp').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]));
            this.basicMemberForm.get('yearOfExp').updateValueAndValidity();
        }
        else {
            this.basicMemberForm.get('yearOfExp').setValidators(null);
            this.basicMemberForm.get('yearOfExp').updateValueAndValidity();
        }
    }
    OnindividualInstituteChange() {
        this.adminPage.firstName = "";
        this.adminPage.middleName = "";
        this.adminPage.lastName = "";
        this.adminPage.ageGroup = "";
        this.adminPage.gender = "";
        this.adminPage.leagueTypeId = "";
        this.adminPage.since = "";
        this.adminPage.contactPerson = "";
        this.profileMember.qualification = "";
        this.selectedmotherTounge = [];
        this.selectedotherLanguages = [];
        this.profileMember.motherTounge;
        this.profileMember.otherLanguage = [];
        this.profileMember.height = "";
        this.profileMember.weight = "";
        this.profileMember.dob = "";
        this.profileMember.birthPlace = "";
        if (this.adminPage.individualInstitute == 'Institute') {
            this.adminPage.individualInstituteName = "Institute Name";
            this.adminPage.ProfessionService = 'Service';
            this.adminPage.OtherSkillsOtherServices = 'Other Services';
            this.basicMemberForm.get('middleName').setValidators(null);
            this.basicMemberForm.get('middleName').updateValueAndValidity();
            this.basicMemberForm.get('lastName').setValidators(null);
            this.basicMemberForm.get('lastName').updateValueAndValidity();
            this.basicMemberForm.get('ageGroup').setValidators(null);
            this.basicMemberForm.get('ageGroup').updateValueAndValidity();
            this.basicMemberForm.get('gender').setValidators(null);
            this.basicMemberForm.get('gender').updateValueAndValidity();
            this.basicMemberForm.get('since').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern('[0-9]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(4), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(4)]));
            this.basicMemberForm.get('since').updateValueAndValidity();
            this.basicMemberForm.get('contactPerson').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(3)]));
            this.basicMemberForm.get('contactPerson').updateValueAndValidity();
            //Profile
            this.profileMemberForm.get('qualification').setValidators(null);
            this.profileMemberForm.get('qualification').updateValueAndValidity();
            this.profileMemberForm.get('motherTounge').setValidators(null);
            this.profileMemberForm.get('motherTounge').updateValueAndValidity();
            this.profileMemberForm.get('otherLanguages').setValidators(null);
            this.profileMemberForm.get('otherLanguages').updateValueAndValidity();
            this.profileMemberForm.get('height').setValidators(null);
            this.profileMemberForm.get('height').updateValueAndValidity();
            this.profileMemberForm.get('weight').setValidators(null);
            this.profileMemberForm.get('weight').updateValueAndValidity();
            this.profileMemberForm.get('dob').setValidators(null);
            this.profileMemberForm.get('dob').updateValueAndValidity();
            this.profileMemberForm.get('birthPlace').setValidators(null);
            this.profileMemberForm.get('birthPlace').updateValueAndValidity();
        }
        else if (this.adminPage.individualInstitute == 'Individual') {
            this.adminPage.individualInstituteName = "First Name";
            this.adminPage.ProfessionService = 'Profession';
            this.adminPage.OtherSkillsOtherServices = 'Other Skills';
            this.basicMemberForm.get('middleName').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(3)]));
            this.basicMemberForm.get('middleName').updateValueAndValidity();
            this.basicMemberForm.get('lastName').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(3)]));
            this.basicMemberForm.get('lastName').updateValueAndValidity();
            this.basicMemberForm.get('ageGroup').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]));
            this.basicMemberForm.get('ageGroup').updateValueAndValidity();
            this.basicMemberForm.get('gender').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]));
            this.basicMemberForm.get('gender').updateValueAndValidity();
            this.basicMemberForm.get('since').setValidators(null);
            this.basicMemberForm.get('since').updateValueAndValidity();
            this.basicMemberForm.get('contactPerson').setValidators(null);
            this.basicMemberForm.get('contactPerson').updateValueAndValidity();
            //Profile
            this.profileMemberForm.get('qualification').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(2)]));
            this.profileMemberForm.get('qualification').updateValueAndValidity();
            this.profileMemberForm.get('motherTounge').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]));
            this.profileMemberForm.get('motherTounge').updateValueAndValidity();
            // this.profileMemberForm.get('otherLanguages').setValidators(Validators.compose([Validators.required]));
            this.profileMemberForm.get('otherLanguages').updateValueAndValidity();
            // this.profileMemberForm.get('height').setValidators(Validators.compose([Validators.required]));
            // this.profileMemberForm.get('height').updateValueAndValidity();
            // this.profileMemberForm.get('weight').setValidators(Validators.compose([Validators.required]));
            // this.profileMemberForm.get('weight').updateValueAndValidity();
            this.profileMemberForm.get('dob').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]));
            this.profileMemberForm.get('dob').updateValueAndValidity();
            this.profileMemberForm.get('birthPlace').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(3)]));
            this.profileMemberForm.get('birthPlace').updateValueAndValidity();
        }
        this.proffessionSettings = {
            text: 'Select ' + this.adminPage.ProfessionService,
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search ' + this.adminPage.ProfessionService,
            badgeShowLimit: 5,
            groupBy: "category"
        };
        this.otherSkillSettings = {
            singleSelection: false,
            text: 'Select ' + this.adminPage.OtherSkillsOtherServices,
            enableCheckAll: false,
            enableFilterSelectAll: false,
            searchPlaceholderText: 'Search ' + this.adminPage.OtherSkillsOtherServices,
            enableSearchFilter: true,
            badgeShowLimit: 8,
            groupBy: "category",
            limitSelection: 8
        };
        this.getProfessionList();
    }
    submitBasicDetails() {
        if (this.basicMemberForm.valid) {
            if (this.selectedproffession.length > 0) {
                let proffessionid = this.selectedproffession[0].id;
                this.adminPage.refProfessionId = proffessionid;
            }
            if (this.selectedotherSkill != undefined) {
                if (this.selectedotherSkill.length > 0) {
                    let listIds = new Array();
                    this.selectedotherSkill.forEach(curent => {
                        if (curent.id > 0) {
                            listIds.push(curent.id);
                        }
                    });
                    this.adminPage.otherSkills = listIds;
                }
            }
            if (this.selectedstatename.length > 0) {
                let stateid = this.selectedstatename[0].id;
                this.adminPage.refStateId = stateid;
            }
            if (this.selectedcity.length > 0) {
                let refCityId = this.selectedcity[0].id;
                this.adminPage.refCityId = refCityId;
            }
            this.adminPage.individualORInstitute = this.adminPage.individualInstitute;
            this.adminPage.refUserId = 1;
            this.adminPage.imageBase64String = "";
            this.adminPage.profileImage = this.croppedImage;
            this.adminPage.adminFlag = 1;
            this.loaderService.display(true);
            let data = {
                "membershipId": this.adminPage.membershipId,
                "refUserId": this.adminPage.refUserId,
                "refMembershipTypeId": this.adminPage.refMembershipTypeId,
                "experienceType": this.adminPage.experienceType,
                "yearOfExp": this.adminPage.yearOfExp,
                "ageGroup": this.adminPage.ageGroup,
                "gender": this.adminPage.gender,
                "firstName": this.adminPage.firstName,
                "middleName": this.adminPage.middleName,
                "lastName": this.adminPage.lastName,
                "displayName": this.adminPage.displayName,
                "refProfessionId": this.adminPage.refProfessionId,
                "refCityId": this.adminPage.refCityId,
                "refStateId": this.adminPage.refStateId,
                "mobile": this.adminPage.mobile,
                "mobileVisibility": this.adminPage.mobileVisibility,
                "email": this.adminPage.email,
                "emailVisibility": this.adminPage.emailVisibility,
                "address": this.adminPage.address,
                "addressVisibility": this.adminPage.addressVisibility,
                "contactPerson": this.adminPage.contactPerson,
                "since": this.adminPage.since,
                "instructionByMember": this.adminPage.instructionByMember,
                "individualORInstitute": this.adminPage.individualORInstitute,
                "otherSkills": this.adminPage.otherSkills,
                "leagueTypeId": this.adminPage.leagueTypeId,
                "profileImage": this.adminPage.profileImage,
                "adminFlag": this.adminPage.adminFlag
            };
            this.apiService.Create("member/save", data).subscribe(data => {
                this.loaderService.display(false);
                this.profileMember.refMemberId = data.object.membershipId;
                if (data.success == true)
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
                else
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
            }, error => {
                console.log(error);
                this.loaderService.display(false);
            });
        }
        else {
            this.apiService.validateAllFormFields(this.basicMemberForm);
            sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Please Enter All The Mandatory Fields");
        }
    }
    onSelectFile(event) {
        if (event.target.files && event.target.files[0]) {
            var filesAmount = 50;
            for (let i = 0; i < filesAmount; i++) {
                var reader = new FileReader();
                reader.onload = (event) => {
                    this.urls.push(event.target.result);
                };
                reader.readAsDataURL(event.target.files[i]);
            }
        }
    }
    //gallery ends
    submitProfile() {
        if (this.profileMemberForm.valid) {
            if (this.selectedmotherTounge.length > 0) {
                let mothertoungueid = this.selectedmotherTounge[0].id;
                this.profileMember.motherTounge = mothertoungueid;
            }
            if (this.selectedotherLanguages.length > 0) {
                let listotherlangIds = new Array();
                this.selectedotherLanguages.forEach(curent => {
                    if (curent.id > 0) {
                        listotherlangIds.push(curent.id);
                        this.profileMember.otherLanguage = listotherlangIds;
                    }
                });
            }
            if (this.selectednation.length > 0) {
                let nationalid = this.selectednation[0].id;
                this.profileMember.refNationalityId = nationalid;
            }
            // set Profile pics 7 start
            this.imageSendArr.push({ "imagePath": this.url1, "seqNum": 1 });
            this.imageSendArr.push({ "imagePath": this.url2, "seqNum": 2 });
            this.imageSendArr.push({ "imagePath": this.url3, "seqNum": 3 });
            this.imageSendArr.push({ "imagePath": this.url4, "seqNum": 4 });
            this.imageSendArr.push({ "imagePath": this.url5, "seqNum": 5 });
            this.imageSendArr.push({ "imagePath": this.url6, "seqNum": 6 });
            this.imageSendArr.push({ "imagePath": this.url7, "seqNum": 7 });
            this.profileMember.profileMemberShipPhotoDtos = this.imageSendArr;
            //end
            // #region   otherOpenionArray
            let membersOthersOpinionDtos = [];
            for (let value of this.profileMemberForm.value.otherOpenionRows) {
                if (value.otherMemberName != "" && value.description != "") {
                    if (value.otherMemberName != null) {
                        if (value.otherMemberName.length > 0) {
                            let refMemberId = value.otherMemberName[0].id;
                            membersOthersOpinionDtos.push({ "refMemberId": refMemberId, "description": value.description });
                        }
                    }
                }
            }
            ;
            this.profileMember.membersOthersOpinionDtos = membersOthersOpinionDtos;
            // #endregion
            this.profileMember.refMemberId = this.adminPage.membershipId;
            let data = {
                "proMemberId": this.profileMember.proMemberId,
                "refMemberId": this.profileMember.refMemberId,
                "qualification": this.profileMember.qualification,
                "motherTounge": this.profileMember.motherTounge,
                "height": this.profileMember.height,
                "weight": this.profileMember.weight,
                "dob": this.profileMember.dob,
                "birthPlace": this.profileMember.birthPlace,
                "refNationalityId": this.profileMember.refNationalityId,
                "description": this.profileMember.description,
                "experience": this.profileMember.experience,
                "aboutMe": this.profileMember.aboutMe,
                "otherLanguage": this.profileMember.otherLanguage,
                "membersOthersOpinionDtos": membersOthersOpinionDtos,
                "profileMemberShipPhotoDtos": this.profileMember.profileMemberShipPhotoDtos
            };
            this.loaderService.display(true);
            this.apiService.Create("profileMembership/save", data).subscribe(data => {
                this.loaderService.display(false);
                // this.premiumProfile.refProfileMembershipId = data.object.proMemberId;
                if (data.success == true) {
                    //this.premiumProfile.refProfileMembershipId = data.object.proMemberId;
                    this.premiumProfile.refProfileMembershipId = this.profileMember.proMemberId;
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
                }
            }, error => {
                console.log(error);
                this.loaderService.display(false);
            });
        }
        else {
            this.apiService.validateAllFormFields(this.profileMemberForm);
            sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Please Enter All The Mandatory Fields");
        }
    }
    GetCityDetailsByStateId() {
        this.cityList = [];
        this.adminPage.refCityId = "";
        this.selectedcity = [];
        if (this.adminPage.refStateId != undefined && this.adminPage.refStateId != 0) {
            let refStateId = this.adminPage.refStateId;
            var Cdata = { "refStateId": refStateId };
            this.apiService.Create("city/getAllCityByStateId", Cdata).subscribe(data => {
                if (data.success) {
                    if (data.object != undefined && data.object != null) {
                        if (data.object != undefined) {
                            let cityDtoList = data.object;
                            let cityList = [];
                            cityDtoList.forEach(city => {
                                if (city.cityId > 0) {
                                    cityList.push({ "id": city.cityId, "itemName": city.cityName });
                                    //this.adminPage.refCityId = city.cityId;
                                }
                            });
                            this.cityList = cityList;
                        }
                    }
                }
            });
        }
    }
    hdPhotoApply(e) {
        $('#mainPhotoPath').removeAttr('src');
        this.premiumProfile.filename = "";
        this.premiumProfile.filetype = "";
        this.premiumProfile.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0]) {
            var reader = new FileReader();
            reader.readAsDataURL(e.target.files[0]);
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "JPG" || extention == "jpg") && e.target.files[0].size <= 10000000) // 2097152 bytes = 2MB 
             {
                this.loaderService.display(true);
                this.hdimageChangedEvent = e;
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = (event) => {
                    this.url = event.target.result;
                    this.premiumProfile.filename = file.name;
                    this.premiumProfile.filetype = file.type;
                    // const csv: string = reader.result as string;
                    // this.premiumProfile.imageBase64String = csv.replace("data:image/jpeg;base64,", "");
                    this.premiumProfile.imageBase64String = reader.result;
                    this.premiumMemberForm.controls.mainPhotoPath.setValue(this.premiumProfile.imageBase64String);
                    //  this.premiumProfile.mainPhotoPath = csv.replace("data:image/jpeg;base64,", "");
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG") {
                this.premiumProfile.filename = "";
                this.premiumProfile.filetype = "";
                // this.premiumProfile.imageBase64String = "";
                // this.adminPage.profileImagePath = this.adminPage.imageBase64String;
                $('#mainPhotoPath').removeAttr('src');
                this.premiumMemberForm.controls.mainPhotoPath.setValue("");
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.premiumProfile.filename = "";
                this.premiumProfile.filetype = "";
                //this.premiumProfile.imageBase64String = "";
                // this.adminPage.profileImagePath = "";
                this.premiumMemberForm.controls.mainPhotoPath.setValue("");
                $('#mainPhotoPath').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Document size should be less than 10MB");
                return;
            }
        }
    }
    hdimageCropped(event) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.croppedhdphoto = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.premiumMemberForm.controls.mainPhotoPath.setValue(this.croppedhdphoto);
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                this.croppedhdphoto = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.premiumMemberForm.controls.mainPhotoPath.setValue(this.croppedhdphoto);
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.croppedhdphoto = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.premiumMemberForm.controls.mainPhotoPath.setValue(this.croppedhdphoto);
            });
        }
    }
    hdimageLoaded() {
        // show cropper
    }
    hdcropperReady() {
        // cropper ready
    }
    hdloadImageFailed() {
        // show message
    }
    // end hd photo
    //for article pdf/photo convertion in my_web_page
    //articleImage = [];
    multipartArticleUpload(e, seqNo) {
        this.premiumProfile.filename = "";
        this.premiumProfile.filetype = "";
        this.article = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
        this.premiumProfile.articleImg[seqNo] = this.article;
        if (e.target.files && e.target.files[0] && e.target.files[0].size <= 200000) {
            this.loaderService.display(true);
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if (extention == "JPEG" || extention == "jpeg" || extention == "JPG" || extention == "jpg") {
                var date = new Date();
                var uploadFor = "Article" + (Number(seqNo) + 1) + date.getFullYear() + date.getMonth() + date.getDate() + date.getHours() + date.getMinutes() + date.getSeconds();
                let formData = new FormData();
                let data = {
                    "mobile": this.adminPage.mobile,
                    "for": uploadFor
                };
                formData.append("file", e.target.files[0]);
                formData.append("info", new Blob([JSON.stringify(data)], {
                    type: "application/json"
                }));
                this.apiService.saveFormData("file/upload", formData).subscribe(data1 => {
                    if (data1.success == true) {
                        this.premiumProfile.articleImg[seqNo].articalPath = "";
                        const ctrl = this.premiumMemberForm.controls['articleRows'];
                        ctrl.controls[seqNo].get('articlePath').setValue(data1.object);
                        this.premiumProfile.articleImg[seqNo].articalPath = data1.object;
                    }
                    this.loaderService.display(false);
                });
            }
            else {
                this.premiumProfile.filename = "";
                this.premiumProfile.filetype = "";
                //this.premiumProfile.imageBase64Article = "";
                //  $('#articlePath').removeAttr('src');
                this.premiumProfile.articleImg[seqNo].articalPath = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
        }
        else {
            this.premiumProfile.filename = "";
            this.premiumProfile.filetype = "";
            //this.premiumProfile.imageBase64Article = "";
            //  $('#articlePath').removeAttr('src');
            this.premiumProfile.articleImg[seqNo].articalPath = "";
            this.loaderService.display(false);
            sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Please Upload Image file less than 200KB");
            return;
        }
    }
    articleUpload(e, seqNo) {
        this.loaderService.display(true);
        this.premiumProfile.filename = "";
        this.premiumProfile.filetype = "";
        this.article = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
        this.premiumProfile.articleImg[seqNo] = this.article;
        // this.premiumProfile.imageBase64Article = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if (extention == "JPEG" || extention == "jpeg" || extention == "JPG" || extention == "jpg") {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.loaderService.display(false);
                    this.premiumProfile.filename = file.name;
                    this.premiumProfile.filetype = file.type;
                    var imageFormat;
                    if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") && e.target.files[0].size <= 200000) { //200kb
                        imageFormat = extention;
                        this.premiumProfile.articleImg[seqNo].articalPathFileType = extention;
                        const csv = reader.result;
                        let Response = csv;
                        const ctrl = this.premiumMemberForm.controls['articleRows'];
                        ctrl.controls[seqNo].get('articlePath').setValue(Response);
                        this.premiumProfile.articleImg[seqNo].articalPath = Response;
                    }
                    else if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") && e.target.files[0].size > 200000) {
                        this.premiumProfile.filename = "";
                        this.premiumProfile.filetype = "";
                        //  this.premiumProfile.imageBase64Article = "";
                        // this.adminPage.profileImagePath = "";
                        // $('#articlePath').removeAttr('src');
                        this.premiumProfile.articleImg[seqNo].articalPath = "";
                        this.loaderService.display(false);
                        sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Article image size should be less than 200KB");
                        return;
                    }
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG") {
                this.premiumProfile.filename = "";
                this.premiumProfile.filetype = "";
                //this.premiumProfile.imageBase64Article = "";
                //  $('#articlePath').removeAttr('src');
                this.premiumProfile.articleImg[seqNo].articalPath = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
        }
    }
    multipartArticlePDFUpload(e, seqNo) {
        this.loaderService.display(true);
        this.premiumProfile.filename = "";
        this.premiumProfile.filetype = "";
        this.article = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
        this.premiumProfile.articlePdf[seqNo] = this.article;
        if (e.target.files && e.target.files[0] && e.target.files[0].size <= 1024000) {
            this.loaderService.display(true);
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            this.premiumProfile.filename = file.name;
            this.premiumProfile.filetype = file.type;
            var extention = nameArray[nameArray.length - 1];
            if (extention == "pdf" || extention == "PDF") {
                var date = new Date();
                var uploadFor = "ArticlePdf" + (Number(seqNo) + 1) + date.getFullYear() + date.getMonth() + date.getDate() + date.getHours() + date.getMinutes() + date.getSeconds();
                let formData = new FormData();
                let data = {
                    "mobile": this.adminPage.mobile,
                    "for": uploadFor
                };
                formData.append("file", e.target.files[0]);
                formData.append("info", new Blob([JSON.stringify(data)], {
                    type: "application/json"
                }));
                this.apiService.saveFormData("file/upload", formData).subscribe(data1 => {
                    if (data1.success == true) {
                        const ctrl = this.premiumMemberForm.controls['articlePdfRows'];
                        ctrl.controls[seqNo].get('articlePdfPath').setValue(data1.object);
                        //this.premiumProfile.articlePdf[seqNo].articalPath = data1.object;
                        this.premiumProfile.articlePdf[seqNo].articalPathPDF = data1.object;
                    }
                    this.loaderService.display(false);
                });
            }
            else {
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Please Upload the valid PDF file");
                return;
            }
        }
        else {
            this.loaderService.display(false);
            sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Please Upload PDF file less than 1MB");
            return;
        }
    }
    articlePdfUpload(e, seqNo) {
        this.loaderService.display(true);
        this.premiumProfile.filename = "";
        this.premiumProfile.filetype = "";
        this.article = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
        this.premiumProfile.articlePdf[seqNo] = this.article;
        // this.premiumProfile.imageBase64Article = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if (extention == "pdf" || extention == "PDF") {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.loaderService.display(false);
                    this.premiumProfile.filename = file.name;
                    this.premiumProfile.filetype = file.type;
                    var imageFormat;
                    if ((extention == "pdf" || extention == "PDF") && e.target.files[0].size <= 1024000) { //1mb
                        imageFormat = extention;
                        this.premiumProfile.articlePdf[seqNo].articalPathFileType = extention;
                        const csv = reader.result;
                        let Response = csv;
                        const ctrl = this.premiumMemberForm.controls['articlePdfRows'];
                        ctrl.controls[seqNo].get('articlePdfPath').setValue(Response);
                        this.premiumProfile.articlePdf[seqNo].articalPath = Response;
                        this.premiumProfile.articlePdf[seqNo].articalPathPDF = Response;
                    }
                    else if ((extention == "pdf" || extention == "PDF") && e.target.files[0].size > 1024000) {
                        this.premiumProfile.filename = "";
                        this.premiumProfile.filetype = "";
                        //  this.premiumProfile.imageBase64Article = "";
                        // this.adminPage.profileImagePath = "";
                        // $('#articlePath').removeAttr('src');
                        this.premiumProfile.articlePdf[seqNo].articalPath = "";
                        this.loaderService.display(false);
                        sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("PDF size should be less than 1MB");
                        return;
                    }
                };
            }
            else if (extention != "PDF" && extention != "pdf") {
                this.premiumProfile.filename = "";
                this.premiumProfile.filetype = "";
                //this.premiumProfile.imageBase64Article = "";
                //  $('#articlePath').removeAttr('src');
                this.premiumProfile.articlePdf[seqNo].articalPath = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Please Upload the valid PDF file");
                return;
            }
        }
    }
    // end article in my_web_page
    //for news photo convertion in my_web_page
    newsImageUpload(e, seqNo) {
        this.loaderService.display(true);
        // $('#news-upload').removeAttr('src');
        this.premiumProfile.filename = "";
        this.premiumProfile.filetype = "";
        // this.premiumProfile.imageBase64News = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "JPG" || extention == "jpg" || extention == "PNG" || extention == "png") && e.target.files[0].size <= 10000000) // 2097152 bytes = 2MB 
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.loaderService.display(false);
                    this.premiumProfile.filename = file.name;
                    this.premiumProfile.filetype = file.type;
                    var orientation = -1;
                    this.imageCompress.compressFile(reader.result, orientation, 25, 25).then(result => {
                        const csv = result;
                        //let Response = csv.replace("data:image/jpeg;base64,", "");
                        let Response = csv;
                        const ctrl = this.premiumMemberForm.controls['newsRows'];
                        ctrl.controls[seqNo].get('newsImagePath').setValue(Response);
                        this.premiumProfile.newsImg[seqNo] = Response;
                    });
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG" && extention != "png" && extention != "PNG") {
                this.premiumProfile.filename = "";
                this.premiumProfile.filetype = "";
                //this.premiumProfile.imageBase64News = "";
                //  $('#news-upload').removeAttr('src');
                this.premiumProfile.newsImg[seqNo] = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Please Upload the valid file");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.premiumProfile.filename = "";
                this.premiumProfile.filetype = "";
                // this.premiumProfile.imageBase64News = "";
                // this.adminPage.profileImagePath = "";
                // $('#news-upload').removeAttr('src');
                this.premiumProfile.newsImg[seqNo] = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Document size should be less than 10MB");
                return;
            }
        }
    }
    galleryImageUpload(e, seqNo) {
        this.loaderService.display(true);
        // $('#galary-upload').removeAttr('src');
        this.premiumProfile.filename = "";
        this.premiumProfile.filetype = "";
        this.imageChangedEventGalary[seqNo] = "";
        // this.premiumProfile.imageBase64Gallery = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") && e.target.files[0].size <= 10000000) // 2097152 bytes = 2MB 
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.premiumProfile.galImg[seqNo] = reader.result;
                    this.imageChangedEventGalary[seqNo] = e;
                    this.premiumProfile.filename = file.name;
                    this.premiumProfile.filetype = file.type;
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG") {
                this.premiumProfile.filename = "";
                this.premiumProfile.filetype = "";
                // this.premiumProfile.imageBase64Gallery = "";
                // $('#galary-upload').removeAttr('src');
                this.premiumProfile.galImg[seqNo] = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.premiumProfile.filename = "";
                this.premiumProfile.filetype = "";
                // this.premiumProfile.imageBase64Gallery = "";
                // this.adminPage.profileImagePath = "";
                // $('#galary-upload').removeAttr('src');
                this.premiumProfile.galImg[seqNo] = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Document size should be less than 10MB");
                return;
            }
        }
    }
    // end gallery in my_web_page
    imageCroppedGalary(event, seqNo) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        var date = new Date();
        var fileName = "MemberGallery" + (Number(seqNo) + 1) + date.getFullYear() + date.getMonth() + date.getDate() + date.getHours() + date.getMinutes() + date.getSeconds();
        //var fileName = "MemberGallery" + (seqNo + 1);
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                let data = {
                    'mobile': this.adminPage.mobile,
                    'fileName': fileName,
                    'base64': result
                };
                this.apiService.Create('file/uploadBase64', data).subscribe((data1) => {
                    this.loaderService.display(false);
                    this.premiumProfile.galImg[seqNo] = "";
                    // this.imageChangedEventGalary[seqNo] = result;
                    if (this.imageChangedEventGalary[seqNo]) {
                        const ctrl = this.premiumMemberForm.controls['galleryRows'];
                        ctrl.controls[seqNo].get('galaryPath').setValue(data1.object);
                        this.premiumProfile.galImg[seqNo] = result;
                    }
                });
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                let data = {
                    'mobile': this.adminPage.mobile,
                    'fileName': fileName,
                    'base64': result
                };
                this.apiService.Create('file/uploadBase64', data).subscribe((data1) => {
                    this.loaderService.display(false);
                    this.premiumProfile.galImg[seqNo] = "";
                    // this.imageChangedEventGalary[seqNo] = result;
                    if (this.imageChangedEventGalary[seqNo]) {
                        const ctrl = this.premiumMemberForm.controls['galleryRows'];
                        ctrl.controls[seqNo].get('galaryPath').setValue(data1.object);
                        this.premiumProfile.galImg[seqNo] = result;
                    }
                });
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                let data = {
                    'mobile': this.adminPage.mobile,
                    'fileName': fileName,
                    'base64': result
                };
                this.apiService.Create('file/uploadBase64', data).subscribe((data1) => {
                    this.loaderService.display(false);
                    this.premiumProfile.galImg[seqNo] = "";
                    // this.imageChangedEventGalary[seqNo] = result;
                    if (this.imageChangedEventGalary[seqNo]) {
                        const ctrl = this.premiumMemberForm.controls['galleryRows'];
                        ctrl.controls[seqNo].get('galaryPath').setValue(data1.object);
                        this.premiumProfile.galImg[seqNo] = result;
                    }
                });
            });
        }
    }
    imageLoadedGalary() {
        // show cropper
    }
    cropperReadyGalary() {
        // cropper ready
    }
    loadImageFailedGalary() {
        // show message
    }
    submitPremiumProfile() {
        if (this.premiumMemberForm.valid) {
            // this.premiumProfile.mainPhotoPath = this.premiumProfile.imageBase64String;
            // this.premiumProfile.mainPhotoPath = this.croppedhdphoto.replace("data:image/jpeg;base64,", "");
            this.premiumProfile.mainPhotoPath = this.croppedhdphoto;
            //article save
            let membersArticlesDtos = [];
            for (let value of this.premiumMemberForm.value.articleRows) {
                //value.articlePath = this.premiumProfile.imageBase64Article;
                if (value.articlePath != "" && value.articlePath != undefined && value.articleTitle != "" && value.articleTitle != undefined) {
                    // value.articleTitle  = parseInt(value.articleTitle);
                    //  value.articleDescription = parseInt(value.articleDescription);
                    // value.articlePath = this.premiumProfile.imageBase64Article;
                    membersArticlesDtos.push({ "articalTitle": value.articleTitle, "articalPath": value.articlePath });
                }
            }
            for (let value of this.premiumMemberForm.value.articlePdfRows) {
                if (value.articlePdfPath != "" && value.articlePdfPath != undefined && value.articlePdfTitle != "" && value.articlePdfTitle != undefined) {
                    membersArticlesDtos.push({ "articalTitle": value.articlePdfTitle, "articalPath": value.articlePdfPath });
                }
            }
            //end article save
            // news and update save
            let membersNewsDtos = [];
            for (let value of this.premiumMemberForm.value.newsRows) {
                // value.newsImagePath = this.premiumProfile.imageBase64News;
                if (value.title != "" && value.title != undefined && value.description != "" && value.description != undefined) {
                    membersNewsDtos.push({ "title": value.title, "description": value.description, "newsImagePath": value.newsImagePath });
                }
            }
            //end news and update save
            // video save
            let membersVideosDtos = [];
            for (let value of this.premiumMemberForm.value.videoRows) {
                if (value.videoName != "" && value.videoURL != "" && value.videoName != undefined && value.videoURL != undefined) {
                    // value.videoName  = parseInt(value.videoName);
                    // value.videoURL = parseInt(value.videoURL);
                    membersVideosDtos.push({ "videoName": value.videoName, "videoURL": value.videoURL });
                }
            }
            //end video save
            this.premiumProfile.membersArticlesDtos = membersArticlesDtos;
            this.premiumProfile.membersNewsDtos = membersNewsDtos;
            this.premiumProfile.membersVideosDtos = membersVideosDtos;
            let membersGallaryDtos = [];
            for (let value of this.premiumMemberForm.value.galleryRows) {
                if (value.galaryPath != "" && value.galaryPath != undefined) {
                    membersGallaryDtos.push({ "galaryPath": value.galaryPath });
                }
            }
            this.premiumProfile.membersGallaryDtos = membersGallaryDtos;
            let membersSocialLinksDtos = [];
            if (this.socialLinksDtoList.length > 0) {
                this.socialLinksDtoList.forEach(social => {
                    if (social.socialLinksUrl != "" && social.socialLinksUrl != undefined) {
                        membersSocialLinksDtos.push({ "refSocialLinkId": social.socialLinksId, "socialLinksUrl": social.socialLinksUrl });
                    }
                });
            }
            this.premiumProfile.membersSocialLinksDtos = membersSocialLinksDtos;
            //this.premiumProfile.webPageId = 0;
            this.premiumProfile.refProfileMembershipId = this.profileMember.proMemberId;
            //  let webPriPubFlag = Number(this.premiumProfile.webPrivatePublicFlag);
            let resultData = {
                "webPageId": this.premiumProfile.webPageId,
                "refProfileMembershipId": this.premiumProfile.refProfileMembershipId,
                "mainPhotoPath": this.premiumProfile.mainPhotoPath,
                "membersArticlesDtos": this.premiumProfile.membersArticlesDtos,
                "membersGallaryDtos": this.premiumProfile.membersGallaryDtos,
                "membersNewsDtos": this.premiumProfile.membersNewsDtos,
                "membersSocialLinksDtos": this.premiumProfile.membersSocialLinksDtos,
                "membersVideosDtos": this.premiumProfile.membersVideosDtos,
                "webPrivatePublicFlag": this.premiumProfile.webPrivatePublicFlag
            };
            this.loaderService.display(true);
            this.apiService.Create("myWebPageMembership/save", resultData).subscribe(data => {
                this.loaderService.display(false);
                // this.premiumProfile.refProfileMembershipId = data.object.proMemberId;
                if (data != null && data != undefined) {
                    if (data.success == true) {
                        sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
                    }
                }
            }, error => {
                console.log(error);
                this.loaderService.display(false);
            });
        }
        else {
            this.apiService.validateAllFormFields(this.premiumMemberForm);
            sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Please Enter All The Mendtory fields");
        }
    }
    submitStatus(stid) {
        if (this.statusForm.valid) {
            let memberId = stid;
            let data = {
                "membershipId": memberId,
                "status": this.adminPage.status,
                "remarks": this.adminPage.remarks
            };
            this.apiService.Create(this.updatePath, data).subscribe(data => {
                if (data != null && data != undefined) {
                    this.closeBtn.nativeElement.click();
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
                    this.ngOnInit();
                }
            });
        }
        else {
            this.apiService.validateAllFormFields(this.statusForm);
            sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Please Enter All The Mandatory Fields");
        }
    }
    EditStatus(data) {
        let memberId = data.memberId;
        var da = {
            "membershipId": memberId
        };
        this.apiService.Create("member/getMemberDetailsByMemberId", da).subscribe(data => {
            if (data != null && data != undefined) {
                let statusdata = data.object;
                if (statusdata.isTempData == 1) {
                    this.updatePath = "memberTempData/approve";
                }
                else {
                    this.updatePath = "member/updateStatusAndRemarksByMemberId";
                }
                this.adminPage = statusdata;
                this.adminPage.membershipId = statusdata.membershipId;
                this.adminPage.status = statusdata.status;
                this.adminPage.remarks = statusdata.remarks;
                this.setStatusData();
            }
        });
    }
    SaveAndUpdateForm() {
        if (this.basicMemberForm.valid == true && this.profileMemberForm.valid == true && this.premiumMemberForm.valid == true) {
        }
        else {
            if (!this.basicMemberForm.valid) {
                this.apiService.validateAllFormFields(this.basicMemberForm);
            }
            if (!this.profileMemberForm.valid) {
                this.apiService.validateAllFormFields(this.profileMemberForm);
            }
            if (!this.premiumMemberForm.valid) {
                this.apiService.validateAllFormFields(this.premiumMemberForm);
            }
        }
    }
    ClearForm() {
        // this.claerBasicForm();
        // this.claerProfileForm();
        // this.claerWebPageForm();
        this.getOnLoadData();
    }
    GetOtherMemberList(evt) {
        let name = evt.target.value;
        let da = {
            "firstName": name
        };
        this.apiService.Create("member/getMemberDetailsByMemberName", da)
            .subscribe(data => {
            if (data != null && data != undefined) {
                if (data.success == true) {
                    if (data.object != undefined) {
                        let membershipDtoList = data.object;
                        let otherMemberList = [];
                        membershipDtoList.forEach(memname => {
                            if (memname.membershipId > 0) {
                                otherMemberList.push({ "id": memname.membershipId, "itemName": memname.firstName, "profileImage": memname.profileImage });
                            }
                        });
                        this.otherMemberList = otherMemberList;
                    }
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    setOtherOpenionMerberByName(firstName, meberId, index) {
        let da = {
            "firstName": firstName
        };
        this.apiService.Create("member/getMemberDetailsByMemberName", da)
            .subscribe(data => {
            if (data != null && data != undefined) {
                if (data.success == true) {
                    if (data.object != undefined) {
                        let membershipDtoList = data.object;
                        let otherMemberList = [];
                        membershipDtoList.forEach(memname => {
                            if (memname.membershipId > 0) {
                                otherMemberList.push({ "id": memname.membershipId, "itemName": memname.firstName, "profileImage": memname.profileImage });
                            }
                        });
                        this.otherMemberList = otherMemberList;
                        let curr = this.otherMemberList.filter(aa => aa.id == parseInt(meberId))[0];
                        this.selectedItems[index] = curr;
                        const control = this.profileMemberForm.controls['otherOpenionRows'];
                        control.controls[index].get('otherMemberName').setValue(curr.id);
                    }
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    disabledMemberForm() {
        this.basicMemberForm.disable();
        this.citySettings = {
            text: "Select City",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search City',
            badgeShowLimit: 5,
            disabled: true
        };
        this.statenameSettings = {
            text: "Select State",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search State',
            badgeShowLimit: 5,
            disabled: true
        };
        this.proffessionSettings = {
            text: 'Select ' + this.adminPage.ProfessionService,
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search ' + this.adminPage.ProfessionService,
            badgeShowLimit: 5,
            groupBy: "category",
            disabled: true
        };
        this.otherSkillSettings = {
            singleSelection: false,
            text: 'Select ' + this.adminPage.OtherSkillsOtherServices,
            enableCheckAll: false,
            enableFilterSelectAll: false,
            searchPlaceholderText: 'Search ' + this.adminPage.OtherSkillsOtherServices,
            enableSearchFilter: true,
            badgeShowLimit: 8,
            groupBy: "category",
            limitSelection: 8,
            disabled: true
        };
    }
    disabledProfileForm() {
        this.profileMemberForm.disable();
        this.motherToungeSettings = {
            text: "Select Mother Tounge",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Mother Tounge',
            badgeShowLimit: 5,
            disabled: true
        };
        this.otherLanguagesSettings = {
            text: "Select Other Languages",
            singleSelection: false,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Other Languages',
            badgeShowLimit: 5,
            disabled: true
        };
        this.nationSettings = {
            text: "Select Nation",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Nation',
            badgeShowLimit: 5,
            disabled: true
        };
        this.otherMembersettings = {
            text: "Select Member",
            classes: "myclass custom-class",
            noDataLabel: "Search Member...",
            enableSearchFilter: true,
            singleSelection: true,
            enableCheckAll: false,
            enableFilterSelectAll: false,
            disabled: true
        };
    }
    disabledWebPageForm() {
        this.premiumMemberForm.disable();
    }
    enableMemberForm() {
        this.basicMemberForm.enable();
        this.citySettings = {
            text: "Select City",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search City',
            badgeShowLimit: 5,
            disabled: false
        };
        this.statenameSettings = {
            text: "Select State",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search State',
            badgeShowLimit: 5,
            disabled: false
        };
        this.proffessionSettings = {
            text: 'Select ' + this.adminPage.ProfessionService,
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search ' + this.adminPage.ProfessionService,
            badgeShowLimit: 5,
            groupBy: "category",
            disabled: false
        };
        this.otherSkillSettings = {
            singleSelection: false,
            text: 'Select ' + this.adminPage.OtherSkillsOtherServices,
            enableCheckAll: false,
            enableFilterSelectAll: false,
            searchPlaceholderText: 'Search ' + this.adminPage.OtherSkillsOtherServices,
            enableSearchFilter: true,
            badgeShowLimit: 8,
            groupBy: "category",
            limitSelection: 8,
            disabled: false
        };
    }
    enableProfileForm() {
        this.profileMemberForm.enable();
        this.motherToungeSettings = {
            text: "Select Mother Tounge",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Mother Tounge',
            badgeShowLimit: 5,
            disabled: false
        };
        this.otherLanguagesSettings = {
            text: "Select Other Languages",
            singleSelection: false,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Other Languages',
            badgeShowLimit: 5,
            disabled: false
        };
        this.nationSettings = {
            text: "Select Nation",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Nation',
            badgeShowLimit: 5,
            disabled: false
        };
        this.otherMembersettings = {
            text: "Select Member",
            classes: "myclass custom-class",
            noDataLabel: "Search Member...",
            enableSearchFilter: true,
            singleSelection: true,
            enableCheckAll: false,
            enableFilterSelectAll: false,
            disabled: false
        };
    }
    enableWebPageForm() {
        this.premiumMemberForm.enable();
    }
    updateMemberShipData() {
        if (this.basicMemberForm.valid) {
            if (this.selectedproffession.length > 0) {
                let proffessionid = this.selectedproffession[0].id;
                this.adminPage.refProfessionId = proffessionid;
            }
            if (this.selectedotherSkill.length > 0) {
                let listIds = new Array();
                this.selectedotherSkill.forEach(curent => {
                    if (curent.id > 0) {
                        listIds.push(curent.id);
                    }
                });
                this.adminPage.otherSkills = listIds;
            }
            if (this.selectedstatename.length > 0) {
                let stateid = this.selectedstatename[0].id;
                this.adminPage.refStateId = stateid;
            }
            if (this.selectedcity.length > 0) {
                let refCityId = this.selectedcity[0].id;
                this.adminPage.refCityId = refCityId;
            }
            this.adminPage.individualORInstitute = this.adminPage.individualInstitute;
            this.adminPage.refUserId = 1;
            this.adminPage.imageBase64String = "";
            this.adminPage.profileImage = this.croppedImage;
            let refMemberFlag;
            if (this.selectedMemWebId != null && this.selectedMemWebId != undefined && this.selectedMemWebId != "") {
                refMemberFlag = true;
            }
            else {
                refMemberFlag = false;
            }
            if (this.selectedMemWebId == undefined && this.selectedMemberName == undefined && this.selectedMemberPhoto == undefined) {
                this.selectedMemWebId = 0;
                this.selectedMemberName = '';
                this.selectedMemberPhoto = '';
            }
            this.loaderService.display(true);
            let data = {
                "membershipId": this.adminPage.membershipId,
                "refUserId": this.adminPage.refUserId,
                "refMembershipTypeId": this.adminPage.refMembershipTypeId,
                "experienceType": this.adminPage.experienceType,
                "yearOfExp": this.adminPage.yearOfExp,
                "ageGroup": this.adminPage.ageGroup,
                "gender": this.adminPage.gender,
                "firstName": this.adminPage.firstName,
                "middleName": this.adminPage.middleName,
                "lastName": this.adminPage.lastName,
                "displayName": this.adminPage.displayName,
                "refProfessionId": this.adminPage.refProfessionId,
                "refCityId": this.adminPage.refCityId,
                "refStateId": this.adminPage.refStateId,
                "mobile": this.adminPage.mobile,
                "mobileVisibility": this.adminPage.mobileVisibility,
                "email": this.adminPage.email,
                "emailVisibility": this.adminPage.emailVisibility,
                "address": this.adminPage.address,
                "addressVisibility": this.adminPage.addressVisibility,
                "contactPerson": this.adminPage.contactPerson,
                "since": this.adminPage.since,
                "instructionByMember": this.adminPage.instructionByMember,
                "individualORInstitute": this.adminPage.individualORInstitute,
                "otherSkills": this.adminPage.otherSkills,
                "profileImage": this.adminPage.profileImage,
                "leagueTypeId": this.adminPage.leagueTypeId,
                "referedMemberId": this.selectedMemWebId,
                "referedByFlag": refMemberFlag,
                "referedMemberName": this.selectedMemberName,
                "referedMemberImage": this.selectedMemberPhoto
            };
            let originalData = {
                "memberTypeId": 1,
                "dataString": data,
                "memberId": this.adminPage.membershipId
            };
            this.apiService.Create("memberTempData/save", originalData).subscribe((data1) => {
                this.loaderService.display(false);
                if (data1.success == true) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data1.message);
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data1.message);
                }
            });
        }
        else {
            this.loaderService.display(false);
            this.apiService.validateAllFormFields(this.basicMemberForm);
            sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Please Enter All The Mandatory Fields");
        }
    }
    // cancel() {
    //   this.router.navigate(['']);
    // }
    updateProfileData() {
        if (this.profileMemberForm.valid) {
            this.loaderService.display(true);
            if (this.selectedmotherTounge.length > 0) {
                let mothertoungueid = this.selectedmotherTounge[0].id;
                this.profileMember.motherTounge = mothertoungueid;
            }
            if (this.selectedotherLanguages.length > 0) {
                let listotherlangIds = new Array();
                this.selectedotherLanguages.forEach(curent => {
                    if (curent.id > 0) {
                        listotherlangIds.push(curent.id);
                        this.profileMember.otherLanguage = listotherlangIds;
                        //this.selectedotherLanguages = listotherlangIds;
                    }
                });
            }
            if (this.selectednation.length > 0) {
                let nationalid = this.selectednation[0].id;
                this.profileMember.refNationalityId = nationalid;
            }
            // set Profile pics 7 start
            this.imageSendArr.push({ "imagePath": this.url11, "seqNum": 1 });
            this.imageSendArr.push({ "imagePath": this.url22, "seqNum": 2 });
            this.imageSendArr.push({ "imagePath": this.url33, "seqNum": 3 });
            this.imageSendArr.push({ "imagePath": this.url44, "seqNum": 4 });
            this.imageSendArr.push({ "imagePath": this.url55, "seqNum": 5 });
            this.imageSendArr.push({ "imagePath": this.url66, "seqNum": 6 });
            this.imageSendArr.push({ "imagePath": this.url77, "seqNum": 7 });
            this.profileMember.profileMemberShipPhotoDtos = this.imageSendArr;
            //end
            // #region   otherOpenionArray
            let membersOthersOpinionDtos = [];
            for (let value of this.profileMemberForm.value.otherOpenionRows) {
                if (value.otherMemberName != "" && value.description != "") {
                    if (value.otherMemberName != null) {
                        if (value.otherMemberName.length > 0) {
                            let refMemberId = value.otherMemberName[0].id;
                            membersOthersOpinionDtos.push({ "refMemberId": refMemberId, "description": value.description });
                        }
                    }
                }
            }
            ;
            this.profileMember.membersOthersOpinionDtos = membersOthersOpinionDtos;
            // #endregion
            this.profileMember.refMemberId = this.adminPage.membershipId;
            let data = {
                "proMemberId": this.profileMember.proMemberId,
                "refMemberId": this.profileMember.refMemberId,
                "qualification": this.profileMember.qualification,
                "motherTounge": this.profileMember.motherTounge,
                "height": this.profileMember.height,
                "weight": this.profileMember.weight,
                "dob": this.profileMember.dob,
                "birthPlace": this.profileMember.birthPlace,
                "refNationalityId": this.profileMember.refNationalityId,
                "description": this.profileMember.description,
                "experience": this.profileMember.experience,
                "aboutMe": this.profileMember.aboutMe,
                "otherLanguage": this.profileMember.otherLanguage,
                "membersOthersOpinionDtos": membersOthersOpinionDtos,
                "profileMemberShipPhotoDtos": this.profileMember.profileMemberShipPhotoDtos
            };
            let originalData = {
                "memberTypeId": 2,
                "dataString": data,
                "memberId": this.adminPage.membershipId
            };
            this.apiService.Create("memberTempData/save", originalData).subscribe((data1) => {
                this.loaderService.display(false);
                if (data1.success == true) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data1.message);
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data1.message);
                }
            });
        }
    }
    updatePremiumData() {
        if (this.premiumMemberForm.valid) {
            this.loaderService.display(true);
            // this.premiumProfile.mainPhotoPath = this.premiumProfile.imageBase64String;
            // this.premiumProfile.mainPhotoPath = this.croppedhdphoto.replace("data:image/jpeg;base64,", "");
            this.premiumProfile.mainPhotoPath = this.croppedhdphoto;
            //article save
            let membersArticlesDtos = [];
            for (let value of this.premiumMemberForm.value.articleRows) {
                //value.articlePath = this.premiumProfile.imageBase64Article;
                if (value.articlePath != "" && value.articlePath != undefined && value.articleTitle != "" && value.articleTitle != undefined) {
                    // value.articleTitle  = parseInt(value.articleTitle);
                    //  value.articleDescription = parseInt(value.articleDescription);
                    // value.articlePath = this.premiumProfile.imageBase64Article;
                    membersArticlesDtos.push({ "articalTitle": value.articleTitle, "articalPath": value.articlePath });
                }
            }
            for (let value of this.premiumMemberForm.value.articlePdfRows) {
                if (value.articlePdfPath != "" && value.articlePdfPath != undefined && value.articlePdfTitle != "" && value.articlePdfTitle != undefined) {
                    membersArticlesDtos.push({ "articalTitle": value.articlePdfTitle, "articalPath": value.articlePdfPath });
                }
            }
            // video save
            let membersVideosDtos = [];
            for (let value of this.premiumMemberForm.value.videoRows) {
                if (value.videoName != "" && value.videoURL != "" && value.videoName != undefined && value.videoURL != undefined) {
                    // value.videoName  = parseInt(value.videoName);
                    // value.videoURL = parseInt(value.videoURL);
                    membersVideosDtos.push({ "videoName": value.videoName, "videoURL": value.videoURL });
                }
            }
            //end video save
            this.premiumProfile.membersArticlesDtos = membersArticlesDtos;
            this.premiumProfile.membersVideosDtos = membersVideosDtos;
            let membersGallaryDtos = [];
            for (let value of this.premiumMemberForm.value.galleryRows) {
                if (value.galaryPath != "" && value.galaryPath != undefined) {
                    membersGallaryDtos.push({ "galaryPath": value.galaryPath });
                }
            }
            this.premiumProfile.membersGallaryDtos = membersGallaryDtos;
            let membersSocialLinksDtos = [];
            if (this.socialLinksDtoList.length > 0) {
                this.socialLinksDtoList.forEach(social => {
                    if (social.socialLinksUrl != "" && social.socialLinksUrl != undefined) {
                        membersSocialLinksDtos.push({ "refSocialLinkId": social.socialLinksId, "socialLinksUrl": social.socialLinksUrl });
                    }
                });
            }
            this.premiumProfile.membersSocialLinksDtos = membersSocialLinksDtos;
            //this.premiumProfile.webPageId = 0;
            this.premiumProfile.refProfileMembershipId = this.profileMember.proMemberId;
            // let webPriPubFlag = Number(this.premiumProfile.webPrivatePublicFlag);
            let resultData = {
                "webPageId": this.premiumProfile.webPageId,
                "refProfileMembershipId": this.premiumProfile.refProfileMembershipId,
                "mainPhotoPath": this.premiumProfile.mainPhotoPath,
                "membersArticlesDtos": this.premiumProfile.membersArticlesDtos,
                "membersGallaryDtos": this.premiumProfile.membersGallaryDtos,
                "membersNewsDtos": this.premiumProfile.membersNewsDtos,
                "membersSocialLinksDtos": this.premiumProfile.membersSocialLinksDtos,
                "membersVideosDtos": this.premiumProfile.membersVideosDtos,
                "webPrivatePublicFlag": this.premiumProfile.webPrivatePublicFlag
            };
            let originalData = {
                "memberTypeId": 3,
                "dataString": resultData,
                "memberId": this.adminPage.membershipId
            };
            this.apiService.Create("memberTempData/save", originalData).subscribe((data1) => {
                this.loaderService.display(false);
                if (data1.success == true) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data1.message);
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data1.message);
                }
            });
        }
        else {
            sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Not valid");
        }
    }
};
MemberapprovallistnewComponent.ctorParameters = () => [
    { type: src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_2__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_15__["Router"] },
    { type: _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_10__["LoaderService"] },
    { type: ngx_image_compress__WEBPACK_IMPORTED_MODULE_11__["NgxImageCompressService"] },
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_12__["DomSanitizer"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Compiler"] },
    { type: src_app_services_account_service__WEBPACK_IMPORTED_MODULE_16__["AccountService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('closeBtn', { static: true })
], MemberapprovallistnewComponent.prototype, "closeBtn", void 0);
MemberapprovallistnewComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-memberapprovallistnew',
        template: __webpack_require__(/*! raw-loader!./memberapprovallistnew.component.html */ "./node_modules/raw-loader/index.js!./src/app/account/memberapprovallistnew/memberapprovallistnew.component.html"),
        styles: [__webpack_require__(/*! ./memberapprovallistnew.component.scss */ "./src/app/account/memberapprovallistnew/memberapprovallistnew.component.scss")]
    })
], MemberapprovallistnewComponent);



/***/ }),

/***/ "./src/app/account/memberpendinglist/memberpendinglist.component.scss":
/*!****************************************************************************!*\
  !*** ./src/app/account/memberpendinglist/memberpendinglist.component.scss ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".row {\n  padding: 1% 0%;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\n.content {\n  margin: 1% 2%;\n}\n\n.no-data-available {\n  text-align: center;\n}\n\n.has-search .form-control {\n  padding-left: 2.375rem;\n}\n\n.has-search .form-control-feedback {\n  position: absolute;\n  z-index: 2;\n  display: block;\n  width: 2.375rem;\n  height: 2.375rem;\n  line-height: 2.375rem;\n  text-align: center;\n  pointer-events: none;\n  color: #aaa;\n}\n\n.tabs {\n  margin: 5% 8%;\n  width: 100%;\n  color: #2d3e50;\n  font-weight: 500;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 8px 20px;\n  border-radius: 8px;\n  font-size: 20px;\n  font-weight: bold;\n}\n\n.btn2 {\n  border: 1px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 12px;\n  font-weight: bold;\n}\n\n.addremovebtn {\n  padding: 0px 10px;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.indinstname {\n  margin: auto;\n  color: #2d3e50;\n  font-size: 128%;\n  font-weight: 700;\n  text-transform: uppercase;\n}\n\n.status-badge {\n  width: 100%;\n  padding: 0% 2%;\n  font-size: 12px;\n}\n\n.pro1pic {\n  height: auto;\n  width: 107%;\n  margin: auto;\n  display: block;\n}\n\n.pro2pic {\n  height: auto;\n  width: 107%;\n  margin: auto;\n  display: block;\n}\n\n.pro3pic {\n  height: auto;\n  width: 119%;\n  margin: auto;\n  display: block;\n}\n\n.statusbtn {\n  padding: 0% 2%;\n  font-size: 12px;\n  margin: 0% 2%;\n  width: 30%;\n}\n\n#pripubnote {\n  font-family: \"Noto Sans Kannada\", sans-serif;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL2FjY291bnQvbWVtYmVycGVuZGluZ2xpc3QvbWVtYmVycGVuZGluZ2xpc3QuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FjY291bnQvbWVtYmVycGVuZGluZ2xpc3QvbWVtYmVycGVuZGluZ2xpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtFQUNBLGNBQUE7QUNDSjs7QURFQTtFQUNJLGFBQUE7QUNDSjs7QURFQTtFQUNJLGtCQUFBO0FDQ0o7O0FERUE7RUFDSSxzQkFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxVQUFBO0VBQ0EsY0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLHFCQUFBO0VBQ0Esa0JBQUE7RUFDQSxvQkFBQTtFQUNBLFdBQUE7QUNDSjs7QURFQTtFQUNJLGFBQUE7RUFDQSxXQUFBO0VBQ0EsY0FBQTtFQUNBLGdCQUFBO0FDQ0o7O0FERUE7RUFDSSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EscUJBQUE7QUNDSjs7QURFQTtFQUNJLHNCQUFBO0VBQ0EsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksc0JBQUE7RUFDQSxXQUFBO0VBQ0EsdUJBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0FDQ0o7O0FERUE7RUFDSSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxNQUFBO0VBQ0EsVUFBQTtBQ0NKOztBREVBO0VBQ0ksWUFBQTtFQUNBLGNBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSx5QkFBQTtBQ0NKOztBREVBO0VBQ0ksV0FBQTtFQUNBLGNBQUE7RUFDQSxlQUFBO0FDQ0o7O0FERUE7RUFDSSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGFBQUE7RUFDQSxVQUFBO0FDQ0o7O0FERUE7RUFDSSw0Q0FBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvYWNjb3VudC9tZW1iZXJwZW5kaW5nbGlzdC9tZW1iZXJwZW5kaW5nbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yb3cge1xuICAgIHBhZGRpbmc6IDElIDAlO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gICAgY29sb3I6ICNmYmUxMTY7XG59XG5cbi5jb250ZW50IHtcbiAgICBtYXJnaW46IDElIDIlO1xufVxuXG4ubm8tZGF0YS1hdmFpbGFibGUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmhhcy1zZWFyY2ggLmZvcm0tY29udHJvbCB7XG4gICAgcGFkZGluZy1sZWZ0OiAyLjM3NXJlbTtcbn1cblxuLmhhcy1zZWFyY2ggLmZvcm0tY29udHJvbC1mZWVkYmFjayB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IDI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDIuMzc1cmVtO1xuICAgIGhlaWdodDogMi4zNzVyZW07XG4gICAgbGluZS1oZWlnaHQ6IDIuMzc1cmVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICBjb2xvcjogI2FhYTtcbn1cblxuLnRhYnMge1xuICAgIG1hcmdpbjogNSUgOCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgY29sb3I6ICMyZDNlNTA7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4uYnRuMSB7XG4gICAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcbiAgICBjb2xvcjogZ3JheTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiA4cHggMjBweDtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4uYnRuMiB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcbiAgICBjb2xvcjogZ3JheTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiA0cHggOHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5hZGRyZW1vdmVidG4ge1xuICAgIHBhZGRpbmc6IDBweCAxMHB4O1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xuICAgIGZvbnQtc2l6ZTogMTAwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIG9wYWNpdHk6IDA7XG59XG5cbi5pbmRpbnN0bmFtZSB7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIGNvbG9yOiAjMmQzZTUwO1xuICAgIGZvbnQtc2l6ZTogMTI4JTtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi5zdGF0dXMtYmFkZ2Uge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDAlIDIlO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuLnBybzFwaWMge1xuICAgIGhlaWdodDogYXV0bztcbiAgICB3aWR0aDogMTA3JTtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5wcm8ycGljIHtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgd2lkdGg6IDEwNyU7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ucHJvM3BpYyB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIHdpZHRoOiAxMTklO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnN0YXR1c2J0biB7XG4gICAgcGFkZGluZzogMCUgMiU7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIG1hcmdpbjogMCUgMiU7XG4gICAgd2lkdGg6IDMwJTtcbn1cblxuI3ByaXB1Ym5vdGUge1xuICAgIGZvbnQtZmFtaWx5OiBcIk5vdG8gU2FucyBLYW5uYWRhXCIsIHNhbnMtc2VyaWY7XG59IiwiLnJvdyB7XG4gIHBhZGRpbmc6IDElIDAlO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxuLmNvbnRlbnQge1xuICBtYXJnaW46IDElIDIlO1xufVxuXG4ubm8tZGF0YS1hdmFpbGFibGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5oYXMtc2VhcmNoIC5mb3JtLWNvbnRyb2wge1xuICBwYWRkaW5nLWxlZnQ6IDIuMzc1cmVtO1xufVxuXG4uaGFzLXNlYXJjaCAuZm9ybS1jb250cm9sLWZlZWRiYWNrIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDIuMzc1cmVtO1xuICBoZWlnaHQ6IDIuMzc1cmVtO1xuICBsaW5lLWhlaWdodDogMi4zNzVyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIGNvbG9yOiAjYWFhO1xufVxuXG4udGFicyB7XG4gIG1hcmdpbjogNSUgOCU7XG4gIHdpZHRoOiAxMDAlO1xuICBjb2xvcjogIzJkM2U1MDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4uYnRuMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gIGNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogOHB4IDIwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmJ0bjIge1xuICBib3JkZXI6IDFweCBzb2xpZCBncmF5O1xuICBjb2xvcjogZ3JheTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDRweCA4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmFkZHJlbW92ZWJ0biB7XG4gIHBhZGRpbmc6IDBweCAxMHB4O1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xuICBmb250LXNpemU6IDEwMHB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgb3BhY2l0eTogMDtcbn1cblxuLmluZGluc3RuYW1lIHtcbiAgbWFyZ2luOiBhdXRvO1xuICBjb2xvcjogIzJkM2U1MDtcbiAgZm9udC1zaXplOiAxMjglO1xuICBmb250LXdlaWdodDogNzAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4uc3RhdHVzLWJhZGdlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDAlIDIlO1xuICBmb250LXNpemU6IDEycHg7XG59XG5cbi5wcm8xcGljIHtcbiAgaGVpZ2h0OiBhdXRvO1xuICB3aWR0aDogMTA3JTtcbiAgbWFyZ2luOiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnBybzJwaWMge1xuICBoZWlnaHQ6IGF1dG87XG4gIHdpZHRoOiAxMDclO1xuICBtYXJnaW46IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ucHJvM3BpYyB7XG4gIGhlaWdodDogYXV0bztcbiAgd2lkdGg6IDExOSU7XG4gIG1hcmdpbjogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5zdGF0dXNidG4ge1xuICBwYWRkaW5nOiAwJSAyJTtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBtYXJnaW46IDAlIDIlO1xuICB3aWR0aDogMzAlO1xufVxuXG4jcHJpcHVibm90ZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk5vdG8gU2FucyBLYW5uYWRhXCIsIHNhbnMtc2VyaWY7XG59Il19 */"

/***/ }),

/***/ "./src/app/account/memberpendinglist/memberpendinglist.component.ts":
/*!**************************************************************************!*\
  !*** ./src/app/account/memberpendinglist/memberpendinglist.component.ts ***!
  \**************************************************************************/
/*! exports provided: MemberpendinglistComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MemberpendinglistComponent", function() { return MemberpendinglistComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var src_app_modals_adminpage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/modals/adminpage */ "./src/app/modals/adminpage.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _oldmemberlist__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./oldmemberlist */ "./src/app/account/memberpendinglist/oldmemberlist.ts");
/* harmony import */ var _app_modals_profilemember__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../../app/modals/profilemember */ "./src/app/modals/profilemember.ts");
/* harmony import */ var _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../../app/modals/premiumprofile */ "./src/app/modals/premiumprofile.ts");
/* harmony import */ var ngx_image_compress__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ngx-image-compress */ "./node_modules/ngx-image-compress/fesm2015/ngx-image-compress.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _app_modals_permission__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../../../app/modals/permission */ "./src/app/modals/permission.ts");
/* harmony import */ var _modals_validityprofile__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../modals/validityprofile */ "./src/app/modals/validityprofile.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var _newmemberlist__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./newmemberlist */ "./src/app/account/memberpendinglist/newmemberlist.ts");
/* harmony import */ var src_app_services_account_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! src/app/services/account.service */ "./src/app/services/account.service.ts");
/* harmony import */ var src_app_modals_MasterContentRestriction__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! src/app/modals/MasterContentRestriction */ "./src/app/modals/MasterContentRestriction.ts");




















let MemberpendinglistComponent = class MemberpendinglistComponent {
    constructor(apiService, loaderService, fb, imageCompress, router, sanitizer, _compiler, acc) {
        this.apiService = apiService;
        this.loaderService = loaderService;
        this.fb = fb;
        this.imageCompress = imageCompress;
        this.router = router;
        this.sanitizer = sanitizer;
        this._compiler = _compiler;
        this.acc = acc;
        this.oldMemberList = [];
        this.newMemberList = [];
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        //city nation
        this.otherMemberList = [];
        this.selectedItems = [];
        this.otherMembersettings = {};
        //place = 'Individual';
        this.member = 'exp';
        this.memberinst = 'experinst';
        this.adminPage = new src_app_modals_adminpage__WEBPACK_IMPORTED_MODULE_5__["AdminPage"]();
        this.oldmemberlist = new _oldmemberlist__WEBPACK_IMPORTED_MODULE_7__["Oldmemberlist"]();
        this.newmemberlist = new _newmemberlist__WEBPACK_IMPORTED_MODULE_16__["Newmemberlist"]();
        this.profileMember = new _app_modals_profilemember__WEBPACK_IMPORTED_MODULE_8__["ProfileMember"]();
        this.premiumProfile = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["PremiumProfile"]();
        this.article = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
        this.validityProfile = new _modals_validityprofile__WEBPACK_IMPORTED_MODULE_13__["ValidityProfile"]();
        this.basicUpdateButton = true;
        this.profileUpdateButton = true;
        this.webPageUpdateButton = true;
        this.contentRestriction = new src_app_modals_MasterContentRestriction__WEBPACK_IMPORTED_MODULE_18__["MasterContentRestriction"]();
        // IsmodelShow : boolean = false;
        // display='none';
        // articleForm: FormGroup;
        // newsForm: FormGroup;
        // galleryForm: FormGroup;
        // videoForm: FormGroup;
        // socialForm: FormGroup;
        this.permission = new _app_modals_permission__WEBPACK_IMPORTED_MODULE_12__["Permission"]();
        this.modules = {};
        this.log = 0;
        this.showLog = false;
        this.imageChangedEvent = ''; // image crop
        this.croppedImage = ''; // image crop
        this.imageChangedEvent1Profile = '';
        this.imageChangedEvent2Profile = '';
        this.imageChangedEvent3Profile = '';
        this.imageChangedEvent4Profile = '';
        this.imageChangedEvent5Profile = '';
        this.imageChangedEvent6Profile = '';
        this.imageChangedEvent7Profile = '';
        this.imageSendArr = [];
        this.socialLinksDtoList = [];
        //gallery method 
        this.urls = [];
        // for my web page hd photo
        this.hdimageChangedEvent = ''; // image crop
        this.croppedhdphoto = '';
        this.croppedGalary = '';
        this.acc.currentUser.subscribe(x => this.currentUser = x);
        this.basicMemberForm = this.fb.group({
            individualInstitute: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            experienceType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            firstName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(2)])],
            middleName: [''],
            lastName: [''],
            yearOfExp: [''],
            ageGroup: [''],
            gender: [''],
            profession: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            otherskills: [''],
            mobile: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(10), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(10)])],
            mobileVisibility: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            email: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(5), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(60)])],
            emailVisibility: [''],
            address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(256)])],
            addressVisibility: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            profileImage: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            since: [''],
            contactPerson: [''],
            leagueTypeId: [''],
            instructionByMember: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(1200)])]
        });
        this.statusForm = this.fb.group({
            status: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            remarks: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required]
        });
        this.profileMemberForm = this.fb.group({
            qualification: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            motherTounge: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            otherLanguages: [''],
            height: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].pattern("^[3-9]+\'[ ]?[0-9]{1,2}[\"]?$")])],
            weight: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].pattern("^[0-9]{1,3}")])],
            dob: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].pattern("^([0]?[1-9]|[1|2][0-9]|[3][0|1])[./-]([0]?[1-9]|[1][0-2])$")])],
            birthPlace: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            nationality: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(600), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(30)])],
            aboutMe: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(25000), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(30)])],
            experience: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(25000), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(30)])],
            otherOpenionRows: this.fb.array([this.initotherOpenionRows()]),
            ProfileimagePath1: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            ProfileimagePath2: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            ProfileimagePath3: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            ProfileimagePath4: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            ProfileimagePath5: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            ProfileimagePath6: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            ProfileimagePath7: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required]
        });
        this.premiumMemberForm = this.fb.group({
            mainPhotoPath: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            webPrivatePublicFlag: [''],
            socialLinkRows: this.fb.array([]),
            articleRows: this.fb.array([this.initarticleRows()]),
            articlePdfRows: this.fb.array([this.initarticlePdfRows()]),
            newsRows: this.fb.array([this.initnewsRows()]),
            galleryRows: this.fb.array([this.initgalleryRows()]),
            videoRows: this.fb.array([this.initvideoRows()])
        });
        this.modules = {
            'toolbar': [
                ['bold', 'italic', 'underline', 'strike'],
                [{ 'header': 1 }, { 'header': 2 }],
                [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                // [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript
                // [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
                // [{ 'direction': 'rtl' }],                         // text direction
                [{ 'size': ['small', false, 'large', 'huge'] }],
                // [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                [{ 'color': [] }, { 'background': [] }],
                [{ 'font': [] }],
                [{ 'align': [] }],
            ]
        };
    }
    /*old member list search start */
    oldMemberListSearchData(e) {
        let name = e.target.value;
        let roleData = JSON.parse(localStorage.getItem('staffLogin')).object.roleDto;
        let userData = JSON.parse(localStorage.getItem('staffLogin')).object.userDto;
        let data = {};
        // if (roleData.roleId == 9) {
        //   data = {
        //     "generalSearch": name,
        //     "offset": 0,
        //     "limit": 20,
        //     "audtionId": "0",
        //     "createdByRoleId": roleData.roleId,
        //     "createdByUserId": userData.userId
        //   }
        // }
        // else {
        //   data = {
        //     "generalSearch": name,
        //     "offset": 0,
        //     "limit": 20,
        //     "audtionId": "0"
        //   }
        // }
        let cuid;
        if (roleData.roleId == 9) {
            cuid = userData.userId;
        }
        else {
            cuid = 0;
        }
        data = {
            "ageGroup": this.oldmemberlist.ageGroup,
            "limit": this.oldmemberlist.limit,
            "createdByRoleId": "",
            "createdByUserId": cuid,
            "experienceType": this.oldmemberlist.experienceType,
            "gender": this.oldmemberlist.gender,
            "generalSearch": name,
            "individualInstitute": this.oldmemberlist.individualInstitute,
            "offset": this.oldmemberlist.offset,
            "refProfessionId": this.oldmemberlist.refProfessionId,
            "yearOfExp": this.oldmemberlist.yearOfExp
        };
        if (name.length >= 2) {
            this.loaderService.display(true);
            this.oldMemberList = [];
            this.apiService.Create("member/memberOldPendingList", data).subscribe(data => {
                this.loaderService.display(false);
                if (data != undefined) {
                    if (data.success) {
                        if (data.object != undefined) {
                            this.oldmemberlist.totalRecords = data.object.totalRecords;
                            this.oldmemberlist.noOfPages = data.object.noOfPages;
                            if (data.object.records != undefined && data.object.records != null) {
                                this.oldMemberList = data.object.records;
                                this.dtTrigger.next();
                            }
                        }
                    }
                }
            }, error => {
                console.log(error);
                this.loaderService.display(false);
            });
        }
    }
    /*old member list search end */
    /*old member list start */
    getOldMemberList() {
        this.loaderService.display(true);
        let roleData = JSON.parse(localStorage.getItem('staffLogin')).object.roleDto;
        let userData = JSON.parse(localStorage.getItem('staffLogin')).object.userDto;
        let datedata;
        if (roleData.roleId === 9) {
            datedata = {
                "ageGroup": this.oldmemberlist.ageGroup,
                "limit": this.oldmemberlist.limit,
                "createdByRoleId": "",
                "createdByUserId": userData.userId,
                "experienceType": this.oldmemberlist.experienceType,
                "gender": this.oldmemberlist.gender,
                "generalSearch": this.oldmemberlist.generalSearch,
                "individualInstitute": this.oldmemberlist.individualInstitute,
                "offset": this.oldmemberlist.offset,
                "refProfessionId": this.oldmemberlist.refProfessionId,
                "yearOfExp": this.oldmemberlist.yearOfExp
            };
        }
        else {
            datedata = {
                "ageGroup": this.oldmemberlist.ageGroup,
                "limit": this.oldmemberlist.limit,
                "createdByRoleId": roleData.roleId,
                "createdByUserId": 0,
                "experienceType": this.oldmemberlist.experienceType,
                "gender": this.oldmemberlist.gender,
                "generalSearch": this.oldmemberlist.generalSearch,
                "individualInstitute": this.oldmemberlist.individualInstitute,
                "offset": this.oldmemberlist.offset,
                "refProfessionId": this.oldmemberlist.refProfessionId,
                "yearOfExp": this.oldmemberlist.yearOfExp
            };
        }
        this.apiService.Create("member/memberOldPendingList", datedata).subscribe(data => {
            if (data.object != null && data.object != undefined) {
                this.oldMemberList = data.object.records;
            }
        });
    }
    /*old member list end */
    /*old member list next and previous start*/
    oldClickOnPreviousButton() {
        this.oldmemberlist.offset = this.oldmemberlist.offset - 20;
        this.getOldMemberList();
    }
    oldClickOnNextButton() {
        this.oldmemberlist.offset = this.oldmemberlist.offset + 20;
        this.getOldMemberList();
    }
    /*old member list next and previous end*/
    /*new member list search start */
    newMemberListSearchData(e) {
        debugger;
        let name = e.target.value;
        let roleData = JSON.parse(localStorage.getItem('staffLogin')).object.roleDto;
        let userData = JSON.parse(localStorage.getItem('staffLogin')).object.userDto;
        // let data = {};
        // if (roleData.roleId == 9) {
        //   data = {
        //     "generalSearch": name,
        //     "offset": 0,
        //     "limit": 20,
        //     "audtionId": "0",
        //     "createdByRoleId": roleData.roleId,
        //     "createdByUserId": userData.userId
        //   }
        // }
        // else {
        //  let data = {
        //     "generalSearch": name,
        //     "offset": 0,
        //     "limit": 20,
        //     "audtionId": "0",
        //     "createdByRoleId": roleData.roleId,
        //     "createdByUserId": userData.userId
        //   }
        // }
        let cuid;
        if (roleData.roleId == 9) {
            cuid = userData.userId;
        }
        else {
            cuid = 0;
        }
        let data = {
            "ageGroup": this.newmemberlist.ageGroup,
            "limit": this.newmemberlist.limit,
            "createdByRoleId": "",
            "createdByUserId": cuid,
            "experienceType": this.newmemberlist.experienceType,
            "gender": this.newmemberlist.gender,
            "generalSearch": name,
            "individualInstitute": this.newmemberlist.individualInstitute,
            "offset": this.newmemberlist.offset,
            "refProfessionId": this.newmemberlist.refProfessionId,
            "yearOfExp": this.newmemberlist.yearOfExp
        };
        if (name.length >= 2) {
            this.loaderService.display(true);
            this.newMemberList = [];
            this.apiService.Create("member/memberNewPendingList", data).subscribe(data => {
                this.loaderService.display(false);
                if (data != undefined) {
                    if (data.success) {
                        if (data.object != undefined) {
                            this.newmemberlist.totalRecords = data.object.totalRecords;
                            this.newmemberlist.noOfPages = data.object.noOfPages;
                            if (data.object.records != undefined && data.object.records != null) {
                                this.newMemberList = data.object.records;
                                this.dtTrigger.next();
                            }
                        }
                    }
                }
            }, error => {
                console.log(error);
                this.loaderService.display(false);
            });
        }
    }
    /*new member list search end */
    /*old member list start */
    getNewMemberList() {
        debugger;
        let roleData = JSON.parse(localStorage.getItem('staffLogin')).object.roleDto;
        let userData = JSON.parse(localStorage.getItem('staffLogin')).object.userDto;
        let datedata;
        if (roleData.roleId === 9) {
            datedata = {
                "ageGroup": this.newmemberlist.ageGroup,
                "limit": this.newmemberlist.limit,
                "createdByRoleId": "",
                "createdByUserId": userData.userId,
                "experienceType": this.newmemberlist.experienceType,
                "gender": this.newmemberlist.gender,
                "generalSearch": this.newmemberlist.generalSearch,
                "individualInstitute": this.newmemberlist.individualInstitute,
                "offset": this.newmemberlist.offset,
                "refProfessionId": this.newmemberlist.refProfessionId,
                "yearOfExp": this.newmemberlist.yearOfExp
            };
        }
        else {
            datedata = {
                "ageGroup": this.newmemberlist.ageGroup,
                "limit": this.newmemberlist.limit,
                "createdByRoleId": roleData.roleId,
                "createdByUserId": 0,
                "experienceType": this.newmemberlist.experienceType,
                "gender": this.newmemberlist.gender,
                "generalSearch": this.newmemberlist.generalSearch,
                "individualInstitute": this.newmemberlist.individualInstitute,
                "offset": this.newmemberlist.offset,
                "refProfessionId": this.newmemberlist.refProfessionId,
                "yearOfExp": this.newmemberlist.yearOfExp
            };
        }
        this.loaderService.display(true);
        this.apiService.Create("member/memberNewPendingList", datedata).subscribe(data => {
            this.loaderService.display(false);
            if (data.object != null && data.object != undefined) {
                this.newMemberList = data.object.records;
            }
        }, (error) => {
            this.loaderService.display(false);
        });
    }
    /*old member list end */
    /*old member list next and previous start*/
    newClickOnPreviousButton() {
        this.newmemberlist.offset = this.newmemberlist.offset - 20;
        this.getNewMemberList();
    }
    newClickOnNextButton() {
        this.newmemberlist.offset = this.newmemberlist.offset + 20;
        this.getNewMemberList();
    }
    /*old member list next and previous end*/
    /*edit pending memberlist start*/
    EditMemberDetails(data) {
        this._compiler.clearCache();
        this.croppedImage = "";
        this.basicMemberForm.controls.profileImage.setValue("");
        this.imageChangedEvent = "";
        this.croppedhdphoto = "";
        this.hdimageChangedEvent = "";
        this.url1 = "";
        this.url2 = "";
        this.url3 = "";
        this.url4 = "";
        this.url5 = "";
        this.url6 = "";
        this.url7 = "";
        this.url11 = "";
        this.url22 = "";
        this.url33 = "";
        this.url44 = "";
        this.url55 = "";
        this.url66 = "";
        this.url77 = "";
        this.adminPage = new src_app_modals_adminpage__WEBPACK_IMPORTED_MODULE_5__["AdminPage"]();
        this.profileMember = new _app_modals_profilemember__WEBPACK_IMPORTED_MODULE_8__["ProfileMember"]();
        this.premiumProfile = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["PremiumProfile"]();
        // this.premiumProfile.articleImg=[];
        this.premiumProfile.galImg = [];
        this.premiumProfile.newsImg = [];
        // this.selectedproffession = [];
        // this.selectedotherSkill = [];
        //  this.selectedstatename = [];
        //  this.selectedcity= [];
        // this.selectedmotherTounge = [];
        // this.selectedotherLanguages = [];
        // this.selectednation  = [];
        this.premiumProfile.articleImg = [];
        this.premiumProfile.articlePdf = [];
        // this.premiumProfile.articleImg.push(this.article);
        this.selectedstatename = [];
        this.selectedcity = [];
        this.selectedproffession = [];
        this.selectedotherSkill = [];
        this.selectedotherLanguages = [];
        this.selectednation = [];
        this.otherMemberList = [];
        this.selectedItems = [];
        let memberId = data.memberId;
        var da = {
            "memberId": memberId
        };
        this.loaderService.display(true);
        this.apiService.Create("memberProfileWebDetails/detailsURIByMemberId", da).subscribe(data => {
            this.loaderService.display(false);
            this.adminPage = new src_app_modals_adminpage__WEBPACK_IMPORTED_MODULE_5__["AdminPage"]();
            if (data != undefined) {
                if (data.success) {
                    if (data.object != undefined) {
                        // console.log(JSON.stringify(data.object));
                        // if (data.object.masterMemberContentRestrictionDto != undefined && data.object.masterMemberContentRestrictionDto != null) {
                        //   this.articleImageLimit = data.object.masterMemberContentRestrictionDto.articleImageLimit;
                        //   this.articlePdfLimit = data.object.masterMemberContentRestrictionDto.articlePdfLimit;
                        //   this.galaryLimit = data.object.masterMemberContentRestrictionDto.galaryLimit;
                        //   this.videoLimit = data.object.masterMemberContentRestrictionDto.videoLimit;
                        // } else {
                        //   this.articleImageLimit = 15;
                        //   this.articlePdfLimit = 10;
                        //   this.galaryLimit = 50;
                        //   this.videoLimit = 9;
                        // }
                        // Validity code here
                        this.validityProfile.memberValidUptoDate = data.object.memberListDto.memberValidUptoDate.substr(0, 10);
                        this.validityProfile.memberValidUptoDays = data.object.memberListDto.memberValidUptoDays;
                        this.validityProfile.memberValidUptoStatus = data.object.memberListDto.memberValidUptoStatus;
                        let contRestin = data.object.memberListDto.leagueTypeId;
                        if (contRestin != 1) {
                            //content restriction section
                            this.GetMemberContentRestrictionDetails();
                        }
                        else {
                            this.contentRestriction.articleImageLimit = 500;
                            this.contentRestriction.articlePdfLimit = 500;
                            this.contentRestriction.galaryLimit = 500;
                            this.contentRestriction.videoLimit = 500;
                        }
                        if (data.object.memberListDto != undefined) {
                            let memberobject;
                            if (data.object.changeMemberListDto != null) {
                                memberobject = data.object.changeMemberListDto;
                                this.basicUpdateButton = true;
                            }
                            else {
                                memberobject = data.object.memberListDto;
                                this.basicUpdateButton = false;
                            }
                            this.adminPage = memberobject;
                            this.adminPage.membershipId = memberobject.memberId;
                            this.adminPage.refMembershipTypeId = memberobject.refMembershipTypeId.toString();
                            this.adminPage.individualInstitute = memberobject.individualORInstitute.toString();
                            this.adminPage.experienceType = memberobject.experienceType.toString();
                            this.adminPage.mobile = memberobject.mobileNumber.toString();
                            this.adminPage.mobileVisibility = memberobject.mobileVisibility.toString();
                            this.adminPage.emailVisibility = memberobject.emailVisibility.toString();
                            this.adminPage.addressVisibility = memberobject.addressVisibility.toString();
                            this.SetDetailsByindividualInstitute();
                            this.SetexperienceTypeChange();
                            let stateid = memberobject.refStateId;
                            let cityid = memberobject.refCityId;
                            this.selectedstatename = [];
                            this.selectedcity = [];
                            this.adminPage.leagueTypeId = memberobject.leagueTypeId;
                            if (stateid != null && stateid != undefined) {
                                let currentS = this.statenameList.filter((lang) => lang.id == stateid)[0];
                                if (currentS != undefined && currentS != null) {
                                    this.selectedstatename.push({ "id": currentS.id, "itemName": currentS.itemName });
                                }
                            }
                            if (cityid != null && cityid != undefined && stateid != null && stateid != undefined) {
                                this.SelectCityByOnselectedState(stateid, cityid);
                            }
                            this.proffessionList = this.originalproffessionListData.filter((type) => type.itemProfession == this.adminPage.individualInstitute);
                            if (memberobject.refProfessionId != null && memberobject.refProfessionId != undefined) {
                                let refProfessionId = memberobject.refProfessionId;
                                if (refProfessionId != undefined && refProfessionId != null && refProfessionId != "" && refProfessionId > 0) {
                                    let current = this.proffessionList.filter((lang) => lang.id == refProfessionId)[0];
                                    if (current != undefined && current != null) {
                                        this.selectedproffession.push({ "id": current.id, "itemName": current.itemName, "category": current.category });
                                    }
                                }
                            }
                            else {
                                // this.selectedproffession =[{ "id": "", "itemName": "", "category": "" }];
                            }
                            this.otherSkillList = this.originalproffessionListData.filter((type) => type.itemProfession == this.adminPage.individualInstitute);
                            if (memberobject.otherSkillListDtoList != undefined && memberobject.otherSkillListDtoList != null) {
                                if (memberobject.otherSkillListDtoList.length > 0) {
                                    let otherSkill = [];
                                    otherSkill = memberobject.otherSkillListDtoList;
                                    otherSkill.forEach(curent => {
                                        if (curent.refProfessionId > 0) {
                                            if (this.otherSkillList.length > 0) {
                                                let current = this.otherSkillList.filter((lang) => lang.id == curent.refProfessionId)[0];
                                                if (current != undefined && current != null) {
                                                    this.selectedotherSkill.push({ "id": current.id, "itemName": current.itemName, "category": current.category });
                                                }
                                            }
                                        }
                                    });
                                }
                            }
                            else {
                                //this.selectedotherSkill = [{ "id": "", "itemName": "", "category": "" }];
                            }
                            if (memberobject.profileImage != "" && (memberobject.profileImage != undefined)) {
                                let imageUrl = memberobject.profileImage;
                                this.croppedImage = imageUrl;
                                this.basicMemberForm.controls.profileImage.setValue(imageUrl);
                            }
                        }
                        // Disabled Form element
                        if (!this.validityProfile.memberValidUptoStatus) {
                            this.disabledMemberForm();
                        }
                        //Profile Details
                        if ((data.object.memberProfileViewDto != undefined && data.object.memberProfileViewDto != null) || data.object.changeMemberProfileViewDto != null) {
                            this.profileMember.refMemberId = data.object.memberListDto.memberId;
                            //Validity code here
                            this.validityProfile.profileValidUptoDate = data.object.memberProfileViewDto.profileValidUptoDate.substr(0, 10);
                            this.validityProfile.profileValidUptoDays = data.object.memberProfileViewDto.profileValidUptoDays;
                            this.validityProfile.profileValidUptoStatus = data.object.memberProfileViewDto.profileValidUptoStatus;
                            let memberProfileobject;
                            if (data.object.changeMemberProfileViewDto != null) {
                                memberProfileobject = data.object.changeMemberProfileViewDto;
                                this.profileUpdateButton = true;
                            }
                            else {
                                memberProfileobject = data.object.memberProfileViewDto;
                                this.profileUpdateButton = false;
                            }
                            this.profileMember = memberProfileobject;
                            this.profileMember.membershipId = data.object.memberListDto.memberId;
                            let motherTounge = memberProfileobject.motherTounge;
                            if (motherTounge != null && motherTounge != undefined) {
                                this.selectedmotherTounge = [];
                                let currentM = this.motherToungeList.filter((lang) => lang.id == motherTounge)[0];
                                if (currentM != undefined && currentM != null) {
                                    this.selectedmotherTounge.push({ "id": currentM.id, "itemName": currentM.itemName });
                                }
                            }
                            let otherLanguageLists = memberProfileobject.otherLanguageLists;
                            this.selectedotherLanguages = [];
                            if (otherLanguageLists != undefined && otherLanguageLists != null) {
                                if (otherLanguageLists.length > 0) {
                                    otherLanguageLists.forEach(curent => {
                                        if (curent.refLanguageId > 0) {
                                            let current = this.otherLanguagesList.filter((lang) => lang.id == curent.refLanguageId)[0];
                                            if (current != undefined && current != null) {
                                                this.selectedotherLanguages.push({ "id": current.id, "itemName": current.itemName });
                                            }
                                        }
                                    });
                                }
                            }
                            let refNationalityId = memberProfileobject.refNationalityId;
                            if (refNationalityId != null && refNationalityId != undefined) {
                                this.selectednation = [];
                                let currentS = this.nationList.filter((lang) => lang.id == refNationalityId)[0];
                                if (currentS != undefined && currentS != null) {
                                    this.selectednation.push({ "id": currentS.id, "itemName": currentS.itemName });
                                }
                            }
                            this.imageSendArr = [];
                            if (memberProfileobject.myProfileMultiplePhotoDtoList != undefined && memberProfileobject.myProfileMultiplePhotoDtoList != null) {
                                if (memberProfileobject.myProfileMultiplePhotoDtoList.length > 0) {
                                    let profilePhotos = memberProfileobject.myProfileMultiplePhotoDtoList;
                                    profilePhotos.forEach(pro => {
                                        if (pro.seqNum != undefined && pro.seqNum != null && pro.seqNum != "" && pro.imagePath != undefined && pro.imagePath != null && pro.imagePath != "") {
                                            let imageUrl = pro.imagePath;
                                            let seqno = pro.seqNum;
                                            //let imagebase64 = pro.imagePathBase64
                                            if (seqno == 1) {
                                                this.profileMember.ProfileimagePath1 = imageUrl;
                                                this.profileMemberForm.controls.ProfileimagePath1.setValue(imageUrl);
                                                this.url1 = imageUrl;
                                                this.url11 = imageUrl;
                                            }
                                            else if (seqno == 2) {
                                                this.profileMember.ProfileimagePath2 = imageUrl;
                                                this.profileMemberForm.controls.ProfileimagePath2.setValue(imageUrl);
                                                this.url2 = imageUrl;
                                                this.url22 = imageUrl;
                                            }
                                            else if (seqno == 3) {
                                                this.profileMember.ProfileimagePath3 = imageUrl;
                                                this.profileMemberForm.controls.ProfileimagePath3.setValue(imageUrl);
                                                this.url3 = imageUrl;
                                                this.url33 = imageUrl;
                                            }
                                            else if (seqno == 4) {
                                                this.profileMember.ProfileimagePath4 = imageUrl;
                                                this.profileMemberForm.controls.ProfileimagePath4.setValue(imageUrl);
                                                this.url4 = imageUrl;
                                                this.url44 = imageUrl;
                                            }
                                            else if (seqno == 5) {
                                                this.profileMember.ProfileimagePath5 = imageUrl;
                                                this.profileMemberForm.controls.ProfileimagePath5.setValue(imageUrl);
                                                this.url5 = imageUrl;
                                                this.url55 = imageUrl;
                                            }
                                            else if (seqno == 6) {
                                                this.profileMember.ProfileimagePath6 = imageUrl;
                                                this.profileMemberForm.controls.ProfileimagePath6.setValue(imageUrl);
                                                this.url6 = imageUrl;
                                                this.url66 = imageUrl;
                                            }
                                            else if (seqno == 7) {
                                                this.profileMember.ProfileimagePath7 = imageUrl;
                                                this.profileMemberForm.controls.ProfileimagePath7.setValue(imageUrl);
                                                this.url7 = imageUrl;
                                                this.url77 = imageUrl;
                                            }
                                        }
                                    });
                                }
                            }
                            this.otherMemberList = [];
                            this.selectedItems = [];
                            const control = this.profileMemberForm.controls['otherOpenionRows'];
                            while (control.controls.length > 0) {
                                this.deleteotherOpenionRow(0);
                            }
                            if (memberProfileobject.otherOpinionListDtoList != undefined && memberProfileobject.otherOpinionListDtoList != null) {
                                if (memberProfileobject.otherOpinionListDtoList.length > 0) {
                                    let otherOpinions = memberProfileobject.otherOpinionListDtoList;
                                    for (var i = 0; i < otherOpinions.length; i++) {
                                        this.addNewotherOpenionRow();
                                        const control = this.profileMemberForm.controls['otherOpenionRows'];
                                        control.controls[i].get('opinionId').setValue(otherOpinions[i].opinionId);
                                        control.controls[i].get('description').setValue(otherOpinions[i].description);
                                        control.controls[i].get('otherMemberImage').setValue(otherOpinions[i].otherMemberImage);
                                        // this.setOtherOpenionMerberByName(otherOpinions[i].firstName,otherOpinions[i].meberId,i);
                                        control.controls[i].get('otherMemberName').setValue(otherOpinions[i].meberId);
                                        this.otherMemberList.push({ "id": otherOpinions[i].meberId, "itemName": otherOpinions[i].firstName, "profileImage": otherOpinions[i].otherMemberImage });
                                        //  let curr = this.otherMemberList.filter(aa => aa.id == parseInt(otherOpinions[i].meberId))[0];
                                        //this.selectedItems.push(curr);
                                    }
                                    for (var i = 0; i < otherOpinions.length; i++) {
                                        let values = [];
                                        let curr = this.otherMemberList.filter(aa => aa.id == parseInt(otherOpinions[i].meberId))[0];
                                        //  values.push(curr);
                                        this.selectedItems.push(Array.of(curr));
                                    }
                                }
                                else {
                                    this.addNewotherOpenionRow();
                                }
                            }
                            else {
                                this.addNewotherOpenionRow();
                            }
                        }
                        else {
                            //this.validityProfile.profileValidUptoStatus = true;
                            this.validityProfile.profileValidUptoDate = data.object.registrationValidityDto.profileValidUptoDate.substr(0, 10);
                            this.validityProfile.profileValidUptoDays = data.object.registrationValidityDto.profileValidUptoDays;
                            this.validityProfile.profileValidUptoStatus = data.object.registrationValidityDto.profileValidUptoStatus;
                        }
                        // Disabled Profile form
                        if (!this.validityProfile.profileValidUptoStatus) {
                            this.disabledProfileForm();
                        }
                        //My Web Page details
                        this.premiumProfile.articleImg = [];
                        const controla = this.premiumMemberForm.controls['articleRows'];
                        while (controla.controls.length > 0) {
                            this.deletearticleRow(0);
                        }
                        this.premiumProfile.articlePdf = [];
                        const controlap = this.premiumMemberForm.controls['articlePdfRows'];
                        while (controlap.controls.length > 0) {
                            this.deletearticlePdfRow(0);
                        }
                        this.premiumProfile.newsImg = [];
                        const control = this.premiumMemberForm.controls['newsRows'];
                        while (control.controls.length > 0) {
                            this.deletenewsRow(0);
                        }
                        this.premiumProfile.galImg = [];
                        const controlg = this.premiumMemberForm.controls['galleryRows'];
                        while (controlg.controls.length > 0) {
                            this.deletegalleryRow(0);
                        }
                        const controlv = this.premiumMemberForm.controls['videoRows'];
                        while (controlv.controls.length > 0) {
                            this.deletevideoRow(0);
                        }
                        if ((data.object.memberWebViewDto != undefined && data.object.memberWebViewDto != null) || data.object.changeMemberWebViewDto != null) {
                            this.premiumProfile.refProfileMembershipId = data.object.memberListDto.memberId;
                            // Validity code here
                            this.validityProfile.myWebPageValidUptoDate = data.object.memberWebViewDto.myWebPageValidUptoDate.substr(0, 10);
                            this.validityProfile.myWebPageValidUptoDays = data.object.memberWebViewDto.myWebPageValidUptoDays;
                            this.validityProfile.myWebPageValidUptoStstus = data.object.memberWebViewDto.myWebPageValidUptoStatus;
                            let memberWebViewobject;
                            if (data.object.changeMemberWebViewDto != null) {
                                memberWebViewobject = data.object.changeMemberWebViewDto;
                                this.webPageUpdateButton = true;
                            }
                            else {
                                memberWebViewobject = data.object.memberWebViewDto;
                                this.webPageUpdateButton = false;
                            }
                            // this.premiumProfile.refProfileMembershipId = data.object.memberListDto.memberId;
                            // this.croppedhdphoto = memberWebViewobject.mainPhotoPath;
                            this.premiumProfile.webPrivatePublicFlag = memberWebViewobject.webPrivatePublicFlag;
                            if (memberWebViewobject.mainPhotoPath != "" && memberWebViewobject.mainPhotoPath != undefined && memberWebViewobject.mainPhotoPath != null) {
                                let MainimageUrl = memberWebViewobject.mainPhotoPath;
                                this.croppedhdphoto = MainimageUrl;
                                this.premiumMemberForm.controls.mainPhotoPath.setValue(MainimageUrl);
                            }
                            if (memberWebViewobject.webPageSocialLinkListDtoList != undefined && memberWebViewobject.webPageSocialLinkListDtoList != null) {
                                if (memberWebViewobject.webPageSocialLinkListDtoList.length > 0) {
                                    let sociallinks = memberWebViewobject.webPageSocialLinkListDtoList;
                                    for (var i = 0; i < this.socialLinksDtoList.length; i++) {
                                        for (var j = 0; j < sociallinks.length; j++) {
                                            if (this.socialLinksDtoList[i].socialLinksId == sociallinks[j].socialLinksId) {
                                                this.socialLinksDtoList[i].socialLinksUrl = sociallinks[j].socialLinkUrl;
                                                const control = this.premiumMemberForm.controls['socialLinkRows'];
                                                control.controls[i].get('socialLinksUrl').setValue(sociallinks[j].socialLinkUrl);
                                            }
                                        }
                                    }
                                }
                            }
                            if (memberWebViewobject.webPageArticlesListDtoList != undefined && memberWebViewobject.webPageArticlesListDtoList != null) {
                                if (memberWebViewobject.webPageArticlesListDtoList.length > 0) {
                                    let webPageArticles = memberWebViewobject.webPageArticlesListDtoList;
                                    var j = 0;
                                    for (var i = 0; i < webPageArticles.length; i++) {
                                        var filename = webPageArticles[i].articalPath;
                                        var nameArray = filename.split('.');
                                        var exten = nameArray[nameArray.length - 1];
                                        if (exten.localeCompare("pdf") != 0) {
                                            this.addarticleRow();
                                            let selectedarticle = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
                                            const control = this.premiumMemberForm.controls['articleRows'];
                                            // control.controls[i].get('description').setValue(webPageGallary[i].description);
                                            //  control.controls[i].get('articlefakePath').setValue(webPageArticles[i].articalPath);
                                            control.controls[j].get('articleTitle').setValue(webPageArticles[i].articalTitle);
                                            let articlePath = webPageArticles[i].articalPath;
                                            let articalPathFileType = webPageArticles[i].articalPathFileType;
                                            if (articalPathFileType == undefined) {
                                                articalPathFileType = "";
                                            }
                                            if (articlePath != "" && articlePath != undefined && articlePath != null) {
                                                //let result = webPageArticles[i].articalPathBase64;
                                                control.controls[j].get('articlePath').setValue(articlePath);
                                                selectedarticle.articalPath = articlePath;
                                                selectedarticle.articalPathFileType = articalPathFileType;
                                                selectedarticle.articalPathPDF = articlePath;
                                            }
                                            else {
                                                control.controls[j].get('articlePath').setValue("");
                                                selectedarticle.articalPath = "";
                                                selectedarticle.articalPathFileType = "";
                                                selectedarticle.articalPathPDF = "";
                                            }
                                            this.premiumProfile.articleImg[j] = selectedarticle;
                                            j++;
                                        }
                                    }
                                    if (j == 0) {
                                        this.addarticleRow();
                                    }
                                }
                                else {
                                    this.addarticleRow();
                                }
                            }
                            else {
                                this.addarticleRow();
                            }
                            if (memberWebViewobject.webPageArticlesListDtoList != undefined && memberWebViewobject.webPageArticlesListDtoList != null) {
                                if (memberWebViewobject.webPageArticlesListDtoList.length > 0) {
                                    let webPageArticles = memberWebViewobject.webPageArticlesListDtoList;
                                    var j = 0;
                                    for (var i = 0; i < webPageArticles.length; i++) {
                                        var filename = webPageArticles[i].articalPath;
                                        var nameArray = filename.split('.');
                                        var exten = nameArray[nameArray.length - 1];
                                        if (exten.localeCompare("pdf") != -1) {
                                            this.addarticlePdfRow();
                                            let selectedarticle = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
                                            const control = this.premiumMemberForm.controls['articlePdfRows'];
                                            // control.controls[i].get('description').setValue(webPageGallary[i].description);
                                            //  control.controls[i].get('articlefakePath').setValue(webPageArticles[i].articalPath);
                                            control.controls[j].get('articlePdfTitle').setValue(webPageArticles[i].articalTitle);
                                            let articlePdfPath = webPageArticles[i].articalPath;
                                            let articalPdfPathFileType = webPageArticles[i].articalPathFileType;
                                            if (articalPdfPathFileType == undefined) {
                                                articalPdfPathFileType = "";
                                            }
                                            if (articlePdfPath != "" && articlePdfPath != undefined && articlePdfPath != null) {
                                                //let result = webPageArticles[i].articalPathBase64;
                                                control.controls[j].get('articlePdfPath').setValue(articlePdfPath);
                                                selectedarticle.articalPath = articlePdfPath;
                                                selectedarticle.articalPathFileType = articalPdfPathFileType;
                                                selectedarticle.articalPathPDF = articlePdfPath;
                                            }
                                            else {
                                                control.controls[j].get('articlePdfPath').setValue("");
                                                selectedarticle.articalPath = "";
                                                selectedarticle.articalPathFileType = "";
                                                selectedarticle.articalPathPDF = "";
                                            }
                                            this.premiumProfile.articlePdf[j] = selectedarticle;
                                            j++;
                                        }
                                    }
                                    if (j == 0) {
                                        this.addarticlePdfRow();
                                    }
                                }
                                else {
                                    this.addarticlePdfRow();
                                }
                            }
                            else {
                                this.addarticlePdfRow();
                            }
                            if (memberWebViewobject.webPageNewsListDtoList != undefined && memberWebViewobject.webPageNewsListDtoList != null) {
                                if (memberWebViewobject.webPageNewsListDtoList.length > 0) {
                                    let webPageNews = memberWebViewobject.webPageNewsListDtoList;
                                    for (var i = 0; i < webPageNews.length; i++) {
                                        this.addnewsRow();
                                        const control = this.premiumMemberForm.controls['newsRows'];
                                        control.controls[i].get('title').setValue(webPageNews[i].title);
                                        control.controls[i].get('description').setValue(webPageNews[i].description);
                                        let newsImagePath = webPageNews[i].newsImagePath;
                                        if (newsImagePath != "" && newsImagePath != undefined && newsImagePath != null) {
                                            //let result = webPageNews[i].newsImagePathBase64;
                                            control.controls[i].get('newsImagePath').setValue(newsImagePath);
                                            this.premiumProfile.newsImg[i] = newsImagePath;
                                        }
                                        else {
                                            control.controls[i].get('newsImagePath').setValue("");
                                            this.premiumProfile.newsImg[i] = "";
                                        }
                                    }
                                }
                                else {
                                    this.addnewsRow();
                                }
                            }
                            else {
                                this.addnewsRow();
                            }
                            if (memberWebViewobject.webPageGallaryListDtoList != undefined && memberWebViewobject.webPageGallaryListDtoList != null) {
                                if (memberWebViewobject.webPageGallaryListDtoList.length > 0) {
                                    let webPageGallary = memberWebViewobject.webPageGallaryListDtoList;
                                    for (var i = 0; i < webPageGallary.length; i++) {
                                        this.addgalleryRow();
                                        const control = this.premiumMemberForm.controls['galleryRows'];
                                        // control.controls[i].get('description').setValue(webPageGallary[i].description);
                                        let galaryPath = webPageGallary[i].galaryPath;
                                        if (galaryPath != "" && galaryPath != undefined && galaryPath != null) {
                                            //let result = webPageGallary[i].galaryPathBase64;
                                            control.controls[i].get('galaryPath').setValue(galaryPath);
                                            this.premiumProfile.galImg[i] = galaryPath;
                                        }
                                        else {
                                            control.controls[i].get('galaryPath').setValue("");
                                            this.premiumProfile.galImg[i] = "";
                                        }
                                    }
                                }
                                else {
                                    this.addgalleryRow();
                                }
                            }
                            else {
                                this.addgalleryRow();
                            }
                            if (memberWebViewobject.webPageVideosListDtoList != undefined && memberWebViewobject.webPageVideosListDtoList != null) {
                                if (memberWebViewobject.webPageVideosListDtoList.length > 0) {
                                    let webPageVideos = memberWebViewobject.webPageVideosListDtoList;
                                    for (var i = 0; i < webPageVideos.length; i++) {
                                        this.addvideoRow();
                                        const control = this.premiumMemberForm.controls['videoRows'];
                                        control.controls[i].get('videoName').setValue(webPageVideos[i].videoName);
                                        control.controls[i].get('videoURL').setValue(webPageVideos[i].videoURL);
                                    }
                                }
                                else {
                                    this.addvideoRow();
                                }
                            }
                            else {
                                this.addvideoRow();
                            }
                        }
                        else {
                            this.validityProfile.myWebPageValidUptoDate = data.object.registrationValidityDto.myWebPageValidUptoDate.substr(0, 10);
                            this.validityProfile.myWebPageValidUptoDays = data.object.registrationValidityDto.myWebPageValidUptoDays;
                            this.validityProfile.myWebPageValidUptoStstus = data.object.registrationValidityDto.myWebPageValidUptoStatus;
                            this.addarticleRow();
                            this.addnewsRow();
                            this.addgalleryRow();
                            this.addvideoRow();
                            this.premiumProfile.webPrivatePublicFlag = "1";
                        }
                        if (!this.validityProfile.myWebPageValidUptoStstus) {
                            this.disabledWebPageForm();
                        }
                    }
                    // else {
                    //   this.validityProfile.myWebPageValidUptoDate = data.object.registrationValidityDto.myWebPageValidUptoDate.substr(0, 10);
                    //   this.validityProfile.myWebPageValidUptoDays = data.object.registrationValidityDto.myWebPageValidUptoDays;
                    //   this.validityProfile.myWebPageValidUptoStstus = data.object.registrationValidityDto.myWebPageValidUptoStatus;
                    //   this.addarticleRow();
                    //   this.addarticlePdfRow();
                    //   this.addgalleryRow();
                    //   this.addvideoRow();
                    // }
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    /*edit pending memberlist end */
    GetMemberContentRestrictionDetails() {
        var data = { "membershipId": this.adminPage.membershipId };
        this.apiService.Create("masterContentRestrictConfig/getByMemberId", data).subscribe(data => {
            if (data.success) {
                if (data.object != undefined && data.object != null) {
                    if (data.object != undefined) {
                        debugger;
                        this.contentRestriction = data.object;
                        debugger;
                    }
                }
            }
            else {
                this.GetContentRestrictionDetails();
            }
        });
    }
    GetContentRestrictionDetails() {
        var data = { "configId": "1" };
        this.apiService.Create("masterConfiguration/getByConfigId", data).subscribe(data => {
            if (data.success) {
                if (data.object != undefined && data.object != null) {
                    if (data.object != undefined) {
                        this.contentRestriction = data.object;
                        debugger;
                    }
                }
            }
        });
    }
    SelectCityByOnselectedState(stateid, cityid) {
        this.cityList = [];
        this.selectedcity = [];
        this.basicMemberForm.controls.city.setValue("");
        if (stateid != undefined && stateid != 0) {
            let refStateId = stateid;
            var Cdata = { "refStateId": refStateId };
            this.apiService.Create("city/getAllCityByStateId", Cdata).subscribe(data => {
                if (data.success) {
                    if (data.object != undefined && data.object != null) {
                        if (data.object != undefined) {
                            let cityDtoList = data.object;
                            let cityList = [];
                            cityDtoList.forEach(city => {
                                if (city.cityId > 0) {
                                    cityList.push({ "id": city.cityId, "itemName": city.cityName });
                                    //this.adminPage.refCityId = city.cityId;
                                }
                            });
                            this.cityList = cityList;
                            let currentS = this.cityList.filter((lang) => lang.id == cityid)[0];
                            if (currentS != undefined && currentS != null) {
                                this.selectedcity.push({ "id": currentS.id, "itemName": currentS.itemName });
                                this.basicMemberForm.controls.city.setValue(this.selectedcity);
                            }
                        }
                    }
                }
            });
        }
    }
    setStatusData() {
        this.statusForm.get('status').setValidators(null);
        this.statusForm.get('status').updateValueAndValidity();
        this.statusForm.get('remarks').setValidators(null);
        this.statusForm.get('remarks').updateValueAndValidity();
    }
    SetDetailsByindividualInstitute() {
        if (this.adminPage.individualInstitute == 'Institute') {
            this.adminPage.individualInstituteName = "Institute Name";
            this.adminPage.ProfessionService = 'Service';
            this.adminPage.OtherSkillsOtherServices = 'Other Services';
            this.profileMember.motherTounge = 1;
            this.basicMemberForm.get('middleName').setValidators(null);
            this.basicMemberForm.get('middleName').updateValueAndValidity();
            this.basicMemberForm.get('lastName').setValidators(null);
            this.basicMemberForm.get('lastName').updateValueAndValidity();
            this.basicMemberForm.get('ageGroup').setValidators(null);
            this.basicMemberForm.get('ageGroup').updateValueAndValidity();
            this.basicMemberForm.get('gender').setValidators(null);
            this.basicMemberForm.get('gender').updateValueAndValidity();
            this.basicMemberForm.get('since').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].pattern('[0-9]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(4), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(4)]));
            this.basicMemberForm.get('since').updateValueAndValidity();
            this.basicMemberForm.get('contactPerson').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(3)]));
            this.basicMemberForm.get('contactPerson').updateValueAndValidity();
            //Profile
            this.profileMemberForm.get('qualification').setValidators(null);
            this.profileMemberForm.get('qualification').updateValueAndValidity();
            this.profileMemberForm.get('motherTounge').setValidators(null);
            this.profileMemberForm.get('motherTounge').updateValueAndValidity();
            this.profileMemberForm.get('otherLanguages').setValidators(null);
            this.profileMemberForm.get('otherLanguages').updateValueAndValidity();
            this.profileMemberForm.get('height').setValidators(null);
            this.profileMemberForm.get('height').updateValueAndValidity();
            this.profileMemberForm.get('weight').setValidators(null);
            this.profileMemberForm.get('weight').updateValueAndValidity();
            this.profileMemberForm.get('dob').setValidators(null);
            this.profileMemberForm.get('dob').updateValueAndValidity();
            this.profileMemberForm.get('birthPlace').setValidators(null);
            this.profileMemberForm.get('birthPlace').updateValueAndValidity();
        }
        else if (this.adminPage.individualInstitute == 'Individual') {
            this.adminPage.individualInstituteName = "First Name";
            this.adminPage.ProfessionService = 'Profession';
            this.adminPage.OtherSkillsOtherServices = 'Other Skills';
            this.basicMemberForm.get('middleName').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(30)]));
            this.basicMemberForm.get('middleName').updateValueAndValidity();
            this.basicMemberForm.get('lastName').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(30)]));
            this.basicMemberForm.get('lastName').updateValueAndValidity();
            this.basicMemberForm.get('ageGroup').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required]));
            this.basicMemberForm.get('ageGroup').updateValueAndValidity();
            this.basicMemberForm.get('gender').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required]));
            this.basicMemberForm.get('gender').updateValueAndValidity();
            this.basicMemberForm.get('since').setValidators(null);
            this.basicMemberForm.get('since').updateValueAndValidity();
            this.basicMemberForm.get('contactPerson').setValidators(null);
            this.basicMemberForm.get('contactPerson').updateValueAndValidity();
            //Profile
            this.profileMemberForm.get('qualification').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(2)]));
            this.profileMemberForm.get('qualification').updateValueAndValidity();
            this.profileMemberForm.get('motherTounge').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required]));
            this.profileMemberForm.get('motherTounge').updateValueAndValidity();
            //this.profileMemberForm.get('otherLanguages').setValidators(Validators.compose([Validators.required]));
            this.profileMemberForm.get('otherLanguages').updateValueAndValidity();
            // this.profileMemberForm.get('height').setValidators(Validators.compose([Validators.required]));
            // this.profileMemberForm.get('height').updateValueAndValidity();
            // this.profileMemberForm.get('weight').setValidators(Validators.compose([Validators.required]));
            // this.profileMemberForm.get('weight').updateValueAndValidity();
            this.profileMemberForm.get('dob').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].pattern('^([0]?[1-9]|[1|2][0-9]|[3][0|1])[./-]([0]?[1-9]|[1][0-2])$')]));
            this.profileMemberForm.get('dob').updateValueAndValidity();
            this.profileMemberForm.get('birthPlace').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(3)]));
            this.profileMemberForm.get('birthPlace').updateValueAndValidity();
        }
        this.proffessionSettings = {
            text: 'Select ' + this.adminPage.ProfessionService,
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search ' + this.adminPage.ProfessionService,
            badgeShowLimit: 5,
            groupBy: "category"
        };
        this.otherSkillSettings = {
            singleSelection: false,
            text: 'Select ' + this.adminPage.OtherSkillsOtherServices,
            enableCheckAll: false,
            enableFilterSelectAll: false,
            searchPlaceholderText: 'Search ' + this.adminPage.OtherSkillsOtherServices,
            enableSearchFilter: true,
            badgeShowLimit: 8,
            groupBy: "category",
            limitSelection: 8
        };
    }
    ngOnDestroy() {
        // Do not forget to unsubscribe the event
        this.dtTrigger.unsubscribe();
    }
    onShowLog() {
        this.showLog = true;
        return this.log = this.log + 1;
    }
    // init otherOpenion
    initotherOpenionRows() {
        return this.fb.group({
            opinionId: [''],
            otherMemberName: [''],
            otherMemberImage: [''],
            description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(1200), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(30)])]
        });
    }
    initarticleRows() {
        return this.fb.group({
            articleTitle: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(100), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(3)])],
            articleDescription: [''],
            articlefakePath: [''],
            articlePath: ['']
        });
    }
    initarticlePdfRows() {
        return this.fb.group({
            articlePdfTitle: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(100), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(3)])],
            articlePdfDescription: [''],
            articlefakePdfPath: [''],
            articlePdfPath: ['']
        });
    }
    initnewsRows() {
        return this.fb.group({
            title: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(100), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(3)])],
            description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(10000), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(30)])],
            newsImagePath: [''],
            newsImagefakePath: ['']
        });
    }
    initgalleryRows() {
        return this.fb.group({
            galaryPath: [''],
            galaryfakePath: ['']
        });
    }
    initvideoRows() {
        return this.fb.group({
            videoName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(100), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(3)])],
            videoURL: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(200), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(6)])]
        });
    }
    // get otherOpenionRows
    getotherOpenionRows(profileMemberForm) {
        return profileMemberForm.get('otherOpenionRows').controls;
    }
    //Dynamically Add New Field otherOpenion
    addNewotherOpenionRow() {
        const control = this.profileMemberForm.controls['otherOpenionRows'];
        control.push(this.initotherOpenionRows());
    }
    //Dynamically Remove existing Field otherOpenion
    deleteotherOpenionRow(index) {
        const control = this.profileMemberForm.controls['otherOpenionRows'];
        control.removeAt(index);
        // this.selectedItems.splice(index,0);
    }
    // #endregion
    // get articleRows
    getarticleRows(premiumMemberForm) {
        return premiumMemberForm.get('articleRows').controls;
    }
    //Dynamically Add New Field article
    addarticleRow() {
        this.article = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
        const control = this.premiumMemberForm.controls['articleRows'];
        control.push(this.initarticleRows());
        this.premiumProfile.articleImg.push(this.article);
    }
    addarticleRowInPosition(index) {
        this.article = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
        const control = this.premiumMemberForm.controls['articleRows'];
        //control.push(this.initarticleRows());
        control.insert(index + 1, this.initarticleRows());
        this.premiumProfile.articleImg.splice(index + 1, 0, this.article);
    }
    //Dynamically Remove existing Field article
    deletearticleRow(index) {
        this.premiumProfile.articleImg.splice(index, 1);
        const control = this.premiumMemberForm.controls['articleRows'];
        control.removeAt(index);
    }
    // #endregion
    // get articleRows
    getarticlePdfRows(premiumMemberForm) {
        return premiumMemberForm.get('articlePdfRows').controls;
    }
    //Dynamically Add New Field article
    addarticlePdfRow() {
        this.article = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
        const control = this.premiumMemberForm.controls['articlePdfRows'];
        control.push(this.initarticlePdfRows());
        this.premiumProfile.articlePdf.push(this.article);
    }
    addarticlePdfRowInPosition(index) {
        this.article = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
        const control = this.premiumMemberForm.controls['articlePdfRows'];
        control.insert(index + 1, this.initarticlePdfRows());
        this.premiumProfile.articlePdf.splice(index + 1, 0, this.article);
    }
    //Dynamically Remove existing Field article
    deletearticlePdfRow(index) {
        this.premiumProfile.articlePdf.splice(index, 1);
        const control = this.premiumMemberForm.controls['articlePdfRows'];
        control.removeAt(index);
    }
    // get newsRows
    getnewsRows(premiumMemberForm) {
        return premiumMemberForm.get('newsRows').controls;
    }
    //Dynamically Add New Field news
    addnewsRow() {
        const control = this.premiumMemberForm.controls['newsRows'];
        control.push(this.initnewsRows());
    }
    //Dynamically Remove existing Field news
    deletenewsRow(index) {
        const control = this.premiumMemberForm.controls['newsRows'];
        control.removeAt(index);
    }
    // #endregion
    // get galleryRows
    getgalleryRows(premiumMemberForm) {
        return premiumMemberForm.get('galleryRows').controls;
    }
    //Dynamically Add New Field gallery
    addgalleryRow() {
        const control = this.premiumMemberForm.controls['galleryRows'];
        control.push(this.initgalleryRows());
    }
    addgalleryRowInPosition(index) {
        const control = this.premiumMemberForm.controls['galleryRows'];
        control.insert(index + 1, this.initgalleryRows());
        this.premiumProfile.galImg.splice(index + 1, 0, "");
        this.imageChangedEventGalary.splice(index + 1, 0, "");
        //control.push(this.initgalleryRows());
    }
    //Dynamically Remove existing Field gallery
    deletegalleryRow(index) {
        this.premiumProfile.galImg.splice(index, 1);
        this.imageChangedEventGalary.splice(index, 1);
        const control = this.premiumMemberForm.controls['galleryRows'];
        control.removeAt(index);
    }
    // #endregion
    // get videoRows
    getvideoRows(premiumMemberForm) {
        return premiumMemberForm.get('videoRows').controls;
    }
    //Dynamically Add New Field video
    addvideoRow() {
        const control = this.premiumMemberForm.controls['videoRows'];
        control.push(this.initvideoRows());
    }
    addvideoRowInPosition(index) {
        const control = this.premiumMemberForm.controls['videoRows'];
        control.insert(index + 1, this.initvideoRows());
        //control.push(this.initvideoRows());
    }
    //Dynamically Remove existing Field video
    deletevideoRow(index) {
        const control = this.premiumMemberForm.controls['videoRows'];
        control.removeAt(index);
    }
    // #endregion
    // init kycdocumentDetails
    initsocialLinkDetails() {
        return this.fb.group({
            socialLinksUrl: ['']
        });
    }
    // get socialLinkDetails
    getsocialLinkDetails(Form) {
        return Form.get('socialLinkRows').controls;
    }
    //Dynamically Add New Field socialLinkDetails
    addNewsocialLinkDetails() {
        const control = this.premiumMemberForm.controls['socialLinkRows'];
        control.push(this.initsocialLinkDetails());
    }
    //Dynamically Remove existing Field kycdocumentDetails
    deletesocialLinkDetails(index) {
        const control = this.premiumMemberForm.controls['socialLinkRows'];
        control.removeAt(index);
    }
    // #endregion
    AppendDate(value) {
        var numChars = value.length;
        if (numChars === 2) {
            var thisVal = this.profileMember.dob;
            thisVal += '-';
            this.profileMember.dob = thisVal;
        }
    }
    ngOnInit() {
        this.oldmemberlist.offset = 0;
        this.oldmemberlist.limit = 20;
        this.basicUpdateButton = false;
        this.profileUpdateButton = false;
        this.webPageUpdateButton = false;
        this.getOldMemberList();
        this.getNewMemberList();
        this.dtOptions = {
            pagingType: 'full_numbers',
            pageLength: this.oldmemberlist.limit
        };
        this.getOnLoadData();
    }
    onproffessionSelect(item) {
        let proffessionid = this.selectedproffession[0].id;
        this.adminPage.refProfessionId = proffessionid;
    }
    onproffessionDeSelect(item) {
        //  console.log(item);
    }
    onproffessionSelectAll(items) {
        // console.log(items);
    }
    onproffessionDeSelectAll(items) {
        // console.log(items);
    }
    onotherSkillSelect(item) {
        //  console.log(item);
    }
    onotherSkillDeSelect(item) {
        // console.log(item);
    }
    onotherSkillSelectAll(items) {
        //  console.log(items);
    }
    onotherSkillDeSelectAll(items) {
        //  console.log(items);
    }
    motherToungeSelect(item) {
        //  console.log(item);
        this.selectedmotherTounge.forEach(curent => {
            if (curent.id > 0) {
                this.profileMember.motherTounge = curent.id;
            }
        });
    }
    motherToungeDeSelect(item) {
        //  console.log(item);
    }
    motherToungeSelectAll(items) {
        // console.log(items);
    }
    motherToungeDeSelectAll(items) {
        //  console.log(items);
    }
    otherLanguagesSelect(item) {
        //  console.log(item);
        let listlang = new Array();
        this.selectedotherLanguages.forEach(curent => {
            if (curent.id > 0) {
                listlang.push(curent.id);
                this.profileMember.otherLanguage = listlang;
            }
        });
        // console.log("listlang ==> " + listlang);
    }
    otherLanguagesDeSelect(item) {
        //  console.log(item);
    }
    otherLanguagesSelectAll(items) {
        //  console.log(items);
    }
    otherLanguagesDeSelectAll(items) {
        //  console.log(items);
    }
    openionmembernameSelect(item) {
        let membername = this.selectedopenionmembername[0].id;
        this.profileMember.refMemberId = membername;
    }
    openionmembernameDeSelect(item) {
        //  console.log(item);
    }
    openionmembernameSelectAll(items) {
        //  console.log(items);
    }
    openionmembernameDeSelectAll(items) {
        //  console.log(items);
    }
    statenameSelect(item) {
        //  console.log(item);
        let stateid = this.selectedstatename[0].id;
        this.adminPage.refStateId = stateid;
        this.GetCityDetailsByStateId();
    }
    statenameDeSelect(item) {
        //  console.log(item);
    }
    statenameSelectAll(items) {
        //  console.log(items);
    }
    statenameDeSelectAll(items) {
        //  console.log(items);
    }
    nationnameSelect(item) {
        // console.log(item);
        let nationid = this.selectednation[0].id;
        //this.adminPage.refStateId = stateid;
        this.profileMember.refNationalityId = nationid;
    }
    nationnameDeSelect(item) {
        //   console.log(item);
    }
    nationnameSelectAll(items) {
        //  console.log(items);
    }
    nationnameDeSelectAll(items) {
        //  console.log(items);
    }
    oncitySelect(item) {
        // let cityid = this.selectedcity[0].id;
        // this.adminPage.refCityId = cityid;
        let refCityId = this.selectedcity[0].id;
        this.adminPage.refCityId = refCityId;
    }
    oncityDeSelect(item) {
        //  console.log(item);
    }
    oncitySelectAll(items) {
        //  console.log(items);
    }
    oncityDeSelectAll(items) {
        // console.log(items);
    }
    //upload file
    fileChangeEvent(e) {
        //alert(e.target.files[0]);
        $('#file-upload').removeAttr('src');
        this.adminPage.filename = "";
        this.adminPage.filetype = "";
        this.adminPage.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "JPG" || extention == "jpg") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB 
             {
                this.loaderService.display(true);
                this.imageChangedEvent = e; // image crop
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.adminPage.filename = file.name;
                    this.adminPage.filetype = file.type;
                    // const csv: string = reader.result as string;
                    // this.adminPage.profileImage = csv.replace("data:image/jpeg;base64,", "");
                    this.adminPage.profileImage = reader.result;
                };
                this.basicMemberForm.controls.profileImage.setValue(this.adminPage.profileImage);
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG") {
                this.adminPage.filename = "";
                this.adminPage.filetype = "";
                this.adminPage.profileImage = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.adminPage.filename = "";
                this.adminPage.filetype = "";
                this.adminPage.profileImage = "";
                // this.adminPage.profileImagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire("Document size should be less than 10MB");
                return;
            }
        }
    }
    imageCropped(event) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMemberForm.controls.profileImage.setValue(this.croppedImage);
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMemberForm.controls.profileImage.setValue(this.croppedImage);
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMemberForm.controls.profileImage.setValue(this.croppedImage);
            });
        }
    }
    imageLoaded() {
        // show cropper
    }
    cropperReady() {
        // cropper ready
    }
    loadImageFailed() {
        // show message
    }
    fileChangeEventProfile(e, seqno) {
        this.loaderService.display(true);
        this.imageChangedEvent1Profile = "";
        this.imageChangedEvent2Profile = "";
        this.imageChangedEvent3Profile = "";
        this.imageChangedEvent4Profile = "";
        this.imageChangedEvent5Profile = "";
        this.imageChangedEvent6Profile = "";
        this.imageChangedEvent7Profile = "";
        var orientation = 1;
        //alert(e.target.files[0]);
        // $('#photo1').removeAttr('src');
        // $('#photo2').removeAttr('src');
        // $('#photo3').removeAttr('src');
        // $('#photo4').removeAttr('src');
        // $('#photo5').removeAttr('src');
        // $('#photo6').removeAttr('src');
        // $('#photo7').removeAttr('src');
        this.profileMember.filename = "";
        this.profileMember.filetype = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "JPG" || extention == "jpg") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB 
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    if (seqno == 1) {
                        this.url1 = reader.result;
                        this.url11 = reader.result;
                        this.imageChangedEvent1Profile = e;
                    }
                    else if (seqno == 2) {
                        this.url2 = reader.result;
                        this.url22 = reader.result;
                        this.imageChangedEvent2Profile = e;
                    }
                    else if (seqno == 3) {
                        this.url3 = reader.result;
                        this.url33 = reader.result;
                        this.imageChangedEvent3Profile = e;
                    }
                    else if (seqno == 4) {
                        this.url4 = reader.result;
                        this.url44 = reader.result;
                        this.imageChangedEvent4Profile = e;
                    }
                    else if (seqno == 5) {
                        this.url5 = reader.result;
                        this.url55 = reader.result;
                        this.imageChangedEvent5Profile = e;
                    }
                    else if (seqno == 6) {
                        this.url6 = reader.result;
                        this.url66 = reader.result;
                        this.imageChangedEvent6Profile = e;
                    }
                    else if (seqno == 7) {
                        this.url7 = reader.result;
                        this.url77 = reader.result;
                        this.imageChangedEvent7Profile = e;
                    }
                    this.profileMember.filename = file.name;
                    this.profileMember.filetype = file.type;
                    //const csv: string = reader.result as string;
                    // this.profileMember.imageBase64String = csv.replace("data:image/jpeg;base64,", "");
                    //this.adminPage.profileImagePath = this.adminPage.imageBase64String;
                    //this.model.user_imagepath = this.model.imageBase64String;
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "JPG" && extention != "jpg") {
                this.profileMember.filename = "";
                this.profileMember.filetype = "";
                if (seqno == 1) {
                    this.url1 = "";
                    this.url11 = "";
                    this.profileMemberForm.controls.ProfileimagePath1.setValue("");
                }
                else if (seqno == 2) {
                    this.url2 = "";
                    this.url22 = "";
                    this.profileMemberForm.controls.ProfileimagePath2.setValue("");
                }
                else if (seqno == 3) {
                    this.url3 = "";
                    this.url33 = "";
                    this.profileMemberForm.controls.ProfileimagePath3.setValue("");
                }
                else if (seqno == 4) {
                    this.url4 = "";
                    this.url44 = "";
                    this.profileMemberForm.controls.ProfileimagePath4.setValue("");
                }
                else if (seqno == 5) {
                    this.url5 = "";
                    this.url55 = "";
                    this.profileMemberForm.controls.ProfileimagePath5.setValue("");
                }
                else if (seqno == 6) {
                    this.url6 = "";
                    this.url66 = "";
                    this.profileMemberForm.controls.ProfileimagePath6.setValue("");
                }
                else if (seqno == 7) {
                    this.url7 = "";
                    this.url77 = "";
                    this.profileMemberForm.controls.ProfileimagePath7.setValue("");
                }
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.profileMember.filename = "";
                this.profileMember.filetype = "";
                //  $('#file-upload').removeAttr('src');
                if (seqno == 1) {
                    this.url1 = "";
                    this.url11 = "";
                    this.profileMemberForm.controls.ProfileimagePath1.setValue("");
                }
                else if (seqno == 2) {
                    this.url2 = "";
                    this.url22 = "";
                    this.profileMemberForm.controls.ProfileimagePath2.setValue("");
                }
                else if (seqno == 3) {
                    this.url3 = "";
                    this.url33 = "";
                    this.profileMemberForm.controls.ProfileimagePath3.setValue("");
                }
                else if (seqno == 4) {
                    this.url4 = "";
                    this.url44 = "";
                    this.profileMemberForm.controls.ProfileimagePath4.setValue("");
                }
                else if (seqno == 5) {
                    this.url5 = "";
                    this.url55 = "";
                    this.profileMemberForm.controls.ProfileimagePath5.setValue("");
                }
                else if (seqno == 6) {
                    this.url6 = "";
                    this.url66 = "";
                    this.profileMemberForm.controls.ProfileimagePath6.setValue("");
                }
                else if (seqno == 7) {
                    this.url7 = "";
                    this.url77 = "";
                    this.profileMemberForm.controls.ProfileimagePath7.setValue("");
                }
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire("Document size should be less than 10MB");
                return;
            }
        }
    }
    imageCroppedProfile(event, seqno) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        var fileName = "MemberProfilePhoto" + seqno;
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                let data = {
                    'mobile': this.adminPage.mobile,
                    'fileName': fileName,
                    'base64': result
                };
                this.apiService.Create('file/uploadBase64', data).subscribe((data1) => {
                    this.loaderService.display(false);
                    if (this.imageChangedEvent1Profile) {
                        this.url1 = result;
                        this.url11 = data1.object;
                    }
                    else if (this.imageChangedEvent2Profile) {
                        this.url2 = result;
                        this.url22 = data1.object;
                    }
                    else if (this.imageChangedEvent3Profile) {
                        this.url3 = result;
                        this.url33 = data1.object;
                    }
                    else if (this.imageChangedEvent4Profile) {
                        this.url4 = result;
                        this.url44 = data1.object;
                    }
                    else if (this.imageChangedEvent5Profile) {
                        this.url5 = result;
                        this.url55 = data1.object;
                    }
                    else if (this.imageChangedEvent6Profile) {
                        this.url6 = result;
                        this.url66 = data1.object;
                    }
                    else if (this.imageChangedEvent7Profile) {
                        this.url7 = result;
                        this.url77 = data1.object;
                    }
                });
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                let data = {
                    'mobile': this.adminPage.mobile,
                    'fileName': fileName,
                    'base64': result
                };
                this.apiService.Create('file/uploadBase64', data).subscribe((data1) => {
                    this.loaderService.display(false);
                    if (this.imageChangedEvent1Profile) {
                        this.url1 = result;
                        this.url11 = data1.object;
                    }
                    else if (this.imageChangedEvent2Profile) {
                        this.url2 = result;
                        this.url22 = data1.object;
                    }
                    else if (this.imageChangedEvent3Profile) {
                        this.url3 = result;
                        this.url33 = data1.object;
                    }
                    else if (this.imageChangedEvent4Profile) {
                        this.url4 = result;
                        this.url44 = data1.object;
                    }
                    else if (this.imageChangedEvent5Profile) {
                        this.url5 = result;
                        this.url55 = data1.object;
                    }
                    else if (this.imageChangedEvent6Profile) {
                        this.url6 = result;
                        this.url66 = data1.object;
                    }
                    else if (this.imageChangedEvent7Profile) {
                        this.url7 = result;
                        this.url77 = data1.object;
                    }
                });
            });
        }
        else if (isbc > 500000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                let data = {
                    'mobile': this.adminPage.mobile,
                    'fileName': fileName,
                    'base64': result
                };
                this.apiService.Create('file/uploadBase64', data).subscribe((data1) => {
                    this.loaderService.display(false);
                    if (this.imageChangedEvent1Profile) {
                        this.url1 = result;
                        this.url11 = data1.object;
                    }
                    else if (this.imageChangedEvent2Profile) {
                        this.url2 = result;
                        this.url22 = data1.object;
                    }
                    else if (this.imageChangedEvent3Profile) {
                        this.url3 = result;
                        this.url33 = data1.object;
                    }
                    else if (this.imageChangedEvent4Profile) {
                        this.url4 = result;
                        this.url44 = data1.object;
                    }
                    else if (this.imageChangedEvent5Profile) {
                        this.url5 = result;
                        this.url55 = data1.object;
                    }
                    else if (this.imageChangedEvent6Profile) {
                        this.url6 = result;
                        this.url66 = data1.object;
                    }
                    else if (this.imageChangedEvent7Profile) {
                        this.url7 = result;
                        this.url77 = data1.object;
                    }
                });
            });
        }
    }
    imageLoadedProfile() {
        // show cropper
    }
    cropperReadyProfile() {
        // cropper ready
    }
    loadImageFailedProfile() {
        // show message
    }
    getOnLoadData() {
        this.adminPage = new src_app_modals_adminpage__WEBPACK_IMPORTED_MODULE_5__["AdminPage"]();
        this.profileMember = new _app_modals_profilemember__WEBPACK_IMPORTED_MODULE_8__["ProfileMember"]();
        this.premiumProfile = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["PremiumProfile"]();
        this.adminPage.individualInstitute = "Individual";
        this.adminPage.experienceType = "Experienced";
        this.adminPage.refMembershipTypeId = "1";
        this.adminPage.mobileVisibility = "1";
        this.adminPage.emailVisibility = "1";
        this.adminPage.addressVisibility = "1";
        // this.premiumProfile.articleImg = [];
        this.premiumProfile.galImg = [];
        this.premiumProfile.newsImg = [];
        this.premiumProfile.articleImg = [];
        this.premiumProfile.articlePdf = [];
        this.imageChangedEventGalary = [];
        //this.premiumProfile.articleImg.push(this.article);
        this.premiumProfile.webPrivatePublicFlag = "1";
        this.croppedImage = "";
        this.url1 = "";
        this.url2 = "";
        this.url3 = "";
        this.url4 = "";
        this.url5 = "";
        this.url6 = "";
        this.url7 = "";
        this.url11 = "";
        this.url22 = "";
        this.url33 = "";
        this.url44 = "";
        this.url55 = "";
        this.url66 = "";
        this.url77 = "";
        this.croppedhdphoto = "";
        this.OnindividualInstituteChange();
        this.OnexperienceTypeChange();
        this.motherToungeSettings = {
            text: "Select Mother Tounge",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Mother Tounge',
            badgeShowLimit: 5,
        };
        this.otherLanguagesSettings = {
            text: "Select Other Languages",
            singleSelection: false,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Other Languages',
            badgeShowLimit: 5,
        };
        this.openionmembernameSettings = {
            text: "Select Member",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Member',
            badgeShowLimit: 5
        };
        this.citySettings = {
            text: "Select City",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search City',
            badgeShowLimit: 5
        };
        this.statenameSettings = {
            text: "Select State",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search State',
            badgeShowLimit: 5
        };
        this.nationSettings = {
            text: "Select Nation",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Nation',
            badgeShowLimit: 5
        };
        //
        this.otherMembersettings = {
            text: "Select Member",
            classes: "myclass custom-class",
            noDataLabel: "Search Member...",
            enableSearchFilter: true,
            singleSelection: true,
            enableCheckAll: false,
            enableFilterSelectAll: false,
        };
        this.motherToungeList = [];
        this.otherLanguagesList = [];
        this.openionmembernameList = [];
        this.statenameList = [];
        this.cityList = [];
        this.nationList = [];
        this.otherMemberList = [];
        this.proffessionList = [];
        this.originalproffessionListData = [];
        this.selectedItems = [];
        this.getlanguageDtoList();
        this.getstateDtoList();
        this.getproffessionList();
        this.getnationalityDtoList();
        this.getSocialLinksList();
    }
    //get languageDtoList lists
    getlanguageDtoList() {
        this.loaderService.display(true);
        this.apiService.getDATA("language/getAll").toPromise().then(data => {
            this.loaderService.display(false);
            if (data.success == true) {
                if (data.object != null && data.object != undefined) {
                    let object = data.object;
                    if (object.languageDtoList != undefined) {
                        let languageDtoList = object.languageDtoList;
                        let otherLanguagesList = [];
                        languageDtoList.forEach(otherlang => {
                            if (otherlang.lanaguageId > 0) {
                                otherLanguagesList.push({ "id": otherlang.lanaguageId, "itemName": otherlang.title });
                            }
                        });
                        this.motherToungeList = otherLanguagesList;
                        this.otherLanguagesList = otherLanguagesList;
                    }
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    //get getstateDtoList lists
    getstateDtoList() {
        this.loaderService.display(true);
        this.apiService.getDATA("state/getAllActive").toPromise().then(data => {
            this.loaderService.display(false);
            if (data.success == true) {
                if (data.object != null && data.object != undefined) {
                    let object = data.object;
                    this.statenameList = [];
                    if (object.stateDtoList != undefined) {
                        let stateDtoList = object.stateDtoList;
                        stateDtoList.forEach(statename => {
                            if (statename.stateId > 0) {
                                this.statenameList.push({ "id": statename.stateId, "itemName": statename.stateName });
                            }
                        });
                    }
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    //get proffessionList lists
    getproffessionList() {
        this.loaderService.display(true);
        this.apiService.getDATA("profession/getAllActive").toPromise().then(data => {
            this.loaderService.display(false);
            if (data.success == true) {
                if (data.object != null && data.object != undefined) {
                    let object = data.object;
                    this.proffessionList = [];
                    if (object.professionDtoList != undefined) {
                        object.professionDtoList.forEach(professionname => {
                            if (professionname.professionId > 0) {
                                this.proffessionList.push({ "id": professionname.professionId, "itemName": professionname.title, "category": professionname.parentName, "itemProfession": professionname.individualInstitute });
                            }
                        });
                    }
                    this.originalproffessionListData = this.proffessionList;
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    //get nationalityDtoList lists
    getnationalityDtoList() {
        this.loaderService.display(true);
        this.apiService.getDATA("nationality/getAll").toPromise().then(data => {
            this.loaderService.display(false);
            if (data.success == true) {
                if (data.object != null && data.object != undefined) {
                    let object = data.object;
                    if (object.nationalityDtoList != undefined) {
                        let nationalityDtoList = object.nationalityDtoList;
                        nationalityDtoList.forEach(nationname => {
                            if (nationname.nationalityId > 0) {
                                this.nationList.push({ "id": nationname.nationalityId, "itemName": nationname.title });
                            }
                        });
                    }
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    //Get master sociallinks
    getSocialLinksList() {
        this.loaderService.display(true);
        this.apiService.getDATA("socialLinks/getAllActive").toPromise().then(data => {
            this.loaderService.display(false);
            if (data.success == true) {
                if (data.object != null && data.object != undefined) {
                    let object = data.object;
                    if (object.socialLinksDtoList != undefined) {
                        this.socialLinksDtoList = object.socialLinksDtoList;
                        // console.log(JSON.stringify(object.socialLinksDtoList));
                        for (var i = 0; i < this.socialLinksDtoList.length; i++) {
                            this.addNewsocialLinkDetails();
                            const control = this.premiumMemberForm.controls['socialLinkRows'];
                            control.controls[i].get('socialLinksUrl').setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(6), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(200)]);
                            control.controls[i].get('socialLinksUrl').updateValueAndValidity();
                        }
                    }
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    getOtherMemberDetails(i, membershipId) {
        if (membershipId != "" && membershipId != undefined) {
            let curMemb = this.openionmembernameList.filter(aa => aa.membershipId == parseInt(membershipId))[0];
            const ctrl = this.profileMemberForm.controls['otherOpenionRows'];
            // if(curMemb.profileImage !=undefined && curMemb.profileImage !=""){
            //   ctrl.controls[i].get('otherMemberImage').setValue(curMemb.profileImage);
            // }
        }
    }
    getProfessionList() {
        this.proffessionList = [];
        this.originalproffessionListData = [];
        this.otherSkillList = [];
        //this.adminPage.individualInstitute = "Individual";
        this.loaderService.display(true);
        this.apiService.Create("profession/getAll", this.adminPage).subscribe(data => {
            this.loaderService.display(false);
            if (data != undefined) {
                if (data.success) {
                    let object = data.object;
                    if (object.professionDtoList != undefined) {
                        let professionDtoList = [];
                        professionDtoList = object.professionDtoList;
                        let proffessionList = [];
                        if (professionDtoList.length > 0) {
                            for (let i = 0; i < professionDtoList.length; i++) {
                                let professional = professionDtoList[i];
                                if (professional.professionId > 0) {
                                    proffessionList.push({ "id": professional.professionId, "itemName": professional.title, "category": professional.parentName, "itemProfession": professional.individualInstitute });
                                }
                            }
                        }
                        this.proffessionList = proffessionList;
                        this.originalproffessionListData = this.proffessionList;
                    }
                    if (object.professionDtoList != undefined) {
                        let professionDtoList = [];
                        professionDtoList = object.professionDtoList;
                        let otherSkillList = [];
                        if (professionDtoList.length > 0) {
                            for (let i = 0; i < professionDtoList.length; i++) {
                                let otherskill = professionDtoList[i];
                                if (otherskill.professionId > 0) {
                                    let category = otherskill.parentName.trim();
                                    otherSkillList.push({ "id": otherskill.professionId, "itemName": otherskill.title, "category": otherskill.parentName, "itemProfession": otherskill.individualInstitute });
                                }
                            }
                        }
                        this.otherSkillList = otherSkillList;
                    }
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    SetexperienceTypeChange() {
        if (this.adminPage.experienceType == "Experienced") {
            this.basicMemberForm.get('yearOfExp').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required]));
            this.basicMemberForm.get('yearOfExp').updateValueAndValidity();
        }
        else {
            this.basicMemberForm.get('yearOfExp').setValidators(null);
            this.basicMemberForm.get('yearOfExp').updateValueAndValidity();
        }
    }
    OnexperienceTypeChange() {
        this.adminPage.yearOfExp = "";
        if (this.adminPage.experienceType == "Experienced") {
            this.basicMemberForm.get('yearOfExp').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required]));
            this.basicMemberForm.get('yearOfExp').updateValueAndValidity();
        }
        else {
            this.basicMemberForm.get('yearOfExp').setValidators(null);
            this.basicMemberForm.get('yearOfExp').updateValueAndValidity();
        }
    }
    OnindividualInstituteChange() {
        this.adminPage.firstName = "";
        this.adminPage.middleName = "";
        this.adminPage.lastName = "";
        this.adminPage.ageGroup = "";
        this.adminPage.gender = "";
        this.adminPage.leagueTypeId = "";
        this.adminPage.since = "";
        this.adminPage.contactPerson = "";
        this.profileMember.qualification = "";
        this.selectedmotherTounge = [];
        this.selectedotherLanguages = [];
        this.profileMember.motherTounge;
        this.profileMember.otherLanguage = [];
        this.profileMember.height = "";
        this.profileMember.weight = "";
        this.profileMember.dob = "";
        this.profileMember.birthPlace = "";
        if (this.adminPage.individualInstitute == 'Institute') {
            this.adminPage.individualInstituteName = "Institute Name";
            this.adminPage.ProfessionService = 'Service';
            this.adminPage.OtherSkillsOtherServices = 'Other Services';
            this.basicMemberForm.get('middleName').setValidators(null);
            this.basicMemberForm.get('middleName').updateValueAndValidity();
            this.basicMemberForm.get('lastName').setValidators(null);
            this.basicMemberForm.get('lastName').updateValueAndValidity();
            this.basicMemberForm.get('ageGroup').setValidators(null);
            this.basicMemberForm.get('ageGroup').updateValueAndValidity();
            this.basicMemberForm.get('gender').setValidators(null);
            this.basicMemberForm.get('gender').updateValueAndValidity();
            this.basicMemberForm.get('since').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].pattern('[0-9]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(4), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(4)]));
            this.basicMemberForm.get('since').updateValueAndValidity();
            this.basicMemberForm.get('contactPerson').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(3)]));
            this.basicMemberForm.get('contactPerson').updateValueAndValidity();
            //Profile
            this.profileMemberForm.get('qualification').setValidators(null);
            this.profileMemberForm.get('qualification').updateValueAndValidity();
            this.profileMemberForm.get('motherTounge').setValidators(null);
            this.profileMemberForm.get('motherTounge').updateValueAndValidity();
            this.profileMemberForm.get('otherLanguages').setValidators(null);
            this.profileMemberForm.get('otherLanguages').updateValueAndValidity();
            this.profileMemberForm.get('height').setValidators(null);
            this.profileMemberForm.get('height').updateValueAndValidity();
            this.profileMemberForm.get('weight').setValidators(null);
            this.profileMemberForm.get('weight').updateValueAndValidity();
            this.profileMemberForm.get('dob').setValidators(null);
            this.profileMemberForm.get('dob').updateValueAndValidity();
            this.profileMemberForm.get('birthPlace').setValidators(null);
            this.profileMemberForm.get('birthPlace').updateValueAndValidity();
        }
        else if (this.adminPage.individualInstitute == 'Individual') {
            this.adminPage.individualInstituteName = "First Name";
            this.adminPage.ProfessionService = 'Profession';
            this.adminPage.OtherSkillsOtherServices = 'Other Skills';
            this.basicMemberForm.get('middleName').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(3)]));
            this.basicMemberForm.get('middleName').updateValueAndValidity();
            this.basicMemberForm.get('lastName').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(3)]));
            this.basicMemberForm.get('lastName').updateValueAndValidity();
            this.basicMemberForm.get('ageGroup').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required]));
            this.basicMemberForm.get('ageGroup').updateValueAndValidity();
            this.basicMemberForm.get('gender').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required]));
            this.basicMemberForm.get('gender').updateValueAndValidity();
            this.basicMemberForm.get('since').setValidators(null);
            this.basicMemberForm.get('since').updateValueAndValidity();
            this.basicMemberForm.get('contactPerson').setValidators(null);
            this.basicMemberForm.get('contactPerson').updateValueAndValidity();
            //Profile
            this.profileMemberForm.get('qualification').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(2)]));
            this.profileMemberForm.get('qualification').updateValueAndValidity();
            this.profileMemberForm.get('motherTounge').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required]));
            this.profileMemberForm.get('motherTounge').updateValueAndValidity();
            // this.profileMemberForm.get('otherLanguages').setValidators(Validators.compose([Validators.required]));
            this.profileMemberForm.get('otherLanguages').updateValueAndValidity();
            // this.profileMemberForm.get('height').setValidators(Validators.compose([Validators.required]));
            // this.profileMemberForm.get('height').updateValueAndValidity();
            // this.profileMemberForm.get('weight').setValidators(Validators.compose([Validators.required]));
            // this.profileMemberForm.get('weight').updateValueAndValidity();
            this.profileMemberForm.get('dob').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required]));
            this.profileMemberForm.get('dob').updateValueAndValidity();
            this.profileMemberForm.get('birthPlace').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].minLength(3)]));
            this.profileMemberForm.get('birthPlace').updateValueAndValidity();
        }
        this.proffessionSettings = {
            text: 'Select ' + this.adminPage.ProfessionService,
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search ' + this.adminPage.ProfessionService,
            badgeShowLimit: 5,
            groupBy: "category"
        };
        this.otherSkillSettings = {
            singleSelection: false,
            text: 'Select ' + this.adminPage.OtherSkillsOtherServices,
            enableCheckAll: false,
            enableFilterSelectAll: false,
            searchPlaceholderText: 'Search ' + this.adminPage.OtherSkillsOtherServices,
            enableSearchFilter: true,
            badgeShowLimit: 8,
            groupBy: "category",
            limitSelection: 8
        };
        this.getProfessionList();
    }
    onSelectFile(event) {
        if (event.target.files && event.target.files[0]) {
            var filesAmount = 50;
            for (let i = 0; i < filesAmount; i++) {
                var reader = new FileReader();
                reader.onload = (event) => {
                    this.urls.push(event.target.result);
                };
                reader.readAsDataURL(event.target.files[i]);
            }
        }
    }
    GetCityDetailsByStateId() {
        this.cityList = [];
        this.adminPage.refCityId = "";
        this.selectedcity = [];
        if (this.adminPage.refStateId != undefined && this.adminPage.refStateId != 0) {
            let refStateId = this.adminPage.refStateId;
            var Cdata = { "refStateId": refStateId };
            this.apiService.Create("city/getAllCityByStateId", Cdata).subscribe(data => {
                if (data.success) {
                    if (data.object != undefined && data.object != null) {
                        if (data.object != undefined) {
                            let cityDtoList = data.object;
                            let cityList = [];
                            cityDtoList.forEach(city => {
                                if (city.cityId > 0) {
                                    cityList.push({ "id": city.cityId, "itemName": city.cityName });
                                    //this.adminPage.refCityId = city.cityId;
                                }
                            });
                            this.cityList = cityList;
                        }
                    }
                }
            });
        }
    }
    hdPhotoApply(e) {
        $('#mainPhotoPath').removeAttr('src');
        this.premiumProfile.filename = "";
        this.premiumProfile.filetype = "";
        this.premiumProfile.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0]) {
            var reader = new FileReader();
            reader.readAsDataURL(e.target.files[0]);
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "JPG" || extention == "jpg") && e.target.files[0].size <= 10000000) // 2097152 bytes = 2MB 
             {
                this.loaderService.display(true);
                this.hdimageChangedEvent = e;
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = (event) => {
                    this.url = event.target.result;
                    this.premiumProfile.filename = file.name;
                    this.premiumProfile.filetype = file.type;
                    // const csv: string = reader.result as string;
                    // this.premiumProfile.imageBase64String = csv.replace("data:image/jpeg;base64,", "");
                    this.premiumProfile.imageBase64String = reader.result;
                    this.premiumMemberForm.controls.mainPhotoPath.setValue(this.premiumProfile.imageBase64String);
                    //  this.premiumProfile.mainPhotoPath = csv.replace("data:image/jpeg;base64,", "");
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG") {
                this.premiumProfile.filename = "";
                this.premiumProfile.filetype = "";
                // this.premiumProfile.imageBase64String = "";
                // this.adminPage.profileImagePath = this.adminPage.imageBase64String;
                $('#mainPhotoPath').removeAttr('src');
                this.premiumMemberForm.controls.mainPhotoPath.setValue("");
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.premiumProfile.filename = "";
                this.premiumProfile.filetype = "";
                //this.premiumProfile.imageBase64String = "";
                // this.adminPage.profileImagePath = "";
                this.premiumMemberForm.controls.mainPhotoPath.setValue("");
                $('#mainPhotoPath').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire("Document size should be less than 10MB");
                return;
            }
        }
    }
    hdimageCropped(event) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.croppedhdphoto = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.premiumMemberForm.controls.mainPhotoPath.setValue(this.croppedhdphoto);
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                this.croppedhdphoto = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.premiumMemberForm.controls.mainPhotoPath.setValue(this.croppedhdphoto);
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.croppedhdphoto = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.premiumMemberForm.controls.mainPhotoPath.setValue(this.croppedhdphoto);
            });
        }
    }
    hdimageLoaded() {
        // show cropper
    }
    hdcropperReady() {
        // cropper ready
    }
    hdloadImageFailed() {
        // show message
    }
    // end hd photo
    //for article pdf/photo convertion in my_web_page
    //articleImage = [];
    multipartArticleUpload(e, seqNo) {
        this.premiumProfile.filename = "";
        this.premiumProfile.filetype = "";
        this.article = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
        this.premiumProfile.articleImg[seqNo] = this.article;
        if (e.target.files && e.target.files[0] && e.target.files[0].size <= 200000) {
            this.loaderService.display(true);
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if (extention == "JPEG" || extention == "jpeg" || extention == "JPG" || extention == "jpg") {
                var date = new Date();
                var uploadFor = "Article" + (Number(seqNo) + 1) + date.getFullYear() + date.getMonth() + date.getDate() + date.getHours() + date.getMinutes() + date.getSeconds();
                let formData = new FormData();
                let data = {
                    "mobile": this.adminPage.mobile,
                    "for": uploadFor
                };
                formData.append("file", e.target.files[0]);
                formData.append("info", new Blob([JSON.stringify(data)], {
                    type: "application/json"
                }));
                this.apiService.saveFormData("file/upload", formData).subscribe(data1 => {
                    if (data1.success == true) {
                        this.premiumProfile.articleImg[seqNo].articalPath = "";
                        const ctrl = this.premiumMemberForm.controls['articleRows'];
                        ctrl.controls[seqNo].get('articlePath').setValue(data1.object);
                        this.premiumProfile.articleImg[seqNo].articalPath = data1.object;
                    }
                    this.loaderService.display(false);
                });
            }
            else {
                this.premiumProfile.filename = "";
                this.premiumProfile.filetype = "";
                //this.premiumProfile.imageBase64Article = "";
                //  $('#articlePath').removeAttr('src');
                this.premiumProfile.articleImg[seqNo].articalPath = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
        }
        else {
            this.premiumProfile.filename = "";
            this.premiumProfile.filetype = "";
            //this.premiumProfile.imageBase64Article = "";
            //  $('#articlePath').removeAttr('src');
            this.premiumProfile.articleImg[seqNo].articalPath = "";
            this.loaderService.display(false);
            sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire("Please Upload Image file less than 200KB");
            return;
        }
    }
    articleUpload(e, seqNo) {
        this.loaderService.display(true);
        this.premiumProfile.filename = "";
        this.premiumProfile.filetype = "";
        this.article = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
        this.premiumProfile.articleImg[seqNo] = this.article;
        // this.premiumProfile.imageBase64Article = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if (extention == "JPEG" || extention == "jpeg" || extention == "JPG" || extention == "jpg") {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.loaderService.display(false);
                    this.premiumProfile.filename = file.name;
                    this.premiumProfile.filetype = file.type;
                    var imageFormat;
                    if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") && e.target.files[0].size <= 200000) { //200kb
                        imageFormat = extention;
                        this.premiumProfile.articleImg[seqNo].articalPathFileType = extention;
                        const csv = reader.result;
                        let Response = csv;
                        const ctrl = this.premiumMemberForm.controls['articleRows'];
                        ctrl.controls[seqNo].get('articlePath').setValue(Response);
                        this.premiumProfile.articleImg[seqNo].articalPath = Response;
                    }
                    else if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") && e.target.files[0].size > 200000) {
                        this.premiumProfile.filename = "";
                        this.premiumProfile.filetype = "";
                        //  this.premiumProfile.imageBase64Article = "";
                        // this.adminPage.profileImagePath = "";
                        // $('#articlePath').removeAttr('src');
                        this.premiumProfile.articleImg[seqNo].articalPath = "";
                        this.loaderService.display(false);
                        sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire("Article image size should be less than 200KB");
                        return;
                    }
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG") {
                this.premiumProfile.filename = "";
                this.premiumProfile.filetype = "";
                //this.premiumProfile.imageBase64Article = "";
                //  $('#articlePath').removeAttr('src');
                this.premiumProfile.articleImg[seqNo].articalPath = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
        }
    }
    multipartArticlePDFUpload(e, seqNo) {
        this.loaderService.display(true);
        this.premiumProfile.filename = "";
        this.premiumProfile.filetype = "";
        this.article = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
        this.premiumProfile.articlePdf[seqNo] = this.article;
        if (e.target.files && e.target.files[0] && e.target.files[0].size <= 1024000) {
            this.loaderService.display(true);
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            this.premiumProfile.filename = file.name;
            this.premiumProfile.filetype = file.type;
            var extention = nameArray[nameArray.length - 1];
            if (extention == "pdf" || extention == "PDF") {
                var date = new Date();
                var uploadFor = "ArticlePdf" + (Number(seqNo) + 1) + date.getFullYear() + date.getMonth() + date.getDate() + date.getHours() + date.getMinutes() + date.getSeconds();
                let formData = new FormData();
                let data = {
                    "mobile": this.adminPage.mobile,
                    "for": uploadFor
                };
                formData.append("file", e.target.files[0]);
                formData.append("info", new Blob([JSON.stringify(data)], {
                    type: "application/json"
                }));
                this.apiService.saveFormData("file/upload", formData).subscribe(data1 => {
                    if (data1.success == true) {
                        this.premiumProfile.articlePdf[seqNo].articalPathPDF = "";
                        const ctrl = this.premiumMemberForm.controls['articlePdfRows'];
                        ctrl.controls[seqNo].get('articlePdfPath').setValue(data1.object);
                        //this.premiumProfile.articlePdf[seqNo].articalPath = data1.object;
                        this.premiumProfile.articlePdf[seqNo].articalPathPDF = data1.object;
                    }
                    this.loaderService.display(false);
                });
            }
            else {
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire("Please Upload the valid PDF file");
                return;
            }
        }
        else {
            this.loaderService.display(false);
            sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire("Please Upload PDF file less than 1MB");
            return;
        }
    }
    articlePdfUpload(e, seqNo) {
        this.loaderService.display(true);
        this.premiumProfile.filename = "";
        this.premiumProfile.filetype = "";
        this.article = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_9__["article"]();
        this.premiumProfile.articlePdf[seqNo] = this.article;
        // this.premiumProfile.imageBase64Article = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if (extention == "pdf" || extention == "PDF") {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.loaderService.display(false);
                    this.premiumProfile.filename = file.name;
                    this.premiumProfile.filetype = file.type;
                    var imageFormat;
                    if ((extention == "pdf" || extention == "PDF") && e.target.files[0].size <= 1024000) { //1mb
                        imageFormat = extention;
                        this.premiumProfile.articlePdf[seqNo].articalPathFileType = extention;
                        const csv = reader.result;
                        let Response = csv;
                        const ctrl = this.premiumMemberForm.controls['articlePdfRows'];
                        ctrl.controls[seqNo].get('articlePdfPath').setValue(Response);
                        this.premiumProfile.articlePdf[seqNo].articalPath = Response;
                        this.premiumProfile.articlePdf[seqNo].articalPathPDF = Response;
                    }
                    else if ((extention == "pdf" || extention == "PDF") && e.target.files[0].size > 1024000) {
                        this.premiumProfile.filename = "";
                        this.premiumProfile.filetype = "";
                        //  this.premiumProfile.imageBase64Article = "";
                        // this.adminPage.profileImagePath = "";
                        // $('#articlePath').removeAttr('src');
                        this.premiumProfile.articlePdf[seqNo].articalPath = "";
                        this.loaderService.display(false);
                        sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire("PDF size should be less than 1MB");
                        return;
                    }
                };
            }
            else if (extention != "PDF" && extention != "pdf") {
                this.premiumProfile.filename = "";
                this.premiumProfile.filetype = "";
                //this.premiumProfile.imageBase64Article = "";
                //  $('#articlePath').removeAttr('src');
                this.premiumProfile.articlePdf[seqNo].articalPath = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire("Please Upload the valid PDF file");
                return;
            }
        }
    }
    // end article in my_web_page
    //for news photo convertion in my_web_page
    newsImageUpload(e, seqNo) {
        this.loaderService.display(true);
        // $('#news-upload').removeAttr('src');
        this.premiumProfile.filename = "";
        this.premiumProfile.filetype = "";
        // this.premiumProfile.imageBase64News = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "JPG" || extention == "jpg" || extention == "PNG" || extention == "png") && e.target.files[0].size <= 10000000) // 2097152 bytes = 2MB 
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.loaderService.display(false);
                    this.premiumProfile.filename = file.name;
                    this.premiumProfile.filetype = file.type;
                    var orientation = -1;
                    this.imageCompress.compressFile(reader.result, orientation, 25, 25).then(result => {
                        const csv = result;
                        //let Response = csv.replace("data:image/jpeg;base64,", "");
                        let Response = csv;
                        const ctrl = this.premiumMemberForm.controls['newsRows'];
                        ctrl.controls[seqNo].get('newsImagePath').setValue(Response);
                        this.premiumProfile.newsImg[seqNo] = Response;
                    });
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG" && extention != "png" && extention != "PNG") {
                this.premiumProfile.filename = "";
                this.premiumProfile.filetype = "";
                //this.premiumProfile.imageBase64News = "";
                //  $('#news-upload').removeAttr('src');
                this.premiumProfile.newsImg[seqNo] = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire("Please Upload the valid file");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.premiumProfile.filename = "";
                this.premiumProfile.filetype = "";
                // this.premiumProfile.imageBase64News = "";
                // this.adminPage.profileImagePath = "";
                // $('#news-upload').removeAttr('src');
                this.premiumProfile.newsImg[seqNo] = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire("Document size should be less than 10MB");
                return;
            }
        }
    }
    galleryImageUpload(e, seqNo) {
        this.loaderService.display(true);
        // $('#galary-upload').removeAttr('src');
        this.premiumProfile.filename = "";
        this.premiumProfile.filetype = "";
        this.imageChangedEventGalary[seqNo] = "";
        // this.premiumProfile.imageBase64Gallery = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") && e.target.files[0].size <= 10000000) // 2097152 bytes = 2MB 
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.premiumProfile.galImg[seqNo] = reader.result;
                    this.imageChangedEventGalary[seqNo] = e;
                    this.premiumProfile.filename = file.name;
                    this.premiumProfile.filetype = file.type;
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG") {
                this.premiumProfile.filename = "";
                this.premiumProfile.filetype = "";
                // this.premiumProfile.imageBase64Gallery = "";
                // $('#galary-upload').removeAttr('src');
                this.premiumProfile.galImg[seqNo] = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.premiumProfile.filename = "";
                this.premiumProfile.filetype = "";
                // this.premiumProfile.imageBase64Gallery = "";
                // this.adminPage.profileImagePath = "";
                // $('#galary-upload').removeAttr('src');
                this.premiumProfile.galImg[seqNo] = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire("Document size should be less than 10MB");
                return;
            }
        }
    }
    // end gallery in my_web_page
    imageCroppedGalary(event, seqNo) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        var date = new Date();
        var fileName = "MemberGallery" + (Number(seqNo) + 1) + date.getFullYear() + date.getMonth() + date.getDate() + date.getHours() + date.getMinutes() + date.getSeconds();
        //var fileName = "MemberGallery" + (seqNo + 1);
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                let data = {
                    'mobile': this.adminPage.mobile,
                    'fileName': fileName,
                    'base64': result
                };
                this.apiService.Create('file/uploadBase64', data).subscribe((data1) => {
                    this.loaderService.display(false);
                    this.premiumProfile.galImg[seqNo] = "";
                    // this.imageChangedEventGalary[seqNo] = result;
                    if (this.imageChangedEventGalary[seqNo]) {
                        const ctrl = this.premiumMemberForm.controls['galleryRows'];
                        ctrl.controls[seqNo].get('galaryPath').setValue(data1.object);
                        this.premiumProfile.galImg[seqNo] = result;
                    }
                });
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                let data = {
                    'mobile': this.adminPage.mobile,
                    'fileName': fileName,
                    'base64': result
                };
                this.apiService.Create('file/uploadBase64', data).subscribe((data1) => {
                    this.loaderService.display(false);
                    this.premiumProfile.galImg[seqNo] = "";
                    // this.imageChangedEventGalary[seqNo] = result;
                    if (this.imageChangedEventGalary[seqNo]) {
                        const ctrl = this.premiumMemberForm.controls['galleryRows'];
                        ctrl.controls[seqNo].get('galaryPath').setValue(data1.object);
                        this.premiumProfile.galImg[seqNo] = result;
                    }
                });
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                let data = {
                    'mobile': this.adminPage.mobile,
                    'fileName': fileName,
                    'base64': result
                };
                this.apiService.Create('file/uploadBase64', data).subscribe((data1) => {
                    this.loaderService.display(false);
                    this.premiumProfile.galImg[seqNo] = "";
                    // this.imageChangedEventGalary[seqNo] = result;
                    if (this.imageChangedEventGalary[seqNo]) {
                        const ctrl = this.premiumMemberForm.controls['galleryRows'];
                        ctrl.controls[seqNo].get('galaryPath').setValue(data1.object);
                        this.premiumProfile.galImg[seqNo] = result;
                    }
                });
            });
        }
    }
    imageLoadedGalary() {
        // show cropper
    }
    cropperReadyGalary() {
        // cropper ready
    }
    loadImageFailedGalary() {
        // show message
    }
    SaveAndUpdateForm() {
        if (this.basicMemberForm.valid == true && this.profileMemberForm.valid == true && this.premiumMemberForm.valid == true) {
        }
        else {
            if (!this.basicMemberForm.valid) {
                this.apiService.validateAllFormFields(this.basicMemberForm);
            }
            if (!this.profileMemberForm.valid) {
                this.apiService.validateAllFormFields(this.profileMemberForm);
            }
            if (!this.premiumMemberForm.valid) {
                this.apiService.validateAllFormFields(this.premiumMemberForm);
            }
        }
    }
    ClearForm() {
        // this.claerBasicForm();
        // this.claerProfileForm();
        // this.claerWebPageForm();
        this.getOnLoadData();
    }
    GetOtherMemberList(evt) {
        let name = evt.target.value;
        let da = {
            "firstName": name
        };
        this.apiService.Create("member/getMemberDetailsByMemberName", da)
            .subscribe(data => {
            if (data != null && data != undefined) {
                if (data.success == true) {
                    if (data.object != undefined) {
                        let membershipDtoList = data.object;
                        let otherMemberList = [];
                        membershipDtoList.forEach(memname => {
                            if (memname.membershipId > 0) {
                                otherMemberList.push({ "id": memname.membershipId, "itemName": memname.firstName, "profileImage": memname.profileImage });
                            }
                        });
                        this.otherMemberList = otherMemberList;
                    }
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    setOtherOpenionMerberByName(firstName, meberId, index) {
        let da = {
            "firstName": firstName
        };
        this.apiService.Create("member/getMemberDetailsByMemberName", da)
            .subscribe(data => {
            if (data != null && data != undefined) {
                if (data.success == true) {
                    if (data.object != undefined) {
                        let membershipDtoList = data.object;
                        let otherMemberList = [];
                        membershipDtoList.forEach(memname => {
                            if (memname.membershipId > 0) {
                                otherMemberList.push({ "id": memname.membershipId, "itemName": memname.firstName, "profileImage": memname.profileImage });
                            }
                        });
                        this.otherMemberList = otherMemberList;
                        let curr = this.otherMemberList.filter(aa => aa.id == parseInt(meberId))[0];
                        this.selectedItems[index] = curr;
                        const control = this.profileMemberForm.controls['otherOpenionRows'];
                        control.controls[index].get('otherMemberName').setValue(curr.id);
                    }
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    disabledMemberForm() {
        this.basicMemberForm.disable();
        this.citySettings = {
            disabled: true
        };
        this.statenameSettings = {
            disabled: true
        };
        this.proffessionSettings = {
            disabled: true
        };
        this.otherSkillSettings = {
            disabled: true
        };
    }
    disabledProfileForm() {
        this.profileMemberForm.disable();
        this.motherToungeSettings = {
            disabled: true
        };
        this.otherLanguagesSettings = {
            disabled: true
        };
        this.nationSettings = {
            disabled: true
        };
        this.otherMembersettings = {
            disabled: true
        };
    }
    disabledWebPageForm() {
        this.premiumMemberForm.disable();
    }
    updateMemberShipData() {
        if (this.basicMemberForm.valid) {
            if (this.selectedproffession.length > 0) {
                let proffessionid = this.selectedproffession[0].id;
                this.adminPage.refProfessionId = proffessionid;
            }
            if (this.selectedotherSkill.length > 0) {
                let listIds = new Array();
                this.selectedotherSkill.forEach(curent => {
                    if (curent.id > 0) {
                        listIds.push(curent.id);
                    }
                });
                this.adminPage.otherSkills = listIds;
            }
            if (this.selectedstatename.length > 0) {
                let stateid = this.selectedstatename[0].id;
                this.adminPage.refStateId = stateid;
            }
            if (this.selectedcity.length > 0) {
                let refCityId = this.selectedcity[0].id;
                this.adminPage.refCityId = refCityId;
            }
            this.adminPage.individualORInstitute = this.adminPage.individualInstitute;
            this.adminPage.refUserId = 1;
            this.adminPage.imageBase64String = "";
            this.adminPage.profileImage = this.croppedImage;
            this.loaderService.display(true);
            let data = {
                "membershipId": this.adminPage.membershipId,
                "refUserId": this.adminPage.refUserId,
                "refMembershipTypeId": this.adminPage.refMembershipTypeId,
                "experienceType": this.adminPage.experienceType,
                "yearOfExp": this.adminPage.yearOfExp,
                "ageGroup": this.adminPage.ageGroup,
                "gender": this.adminPage.gender,
                "firstName": this.adminPage.firstName,
                "middleName": this.adminPage.middleName,
                "lastName": this.adminPage.lastName,
                "displayName": this.adminPage.displayName,
                "refProfessionId": this.adminPage.refProfessionId,
                "refCityId": this.adminPage.refCityId,
                "refStateId": this.adminPage.refStateId,
                "mobile": this.adminPage.mobile,
                "mobileVisibility": this.adminPage.mobileVisibility,
                "email": this.adminPage.email,
                "emailVisibility": this.adminPage.emailVisibility,
                "address": this.adminPage.address,
                "addressVisibility": this.adminPage.addressVisibility,
                "contactPerson": this.adminPage.contactPerson,
                "since": this.adminPage.since,
                "instructionByMember": this.adminPage.instructionByMember,
                "individualORInstitute": this.adminPage.individualORInstitute,
                "otherSkills": this.adminPage.otherSkills,
                "profileImage": this.adminPage.profileImage
            };
            let originalData = {
                "memberTypeId": 1,
                "dataString": data,
                "memberId": this.adminPage.membershipId
            };
            this.apiService.Create("memberTempData/save", originalData).subscribe((data1) => {
                this.loaderService.display(false);
                if (data1.success == true) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire(data1.message);
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire(data1.message);
                }
            });
        }
    }
    cancel() {
        this.router.navigate(['']);
    }
    updateProfileData() {
        if (this.profileMemberForm.valid) {
            this.loaderService.display(true);
            if (this.selectedmotherTounge.length > 0) {
                let mothertoungueid = this.selectedmotherTounge[0].id;
                this.profileMember.motherTounge = mothertoungueid;
            }
            if (this.selectedotherLanguages.length > 0) {
                let listotherlangIds = new Array();
                this.selectedotherLanguages.forEach(curent => {
                    if (curent.id > 0) {
                        listotherlangIds.push(curent.id);
                        this.profileMember.otherLanguage = listotherlangIds;
                        //this.selectedotherLanguages = listotherlangIds;
                    }
                });
            }
            if (this.selectednation.length > 0) {
                let nationalid = this.selectednation[0].id;
                this.profileMember.refNationalityId = nationalid;
            }
            // set Profile pics 7 start
            this.imageSendArr.push({ "imagePath": this.url11, "seqNum": 1 });
            this.imageSendArr.push({ "imagePath": this.url22, "seqNum": 2 });
            this.imageSendArr.push({ "imagePath": this.url33, "seqNum": 3 });
            this.imageSendArr.push({ "imagePath": this.url44, "seqNum": 4 });
            this.imageSendArr.push({ "imagePath": this.url55, "seqNum": 5 });
            this.imageSendArr.push({ "imagePath": this.url66, "seqNum": 6 });
            this.imageSendArr.push({ "imagePath": this.url77, "seqNum": 7 });
            this.profileMember.profileMemberShipPhotoDtos = this.imageSendArr;
            //end
            // #region   otherOpenionArray
            let membersOthersOpinionDtos = [];
            for (let value of this.profileMemberForm.value.otherOpenionRows) {
                if (value.otherMemberName != "" && value.description != "") {
                    if (value.otherMemberName != null) {
                        if (value.otherMemberName.length > 0) {
                            let refMemberId = value.otherMemberName[0].id;
                            membersOthersOpinionDtos.push({ "refMemberId": refMemberId, "description": value.description });
                        }
                    }
                }
            }
            ;
            this.profileMember.membersOthersOpinionDtos = membersOthersOpinionDtos;
            // #endregion
            this.profileMember.refMemberId = this.adminPage.membershipId;
            let data = {
                "proMemberId": this.profileMember.proMemberId,
                "refMemberId": this.profileMember.refMemberId,
                "qualification": this.profileMember.qualification,
                "motherTounge": this.profileMember.motherTounge,
                "height": this.profileMember.height,
                "weight": this.profileMember.weight,
                "dob": this.profileMember.dob,
                "birthPlace": this.profileMember.birthPlace,
                "refNationalityId": this.profileMember.refNationalityId,
                "description": this.profileMember.description,
                "experience": this.profileMember.experience,
                "aboutMe": this.profileMember.aboutMe,
                "otherLanguage": this.profileMember.otherLanguage,
                "membersOthersOpinionDtos": membersOthersOpinionDtos,
                "profileMemberShipPhotoDtos": this.profileMember.profileMemberShipPhotoDtos
            };
            let originalData = {
                "memberTypeId": 2,
                "dataString": data,
                "memberId": this.adminPage.membershipId
            };
            this.apiService.Create("memberTempData/save", originalData).subscribe((data1) => {
                this.loaderService.display(false);
                if (data1.success == true) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire(data1.message);
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire(data1.message);
                }
            });
        }
    }
    updatePremiumData() {
        if (this.premiumMemberForm.valid) {
            this.loaderService.display(true);
            // this.premiumProfile.mainPhotoPath = this.premiumProfile.imageBase64String;
            // this.premiumProfile.mainPhotoPath = this.croppedhdphoto.replace("data:image/jpeg;base64,", "");
            this.premiumProfile.mainPhotoPath = this.croppedhdphoto;
            //article save
            let membersArticlesDtos = [];
            for (let value of this.premiumMemberForm.value.articleRows) {
                //value.articlePath = this.premiumProfile.imageBase64Article;
                if (value.articlePath != "" && value.articlePath != undefined && value.articleTitle != "" && value.articleTitle != undefined) {
                    // value.articleTitle  = parseInt(value.articleTitle);
                    //  value.articleDescription = parseInt(value.articleDescription);
                    // value.articlePath = this.premiumProfile.imageBase64Article;
                    membersArticlesDtos.push({ "articalTitle": value.articleTitle, "articalPath": value.articlePath });
                }
            }
            for (let value of this.premiumMemberForm.value.articlePdfRows) {
                if (value.articlePdfPath != "" && value.articlePdfPath != undefined && value.articlePdfTitle != "" && value.articlePdfTitle != undefined) {
                    membersArticlesDtos.push({ "articalTitle": value.articlePdfTitle, "articalPath": value.articlePdfPath });
                }
            }
            // video save
            let membersVideosDtos = [];
            for (let value of this.premiumMemberForm.value.videoRows) {
                if (value.videoName != "" && value.videoURL != "" && value.videoName != undefined && value.videoURL != undefined) {
                    // value.videoName  = parseInt(value.videoName);
                    // value.videoURL = parseInt(value.videoURL);
                    membersVideosDtos.push({ "videoName": value.videoName, "videoURL": value.videoURL });
                }
            }
            //end video save
            this.premiumProfile.membersArticlesDtos = membersArticlesDtos;
            this.premiumProfile.membersVideosDtos = membersVideosDtos;
            let membersGallaryDtos = [];
            for (let value of this.premiumMemberForm.value.galleryRows) {
                if (value.galaryPath != "" && value.galaryPath != undefined) {
                    membersGallaryDtos.push({ "galaryPath": value.galaryPath });
                }
            }
            this.premiumProfile.membersGallaryDtos = membersGallaryDtos;
            let membersSocialLinksDtos = [];
            if (this.socialLinksDtoList.length > 0) {
                this.socialLinksDtoList.forEach(social => {
                    if (social.socialLinksUrl != "" && social.socialLinksUrl != undefined) {
                        membersSocialLinksDtos.push({ "refSocialLinkId": social.socialLinksId, "socialLinksUrl": social.socialLinksUrl });
                    }
                });
            }
            this.premiumProfile.membersSocialLinksDtos = membersSocialLinksDtos;
            //this.premiumProfile.webPageId = 0;
            this.premiumProfile.refProfileMembershipId = this.profileMember.proMemberId;
            // let webPriPubFlag = Number(this.premiumProfile.webPrivatePublicFlag);
            let resultData = {
                "webPageId": this.premiumProfile.webPageId,
                "refProfileMembershipId": this.premiumProfile.refProfileMembershipId,
                "mainPhotoPath": this.premiumProfile.mainPhotoPath,
                "membersArticlesDtos": this.premiumProfile.membersArticlesDtos,
                "membersGallaryDtos": this.premiumProfile.membersGallaryDtos,
                "membersNewsDtos": this.premiumProfile.membersNewsDtos,
                "membersSocialLinksDtos": this.premiumProfile.membersSocialLinksDtos,
                "membersVideosDtos": this.premiumProfile.membersVideosDtos,
                "webPrivatePublicFlag": this.premiumProfile.webPrivatePublicFlag
            };
            let originalData = {
                "memberTypeId": 3,
                "dataString": resultData,
                "memberId": this.adminPage.membershipId
            };
            console.log(originalData);
            /* this.apiService.Create("memberTempData/save", originalData).subscribe((data1) => {
              this.loaderService.display(false);
              if (data1.success == true) {
                Swal.fire(data1.message);
              } else {
                Swal.fire(data1.message);
              }
            }) */
        }
        else {
            sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire("Not valid");
        }
    }
    submitStatus(stid) {
        if (this.statusForm.valid) {
            let memberId = stid;
            let data = {
                "membershipId": memberId,
                "status": this.adminPage.status,
                "remarks": this.adminPage.remarks
            };
            this.apiService.Create(this.updatePath, data).subscribe(data => {
                if (data != null && data != undefined) {
                    this.closeBtn.nativeElement.click();
                    sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire(data.message);
                    this.ngOnInit();
                }
            });
        }
        else {
            this.apiService.validateAllFormFields(this.statusForm);
            sweetalert2__WEBPACK_IMPORTED_MODULE_15___default.a.fire("Please Enter All The Mandatory Fields");
        }
    }
    EditStatus(data) {
        let memberId = data.memberId;
        var da = {
            "membershipId": memberId
        };
        this.apiService.Create("member/getMemberDetailsByMemberId", da).subscribe(data => {
            if (data != null && data != undefined) {
                let statusdata = data.object;
                if (statusdata.isTempData == 1) {
                    this.updatePath = "memberTempData/approve";
                }
                else {
                    this.updatePath = "member/updateStatusAndRemarksByMemberId";
                }
                this.adminPage = statusdata;
                this.adminPage.membershipId = statusdata.membershipId;
                this.adminPage.status = statusdata.status;
                this.adminPage.remarks = statusdata.remarks;
                this.setStatusData();
            }
        });
    }
};
MemberpendinglistComponent.ctorParameters = () => [
    { type: src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_4__["ApiService"] },
    { type: _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_3__["LoaderService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormBuilder"] },
    { type: ngx_image_compress__WEBPACK_IMPORTED_MODULE_10__["NgxImageCompressService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_14__["Router"] },
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_11__["DomSanitizer"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Compiler"] },
    { type: src_app_services_account_service__WEBPACK_IMPORTED_MODULE_17__["AccountService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('closeBtn', { static: true })
], MemberpendinglistComponent.prototype, "closeBtn", void 0);
MemberpendinglistComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-memberpendinglist',
        template: __webpack_require__(/*! raw-loader!./memberpendinglist.component.html */ "./node_modules/raw-loader/index.js!./src/app/account/memberpendinglist/memberpendinglist.component.html"),
        styles: [__webpack_require__(/*! ./memberpendinglist.component.scss */ "./src/app/account/memberpendinglist/memberpendinglist.component.scss")]
    })
], MemberpendinglistComponent);



/***/ }),

/***/ "./src/app/account/memberpendinglist/newmemberlist.ts":
/*!************************************************************!*\
  !*** ./src/app/account/memberpendinglist/newmemberlist.ts ***!
  \************************************************************/
/*! exports provided: Newmemberlist */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Newmemberlist", function() { return Newmemberlist; });
class Newmemberlist {
    constructor() {
        this.ageGroup = "";
        this.gender = "";
        this.individualInstitute = "";
        this.experienceType = "";
        this.yearOfExp = "";
        this.generalSearch = "";
        this.refProfessionId = "";
        this.offset = 0;
        this.limit = 20;
        this.createdByRoleId = 0;
        this.createdByUserId = 0;
        this.totalRecords = 0;
        this.noOfPages = 1;
    }
}


/***/ }),

/***/ "./src/app/account/memberpendinglist/oldmemberlist.ts":
/*!************************************************************!*\
  !*** ./src/app/account/memberpendinglist/oldmemberlist.ts ***!
  \************************************************************/
/*! exports provided: Oldmemberlist */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Oldmemberlist", function() { return Oldmemberlist; });
class Oldmemberlist {
    constructor() {
        this.offset = 0;
        this.limit = 20;
        this.createdByRoleId = 0;
        this.createdByUserId = 0;
        this.totalRecords = 0;
        this.noOfPages = 1;
    }
}


/***/ }),

/***/ "./src/app/account/memberregbyadmin/memberregbyadmin.component.scss":
/*!**************************************************************************!*\
  !*** ./src/app/account/memberregbyadmin/memberregbyadmin.component.scss ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container {\n  margin-top: 1%;\n  margin-bottom: 1%;\n}\n\n.row {\n  padding: 1% 0%;\n}\n\n.col-3 {\n  padding: 1% 1%;\n}\n\n.col-4 {\n  padding: 1% 1%;\n}\n\n.col-1 {\n  padding: 1% 1%;\n}\n\n.col-2 {\n  padding: 1% 1%;\n}\n\n.col-12 {\n  padding: 1% 1%;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\n.cuppa-dropdown .selected-list .c-btn {\n  border: 1px solid #ced4da !important;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 8px 20px;\n  border-radius: 8px;\n  font-size: 20px;\n  font-weight: bold;\n}\n\n.btn2 {\n  border: 1px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 12px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.reqline {\n  color: #fff;\n}\n\n@media only screen and (min-width: 1224px) {\n  .reqline {\n    display: none;\n  }\n}\n\n@media only screen and (max-width: 640px) {\n  .reqline {\n    color: #fff;\n  }\n}\n\n.addremovebtn {\n  padding: 0px 10px;\n}\n\n.pro1pic {\n  height: auto;\n  width: 107%;\n  margin: auto;\n  display: block;\n}\n\n.pro2pic {\n  height: auto;\n  width: 107%;\n  margin: auto;\n  display: block;\n}\n\n.pro3pic {\n  height: auto;\n  width: 119%;\n  margin: auto;\n  display: block;\n}\n\n.indinst {\n  text-transform: uppercase;\n  font-size: 18px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL2FjY291bnQvbWVtYmVycmVnYnlhZG1pbi9tZW1iZXJyZWdieWFkbWluLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hY2NvdW50L21lbWJlcnJlZ2J5YWRtaW4vbWVtYmVycmVnYnlhZG1pbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtBQ0NKOztBREVBO0VBQ0kseUJBQUE7RUFDQSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxvQ0FBQTtBQ0NKOztBREVBO0VBQ0ksZ0JBQUE7QUNDSjs7QURFQTtFQUNJLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxxQkFBQTtBQ0NKOztBREVBO0VBQ0ksc0JBQUE7RUFDQSxXQUFBO0VBQ0EsdUJBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0FDQ0o7O0FERUE7RUFDSSxzQkFBQTtFQUNBLFdBQUE7RUFDQSx1QkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUNDSjs7QURFQTtFQUNJLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxPQUFBO0VBQ0EsTUFBQTtFQUNBLFVBQUE7QUNDSjs7QURFQTtFQUNJLFdBQUE7QUNDSjs7QURFQTtFQUNJO0lBQ0ksYUFBQTtFQ0NOO0FBQ0Y7O0FERUE7RUFDSTtJQUNJLFdBQUE7RUNBTjtBQUNGOztBREdBO0VBQ0ksaUJBQUE7QUNESjs7QURJQTtFQUNJLFlBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUNESjs7QURJQTtFQUNJLFlBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUNESjs7QURJQTtFQUNJLFlBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUNESjs7QURJQTtFQUNJLHlCQUFBO0VBQ0EsZUFBQTtBQ0RKIiwiZmlsZSI6InNyYy9hcHAvYWNjb3VudC9tZW1iZXJyZWdieWFkbWluL21lbWJlcnJlZ2J5YWRtaW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgICBtYXJnaW4tdG9wOiAxJTtcbiAgICBtYXJnaW4tYm90dG9tOiAxJTtcbn1cblxuLnJvdyB7XG4gICAgcGFkZGluZzogMSUgMCU7XG59XG5cbi5jb2wtMyB7XG4gICAgcGFkZGluZzogMSUgMSU7XG59XG5cbi5jb2wtNCB7XG4gICAgcGFkZGluZzogMSUgMSU7XG59XG5cbi5jb2wtMSB7XG4gICAgcGFkZGluZzogMSUgMSU7XG59XG5cbi5jb2wtMiB7XG4gICAgcGFkZGluZzogMSUgMSU7XG59XG5cbi5jb2wtMTIge1xuICAgIHBhZGRpbmc6IDElIDElO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gICAgY29sb3I6ICNmYmUxMTY7XG59XG5cbi5jdXBwYS1kcm9wZG93biAuc2VsZWN0ZWQtbGlzdCAuYy1idG4ge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjZWQ0ZGEgIWltcG9ydGFudDtcbn1cblxubGFiZWwge1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmJ0bjEge1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gICAgY29sb3I6IGdyYXk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgcGFkZGluZzogOHB4IDIwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmJ0bjIge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyYXk7XG4gICAgY29sb3I6IGdyYXk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgcGFkZGluZzogNHB4IDhweDtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xuICAgIGZvbnQtc2l6ZTogMTAwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIG9wYWNpdHk6IDA7XG59XG5cbi5yZXFsaW5lIHtcbiAgICBjb2xvcjogI2ZmZjtcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjI0cHgpIHtcbiAgICAucmVxbGluZSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NjQwcHgpIHtcbiAgICAucmVxbGluZSB7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgIH1cbn1cblxuLmFkZHJlbW92ZWJ0biB7XG4gICAgcGFkZGluZzogMHB4IDEwcHg7XG59XG5cbi5wcm8xcGljIHtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgd2lkdGg6IDEwNyU7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ucHJvMnBpYyB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIHdpZHRoOiAxMDclO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnBybzNwaWMge1xuICAgIGhlaWdodDogYXV0bztcbiAgICB3aWR0aDogMTE5JTtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5pbmRpbnN0e1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC1zaXplOiAxOHB4O1xufSIsIi5jb250YWluZXIge1xuICBtYXJnaW4tdG9wOiAxJTtcbiAgbWFyZ2luLWJvdHRvbTogMSU7XG59XG5cbi5yb3cge1xuICBwYWRkaW5nOiAxJSAwJTtcbn1cblxuLmNvbC0zIHtcbiAgcGFkZGluZzogMSUgMSU7XG59XG5cbi5jb2wtNCB7XG4gIHBhZGRpbmc6IDElIDElO1xufVxuXG4uY29sLTEge1xuICBwYWRkaW5nOiAxJSAxJTtcbn1cblxuLmNvbC0yIHtcbiAgcGFkZGluZzogMSUgMSU7XG59XG5cbi5jb2wtMTIge1xuICBwYWRkaW5nOiAxJSAxJTtcbn1cblxuLmNhcmQtaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJkM2U1MDtcbiAgY29sb3I6ICNmYmUxMTY7XG59XG5cbi5jdXBwYS1kcm9wZG93biAuc2VsZWN0ZWQtbGlzdCAuYy1idG4ge1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2VkNGRhICFpbXBvcnRhbnQ7XG59XG5cbmxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4uYnRuMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gIGNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogOHB4IDIwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmJ0bjIge1xuICBib3JkZXI6IDFweCBzb2xpZCBncmF5O1xuICBjb2xvcjogZ3JheTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDRweCA4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPWZpbGVdIHtcbiAgZm9udC1zaXplOiAxMDBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5yZXFsaW5lIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIyNHB4KSB7XG4gIC5yZXFsaW5lIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gIC5yZXFsaW5lIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgfVxufVxuLmFkZHJlbW92ZWJ0biB7XG4gIHBhZGRpbmc6IDBweCAxMHB4O1xufVxuXG4ucHJvMXBpYyB7XG4gIGhlaWdodDogYXV0bztcbiAgd2lkdGg6IDEwNyU7XG4gIG1hcmdpbjogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5wcm8ycGljIHtcbiAgaGVpZ2h0OiBhdXRvO1xuICB3aWR0aDogMTA3JTtcbiAgbWFyZ2luOiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnBybzNwaWMge1xuICBoZWlnaHQ6IGF1dG87XG4gIHdpZHRoOiAxMTklO1xuICBtYXJnaW46IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uaW5kaW5zdCB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtc2l6ZTogMThweDtcbn0iXX0= */"

/***/ }),

/***/ "./src/app/account/memberregbyadmin/memberregbyadmin.component.ts":
/*!************************************************************************!*\
  !*** ./src/app/account/memberregbyadmin/memberregbyadmin.component.ts ***!
  \************************************************************************/
/*! exports provided: MemberregbyadminComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MemberregbyadminComponent", function() { return MemberregbyadminComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _modals_adminpage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../modals/adminpage */ "./src/app/modals/adminpage.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _app_modals_profilemember__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../../app/modals/profilemember */ "./src/app/modals/profilemember.ts");
/* harmony import */ var _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../../app/modals/premiumprofile */ "./src/app/modals/premiumprofile.ts");
/* harmony import */ var _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../../app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var ngx_image_compress__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ngx-image-compress */ "./node_modules/ngx-image-compress/fesm2015/ngx-image-compress.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _modals_MasterContentRestriction__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../modals/MasterContentRestriction */ "./src/app/modals/MasterContentRestriction.ts");













let MemberregbyadminComponent = class MemberregbyadminComponent {
    constructor(route, apiService, fb, loaderService, imageCompress, sanitizer) {
        this.route = route;
        this.apiService = apiService;
        this.fb = fb;
        this.loaderService = loaderService;
        this.imageCompress = imageCompress;
        this.sanitizer = sanitizer;
        this.log = 0;
        this.showLog = false;
        //city nation
        this.otherMemberList = [];
        this.selectedItems = [];
        this.otherMembersettings = {};
        //place = 'Individual';
        this.member = 'exp';
        this.memberinst = 'experinst';
        this.adminPage = new _modals_adminpage__WEBPACK_IMPORTED_MODULE_4__["AdminPage"]();
        this.profileMember = new _app_modals_profilemember__WEBPACK_IMPORTED_MODULE_6__["ProfileMember"]();
        this.premiumProfile = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_7__["PremiumProfile"]();
        this.article = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_7__["article"]();
        this.contentRestriction = new _modals_MasterContentRestriction__WEBPACK_IMPORTED_MODULE_12__["MasterContentRestriction"]();
        this.memberTypeData = new _modals_adminpage__WEBPACK_IMPORTED_MODULE_4__["MemberTypeData"]();
        this.articleImageLimit = 0;
        this.articlePdfLimit = 0;
        this.galaryLimit = 0;
        this.videoLimit = 0;
        this.isOtherSkillLimitError = false;
        this.memberList = [];
        this.imageChangedEvent = ''; // image crop
        this.croppedImage = ''; // image crop
        this.imageChangedEvent1Profile = '';
        this.imageChangedEvent2Profile = '';
        this.imageChangedEvent3Profile = '';
        this.imageChangedEvent4Profile = '';
        this.imageChangedEvent5Profile = '';
        this.imageChangedEvent6Profile = '';
        this.imageChangedEvent7Profile = '';
        // croppedImageProfile: any = '';
        this.imageSendArr = [];
        //gallery method 
        this.urls = [];
        //gallery ends
        this.memberopenion = [];
        // for my web page hd photo
        this.hdimageChangedEvent = ''; // image crop
        this.croppedhdphoto = '';
        this.basicMemberForm = this.fb.group({
            individualInstitute: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            experienceType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            firstName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(2)])],
            middleName: [''],
            lastName: [''],
            yearOfExp: [''],
            ageGroup: [''],
            gender: [''],
            profession: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            otherskills: [''],
            mobile: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(10), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(10)])],
            mobileVisibility: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            email: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(5), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(60)])],
            emailVisibility: [''],
            address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(256)])],
            addressVisibility: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            profileImage: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            since: [''],
            contactPerson: [''],
            instructionByMember: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(1200)])],
            MemberName: ['']
        });
        this.profileMemberForm = this.fb.group({
            qualification: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            motherTounge: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            otherLanguages: [''],
            height: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern("^[3-9]+\'[ ]?[0-9]{1,2}[\"]?$")])],
            weight: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern("^[0-9]{1,3}")])],
            dob: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern("^([0]?[1-9]|[1|2][0-9]|[3][0|1])[./-]([0]?[1-9]|[1][0-2])$")])],
            birthPlace: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            nationality: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(600), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(30)])],
            aboutMe: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(25000), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(30)])],
            experience: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(25000), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(30)])],
            otherOpenionRows: this.fb.array([this.initotherOpenionRows()]),
            ProfileimagePath1: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            ProfileimagePath2: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            ProfileimagePath3: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            ProfileimagePath4: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            ProfileimagePath5: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            ProfileimagePath6: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            ProfileimagePath7: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]
        });
        this.premiumMemberForm = this.fb.group({
            mainPhotoPath: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required])],
            webPrivatePublicFlag: [''],
            socialLinkRows: this.fb.array([]),
            articleRows: "",
            articlePdfRows: "",
            galleryRows: "",
            videoRows: ""
        });
    }
    onShowLog() {
        this.showLog = true;
        return this.log = this.log + 1;
    }
    // init otherOpenion
    initotherOpenionRows() {
        return this.fb.group({
            opinionId: [''],
            otherMemberName: [''],
            otherMemberImage: [''],
            description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(1200), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(30)])]
        });
    }
    // get otherOpenionRows
    getotherOpenionRows(profileMemberForm) {
        return profileMemberForm.get('otherOpenionRows').controls;
    }
    //Dynamically Add New Field otherOpenion
    addNewotherOpenionRow() {
        const control = this.profileMemberForm.controls['otherOpenionRows'];
        control.push(this.initotherOpenionRows());
    }
    //Dynamically Remove existing Field otherOpenion
    deleteotherOpenionRow(index) {
        const control = this.profileMemberForm.controls['otherOpenionRows'];
        control.removeAt(index);
    }
    // #endregion
    AppendDate(value) {
        var numChars = value.length;
        if (numChars === 2) {
            var thisVal = this.profileMember.dob;
            thisVal += '-';
            // $jqDate.val(thisVal);
            this.profileMember.dob = thisVal;
        }
    }
    ngOnInit() {
        // this.checkingMembershipId();
        this.getOnLoadData();
        this.getProfessionList();
        this.articles = [];
        // //Soumen Added on 13-02-2020
        this.showProfileMemberShip = false;
        this.payButtonDivHide = false;
        // if (localStorage.getItem("userData"))
        //   this.userData = JSON.parse(localStorage.getItem("userData"));
        // else
        //   this.userData = JSON.parse(localStorage.getItem("loggedInData"));
        // this.adminPage.firstName = this.userData.object.userName.toUpperCase();
        // this.adminPage.mobile = this.userData.object.mobile;
        // this.adminPage.email = this.userData.object.emailId;
        this.adminPage.refMembershipTypeId == '1'; //3
        // this.galImg = new List<Galary();
        this.memberNewsSettings = {
            text: 'Select',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search',
            badgeShowLimit: 5,
            groupBy: "category"
        };
    }
    getReferedMemberList(event) {
        let memberName = event.target.value;
        let memName = {
            "firstName": memberName
        };
        this.apiService.Create("member/getMemberDetailsByMemberName", memName).subscribe(data => {
            let memList = [];
            let memdata = data.object;
            if (memdata != null && memdata != undefined) {
                memdata.forEach(ml => {
                    memList.push({ "id": ml.membershipId, "itemName": ml.firstName, "profileImage": ml.profileImage, "webPageId": ml.webpageId });
                });
                this.memberList = memList;
            }
        });
    }
    selectedMemId(memdata) {
        this.selectedMemWebId = memdata.id;
        this.selectedMemberName = memdata.itemName;
        this.selectedMemberPhoto = memdata.profileImage;
    }
    GetOtherMemberList(evt) {
        let name = evt.target.value;
        let da = {
            "firstName": name
        };
        if (name.length >= 2) {
            this.apiService.Create("member/getMemberDetailsByMemberName", da)
                .subscribe(data => {
                if (data != null && data != undefined) {
                    if (data.success == true) {
                        if (data.object != undefined) {
                            let membershipDtoList = data.object;
                            let otherMemberList = [];
                            membershipDtoList.forEach(memname => {
                                if (memname.membershipId > 0) {
                                    otherMemberList.push({ "id": memname.membershipId, "itemName": memname.firstName, "profileImage": memname.profileImage });
                                }
                            });
                            this.otherMemberList = otherMemberList;
                        }
                    }
                }
            }, error => {
                console.log(error);
                this.loaderService.display(false);
            });
        }
    }
    onproffessionSelect(item) {
        //  console.log(item);
        //  console.log(this.selectedproffession);
    }
    onproffessionDeSelect(item) {
        //  console.log(item);
    }
    onproffessionSelectAll(items) {
        //  console.log(items);
    }
    onproffessionDeSelectAll(items) {
        //  console.log(items);
    }
    onotherSkillSelect(item) {
        console.log(item);
    }
    // ngDoCheck() {
    //   if(this.selectedotherSkill.length > 8) {
    //     this.otherSkillSettings["disabled"] = true;
    //     this.isOtherSkillLimitError = true;
    //     this.selectedotherSkill.splice(8,this.selectedotherSkill.length - 8);
    //   }
    //   else {
    //     this.otherSkillSettings["disabled"] = false;
    //     this.isOtherSkillLimitError = false;
    //   }
    // }
    onotherSkillDeSelect(item) {
    }
    onotherSkillSelectAll(items) {
    }
    onotherSkillDeSelectAll(items) {
    }
    onotherSkillGroupSelect(items) {
    }
    onotherSkillGroupDeSelect(items) {
    }
    motherToungeSelect(item) {
        //  console.log(item);
        this.selectedmotherTounge.forEach(curent => {
            if (curent.id > 0) {
                this.profileMember.motherTounge = curent.id;
            }
        });
    }
    motherToungeDeSelect(item) {
        //  console.log(item);
    }
    motherToungeSelectAll(items) {
        //  console.log(items);
    }
    motherToungeDeSelectAll(items) {
        //  console.log(items);
    }
    otherLanguagesSelect(item) {
        let listlang = new Array();
        this.selectedotherLanguages.forEach(curent => {
            if (curent.id > 0) {
                listlang.push(curent.id);
                this.profileMember.otherLanguage = listlang;
            }
        });
    }
    otherLanguagesDeSelect(item) {
        // console.log(item);
    }
    otherLanguagesSelectAll(items) {
        // console.log(items);
    }
    otherLanguagesDeSelectAll(items) {
        //  console.log(items);
    }
    openionmembernameSelect(item) {
        let membername = this.selectedopenionmembername[0].id;
        this.profileMember.refMemberId = membername;
    }
    openionmembernameDeSelect(item) {
        //  console.log(item);
    }
    openionmembernameSelectAll(items) {
        //  console.log(items);
    }
    openionmembernameDeSelectAll(items) {
        // console.log(items);
    }
    statenameSelect(item) {
        //  console.log(item);
        let stateid = this.selectedstatename[0].id;
        this.adminPage.refStateId = stateid;
        this.GetCityDetailsByStateId();
    }
    statenameDeSelect(item) {
        // console.log(item);
    }
    statenameSelectAll(items) {
        // console.log(items);
    }
    statenameDeSelectAll(items) {
        // console.log(items);
    }
    nationnameSelect(item) {
        //  console.log(item);
        let nationid = this.selectednation[0].id;
        //this.adminPage.refStateId = stateid;
        this.profileMember.refNationalityId = nationid;
        // console.log("nation ==> " + nationid);
    }
    nationnameDeSelect(item) {
        // console.log(item);
    }
    nationnameSelectAll(items) {
        // console.log(items);
    }
    nationnameDeSelectAll(items) {
        // console.log(items);
    }
    oncitySelect(item) {
        //  console.log(item);
        // console.log(this.selectedcity);
    }
    oncityDeSelect(item) {
        // console.log(item);
    }
    oncitySelectAll(items) {
        // console.log(items);
    }
    oncityDeSelectAll(items) {
        // console.log(items);
    }
    //upload file
    fileChangeEvent(e) {
        //alert(e.target.files[0]);
        $('#file-upload').removeAttr('src');
        this.adminPage.filename = "";
        this.adminPage.filetype = "";
        this.adminPage.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0] && e.target.files[0].size <= 10000000) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if (extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") // 10000000 bytes = 10MB 
             {
                this.loaderService.display(true);
                this.imageChangedEvent = e; // image crop
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.adminPage.filename = file.name;
                    this.adminPage.filetype = file.type;
                    // const csv: string = reader.result as string;
                    // this.adminPage.profileImage = csv.replace("data:image/jpeg;base64,", "");
                    this.adminPage.profileImage = reader.result;
                };
                this.basicMemberForm.controls.profileImage.setValue(this.adminPage.profileImage);
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG") {
                this.adminPage.filename = "";
                this.adminPage.filetype = "";
                this.adminPage.profileImage = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.adminPage.filename = "";
                this.adminPage.filetype = "";
                this.adminPage.profileImage = "";
                // this.adminPage.profileImagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire("Image size should be less than 10MB");
                return;
            }
        }
    }
    imageCropped(event) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMemberForm.controls.profileImage.setValue(this.croppedImage);
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMemberForm.controls.profileImage.setValue(this.croppedImage);
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMemberForm.controls.profileImage.setValue(this.croppedImage);
            });
        }
    }
    imageLoaded() {
        // show cropper
    }
    cropperReady() {
        // cropper ready
    }
    loadImageFailed() {
        // show message
    }
    fileChangeEventProfile(e, seqno) {
        this.loaderService.display(true);
        this.imageChangedEvent1Profile = "";
        this.imageChangedEvent2Profile = "";
        this.imageChangedEvent3Profile = "";
        this.imageChangedEvent4Profile = "";
        this.imageChangedEvent5Profile = "";
        this.imageChangedEvent6Profile = "";
        this.imageChangedEvent7Profile = "";
        this.profileMember.filename = "";
        this.profileMember.filetype = "";
        // this.profileMember.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0] && e.target.files[0].size <= 10000000) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG")) // 10000000 bytes = 10MB 
             {
                if (seqno == 1) {
                    this.url1 = e.target.files[0];
                    this.imageChangedEvent1Profile = e;
                }
                else if (seqno == 2) {
                    this.url2 = e.target.files[0];
                    this.imageChangedEvent2Profile = e;
                }
                else if (seqno == 3) {
                    this.url3 = e.target.files[0];
                    this.imageChangedEvent3Profile = e;
                }
                else if (seqno == 4) {
                    this.url4 = e.target.files[0];
                    this.imageChangedEvent4Profile = e;
                }
                else if (seqno == 5) {
                    this.url5 = e.target.files[0];
                    this.imageChangedEvent5Profile = e;
                }
                else if (seqno == 6) {
                    this.url6 = e.target.files[0];
                    this.imageChangedEvent6Profile = e;
                }
                else if (seqno == 7) {
                    this.url7 = e.target.files[0];
                    this.imageChangedEvent7Profile = e;
                }
                this.profileMember.filename = file.name;
                this.profileMember.filetype = file.type;
                //this.adminPage.profileImagePath = this.adminPage.imageBase64String;
                //this.model.user_imagepath = this.model.imageBase64String;
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "JPG" && extention != "jpg") {
                this.profileMember.filename = "";
                this.profileMember.filetype = "";
                // this.profileMember.imageBase64String = "";
                // this.adminPage.profileImagePath = this.adminPage.imageBase64String;
                //  $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.profileMember.filename = "";
                this.profileMember.filetype = "";
                // this.profileMember.imageBase64String = "";
                // this.adminPage.profileImagePath = "";
                //  $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire("Image size should be less than 10MB");
                return;
            }
        }
        //this.loaderService.display(false);
    }
    imageCroppedProfile(event, seqno) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                if (this.imageChangedEvent1Profile) {
                    this.url1 = result;
                }
                else if (this.imageChangedEvent2Profile) {
                    this.url2 = result;
                }
                else if (this.imageChangedEvent3Profile) {
                    this.url3 = result;
                }
                else if (this.imageChangedEvent4Profile) {
                    this.url4 = result;
                }
                else if (this.imageChangedEvent5Profile) {
                    this.url5 = result;
                }
                else if (this.imageChangedEvent6Profile) {
                    this.url6 = result;
                }
                else if (this.imageChangedEvent7Profile) {
                    this.url7 = result;
                }
                this.loaderService.display(false);
                const csv = result;
                let cur = [];
                cur = this.imageSendArr.filter((temp) => temp.seqNum == seqno);
                if (cur.length > 0) {
                    this.imageSendArr.forEach(da => {
                        if (da.seqNum == seqno) {
                            da.imagePath = csv;
                        }
                    });
                }
                else {
                    let obj = {
                        "imagePath": csv,
                        "seqNum": seqno
                    };
                    this.imageSendArr.push(obj);
                }
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                if (this.imageChangedEvent1Profile) {
                    this.url1 = result;
                }
                else if (this.imageChangedEvent2Profile) {
                    this.url2 = result;
                }
                else if (this.imageChangedEvent3Profile) {
                    this.url3 = result;
                }
                else if (this.imageChangedEvent4Profile) {
                    this.url4 = result;
                }
                else if (this.imageChangedEvent5Profile) {
                    this.url5 = result;
                }
                else if (this.imageChangedEvent6Profile) {
                    this.url6 = result;
                }
                else if (this.imageChangedEvent7Profile) {
                    this.url7 = result;
                }
                this.loaderService.display(false);
                const csv = result;
                let cur = [];
                cur = this.imageSendArr.filter((temp) => temp.seqNum == seqno);
                if (cur.length > 0) {
                    this.imageSendArr.forEach(da => {
                        if (da.seqNum == seqno) {
                            da.imagePath = csv;
                        }
                    });
                }
                else {
                    let obj = {
                        "imagePath": csv,
                        "seqNum": seqno
                    };
                    this.imageSendArr.push(obj);
                }
            });
        }
        else if (isbc > 500000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                if (this.imageChangedEvent1Profile) {
                    this.url1 = result;
                }
                else if (this.imageChangedEvent2Profile) {
                    this.url2 = result;
                }
                else if (this.imageChangedEvent3Profile) {
                    this.url3 = result;
                }
                else if (this.imageChangedEvent4Profile) {
                    this.url4 = result;
                }
                else if (this.imageChangedEvent5Profile) {
                    this.url5 = result;
                }
                else if (this.imageChangedEvent6Profile) {
                    this.url6 = result;
                }
                else if (this.imageChangedEvent7Profile) {
                    this.url7 = result;
                }
                this.loaderService.display(false);
                const csv = result;
                let cur = [];
                cur = this.imageSendArr.filter((temp) => temp.seqNum == seqno);
                if (cur.length > 0) {
                    this.imageSendArr.forEach(da => {
                        if (da.seqNum == seqno) {
                            da.imagePath = csv;
                        }
                    });
                }
                else {
                    let obj = {
                        "imagePath": csv,
                        "seqNum": seqno
                    };
                    this.imageSendArr.push(obj);
                }
            });
        }
    }
    imageLoadedProfile() {
        // show cropper
    }
    cropperReadyProfile() {
        // cropper ready
    }
    loadImageFailedProfile() {
        // show message
    }
    getOnLoadData() {
        this.adminPage = new _modals_adminpage__WEBPACK_IMPORTED_MODULE_4__["AdminPage"]();
        this.profileMember = new _app_modals_profilemember__WEBPACK_IMPORTED_MODULE_6__["ProfileMember"]();
        this.premiumProfile = new _app_modals_premiumprofile__WEBPACK_IMPORTED_MODULE_7__["PremiumProfile"]();
        this.premiumProfile.articleImg = [];
        this.premiumProfile.articlePdf = [];
        this.premiumProfile.articleImg[0] = this.article;
        this.premiumProfile.articlePdf[0] = this.article;
        this.adminPage.individualInstitute = "Individual";
        this.adminPage.experienceType = "Experienced";
        this.adminPage.refMembershipTypeId = "1"; //3
        this.adminPage.mobileVisibility = "1";
        this.adminPage.emailVisibility = "1";
        this.adminPage.addressVisibility = "1";
        this.premiumProfile.webPrivatePublicFlag = "1";
        this.premiumProfile.galImg = [];
        this.premiumProfile.newsImg = [];
        this.GetContentRestrictionDetails();
        this.GetMemberContentRestrictionDetails();
        this.OnindividualInstituteChange();
        this.OnexperienceTypeChange();
        this.motherToungeSettings = {
            text: "Select Mother Tongue",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Mother Tongue',
            badgeShowLimit: 5,
        };
        this.otherLanguagesSettings = {
            text: "Select Other Languages",
            singleSelection: false,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Other Languages',
            badgeShowLimit: 5,
        };
        //
        this.otherMembersettings = {
            text: "Select Member",
            classes: "myclass custom-class",
            noDataLabel: "At least search by two letters",
            enableSearchFilter: true,
            singleSelection: true,
            enableCheckAll: false,
            enableFilterSelectAll: false,
        };
        this.citySettings = {
            text: "Select City",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search City',
            badgeShowLimit: 5
        };
        this.statenameSettings = {
            text: "Select State",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search State',
            badgeShowLimit: 5
        };
        this.nationSettings = {
            text: "Select Nation",
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Nation',
            badgeShowLimit: 5
        };
        this.motherToungeList = [];
        this.otherLanguagesList = [];
        this.openionmembernameList = [];
        this.statenameList = [];
        this.cityList = [];
        this.nationList = [];
        this.otherMemberList = [];
        this.selectedItems = [];
        this.loaderService.display(true);
        this.apiService.getDATA("detailsDto/getAll").subscribe(data => {
            this.loaderService.display(false);
            if (data != undefined) {
                if (data.success) {
                    let object = data.object;
                    if (object.masterConfigurationDtoList != undefined) {
                        this.masterConfigurationData = object.masterConfigurationDtoList[0];
                        this.articleImageLimit = object.masterConfigurationDtoList[0].articleImageLimit;
                        this.articlePdfLimit = object.masterConfigurationDtoList[0].articlePdfLimit;
                        this.galaryLimit = object.masterConfigurationDtoList[0].galaryLimit;
                        this.videoLimit = object.masterConfigurationDtoList[0].videoLimit;
                    }
                    if (object.membershipTypeDtoList != undefined) {
                        this.membershipTypeDtoList = object.membershipTypeDtoList;
                        let id = parseInt(this.adminPage.refMembershipTypeId);
                        this.memberTypeData = this.GetMembershipTypeById(id);
                    }
                    if (object.languageDtoList != undefined) {
                        let languageDtoList = object.languageDtoList;
                        let otherLanguagesList = [];
                        languageDtoList.forEach(otherlang => {
                            if (otherlang.lanaguageId > 0) {
                                otherLanguagesList.push({ "id": otherlang.lanaguageId, "itemName": otherlang.title });
                            }
                        });
                        this.motherToungeList = otherLanguagesList;
                        this.otherLanguagesList = otherLanguagesList;
                    }
                    if (object.membershipDtoList != undefined) {
                        let membershipDtoList = object.membershipDtoList;
                        membershipDtoList.forEach(memname => {
                            if (memname.membershipId > 0) {
                                // this.openionmembernameList.push({ "id": memname.membershipId, "itemName": memname.firstName })
                                this.openionmembernameList.push(memname);
                            }
                        });
                    }
                    //otherMemberImage
                    if (object.stateDtoList != undefined) {
                        let stateDtoList = object.stateDtoList;
                        stateDtoList.forEach(statename => {
                            if (statename.stateId > 0) {
                                this.statenameList.push({ "id": statename.stateId, "itemName": statename.stateName });
                            }
                        });
                    }
                    if (object.nationalityDtoList != undefined) {
                        let nationalityDtoList = object.nationalityDtoList;
                        nationalityDtoList.forEach(nationname => {
                            if (nationname.nationalityId > 0) {
                                this.nationList.push({ "id": nationname.nationalityId, "itemName": nationname.title });
                            }
                        });
                    }
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    GetContentRestrictionDetails() {
        var data = { "configId": "1" };
        this.apiService.Create("masterConfiguration/getByConfigId", data).subscribe(data => {
            if (data.success) {
                if (data.object != undefined && data.object != null) {
                    if (data.object != undefined) {
                        this.contentRestriction = data.object;
                        debugger;
                    }
                }
            }
        });
    }
    GetMemberContentRestrictionDetails() {
        var data = { "membershipId": "1" };
        this.apiService.Create("masterContentRestrictConfig/getByMemberId", data).subscribe(data => {
            if (data.success) {
                if (data.object != undefined && data.object != null) {
                    if (data.object != undefined) {
                        debugger;
                        this.contentRestriction = data.object;
                        debugger;
                    }
                }
            }
        });
    }
    setMembershipTypeById(id) {
        id = parseInt(id);
        this.memberTypeData = this.GetMembershipTypeById(id);
        console.log(this.memberTypeData);
    }
    getOtherMemberDetails(i, membershipId) {
        if (membershipId != "" && membershipId != undefined) {
            let curMemb = this.openionmembernameList.filter(aa => aa.membershipId == parseInt(membershipId))[0];
            const ctrl = this.profileMemberForm.controls['otherOpenionRows'];
            // if(curMemb.profileImage !=undefined && curMemb.profileImage !=""){
            //   ctrl.controls[i].get('otherMemberImage').setValue(curMemb.profileImage);
            // }
        }
    }
    getProfessionList() {
        this.proffessionList = [];
        this.otherSkillList = [];
        //this.adminPage.individualInstitute = "Individual";
        this.loaderService.display(true);
        this.apiService.Create("profession/getAll", this.adminPage).subscribe(data => {
            this.loaderService.display(false);
            if (data != undefined) {
                if (data.success) {
                    let object = data.object;
                    if (object.professionDtoList != undefined) {
                        let professionDtoList = [];
                        professionDtoList = object.professionDtoList;
                        let proffessionList = [];
                        if (professionDtoList.length > 0) {
                            for (let i = 0; i < professionDtoList.length; i++) {
                                let professional = professionDtoList[i];
                                if (professional.professionId > 0) {
                                    proffessionList.push({ "id": professional.professionId, "itemName": professional.title, "category": professional.parentName });
                                }
                            }
                        }
                        this.proffessionList = proffessionList;
                    }
                    if (object.professionDtoList != undefined) {
                        let professionDtoList = [];
                        professionDtoList = object.professionDtoList;
                        let otherSkillList = [];
                        if (professionDtoList.length > 0) {
                            for (let i = 0; i < professionDtoList.length; i++) {
                                let otherskill = professionDtoList[i];
                                if (otherskill.professionId > 0) {
                                    let category = otherskill.parentName.trim();
                                    otherSkillList.push({ "id": otherskill.professionId, "itemName": otherskill.title, "category": category });
                                }
                            }
                        }
                        this.otherSkillList = otherSkillList;
                    }
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    OnexperienceTypeChange() {
        this.adminPage.yearOfExp = "";
        if (this.adminPage.experienceType == "Experienced") {
            this.basicMemberForm.get('yearOfExp').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]));
            this.basicMemberForm.get('yearOfExp').updateValueAndValidity();
        }
        else {
            this.basicMemberForm.get('yearOfExp').setValidators(null);
            this.basicMemberForm.get('yearOfExp').updateValueAndValidity();
        }
    }
    OnindividualInstituteChange() {
        this.adminPage.firstName = "";
        this.adminPage.middleName = "";
        this.adminPage.lastName = "";
        this.adminPage.ageGroup = "";
        this.adminPage.gender = "";
        this.adminPage.since = "";
        this.adminPage.contactPerson = "";
        this.profileMember.qualification = "";
        this.selectedmotherTounge = [];
        this.selectedotherLanguages = [];
        this.profileMember.motherTounge = 0;
        this.profileMember.otherLanguage = [];
        this.profileMember.height = "";
        this.profileMember.weight = "";
        this.profileMember.dob = "";
        this.profileMember.birthPlace = "";
        if (this.adminPage.individualInstitute == 'Institute') {
            this.adminPage.individualInstituteName = "Institute Name";
            this.adminPage.ProfessionService = 'Service';
            this.adminPage.OtherSkillsOtherServices = 'Other Services';
            this.profileMember.motherTounge = 1;
            // this.basicMemberForm.get('middleName').setValidators(null);
            // this.basicMemberForm.get('middleName').updateValueAndValidity();
            // this.basicMemberForm.get('lastName').setValidators(null);
            // this.basicMemberForm.get('lastName').updateValueAndValidity();
            this.basicMemberForm.get('ageGroup').setValidators(null);
            this.basicMemberForm.get('ageGroup').updateValueAndValidity();
            this.basicMemberForm.get('gender').setValidators(null);
            this.basicMemberForm.get('gender').updateValueAndValidity();
            this.basicMemberForm.get('since').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern('[0-9]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(4), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(4)]));
            this.basicMemberForm.get('since').updateValueAndValidity();
            this.basicMemberForm.get('contactPerson').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(3)]));
            this.basicMemberForm.get('contactPerson').updateValueAndValidity();
            //Profile
            this.profileMemberForm.get('qualification').setValidators(null);
            this.profileMemberForm.get('qualification').updateValueAndValidity();
            this.profileMemberForm.get('motherTounge').setValidators(null);
            this.profileMemberForm.get('motherTounge').updateValueAndValidity();
            // this.profileMemberForm.get('otherLanguages').setValidators(null);
            // this.profileMemberForm.get('otherLanguages').updateValueAndValidity();
            // this.profileMemberForm.get('height').setValidators(null);
            // this.profileMemberForm.get('height').updateValueAndValidity();
            // this.profileMemberForm.get('weight').setValidators(null);
            // this.profileMemberForm.get('weight').updateValueAndValidity();
            this.profileMemberForm.get('dob').setValidators(null);
            this.profileMemberForm.get('dob').updateValueAndValidity();
            this.profileMemberForm.get('birthPlace').setValidators(null);
            this.profileMemberForm.get('birthPlace').updateValueAndValidity();
        }
        else if (this.adminPage.individualInstitute == 'Individual') {
            this.adminPage.individualInstituteName = "First Name";
            this.adminPage.ProfessionService = 'Profession';
            this.adminPage.OtherSkillsOtherServices = 'Other Skills';
            this.basicMemberForm.get('middleName').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(30)]));
            this.basicMemberForm.get('middleName').updateValueAndValidity();
            this.basicMemberForm.get('lastName').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(30)]));
            this.basicMemberForm.get('lastName').updateValueAndValidity();
            this.basicMemberForm.get('ageGroup').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]));
            this.basicMemberForm.get('ageGroup').updateValueAndValidity();
            this.basicMemberForm.get('gender').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]));
            this.basicMemberForm.get('gender').updateValueAndValidity();
            this.basicMemberForm.get('since').setValidators(null);
            this.basicMemberForm.get('since').updateValueAndValidity();
            this.basicMemberForm.get('contactPerson').setValidators(null);
            this.basicMemberForm.get('contactPerson').updateValueAndValidity();
            //Profile
            this.profileMemberForm.get('qualification').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(2)]));
            this.profileMemberForm.get('qualification').updateValueAndValidity();
            this.profileMemberForm.get('motherTounge').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]));
            this.profileMemberForm.get('motherTounge').updateValueAndValidity();
            //this.profileMemberForm.get('otherLanguages').setValidators(Validators.compose([Validators.required]));
            //this.profileMemberForm.get('otherLanguages').updateValueAndValidity();
            // this.profileMemberForm.get('height').setValidators(Validators.compose([Validators.required]));
            //this.profileMemberForm.get('height').updateValueAndValidity();
            //this.profileMemberForm.get('weight').setValidators(Validators.compose([Validators.required]));
            //this.profileMemberForm.get('weight').updateValueAndValidity();
            this.profileMemberForm.get('dob').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern('^([0]?[1-9]|[1|2][0-9]|[3][0|1])[./-]([0]?[1-9]|[1][0-2])$')]));
            this.profileMemberForm.get('dob').updateValueAndValidity();
            this.profileMemberForm.get('birthPlace').setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern('[a-zA-Z ]*'), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(30), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(3)]));
            this.profileMemberForm.get('birthPlace').updateValueAndValidity();
        }
        this.proffessionSettings = {
            text: 'Select ' + this.adminPage.ProfessionService,
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search ' + this.adminPage.ProfessionService,
            badgeShowLimit: 5,
            groupBy: "category"
        };
        this.otherSkillSettings = {
            singleSelection: false,
            text: 'Select ' + this.adminPage.OtherSkillsOtherServices,
            enableCheckAll: false,
            enableFilterSelectAll: false,
            searchPlaceholderText: 'Search ' + this.adminPage.OtherSkillsOtherServices,
            enableSearchFilter: true,
            badgeShowLimit: 8,
            limitSelection: 8,
            selectGroup: true,
            groupBy: "category",
        };
        this.getProfessionList();
    }
    submitBasicDetails() {
        debugger;
        if (this.basicMemberForm.valid) {
            if (this.selectedproffession.length > 0) {
                let proffessionid = this.selectedproffession[0].id;
                this.adminPage.refProfessionId = proffessionid;
            }
            if (this.selectedotherSkill != undefined) {
                if (this.selectedotherSkill.length > 0) {
                    let listIds = new Array();
                    this.selectedotherSkill.forEach(curent => {
                        if (curent.id > 0) {
                            listIds.push(curent.id);
                        }
                    });
                    this.adminPage.otherSkills = listIds;
                }
            }
            if (this.selectedstatename.length > 0) {
                let stateid = this.selectedstatename[0].id;
                this.adminPage.refStateId = stateid;
            }
            if (this.selectedcity.length > 0) {
                let refCityId = this.selectedcity[0].id;
                this.adminPage.refCityId = refCityId;
            }
            this.adminPage.individualORInstitute = this.adminPage.individualInstitute;
            // this.adminPage.refUserId = 1;
            this.adminPage.imageBase64String = "";
            this.adminPage.profileImage = this.croppedImage;
            this.adminPage.adminFlag = 1;
            // this.adminPage.status = "Pending";
            let refMemberFlag;
            if (this.selectedMemWebId != null && this.selectedMemWebId != undefined && this.selectedMemWebId != "") {
                refMemberFlag = true;
            }
            else {
                refMemberFlag = false;
            }
            let roleData = JSON.parse(localStorage.getItem('staffLogin')).object.roleDto;
            let userData = JSON.parse(localStorage.getItem('staffLogin')).object.userDto;
            let memdata = {
                "membershipId": this.adminPage.membershipId,
                "refMembershipTypeId": "3",
                "experienceType": this.adminPage.experienceType,
                "yearOfExp": this.adminPage.yearOfExp,
                "ageGroup": this.adminPage.ageGroup,
                "gender": this.adminPage.gender,
                "firstName": this.adminPage.firstName,
                "middleName": this.adminPage.middleName,
                "lastName": this.adminPage.lastName,
                "displayName": this.adminPage.displayName,
                "refProfessionId": this.adminPage.refProfessionId,
                "refCityId": this.adminPage.refCityId,
                "refStateId": this.adminPage.refStateId,
                "mobile": this.adminPage.mobile,
                "mobileVisibility": this.adminPage.mobileVisibility,
                "email": this.adminPage.email,
                "emailVisibility": this.adminPage.emailVisibility,
                "address": this.adminPage.address,
                "addressVisibility": this.adminPage.addressVisibility,
                "contactPerson": this.adminPage.contactPerson,
                "since": this.adminPage.since,
                "instructionByMember": this.adminPage.instructionByMember,
                "individualORInstitute": this.adminPage.individualORInstitute,
                "otherSkills": this.adminPage.otherSkills,
                "profileImage": this.adminPage.profileImage,
                "adminFlag": this.adminPage.adminFlag,
                "referedMemberId": this.selectedMemWebId,
                "referedByFlag": refMemberFlag,
                "referedMemberName": this.selectedMemberName,
                "referedMemberImage": this.selectedMemberPhoto,
                //  "logUserId": roleData.roleId,
                "refRoleId": 10,
                "refUserId": userData.userId
            };
            this.newBasicData = memdata;
            //console.log(JSON.stringify(this.newBasicData));
            this.loaderService.display(true);
            this.apiService.Create("member/save", memdata).subscribe(data => {
                this.loaderService.display(false);
                this.profileMember.refMemberId = data.object.membershipId;
                if (data.success == true)
                    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire("Successfully Saved");
                else
                    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(data.message);
                // .then(
                //   function(){ 
                //     location.reload();
                // }
                //)
            }, error => {
                console.log(error);
                this.loaderService.display(false);
            });
        }
        else {
            this.loaderService.display(false);
            this.apiService.validateAllFormFields(this.basicMemberForm);
            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire("Please Enter All The Mandatory Fields");
        }
    }
    clearBasicForm() {
        this.basicMemberForm.reset();
    }
    clearProfileForm() {
        this.profileMemberForm.reset();
    }
    clearWebPageForm() {
        this.premiumMemberForm.reset();
    }
    onSelectFile(event) {
        if (event.target.files && event.target.files[0]) {
            var filesAmount = 50;
            for (let i = 0; i < filesAmount; i++) {
                var reader = new FileReader();
                reader.onload = (event) => {
                    this.urls.push(event.target.result);
                };
                reader.readAsDataURL(event.target.files[i]);
            }
        }
    }
    submitProfile() {
        if (this.profileMemberForm.valid) {
            // #region   otherOpenionArray
            let membersOthersOpinionDtos = [];
            for (let value of this.profileMemberForm.value.otherOpenionRows) {
                if (value.otherMemberName != "" && value.description != "") {
                    if (value.otherMemberName != null) {
                        if (value.otherMemberName.length > 0) {
                            let refMemberId = value.otherMemberName[0].id;
                            membersOthersOpinionDtos.push({ "refMemberId": refMemberId, "description": value.description });
                        }
                    }
                }
            }
            ;
            this.profileMember.membersOthersOpinionDtos = membersOthersOpinionDtos;
            //this.profileMember.imagePath = this.profileMember.imageBase64String;
            this.profileMember.profileMemberShipPhotoDtos = this.imageSendArr;
            this.loaderService.display(true);
            this.apiService.Create("profileMembership/save", this.profileMember).subscribe(data => {
                this.loaderService.display(false);
                if (data.success == true) {
                    this.premiumProfile.refProfileMembershipId = data.object.proMemberId;
                    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(data.message).then(function () {
                        //location.reload();
                        // this.basicMemberForm.reset();
                        localStorage.clear();
                        this._router.navigate(['/']).then(() => {
                            window.location.reload();
                        });
                    });
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(data.message);
                }
            }, error => {
                console.log(error);
                this.loaderService.display(false);
            });
        }
        else {
            this.loaderService.display(false);
            this.apiService.validateAllFormFields(this.profileMemberForm);
            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire("Please Enter All The Mandatory Fields");
        }
    }
    GetCityDetailsByStateId() {
        this.cityList = [];
        if (this.adminPage.refStateId != undefined && this.adminPage.refStateId != 0) {
            let refStateId = this.adminPage.refStateId;
            var Cdata = { "refStateId": refStateId };
            this.apiService.Create("city/getAllCityByStateId", Cdata).subscribe(data => {
                if (data.success) {
                    if (data.object != undefined && data.object != null) {
                        if (data.object != undefined) {
                            let cityDtoList = data.object;
                            let cityList = [];
                            cityDtoList.forEach(city => {
                                if (city.cityId > 0) {
                                    cityList.push({ "id": city.cityId, "itemName": city.cityName });
                                    //this.adminPage.refCityId = city.cityId;
                                }
                            });
                            this.cityList = cityList;
                        }
                    }
                }
            });
        }
    }
    hdPhotoApply(e) {
        $('#mainPhotoPath').removeAttr('src');
        this.premiumProfile.filename = "";
        this.premiumProfile.filetype = "";
        this.premiumProfile.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0] && e.target.files[0].size <= 10000000) {
            var reader = new FileReader();
            reader.readAsDataURL(e.target.files[0]);
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if (extention == "JPEG" || extention == "jpeg" || extention == "JPG" || extention == "jpg") // 10000000 bytes = 10MB 
             {
                this.loaderService.display(true);
                this.hdimageChangedEvent = e;
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = (event) => {
                    this.url = event.target.result;
                    this.premiumProfile.filename = file.name;
                    this.premiumProfile.filetype = file.type;
                    const csv = reader.result;
                    this.premiumProfile.imageBase64String = csv;
                    //this.premiumProfile.mainPhotoPath = csv;
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "JPG" && extention != "jpg") {
                this.premiumProfile.filename = "";
                this.premiumProfile.filetype = "";
                // this.premiumProfile.imageBase64String = "";
                // this.adminPage.profileImagePath = this.adminPage.imageBase64String;
                $('#mainPhotoPath').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.premiumProfile.filename = "";
                this.premiumProfile.filetype = "";
                //this.premiumProfile.imageBase64String = "";
                // this.adminPage.profileImagePath = "";
                $('#mainPhotoPath').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire("Document size should be less than 10MB");
                return;
            }
        }
    }
    hdimageCropped(event) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.croppedhdphoto = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.premiumMemberForm.controls.mainPhotoPath.setValue(this.croppedhdphoto);
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 60, 55).then(result => {
                this.croppedhdphoto = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.premiumMemberForm.controls.mainPhotoPath.setValue(this.croppedhdphoto);
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 50, 45).then(result => {
                this.croppedhdphoto = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.premiumMemberForm.controls.mainPhotoPath.setValue(this.croppedhdphoto);
            });
        }
    }
    hdimageLoaded() {
        // show cropper
    }
    hdcropperReady() {
        // cropper ready
    }
    hdloadImageFailed() {
        // show message
    }
    // end news in my_web_page
    //for gallery photo convertion in my_web_page
    //Soumen Added For Payment
    payCharges() {
        /* this.submitBasicDetails();
        this.payButtonDivHide = false;
        this.showProfileMemberShip = true; */
        let roleData = JSON.parse(localStorage.getItem('staffLogin')).object.roleDto;
        if (this.basicMemberForm.valid) {
            let userdata = {
                "userName": this.adminPage.firstName,
                "mobile": this.adminPage.mobile,
                "emailid": this.adminPage.email,
                "refRoleId": 10,
                "memberShipFlag": 1,
                "userImage": this.adminPage.profileImage
            };
            let data = {
                "amount": Number(this.memberTypeData.fresherAmount) * 100,
                "userId": 0,
                "refMemberTypeId": this.memberTypeData.memberTypeId,
                "remarks": this.memberTypeData.name,
                "modeOfPayment": "Cash",
                "userDto": userdata
            };
            this.loaderService.display(true);
            this.apiService.Create("order_Request/requestPaymentByAdmin", data).subscribe((data) => {
                this.loaderService.display(false);
                this.orderData = data;
                if (this.orderData.success == true) {
                    this.submitBasicDetails();
                    this.loaderService.display(false);
                    this.payButtonDivHide = false;
                    this.showProfileMemberShip = true;
                    console.log("Order Generated");
                }
                else {
                    console.log("Failed To generate");
                }
            });
        }
        else {
            this.loaderService.display(false);
            this.apiService.validateAllFormFields(this.basicMemberForm);
            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire("Please Enter All The Mandatory Fields");
        }
    }
    submitallDataOneShot() {
        this.loaderService.display(true);
        if (this.basicMemberForm.valid) {
        }
        else {
            this.loaderService.display(false);
            this.apiService.validateAllFormFields(this.basicMemberForm);
            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire("Please Enter All The Mandatory Fields");
        }
        if (this.profileMemberForm.valid) {
            this.setProfileData();
        }
        else {
            this.loaderService.display(false);
            this.apiService.validateAllFormFields(this.profileMemberForm);
            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire("Please Enter All The Mandatory Fields of Profile");
        }
        if (this.premiumMemberForm.valid) {
            this.setPremiumProfile();
        }
        else {
            this.loaderService.display(false);
            this.apiService.validateAllFormFields(this.premiumMemberForm);
            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire("Please Enter All The Mandatory Fields of Webpage");
        }
        let data = {
            "membershipDto": this.newBasicData,
            "profileMemberShipDto": this.newProfileData,
            "myWebPageMembershipDto": this.newPremiumData
        };
        // this.loaderService.display(true);
        this.apiService.Create("memberCreation/saveAll", data).subscribe((data1) => {
            if (data1.success == true) {
                localStorage.removeItem('userData');
                localStorage.removeItem('memberstype');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire("Your Details has been Saved Successfully..! and need to wait for Admin Approval... However You can Edit Your Details by Logging In").then((result) => {
                    if (result.value) {
                        localStorage.clear();
                        this.route.navigate(['/']).then(() => {
                            window.location.reload();
                        });
                    }
                });
            }
            else {
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(data1.message);
            }
        });
    }
    setProfileData() {
        let membersOthersOpinionDtos = [];
        for (let value of this.profileMemberForm.value.otherOpenionRows) {
            if (value.otherMemberName != "" && value.description != "") {
                if (value.otherMemberName != null) {
                    if (value.otherMemberName.length > 0) {
                        let refMemberId = value.otherMemberName[0].id;
                        membersOthersOpinionDtos.push({ "refMemberId": refMemberId, "description": value.description });
                    }
                }
            }
        }
        ;
        this.profileMember.membersOthersOpinionDtos = membersOthersOpinionDtos;
        this.profileMember.profileMemberShipPhotoDtos = this.imageSendArr;
        this.newProfileData = this.profileMember;
    }
    setPremiumProfile() {
        this.premiumProfile.mainPhotoPath = this.croppedhdphoto;
        let membersArticlesDtos = [];
        for (let value of this.premiumMemberForm.value.articleRows) {
            if (value.articlePath != "" && value.articlePath != undefined && value.articleTitle != "" && value.articleTitle != undefined) {
                membersArticlesDtos.push({ "articalTitle": value.articleTitle, "articalPath": value.articlePath });
            }
        }
        //let webPriPubFlag = Number(this.premiumProfile.webPrivatePublicFlag);
        let resultData = {
            "webPageId": this.premiumProfile.webPageId,
            "refProfileMembershipId": this.premiumProfile.refProfileMembershipId,
            "mainPhotoPath": this.premiumProfile.mainPhotoPath,
            "membersArticlesDtos": this.premiumProfile.membersArticlesDtos,
            "membersGallaryDtos": this.premiumProfile.membersGallaryDtos,
            "membersSocialLinksDtos": this.premiumProfile.membersSocialLinksDtos,
            "membersVideosDtos": this.premiumProfile.membersVideosDtos,
            "webPrivatePublicFlag": this.premiumProfile.webPrivatePublicFlag
        };
        this.newPremiumData = resultData;
    }
    checkingMembershipId() {
        localStorage.getItem("loggedInData");
        this.userData = JSON.parse(localStorage.getItem("loggedInData"));
        let usid = this.userData.object.userId;
        let bb = {
            "userId": usid
        };
        this.apiService.Create("user/getById", bb).subscribe(data => {
            if (data.object.membershipId != null && data.object.membershipId != undefined && data.object.membershipId != 0) {
                localStorage.clear();
                this.route.navigate(['/']).then(() => {
                    window.location.reload();
                });
            }
            else {
                this.route.navigate(['/adminpagenew']);
            }
        });
    }
    GetMembershipTypeById(id) {
        let da = this.membershipTypeDtoList.filter(a => a.memberTypeId == id)[0];
        return da;
    }
};
MemberregbyadminComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_11__["Router"] },
    { type: _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_2__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_8__["LoaderService"] },
    { type: ngx_image_compress__WEBPACK_IMPORTED_MODULE_9__["NgxImageCompressService"] },
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_10__["DomSanitizer"] }
];
MemberregbyadminComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-memberregbyadmin',
        template: __webpack_require__(/*! raw-loader!./memberregbyadmin.component.html */ "./node_modules/raw-loader/index.js!./src/app/account/memberregbyadmin/memberregbyadmin.component.html"),
        styles: [__webpack_require__(/*! ./memberregbyadmin.component.scss */ "./src/app/account/memberregbyadmin/memberregbyadmin.component.scss")]
    })
], MemberregbyadminComponent);



/***/ }),

/***/ "./src/app/account/useractivedeactive/useractiveModal.ts":
/*!***************************************************************!*\
  !*** ./src/app/account/useractivedeactive/useractiveModal.ts ***!
  \***************************************************************/
/*! exports provided: UserActiveModal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserActiveModal", function() { return UserActiveModal; });
class UserActiveModal {
    constructor() {
        this.currentPage = 1;
        this.offset = 0;
        this.limit = 20;
        this.totalRecords = 0;
        this.noOfPages = 1;
    }
}


/***/ }),

/***/ "./src/app/account/useractivedeactive/useractivedeactive.component.scss":
/*!******************************************************************************!*\
  !*** ./src/app/account/useractivedeactive/useractivedeactive.component.scss ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".row {\n  padding: 1% 0%;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\n.content {\n  margin: 1% 2%;\n}\n\n.has-search .form-control {\n  padding-left: 2.375rem;\n}\n\n.has-search .form-control-feedback {\n  position: absolute;\n  z-index: 2;\n  display: block;\n  width: 2.375rem;\n  height: 2.375rem;\n  line-height: 2.375rem;\n  text-align: center;\n  pointer-events: none;\n  color: #aaa;\n}\n\n.actdeacbtn {\n  padding: 0% 2%;\n  font-size: 12px;\n  margin-right: 1%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL2FjY291bnQvdXNlcmFjdGl2ZWRlYWN0aXZlL3VzZXJhY3RpdmVkZWFjdGl2ZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYWNjb3VudC91c2VyYWN0aXZlZGVhY3RpdmUvdXNlcmFjdGl2ZWRlYWN0aXZlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBQTtBQ0NGOztBREVBO0VBQ0UseUJBQUE7RUFDQSxjQUFBO0FDQ0Y7O0FERUE7RUFDRSxhQUFBO0FDQ0Y7O0FERUE7RUFDRSxzQkFBQTtBQ0NGOztBREVBO0VBQ0Usa0JBQUE7RUFDQSxVQUFBO0VBQ0EsY0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLHFCQUFBO0VBQ0Esa0JBQUE7RUFDQSxvQkFBQTtFQUNBLFdBQUE7QUNDRjs7QURFQTtFQUNFLGNBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvdXNlcmFjdGl2ZWRlYWN0aXZlL3VzZXJhY3RpdmVkZWFjdGl2ZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yb3cge1xuICBwYWRkaW5nOiAxJSAwJTtcbn1cblxuLmNhcmQtaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJkM2U1MDtcbiAgY29sb3I6ICNmYmUxMTY7XG59XG5cbi5jb250ZW50IHtcbiAgbWFyZ2luOiAxJSAyJTtcbn1cblxuLmhhcy1zZWFyY2ggLmZvcm0tY29udHJvbCB7XG4gIHBhZGRpbmctbGVmdDogMi4zNzVyZW07XG59XG5cbi5oYXMtc2VhcmNoIC5mb3JtLWNvbnRyb2wtZmVlZGJhY2sge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMi4zNzVyZW07XG4gIGhlaWdodDogMi4zNzVyZW07XG4gIGxpbmUtaGVpZ2h0OiAyLjM3NXJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgY29sb3I6ICNhYWE7XG59XG5cbi5hY3RkZWFjYnRuIHtcbiAgcGFkZGluZzogMCUgMiU7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgbWFyZ2luLXJpZ2h0OiAxJTtcbn0iLCIucm93IHtcbiAgcGFkZGluZzogMSUgMCU7XG59XG5cbi5jYXJkLWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gIGNvbG9yOiAjZmJlMTE2O1xufVxuXG4uY29udGVudCB7XG4gIG1hcmdpbjogMSUgMiU7XG59XG5cbi5oYXMtc2VhcmNoIC5mb3JtLWNvbnRyb2wge1xuICBwYWRkaW5nLWxlZnQ6IDIuMzc1cmVtO1xufVxuXG4uaGFzLXNlYXJjaCAuZm9ybS1jb250cm9sLWZlZWRiYWNrIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDIuMzc1cmVtO1xuICBoZWlnaHQ6IDIuMzc1cmVtO1xuICBsaW5lLWhlaWdodDogMi4zNzVyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIGNvbG9yOiAjYWFhO1xufVxuXG4uYWN0ZGVhY2J0biB7XG4gIHBhZGRpbmc6IDAlIDIlO1xuICBmb250LXNpemU6IDEycHg7XG4gIG1hcmdpbi1yaWdodDogMSU7XG59Il19 */"

/***/ }),

/***/ "./src/app/account/useractivedeactive/useractivedeactive.component.ts":
/*!****************************************************************************!*\
  !*** ./src/app/account/useractivedeactive/useractivedeactive.component.ts ***!
  \****************************************************************************/
/*! exports provided: UseractivedeactiveComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UseractivedeactiveComponent", function() { return UseractivedeactiveComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _core_services_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _useractiveModal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./useractiveModal */ "./src/app/account/useractivedeactive/useractiveModal.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../../app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");







let UseractivedeactiveComponent = class UseractivedeactiveComponent {
    constructor(apiService, loaderService) {
        this.apiService = apiService;
        this.loaderService = loaderService;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.modal = new _useractiveModal__WEBPACK_IMPORTED_MODULE_4__["UserActiveModal"]();
    }
    ngOnInit() {
        this.getGuestUserData();
    }
    getMemberListSearchData(e) {
        let name = e.target.value;
        let roleData = JSON.parse(localStorage.getItem('staffLogin')).object.roleDto;
        let userData = JSON.parse(localStorage.getItem('staffLogin')).object.userDto;
        // let data = {};
        // if (roleData.roleId == 9) {
        //   data = {
        //     "generalSearch": name,
        //     "offset": 0,
        //     "limit": 20,
        //     "audtionId": "0",
        //     "createdByRoleId": roleData.roleId,
        //     "createdByUserId": userData.userId
        //   }
        // }
        // else {
        let data = {
            "userName": name,
            "offset": this.modal.offset,
            "limit": this.modal.limit,
            "currentPage": this.modal.currentPage,
        };
        // }
        if (name.length >= 2) {
            this.loaderService.display(true);
            this.userdata = [];
            this.apiService.Create("user/getGuestUserDataByName", data).subscribe(data => {
                this.loaderService.display(false);
                if (data != undefined) {
                    if (data.success) {
                        if (data.object != undefined) {
                            this.modal.totalRecords = data.object.totalRecords;
                            this.modal.noOfPages = data.object.noOfPages;
                            //  console.log(JSON.stringify(this.modal));
                            if (data.object.records != undefined && data.object.records != null) {
                                this.userdata = data.object.records;
                                //   console.log(JSON.stringify(this.memberlist));
                                this.dtTrigger.next();
                            }
                        }
                    }
                }
            }, error => {
                console.log(error);
                this.loaderService.display(false);
            });
        }
    }
    // userdata: any[];
    getGuestUserData() {
        this.loaderService.display(true);
        this.userdata = [];
        let data = {
            "offset": this.modal.offset,
            "limit": this.modal.limit,
            "currentPage": this.modal.currentPage
        };
        this.apiService.Create('user/getGuestUser', data).subscribe((result) => {
            this.loaderService.display(false);
            console.log(result);
            if (result.success == true) {
                if (result.object.records != null && result.object.records != undefined) {
                    this.userdata = result.object.records;
                }
            }
            this.dtTrigger.next();
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    clickOnNextButton() {
        this.modal.offset = this.modal.offset + 20;
        this.getGuestUserData();
    }
    clickOnPreviousButton() {
        this.modal.offset = this.modal.offset - 20;
        this.getGuestUserData();
    }
    userActiveDeactive(user) {
        if (user.isActive == 0) {
            user.isActive = 1;
        }
        else {
            user.isActive = 0;
        }
        let userId = user.userId;
        let isActive = user.isActive;
        let deldata = {
            "userId": userId,
            "isActive": isActive
        };
        this.loaderService.display(true);
        this.apiService.Create('user/activeOrDeactiveUser', deldata).subscribe(data => {
            this.loaderService.display(false);
            if (data != undefined) {
                if (data.success) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(data.message);
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
};
UseractivedeactiveComponent.ctorParameters = () => [
    { type: _core_services_api_service__WEBPACK_IMPORTED_MODULE_2__["ApiService"] },
    { type: _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_6__["LoaderService"] }
];
UseractivedeactiveComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-useractivedeactive',
        template: __webpack_require__(/*! raw-loader!./useractivedeactive.component.html */ "./node_modules/raw-loader/index.js!./src/app/account/useractivedeactive/useractivedeactive.component.html"),
        styles: [__webpack_require__(/*! ./useractivedeactive.component.scss */ "./src/app/account/useractivedeactive/useractivedeactive.component.scss")]
    })
], UseractivedeactiveComponent);



/***/ }),

/***/ "./src/app/app-routing.module.ts":
/*!***************************************!*\
  !*** ./src/app/app-routing.module.ts ***!
  \***************************************/
/*! exports provided: AppRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppRoutingModule", function() { return AppRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _home_home_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./home/home.component */ "./src/app/home/home.component.ts");
/* harmony import */ var _account_login_login_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./account/login/login.component */ "./src/app/account/login/login.component.ts");
/* harmony import */ var _account_memberpendinglist_memberpendinglist_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./account/memberpendinglist/memberpendinglist.component */ "./src/app/account/memberpendinglist/memberpendinglist.component.ts");
/* harmony import */ var _master_newsandupdates_newsandupdates_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./master/newsandupdates/newsandupdates.component */ "./src/app/master/newsandupdates/newsandupdates.component.ts");
/* harmony import */ var _master_trailervideos_trailervideos_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./master/trailervideos/trailervideos.component */ "./src/app/master/trailervideos/trailervideos.component.ts");
/* harmony import */ var _master_addscreation_addscreation_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./master/addscreation/addscreation.component */ "./src/app/master/addscreation/addscreation.component.ts");
/* harmony import */ var _master_mstjobseekerandjobprovider_mstjobseekerandjobprovider_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./master/mstjobseekerandjobprovider/mstjobseekerandjobprovider.component */ "./src/app/master/mstjobseekerandjobprovider/mstjobseekerandjobprovider.component.ts");
/* harmony import */ var _master_mstmakingvideoandevent_mstmakingvideoandevent_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./master/mstmakingvideoandevent/mstmakingvideoandevent.component */ "./src/app/master/mstmakingvideoandevent/mstmakingvideoandevent.component.ts");
/* harmony import */ var _master_masterbanner_masterbanner_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./master/masterbanner/masterbanner.component */ "./src/app/master/masterbanner/masterbanner.component.ts");
/* harmony import */ var _master_master_gallery_master_gallery_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./master/master-gallery/master-gallery.component */ "./src/app/master/master-gallery/master-gallery.component.ts");
/* harmony import */ var _master_helpdesk_helpdesk_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./master/helpdesk/helpdesk.component */ "./src/app/master/helpdesk/helpdesk.component.ts");
/* harmony import */ var _master_staff_staff_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./master/staff/staff.component */ "./src/app/master/staff/staff.component.ts");
/* harmony import */ var _SuperAdmin_contentrest_contentrest_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./SuperAdmin/contentrest/contentrest.component */ "./src/app/SuperAdmin/contentrest/contentrest.component.ts");
/* harmony import */ var _SuperAdmin_membercontrest_membercontrest_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./SuperAdmin/membercontrest/membercontrest.component */ "./src/app/SuperAdmin/membercontrest/membercontrest.component.ts");
/* harmony import */ var _account_memberregbyadmin_memberregbyadmin_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./account/memberregbyadmin/memberregbyadmin.component */ "./src/app/account/memberregbyadmin/memberregbyadmin.component.ts");
/* harmony import */ var _account_memberapprovallistnew_memberapprovallistnew_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./account/memberapprovallistnew/memberapprovallistnew.component */ "./src/app/account/memberapprovallistnew/memberapprovallistnew.component.ts");
/* harmony import */ var _account_memberactivatedeactivate_memberactivatedeactivate_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./account/memberactivatedeactivate/memberactivatedeactivate.component */ "./src/app/account/memberactivatedeactivate/memberactivatedeactivate.component.ts");
/* harmony import */ var _master_membernews_membernews_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./master/membernews/membernews.component */ "./src/app/master/membernews/membernews.component.ts");
/* harmony import */ var _account_auditioncreation_auditioncreation_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./account/auditioncreation/auditioncreation.component */ "./src/app/account/auditioncreation/auditioncreation.component.ts");
/* harmony import */ var _Reports_userreport_userreport_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./Reports/userreport/userreport.component */ "./src/app/Reports/userreport/userreport.component.ts");
/* harmony import */ var _Reports_usernotregistration_usernotregistration_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./Reports/usernotregistration/usernotregistration.component */ "./src/app/Reports/usernotregistration/usernotregistration.component.ts");
/* harmony import */ var _master_sinighamaservice_sinighamaservice_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./master/sinighamaservice/sinighamaservice.component */ "./src/app/master/sinighamaservice/sinighamaservice.component.ts");
/* harmony import */ var _master_profession_profession_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./master/profession/profession.component */ "./src/app/master/profession/profession.component.ts");
/* harmony import */ var _master_comment_delete_comment_delete_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./master/comment-delete/comment-delete.component */ "./src/app/master/comment-delete/comment-delete.component.ts");
/* harmony import */ var _master_header_message_header_message_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./master/header-message/header-message.component */ "./src/app/master/header-message/header-message.component.ts");
/* harmony import */ var _Reports_userregistration_new_userregistration_new_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./Reports/userregistration-new/userregistration-new.component */ "./src/app/Reports/userregistration-new/userregistration-new.component.ts");
/* harmony import */ var _account_comparison_comparison_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./account/comparison/comparison.component */ "./src/app/account/comparison/comparison.component.ts");
/* harmony import */ var _master_state_state_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./master/state/state.component */ "./src/app/master/state/state.component.ts");
/* harmony import */ var _master_city_city_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./master/city/city.component */ "./src/app/master/city/city.component.ts");
/* harmony import */ var _movie_create_movie_create_movie_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./movie/create-movie/create-movie.component */ "./src/app/movie/create-movie/create-movie.component.ts");
/* harmony import */ var _master_callcenter_callcenter_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./master/callcenter/callcenter.component */ "./src/app/master/callcenter/callcenter.component.ts");
/* harmony import */ var _movie_mastergeners_mastergeners_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./movie/mastergeners/mastergeners.component */ "./src/app/movie/mastergeners/mastergeners.component.ts");
/* harmony import */ var _master_notificationpanel_notificationpanel_component__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./master/notificationpanel/notificationpanel.component */ "./src/app/master/notificationpanel/notificationpanel.component.ts");
/* harmony import */ var _master_notificationchatlist_notificationchatlist_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./master/notificationchatlist/notificationchatlist.component */ "./src/app/master/notificationchatlist/notificationchatlist.component.ts");
/* harmony import */ var _movie_movielist_movielist_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./movie/movielist/movielist.component */ "./src/app/movie/movielist/movielist.component.ts");
/* harmony import */ var _master_deletecomment_deletecomment_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./master/deletecomment/deletecomment.component */ "./src/app/master/deletecomment/deletecomment.component.ts");
/* harmony import */ var _account_useractivedeactive_useractivedeactive_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./account/useractivedeactive/useractivedeactive.component */ "./src/app/account/useractivedeactive/useractivedeactive.component.ts");
/* harmony import */ var _movie_movienews_movienews_component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./movie/movienews/movienews.component */ "./src/app/movie/movienews/movienews.component.ts");
/* harmony import */ var _movie_dummy_table_dummy_table_component__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./movie/dummy-table/dummy-table.component */ "./src/app/movie/dummy-table/dummy-table.component.ts");
/* harmony import */ var _movie_membermoviemapping_membermoviemapping_component__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./movie/membermoviemapping/membermoviemapping.component */ "./src/app/movie/membermoviemapping/membermoviemapping.component.ts");
/* harmony import */ var _Reports_memberreport_memberreport_component__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./Reports/memberreport/memberreport.component */ "./src/app/Reports/memberreport/memberreport.component.ts");
/* harmony import */ var _SuperAdmin_moviecontrest_moviecontrest_component__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./SuperAdmin/moviecontrest/moviecontrest.component */ "./src/app/SuperAdmin/moviecontrest/moviecontrest.component.ts");
/* harmony import */ var _account_extendmembervalidity_extendmembervalidity_component__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./account/extendmembervalidity/extendmembervalidity.component */ "./src/app/account/extendmembervalidity/extendmembervalidity.component.ts");














































const routes = [
    { path: '', pathMatch: 'full', redirectTo: 'login' },
    { path: 'login', component: _account_login_login_component__WEBPACK_IMPORTED_MODULE_4__["LoginComponent"] },
    { path: 'home', component: _home_home_component__WEBPACK_IMPORTED_MODULE_3__["HomeComponent"] },
    { path: 'memberpendinglist', component: _account_memberpendinglist_memberpendinglist_component__WEBPACK_IMPORTED_MODULE_5__["MemberpendinglistComponent"] },
    { path: 'newsandupdates', component: _master_newsandupdates_newsandupdates_component__WEBPACK_IMPORTED_MODULE_6__["NewsandupdatesComponent"] },
    { path: 'tarilervideos', component: _master_trailervideos_trailervideos_component__WEBPACK_IMPORTED_MODULE_7__["TrailervideosComponent"] },
    { path: 'addscreation', component: _master_addscreation_addscreation_component__WEBPACK_IMPORTED_MODULE_8__["AddscreationComponent"] },
    { path: 'mstjobseekerandjobprovider', component: _master_mstjobseekerandjobprovider_mstjobseekerandjobprovider_component__WEBPACK_IMPORTED_MODULE_9__["JobSeekerAndJobProviderComponent"] },
    { path: 'mstmakingvideoandevent', component: _master_mstmakingvideoandevent_mstmakingvideoandevent_component__WEBPACK_IMPORTED_MODULE_10__["MakingVideoAndEventComponent"] },
    { path: 'banners', component: _master_masterbanner_masterbanner_component__WEBPACK_IMPORTED_MODULE_11__["MasterbannerComponent"] },
    { path: 'gallery', component: _master_master_gallery_master_gallery_component__WEBPACK_IMPORTED_MODULE_12__["MasterGalleryComponent"] },
    { path: 'help', component: _master_helpdesk_helpdesk_component__WEBPACK_IMPORTED_MODULE_13__["HelpdeskComponent"] },
    { path: 'staff', component: _master_staff_staff_component__WEBPACK_IMPORTED_MODULE_14__["StaffComponent"] },
    { path: 'contentrest', component: _SuperAdmin_contentrest_contentrest_component__WEBPACK_IMPORTED_MODULE_15__["ContentrestComponent"] },
    { path: 'membercontrest', component: _SuperAdmin_membercontrest_membercontrest_component__WEBPACK_IMPORTED_MODULE_16__["MembercontrestComponent"] },
    { path: 'memregbyadmin', component: _account_memberregbyadmin_memberregbyadmin_component__WEBPACK_IMPORTED_MODULE_17__["MemberregbyadminComponent"] },
    { path: 'memberlistapprovalnew', component: _account_memberapprovallistnew_memberapprovallistnew_component__WEBPACK_IMPORTED_MODULE_18__["MemberapprovallistnewComponent"] },
    { path: 'memberactdeact', component: _account_memberactivatedeactivate_memberactivatedeactivate_component__WEBPACK_IMPORTED_MODULE_19__["MemberactivatedeactivateComponent"] },
    { path: 'membernews', component: _master_membernews_membernews_component__WEBPACK_IMPORTED_MODULE_20__["MembernewsComponent"] },
    { path: 'auditioncreation', component: _account_auditioncreation_auditioncreation_component__WEBPACK_IMPORTED_MODULE_21__["AuditioncreationComponent"] },
    { path: 'userreport', component: _Reports_userreport_userreport_component__WEBPACK_IMPORTED_MODULE_22__["UserreportComponent"] },
    { path: 'userregister', component: _Reports_userregistration_new_userregistration_new_component__WEBPACK_IMPORTED_MODULE_28__["UserregistrationNewComponent"] },
    { path: 'usernotregister', component: _Reports_usernotregistration_usernotregistration_component__WEBPACK_IMPORTED_MODULE_23__["UsernotregistrationComponent"] },
    { path: 'sinighama_services', component: _master_sinighamaservice_sinighamaservice_component__WEBPACK_IMPORTED_MODULE_24__["SinighamaserviceComponent"] },
    { path: 'profession', component: _master_profession_profession_component__WEBPACK_IMPORTED_MODULE_25__["ProfessionComponent"] },
    { path: 'comment-delete', component: _master_comment_delete_comment_delete_component__WEBPACK_IMPORTED_MODULE_26__["CommentDeleteComponent"] },
    { path: 'headerMessage', component: _master_header_message_header_message_component__WEBPACK_IMPORTED_MODULE_27__["HeaderMessageComponent"] },
    { path: 'comparison', component: _account_comparison_comparison_component__WEBPACK_IMPORTED_MODULE_29__["ComparisonComponent"] },
    { path: 'state', component: _master_state_state_component__WEBPACK_IMPORTED_MODULE_30__["StateComponent"] },
    { path: 'city', component: _master_city_city_component__WEBPACK_IMPORTED_MODULE_31__["CityComponent"] },
    { path: 'callcenter', component: _master_callcenter_callcenter_component__WEBPACK_IMPORTED_MODULE_33__["CallcenterComponent"] },
    { path: 'createmovie', component: _movie_create_movie_create_movie_component__WEBPACK_IMPORTED_MODULE_32__["CreateMovieComponent"] },
    { path: 'mastergeners', component: _movie_mastergeners_mastergeners_component__WEBPACK_IMPORTED_MODULE_34__["MastergenersComponent"] },
    { path: 'notification', component: _master_notificationpanel_notificationpanel_component__WEBPACK_IMPORTED_MODULE_35__["NotificationpanelComponent"] },
    { path: "notechatlist", component: _master_notificationchatlist_notificationchatlist_component__WEBPACK_IMPORTED_MODULE_36__["NotificationchatlistComponent"] },
    { path: "movielist", component: _movie_movielist_movielist_component__WEBPACK_IMPORTED_MODULE_37__["MovielistComponent"] },
    { path: "deletecomment", component: _master_deletecomment_deletecomment_component__WEBPACK_IMPORTED_MODULE_38__["DeletecommentComponent"] },
    { path: "table", component: _movie_dummy_table_dummy_table_component__WEBPACK_IMPORTED_MODULE_41__["DummyTableComponent"] },
    { path: "movienews", component: _movie_movienews_movienews_component__WEBPACK_IMPORTED_MODULE_40__["MovienewsComponent"] },
    { path: "useractdeact", component: _account_useractivedeactive_useractivedeactive_component__WEBPACK_IMPORTED_MODULE_39__["UseractivedeactiveComponent"] },
    { path: "membermoviemapping", component: _movie_membermoviemapping_membermoviemapping_component__WEBPACK_IMPORTED_MODULE_42__["MembermoviemappingComponent"] },
    { path: "memberreport", component: _Reports_memberreport_memberreport_component__WEBPACK_IMPORTED_MODULE_43__["MemberreportComponent"] },
    { path: "moviecontrest", component: _SuperAdmin_moviecontrest_moviecontrest_component__WEBPACK_IMPORTED_MODULE_44__["MoviecontrestComponent"] },
    { path: "extendmemval", component: _account_extendmembervalidity_extendmembervalidity_component__WEBPACK_IMPORTED_MODULE_45__["ExtendmembervalidityComponent"] }
];
let AppRoutingModule = class AppRoutingModule {
};
AppRoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forRoot(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
    })
], AppRoutingModule);

//export const AppRoutes: ModuleWithProviders = RouterModule.forRoot(routes, { useHash: true });


/***/ }),

/***/ "./src/app/app.component.css":
/*!***********************************!*\
  !*** ./src/app/app.component.css ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".c-btn {\n    border: 1px solid #ced4da !important;\n}\n\n/* Absolute Center Spinner */\n\n.loading {\n    position: fixed;\n    z-index: 999;\n    height: 2em;\n    width: 2em;\n    overflow: show;\n    margin: auto;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n}\n\n/* Transparent Overlay */\n\n.loading:before {\n    z-index: 999;\n    content: '';\n    display: block;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.3);\n}\n\n/* :not(:required) hides these rules from IE9 and below */\n\n.loading:not(:required) {\n    z-index: 999;\n    /* hide \"loading...\" text */\n    font: 0/0 a;\n    color: transparent;\n    text-shadow: none;\n    background-color: transparent;\n    border: 0;\n}\n\n.loading:not(:required):after {\n    z-index: 999;\n    content: '';\n    display: block;\n    font-size: 10px;\n    width: 1em;\n    height: 1em;\n    margin-top: -0.5em;\n    /* background-image: url(\"./../assets/images/logo/Round-Plate-Loader.gif\"); */\n    background: no-repeat;\n    /* -webkit-animation: spinner 1500ms infinite linear;\n    -moz-animation: spinner 1500ms infinite linear;\n    -ms-animation: spinner 1500ms infinite linear;\n    -o-animation: spinner 1500ms infinite linear;\n    animation: spinner 1500ms infinite linear;\n    border-radius: 0.5em;\n    -webkit-box-shadow: rgba(0, 0, 0, 0.75) 1.5em 0 0 0, rgba(0, 0, 0, 0.75) 1.1em 1.1em 0 0, rgba(0, 0, 0, 0.75) 0 1.5em 0 0, rgba(0, 0, 0, 0.75) -1.1em 1.1em 0 0, rgba(0, 0, 0, 0.5) -1.5em 0 0 0, rgba(0, 0, 0, 0.5) -1.1em -1.1em 0 0, rgba(0, 0, 0, 0.75) 0 -1.5em 0 0, rgba(0, 0, 0, 0.75) 1.1em -1.1em 0 0;\n    box-shadow: rgba(0, 0, 0, 0.75) 1.5em 0 0 0, rgba(0, 0, 0, 0.75) 1.1em 1.1em 0 0, rgba(0, 0, 0, 0.75) 0 1.5em 0 0, rgba(0, 0, 0, 0.75) -1.1em 1.1em 0 0, rgba(0, 0, 0, 0.75) -1.5em 0 0 0, rgba(0, 0, 0, 0.75) -1.1em -1.1em 0 0, rgba(0, 0, 0, 0.75) 0 -1.5em 0 0, rgba(0, 0, 0, 0.75) 1.1em -1.1em 0 0; */\n}\n\n/* Animation */\n\n#load {\n    background: url('reel.gif') no-repeat center center;\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    z-index: 99999999;\n    background-color: #7042147a;\n    background-size: 5% 10%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxvQ0FBb0M7QUFDeEM7O0FBRUEsNEJBQTRCOztBQUM1QjtJQUNJLGVBQWU7SUFDZixZQUFZO0lBQ1osV0FBVztJQUNYLFVBQVU7SUFDVixjQUFjO0lBQ2QsWUFBWTtJQUNaLE1BQU07SUFDTixPQUFPO0lBQ1AsU0FBUztJQUNULFFBQVE7QUFDWjs7QUFFQSx3QkFBd0I7O0FBQ3hCO0lBQ0ksWUFBWTtJQUNaLFdBQVc7SUFDWCxjQUFjO0lBQ2QsZUFBZTtJQUNmLE1BQU07SUFDTixPQUFPO0lBQ1AsV0FBVztJQUNYLFlBQVk7SUFDWixvQ0FBb0M7QUFDeEM7O0FBRUEseURBQXlEOztBQUV6RDtJQUNJLFlBQVk7SUFDWiwyQkFBMkI7SUFDM0IsV0FBVztJQUNYLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsNkJBQTZCO0lBQzdCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsY0FBYztJQUNkLGVBQWU7SUFDZixVQUFVO0lBQ1YsV0FBVztJQUNYLGtCQUFrQjtJQUNsQiw2RUFBNkU7SUFDN0UscUJBQXFCO0lBQ3JCOzs7Ozs7OytTQU8yUztBQUMvUzs7QUFFQSxjQUFjOztBQUVkO0lBQ0ksbURBQTJFO0lBQzNFLGVBQWU7SUFDZixNQUFNO0lBQ04sT0FBTztJQUNQLFlBQVk7SUFDWixXQUFXO0lBQ1gsaUJBQWlCO0lBQ2pCLDJCQUEyQjtJQUMzQix1QkFBdUI7QUFDM0IiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jLWJ0biB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NlZDRkYSAhaW1wb3J0YW50O1xufVxuXG4vKiBBYnNvbHV0ZSBDZW50ZXIgU3Bpbm5lciAqL1xuLmxvYWRpbmcge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB6LWluZGV4OiA5OTk7XG4gICAgaGVpZ2h0OiAyZW07XG4gICAgd2lkdGg6IDJlbTtcbiAgICBvdmVyZmxvdzogc2hvdztcbiAgICBtYXJnaW46IGF1dG87XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIHJpZ2h0OiAwO1xufVxuXG4vKiBUcmFuc3BhcmVudCBPdmVybGF5ICovXG4ubG9hZGluZzpiZWZvcmUge1xuICAgIHotaW5kZXg6IDk5OTtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4zKTtcbn1cblxuLyogOm5vdCg6cmVxdWlyZWQpIGhpZGVzIHRoZXNlIHJ1bGVzIGZyb20gSUU5IGFuZCBiZWxvdyAqL1xuXG4ubG9hZGluZzpub3QoOnJlcXVpcmVkKSB7XG4gICAgei1pbmRleDogOTk5O1xuICAgIC8qIGhpZGUgXCJsb2FkaW5nLi4uXCIgdGV4dCAqL1xuICAgIGZvbnQ6IDAvMCBhO1xuICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICB0ZXh0LXNoYWRvdzogbm9uZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXI6IDA7XG59XG5cbi5sb2FkaW5nOm5vdCg6cmVxdWlyZWQpOmFmdGVyIHtcbiAgICB6LWluZGV4OiA5OTk7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAxMHB4O1xuICAgIHdpZHRoOiAxZW07XG4gICAgaGVpZ2h0OiAxZW07XG4gICAgbWFyZ2luLXRvcDogLTAuNWVtO1xuICAgIC8qIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4vLi4vYXNzZXRzL2ltYWdlcy9sb2dvL1JvdW5kLVBsYXRlLUxvYWRlci5naWZcIik7ICovXG4gICAgYmFja2dyb3VuZDogbm8tcmVwZWF0O1xuICAgIC8qIC13ZWJraXQtYW5pbWF0aW9uOiBzcGlubmVyIDE1MDBtcyBpbmZpbml0ZSBsaW5lYXI7XG4gICAgLW1vei1hbmltYXRpb246IHNwaW5uZXIgMTUwMG1zIGluZmluaXRlIGxpbmVhcjtcbiAgICAtbXMtYW5pbWF0aW9uOiBzcGlubmVyIDE1MDBtcyBpbmZpbml0ZSBsaW5lYXI7XG4gICAgLW8tYW5pbWF0aW9uOiBzcGlubmVyIDE1MDBtcyBpbmZpbml0ZSBsaW5lYXI7XG4gICAgYW5pbWF0aW9uOiBzcGlubmVyIDE1MDBtcyBpbmZpbml0ZSBsaW5lYXI7XG4gICAgYm9yZGVyLXJhZGl1czogMC41ZW07XG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuNzUpIDEuNWVtIDAgMCAwLCByZ2JhKDAsIDAsIDAsIDAuNzUpIDEuMWVtIDEuMWVtIDAgMCwgcmdiYSgwLCAwLCAwLCAwLjc1KSAwIDEuNWVtIDAgMCwgcmdiYSgwLCAwLCAwLCAwLjc1KSAtMS4xZW0gMS4xZW0gMCAwLCByZ2JhKDAsIDAsIDAsIDAuNSkgLTEuNWVtIDAgMCAwLCByZ2JhKDAsIDAsIDAsIDAuNSkgLTEuMWVtIC0xLjFlbSAwIDAsIHJnYmEoMCwgMCwgMCwgMC43NSkgMCAtMS41ZW0gMCAwLCByZ2JhKDAsIDAsIDAsIDAuNzUpIDEuMWVtIC0xLjFlbSAwIDA7XG4gICAgYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjc1KSAxLjVlbSAwIDAgMCwgcmdiYSgwLCAwLCAwLCAwLjc1KSAxLjFlbSAxLjFlbSAwIDAsIHJnYmEoMCwgMCwgMCwgMC43NSkgMCAxLjVlbSAwIDAsIHJnYmEoMCwgMCwgMCwgMC43NSkgLTEuMWVtIDEuMWVtIDAgMCwgcmdiYSgwLCAwLCAwLCAwLjc1KSAtMS41ZW0gMCAwIDAsIHJnYmEoMCwgMCwgMCwgMC43NSkgLTEuMWVtIC0xLjFlbSAwIDAsIHJnYmEoMCwgMCwgMCwgMC43NSkgMCAtMS41ZW0gMCAwLCByZ2JhKDAsIDAsIDAsIDAuNzUpIDEuMWVtIC0xLjFlbSAwIDA7ICovXG59XG5cbi8qIEFuaW1hdGlvbiAqL1xuXG4jbG9hZCB7XG4gICAgYmFja2dyb3VuZDogdXJsKCcuLy4uL2Fzc2V0cy9pbWFnZXMvbG9nby9yZWVsLmdpZicpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgei1pbmRleDogOTk5OTk5OTk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzcwNDIxNDdhO1xuICAgIGJhY2tncm91bmQtc2l6ZTogNSUgMTAlO1xufSJdfQ== */"

/***/ }),

/***/ "./src/app/app.component.ts":
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/*! exports provided: AppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function() { return AppComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm2015/ngx-spinner.js");
/* harmony import */ var _core_services_loader_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _core_services_api_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./core/_services/api.service */ "./src/app/core/_services/api.service.ts");






let AppComponent = class AppComponent {
    constructor(loaderService, apiService, spinner, cdRef, location) {
        this.loaderService = loaderService;
        this.apiService = apiService;
        this.spinner = spinner;
        this.cdRef = cdRef;
        this.title = 'sinighama';
        this.backDisable = location;
        location.onPopState(() => {
            // var r = confirm("You pressed a Back button! Are you sure?!");
            // if (r == true) {
            //     // Call Back button programmatically as per user confirmation.
            //     history.back();
            //     // Uncomment below line to redirect to the previous page instead.
            //     // window.location = document.referrer // Note: IE11 is not supporting this.
            // } else {
            //     // Stay on the current page.
            //     history.pushState(null, null, window.location.pathname);
            // }
            history.pushState(null, null, window.location.pathname);
        });
    }
    ngOnInit() {
        this.backDisable.onPopState(() => {
            // var r = confirm("You pressed a Back button! Are you sure?!");
            // if (r == true) {
            //     // Call Back button programmatically as per user confirmation.
            //     history.back();
            //     // Uncomment below line to redirect to the previous page instead.
            //     // window.location = document.referrer // Note: IE11 is not supporting this.
            // } else {
            //     // Stay on the current page.
            //     history.pushState(null, null, window.location.pathname);
            // }
            history.pushState(null, null, window.location.pathname);
        });
        /** spinner starts on init */
        this.spinner.show();
        setTimeout(() => {
            /** spinner ends after 5 seconds */
            this.spinner.hide();
        }, 5000);
        this.showLoader = true;
        this.loaderService.status.subscribe((val) => {
            this.showLoader = val;
        });
    }
    ngAfterViewInit() {
        this.showLoader = true;
        setTimeout(() => {
            this.loaderService.status.subscribe((val) => {
                this.showLoader = val;
            });
        });
        this.cdRef.detectChanges();
    }
    update() {
        // Run change detection only for this component when update() method is called.
        this.cdRef.detectChanges();
    }
};
AppComponent.ctorParameters = () => [
    { type: _core_services_loader_service__WEBPACK_IMPORTED_MODULE_3__["LoaderService"] },
    { type: _core_services_api_service__WEBPACK_IMPORTED_MODULE_5__["ApiService"] },
    { type: ngx_spinner__WEBPACK_IMPORTED_MODULE_2__["NgxSpinnerService"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_4__["PlatformLocation"] }
];
AppComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-root',
        template: __webpack_require__(/*! raw-loader!./app.component.html */ "./node_modules/raw-loader/index.js!./src/app/app.component.html"),
        styles: [__webpack_require__(/*! ./app.component.css */ "./src/app/app.component.css")]
    })
], AppComponent);



/***/ }),

/***/ "./src/app/app.module.ts":
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/*! exports provided: getDatepickerConfig, AppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDatepickerConfig", function() { return getDatepickerConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./app-routing.module */ "./src/app/app-routing.module.ts");
/* harmony import */ var _core_core_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./core/core.module */ "./src/app/core/core.module.ts");
/* harmony import */ var _account_account_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./account/account.module */ "./src/app/account/account.module.ts");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./app.component */ "./src/app/app.component.ts");
/* harmony import */ var _home_home_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./home/home.component */ "./src/app/home/home.component.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _angular_http__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/http */ "./node_modules/@angular/http/fesm2015/http.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm2015/ngx-spinner.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _core_services_loader_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var _master_newsandupdates_newsandupdates_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./master/newsandupdates/newsandupdates.component */ "./src/app/master/newsandupdates/newsandupdates.component.ts");
/* harmony import */ var _master_trailervideos_trailervideos_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./master/trailervideos/trailervideos.component */ "./src/app/master/trailervideos/trailervideos.component.ts");
/* harmony import */ var _master_addscreation_addscreation_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./master/addscreation/addscreation.component */ "./src/app/master/addscreation/addscreation.component.ts");
/* harmony import */ var ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ngx-bootstrap/datepicker */ "./node_modules/ngx-bootstrap/datepicker/fesm2015/ngx-bootstrap-datepicker.js");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/platform-browser/animations */ "./node_modules/@angular/platform-browser/fesm2015/animations.js");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var ngx_image_compress__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ngx-image-compress */ "./node_modules/ngx-image-compress/fesm2015/ngx-image-compress.js");
/* harmony import */ var ngx_quill__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ngx-quill */ "./node_modules/ngx-quill/fesm2015/ngx-quill.js");
/* harmony import */ var ngx_image_cropper__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ngx-image-cropper */ "./node_modules/ngx-image-cropper/fesm2015/ngx-image-cropper.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var angular2_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! angular2-multiselect-dropdown */ "./node_modules/angular2-multiselect-dropdown/fesm2015/angular2-multiselect-dropdown.js");
/* harmony import */ var _master_mstjobseekerandjobprovider_mstjobseekerandjobprovider_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./master/mstjobseekerandjobprovider/mstjobseekerandjobprovider.component */ "./src/app/master/mstjobseekerandjobprovider/mstjobseekerandjobprovider.component.ts");
/* harmony import */ var _master_mstmakingvideoandevent_mstmakingvideoandevent_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./master/mstmakingvideoandevent/mstmakingvideoandevent.component */ "./src/app/master/mstmakingvideoandevent/mstmakingvideoandevent.component.ts");
/* harmony import */ var _master_masterbanner_masterbanner_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./master/masterbanner/masterbanner.component */ "./src/app/master/masterbanner/masterbanner.component.ts");
/* harmony import */ var _master_master_gallery_master_gallery_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./master/master-gallery/master-gallery.component */ "./src/app/master/master-gallery/master-gallery.component.ts");
/* harmony import */ var _master_helpdesk_helpdesk_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./master/helpdesk/helpdesk.component */ "./src/app/master/helpdesk/helpdesk.component.ts");
/* harmony import */ var _master_staff_staff_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./master/staff/staff.component */ "./src/app/master/staff/staff.component.ts");
/* harmony import */ var ngx_password_toggle__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ngx-password-toggle */ "./node_modules/ngx-password-toggle/ngx-password-toggle.umd.js");
/* harmony import */ var ngx_password_toggle__WEBPACK_IMPORTED_MODULE_31___default = /*#__PURE__*/__webpack_require__.n(ngx_password_toggle__WEBPACK_IMPORTED_MODULE_31__);
/* harmony import */ var _SuperAdmin_contentrest_contentrest_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./SuperAdmin/contentrest/contentrest.component */ "./src/app/SuperAdmin/contentrest/contentrest.component.ts");
/* harmony import */ var _SuperAdmin_membercontrest_membercontrest_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./SuperAdmin/membercontrest/membercontrest.component */ "./src/app/SuperAdmin/membercontrest/membercontrest.component.ts");
/* harmony import */ var _master_membernews_membernews_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./master/membernews/membernews.component */ "./src/app/master/membernews/membernews.component.ts");
/* harmony import */ var _Reports_userreport_userreport_component__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./Reports/userreport/userreport.component */ "./src/app/Reports/userreport/userreport.component.ts");
/* harmony import */ var _master_sinighamaservice_sinighamaservice_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./master/sinighamaservice/sinighamaservice.component */ "./src/app/master/sinighamaservice/sinighamaservice.component.ts");
/* harmony import */ var _master_profession_profession_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./master/profession/profession.component */ "./src/app/master/profession/profession.component.ts");
/* harmony import */ var _master_comment_delete_comment_delete_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./master/comment-delete/comment-delete.component */ "./src/app/master/comment-delete/comment-delete.component.ts");
/* harmony import */ var _Reports_usernotregistration_usernotregistration_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./Reports/usernotregistration/usernotregistration.component */ "./src/app/Reports/usernotregistration/usernotregistration.component.ts");
/* harmony import */ var _master_header_message_header_message_component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./master/header-message/header-message.component */ "./src/app/master/header-message/header-message.component.ts");
/* harmony import */ var _Reports_userregistration_new_userregistration_new_component__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./Reports/userregistration-new/userregistration-new.component */ "./src/app/Reports/userregistration-new/userregistration-new.component.ts");
/* harmony import */ var _master_state_state_component__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./master/state/state.component */ "./src/app/master/state/state.component.ts");
/* harmony import */ var _master_city_city_component__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./master/city/city.component */ "./src/app/master/city/city.component.ts");
/* harmony import */ var _movie_movie_module__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./movie/movie.module */ "./src/app/movie/movie.module.ts");
/* harmony import */ var _master_callcenter_callcenter_component__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./master/callcenter/callcenter.component */ "./src/app/master/callcenter/callcenter.component.ts");
/* harmony import */ var _master_notificationpanel_notificationpanel_component__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./master/notificationpanel/notificationpanel.component */ "./src/app/master/notificationpanel/notificationpanel.component.ts");
/* harmony import */ var _master_notificationchatlist_notificationchatlist_component__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./master/notificationchatlist/notificationchatlist.component */ "./src/app/master/notificationchatlist/notificationchatlist.component.ts");
/* harmony import */ var _master_deletecomment_deletecomment_component__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./master/deletecomment/deletecomment.component */ "./src/app/master/deletecomment/deletecomment.component.ts");
/* harmony import */ var _Reports_memberreport_memberreport_component__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./Reports/memberreport/memberreport.component */ "./src/app/Reports/memberreport/memberreport.component.ts");
/* harmony import */ var _SuperAdmin_moviecontrest_moviecontrest_component__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./SuperAdmin/moviecontrest/moviecontrest.component */ "./src/app/SuperAdmin/moviecontrest/moviecontrest.component.ts");



















































function getDatepickerConfig() {
    return Object.assign(new ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_17__["BsDatepickerConfig"](), {
        dateInputFormat: 'DD-MM-YYYY'
    });
}
let AppModule = class AppModule {
};
AppModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
        declarations: [
            _app_component__WEBPACK_IMPORTED_MODULE_7__["AppComponent"],
            _home_home_component__WEBPACK_IMPORTED_MODULE_8__["HomeComponent"],
            _master_newsandupdates_newsandupdates_component__WEBPACK_IMPORTED_MODULE_14__["NewsandupdatesComponent"],
            _master_trailervideos_trailervideos_component__WEBPACK_IMPORTED_MODULE_15__["TrailervideosComponent"],
            _master_addscreation_addscreation_component__WEBPACK_IMPORTED_MODULE_16__["AddscreationComponent"],
            _master_mstjobseekerandjobprovider_mstjobseekerandjobprovider_component__WEBPACK_IMPORTED_MODULE_25__["JobSeekerAndJobProviderComponent"],
            _master_mstmakingvideoandevent_mstmakingvideoandevent_component__WEBPACK_IMPORTED_MODULE_26__["MakingVideoAndEventComponent"],
            _master_masterbanner_masterbanner_component__WEBPACK_IMPORTED_MODULE_27__["MasterbannerComponent"],
            _master_master_gallery_master_gallery_component__WEBPACK_IMPORTED_MODULE_28__["MasterGalleryComponent"],
            _master_helpdesk_helpdesk_component__WEBPACK_IMPORTED_MODULE_29__["HelpdeskComponent"],
            _master_staff_staff_component__WEBPACK_IMPORTED_MODULE_30__["StaffComponent"],
            _SuperAdmin_contentrest_contentrest_component__WEBPACK_IMPORTED_MODULE_32__["ContentrestComponent"],
            _SuperAdmin_membercontrest_membercontrest_component__WEBPACK_IMPORTED_MODULE_33__["MembercontrestComponent"],
            _master_membernews_membernews_component__WEBPACK_IMPORTED_MODULE_34__["MembernewsComponent"],
            _Reports_userreport_userreport_component__WEBPACK_IMPORTED_MODULE_35__["UserreportComponent"],
            _master_sinighamaservice_sinighamaservice_component__WEBPACK_IMPORTED_MODULE_36__["SinighamaserviceComponent"],
            _master_profession_profession_component__WEBPACK_IMPORTED_MODULE_37__["ProfessionComponent"],
            _master_comment_delete_comment_delete_component__WEBPACK_IMPORTED_MODULE_38__["CommentDeleteComponent"],
            _Reports_usernotregistration_usernotregistration_component__WEBPACK_IMPORTED_MODULE_39__["UsernotregistrationComponent"],
            _master_header_message_header_message_component__WEBPACK_IMPORTED_MODULE_40__["HeaderMessageComponent"],
            _Reports_userregistration_new_userregistration_new_component__WEBPACK_IMPORTED_MODULE_41__["UserregistrationNewComponent"],
            _master_state_state_component__WEBPACK_IMPORTED_MODULE_42__["StateComponent"],
            _master_city_city_component__WEBPACK_IMPORTED_MODULE_43__["CityComponent"],
            _master_callcenter_callcenter_component__WEBPACK_IMPORTED_MODULE_45__["CallcenterComponent"],
            _master_notificationpanel_notificationpanel_component__WEBPACK_IMPORTED_MODULE_46__["NotificationpanelComponent"],
            _master_notificationchatlist_notificationchatlist_component__WEBPACK_IMPORTED_MODULE_47__["NotificationchatlistComponent"],
            _master_deletecomment_deletecomment_component__WEBPACK_IMPORTED_MODULE_48__["DeletecommentComponent"],
            _Reports_memberreport_memberreport_component__WEBPACK_IMPORTED_MODULE_49__["MemberreportComponent"],
            _SuperAdmin_moviecontrest_moviecontrest_component__WEBPACK_IMPORTED_MODULE_50__["MoviecontrestComponent"]
        ],
        imports: [
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"],
            _app_routing_module__WEBPACK_IMPORTED_MODULE_4__["AppRoutingModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_12__["FormsModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ReactiveFormsModule"],
            _angular_common_http__WEBPACK_IMPORTED_MODULE_9__["HttpClientModule"],
            _core_core_module__WEBPACK_IMPORTED_MODULE_5__["CoreModule"],
            _account_account_module__WEBPACK_IMPORTED_MODULE_6__["AccountModule"],
            _movie_movie_module__WEBPACK_IMPORTED_MODULE_44__["MovieModule"],
            _angular_http__WEBPACK_IMPORTED_MODULE_10__["HttpModule"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_11__["NgxSpinnerModule"],
            angular_datatables__WEBPACK_IMPORTED_MODULE_19__["DataTablesModule"],
            ngx_quill__WEBPACK_IMPORTED_MODULE_21__["QuillModule"],
            ngx_image_cropper__WEBPACK_IMPORTED_MODULE_22__["ImageCropperModule"],
            ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_17__["BsDatepickerModule"].forRoot(),
            _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_18__["BrowserAnimationsModule"],
            ngx_password_toggle__WEBPACK_IMPORTED_MODULE_31__["NgxPasswordToggleModule"],
            angular2_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_24__["AngularMultiSelectModule"],
        ],
        // exports: [ SanitizeHtmlPipe ],
        providers: [_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"], _core_services_loader_service__WEBPACK_IMPORTED_MODULE_13__["LoaderService"], _angular_common__WEBPACK_IMPORTED_MODULE_23__["DatePipe"], ngx_image_compress__WEBPACK_IMPORTED_MODULE_20__["NgxImageCompressService"],
            { provide: ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_17__["BsDatepickerConfig"], useFactory: getDatepickerConfig }
        ],
        schemas: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["NO_ERRORS_SCHEMA"]],
        bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_7__["AppComponent"]]
    })
], AppModule);



/***/ }),

/***/ "./src/app/auth/auth.service.ts":
/*!**************************************!*\
  !*** ./src/app/auth/auth.service.ts ***!
  \**************************************/
/*! exports provided: AuthService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthService", function() { return AuthService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _core_services_api_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../core/_services/api.service */ "./src/app/core/_services/api.service.ts");




// import { FLAGS } from '@angular/core/src/render3/interfaces/view';



let AuthService = class AuthService {
    constructor(http, router, apiService) {
        this.http = http;
        this.router = router;
        this.apiService = apiService;
        this.loggedIn = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"](false);
    }
    get isLoggedIn() {
        return this.loggedIn.asObservable();
    }
    login(user) {
        debugger;
        this.apiService.Create('staff/login', user).subscribe(data => {
            if (data.success) {
                localStorage.setItem("staffLogin", JSON.stringify(data));
                this.loggedIn.next(true);
                this.router.navigate(['home']);
            }
            else {
                sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(data.message);
                this.loggedIn.next(false);
                this.router.navigate(['/']);
            }
        });
        /* if (user.mobile == '9900000000' && user.password == 'prasanna') {
    
        }
        else {
          Swal.fire("Wrong Credentilas");
        } */
    }
    logout() {
        this.loggedIn.next(false);
        this.router.navigate(['login']);
        /*  this.router.navigate(['login']).then(()=>{
           window.location.reload();
         }); */
    }
};
AuthService.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: _core_services_api_service__WEBPACK_IMPORTED_MODULE_6__["ApiService"] }
];
AuthService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
], AuthService);



/***/ }),

/***/ "./src/app/core/_services/api.service.ts":
/*!***********************************************!*\
  !*** ./src/app/core/_services/api.service.ts ***!
  \***********************************************/
/*! exports provided: ApiService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApiService", function() { return ApiService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/http */ "./node_modules/@angular/http/fesm2015/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");




//import { Observable } from 'rxjs/Observable';



let ApiService = class ApiService {
    // _baseUrl: string = "http://localhost:6060/";
    //_baseUrl: string = "http://43.247.156.175:8080/sinighama/";
    constructor(httpClient, http) {
        this.httpClient = httpClient;
        this.http = http;
        this._baseUrl = "https://sinilinux.azurewebsites.net/";
        this.chatimmediate = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"](null);
        this.headers = new _angular_http__WEBPACK_IMPORTED_MODULE_2__["Headers"]({
            'Content-Type': 'application/json',
            'Accept': 'application/json',
            'Access-Control-Allow-Origin': '*'
        });
        this.options = new _angular_http__WEBPACK_IMPORTED_MODULE_2__["RequestOptions"]({ headers: this.headers });
        //this._baseUrl = "http://localhost:8080/";
        this.headers1 = new _angular_http__WEBPACK_IMPORTED_MODULE_2__["Headers"]({
            'Content-Type': undefined,
        });
        this.options1 = new _angular_http__WEBPACK_IMPORTED_MODULE_2__["RequestOptions"]({
            withCredentials: true,
            headers: this.headers1
        });
        //this._baseUrl = baseUrl;
    }
    //Api service for get method by Id
    getURI(Module, id) {
        return this.http.get(this._baseUrl + Module + "/" + id)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])((response) => response.json()
            .catch(this.handleError)));
    }
    getWithMultipleQueryTerm(Module, query) {
        return this.http
            .get(this._baseUrl + Module + "/" + query)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])((response) => response.json()
            .catch(this.handleError)));
    }
    //Api service for get method
    getDATA(Module) {
        return this.http.get(this._baseUrl + Module)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])((response) => response.json()
        //.catch (this.handleError)
        ));
    }
    //Api service for post method
    Create(Module, user) {
        return this.http.post(this._baseUrl + Module, user, this.options)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])((response) => response.json()
        //.catch((error: any) => console.log(error))
        ));
    }
    //Api Service for delete
    Delete(url, key, val) {
        return this.http.delete(this._baseUrl, this.options)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])((response) => response.json()
            .catch(this.handleError)));
    }
    Delete1(url, key, val) {
        return this.http
            .delete(url + "/?" + key + "=" + val, this.options).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(this.extractData));
        // .catch(this.handleError);
    }
    extractData(res) {
        let body = res.json();
        return body || {};
    }
    handleError(error) {
        let errMsg = (error.message) ? error.message :
            error.status ? `${error.status} - ${error.statusText}` : 'Server error';
        console.error(errMsg);
        return rxjs__WEBPACK_IMPORTED_MODULE_3__["Observable"].throw(errMsg);
    }
    GetDatefromJson(date) {
        let onlydate = new Date();
        let sldate = new Date(date);
        return onlydate = sldate.getFullYear() + "-" + (((sldate.getMonth() + 1) < 10) ? ('0' + (sldate.getMonth() + 1)) : (sldate.getMonth() + 1)) + "-" + ((sldate.getDate() < 10) ? ('0' + sldate.getDate()) : sldate.getDate());
    }
    getURI2(Module, id, id1) {
        return this.http.get(this._baseUrl + Module + "/" + id + "/" + id1)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])((response) => response.json()
            .catch(this.handleError)));
    }
    getByMultipleParam(Module, id, id1) {
        return this.http.get(this._baseUrl + Module + "/" + id + "/" + id1)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])((response) => response.json()
            .catch(this.handleError)));
    }
    uploadImage(Module, formdata) {
        return this.http
            .post(this._baseUrl + Module, formdata).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(res => res.json().catch(this.handleError)));
    }
    CallURL(Module) {
        return this.http.get(Module).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(res => res.json()
            .catch(this.handleError)));
    }
    //Validate All Fields of Form
    validateAllFormFields(formGroup) {
        Object.keys(formGroup.controls).forEach(field => {
            const control = formGroup.get(field);
            if (control instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormControl"]) {
                control.markAsTouched({ onlySelf: true });
            }
            else if (control instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormGroup"]) {
                this.validateAllFormFields(control);
            }
            else if (control instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormArray"]) {
                control.controls.forEach(control => {
                    if (control instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormControl"]) {
                        control.markAsTouched({ onlySelf: true });
                    }
                    else if (control instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormGroup"]) {
                        this.validateAllFormFields(control);
                    }
                });
            }
        });
    }
    getBase64ImageFromURL(url) {
        return rxjs__WEBPACK_IMPORTED_MODULE_3__["Observable"].create((observer) => {
            // create an image object
            let img = new Image();
            img.crossOrigin = 'Anonymous';
            img.src = url;
            if (!img.complete) {
                // This will call another method that will create image from url
                img.onload = () => {
                    observer.next(this.getBase64Image(img));
                    observer.complete();
                };
                img.onerror = (err) => {
                    observer.error(err);
                };
            }
            else {
                observer.next(this.getBase64Image(img));
                observer.complete();
            }
        });
    }
    getBase64Image(img) {
        // We create a HTML canvas object that will create a 2d image
        var canvas = document.createElement("canvas");
        canvas.width = img.width;
        canvas.height = img.height;
        var ctx = canvas.getContext("2d");
        // This will draw image    
        ctx.drawImage(img, 0, 0);
        // Convert the drawn image to Data URL
        var dataURL = canvas.toDataURL("image/png");
        return dataURL.replace(/^data:image\/(png|jpg|jpeg|JPG|JPEG|PNG);base64,/, "");
    }
    getBase64ImageFromUrl1(imageUrl) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            var res = yield fetch(imageUrl);
            var blob = yield res.blob();
            return new Promise((resolve, reject) => {
                var reader = new FileReader();
                reader.addEventListener("load", function () {
                    resolve(reader.result);
                }, false);
                reader.onerror = () => {
                    return reject(this);
                };
                reader.readAsDataURL(blob);
            });
        });
    }
    saveFormData(url, data) {
        return this.http.post(this._baseUrl + url, data).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])((response) => response.json()));
    }
    setSubject(value) {
        if (value) {
            this.chatimmediate.next(value);
        }
        else {
            this.chatimmediate.next(null);
        }
    }
};
ApiService.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_5__["HttpClient"] },
    { type: _angular_http__WEBPACK_IMPORTED_MODULE_2__["Http"] }
];
ApiService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
], ApiService);



/***/ }),

/***/ "./src/app/core/_services/loader.service.ts":
/*!**************************************************!*\
  !*** ./src/app/core/_services/loader.service.ts ***!
  \**************************************************/
/*! exports provided: LoaderService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoaderService", function() { return LoaderService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");



let LoaderService = class LoaderService {
    constructor() {
        this.status = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](false);
    }
    display(value) {
        this.status.next(value);
    }
};
LoaderService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], LoaderService);



/***/ }),

/***/ "./src/app/core/core.module.ts":
/*!*************************************!*\
  !*** ./src/app/core/core.module.ts ***!
  \*************************************/
/*! exports provided: CoreModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CoreModule", function() { return CoreModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _header_header_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./header/header.component */ "./src/app/core/header/header.component.ts");
/* harmony import */ var _footer_footer_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./footer/footer.component */ "./src/app/core/footer/footer.component.ts");
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../app-routing.module */ "./src/app/app-routing.module.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");







let CoreModule = class CoreModule {
};
CoreModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        declarations: [
            _header_header_component__WEBPACK_IMPORTED_MODULE_3__["HeaderComponent"],
            _footer_footer_component__WEBPACK_IMPORTED_MODULE_4__["FooterComponent"]
        ],
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
            _app_routing_module__WEBPACK_IMPORTED_MODULE_5__["AppRoutingModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormsModule"]
        ],
        exports: [
            _header_header_component__WEBPACK_IMPORTED_MODULE_3__["HeaderComponent"],
            _footer_footer_component__WEBPACK_IMPORTED_MODULE_4__["FooterComponent"]
        ]
    })
], CoreModule);



/***/ }),

/***/ "./src/app/core/footer/footer.component.css":
/*!**************************************************!*\
  !*** ./src/app/core/footer/footer.component.css ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".footer-img {\n    width: 72px;\n    height: 65px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvb3Rlci1pbWcge1xuICAgIHdpZHRoOiA3MnB4O1xuICAgIGhlaWdodDogNjVweDtcbn0iXX0= */"

/***/ }),

/***/ "./src/app/core/footer/footer.component.ts":
/*!*************************************************!*\
  !*** ./src/app/core/footer/footer.component.ts ***!
  \*************************************************/
/*! exports provided: FooterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FooterComponent", function() { return FooterComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../auth/auth.service */ "./src/app/auth/auth.service.ts");



let FooterComponent = class FooterComponent {
    constructor(authService) {
        this.authService = authService;
        this.clicked = this.clicked === undefined ? false : true;
    }
    ngOnInit() {
        this.isLoggedIn$ = this.authService.isLoggedIn;
    }
    onLogout() {
        this.authService.logout();
    }
};
FooterComponent.ctorParameters = () => [
    { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"] }
];
FooterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'core-footer',
        template: __webpack_require__(/*! raw-loader!./footer.component.html */ "./node_modules/raw-loader/index.js!./src/app/core/footer/footer.component.html"),
        styles: [__webpack_require__(/*! ./footer.component.css */ "./src/app/core/footer/footer.component.css")]
    })
], FooterComponent);



/***/ }),

/***/ "./src/app/core/header/header.component.css":
/*!**************************************************!*\
  !*** ./src/app/core/header/header.component.css ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".siniLogo {\n    position: fixed;\n    top: 0;\n    left: 5%;\n    z-index: 9998;\n    width: 78px;\n    padding: 2px 0px;\n}\n\n@media only screen and (max-width: 600px) {\n    .siniLogo {\n        position: fixed;\n        z-index: 9998;\n        width: 70px;\n        padding: 2px;\n    }\n}\n\nform {\n    max-width: 320px;\n    margin: 10px auto;\n    padding: 10px 20px;\n    background: #f4f7f8;\n    border-radius: 8px;\n}\n\nh1 {\n    margin: 0 0 30px 0;\n    text-align: center;\n}\n\ninput[type=\"text\"], input[type=\"password\"], input[type=\"date\"], input[type=\"datetime\"], input[type=\"email\"], input[type=\"number\"], input[type=\"search\"], input[type=\"tel\"], input[type=\"time\"], input[type=\"url\"], textarea, select {\n    background: rgba(255, 255, 255, 0.1);\n    border: none;\n    font-size: 16px;\n    height: 40px;\n    margin: 0;\n    outline: 0;\n    padding: 15px;\n    width: 100%;\n    background-color: #e8eeef;\n    color: #8a97a0;\n    box-shadow: 0 1px 0 rgba(0, 0, 0, 0.03) inset;\n    margin-bottom: 30px;\n}\n\ninput[type=\"radio\"], input[type=\"checkbox\"] {\n    margin: 0 4px 8px 0;\n}\n\nselect {\n    padding: 6px;\n    height: 32px;\n    border-radius: 2px;\n}\n\n#signUpbtn {\n    padding: 10px 0px 10px 0px;\n    color: #FFF;\n    background-color: #4bc970;\n    font-size: 18px;\n    text-align: center;\n    font-style: normal;\n    border-radius: 5px;\n    width: 100%;\n    border: 1px solid #3ac162;\n    border-width: 1px 1px 3px;\n    box-shadow: 0 -1px 0 rgba(255, 255, 255, 0.1) inset;\n    margin-bottom: 10px;\n    margin-top: auto;\n}\n\nfieldset {\n    margin-bottom: 30px;\n    border: none;\n}\n\nlegend {\n    font-size: 1.4em;\n    margin-bottom: 10px;\n}\n\nlabel {\n    display: block;\n    margin-bottom: 8px;\n}\n\nlabel.light {\n    font-weight: 300;\n    display: inline;\n}\n\n.number {\n    background-color: #5fcf80;\n    color: #fff;\n    height: 30px;\n    width: 30px;\n    display: inline-block;\n    font-size: 0.8em;\n    margin-right: 4px;\n    line-height: 30px;\n    text-align: center;\n    text-shadow: 0 1px 0 rgba(255, 255, 255, 0.2);\n    border-radius: 100%;\n}\n\n.modal-signin {\n    margin-top: 10%;\n    width: 450px;\n    float: right;\n}\n\n.modal-signup {\n    margin-top: 10%;\n    width: 450px;\n    float: right;\n}\n\n@media only screen and (max-width:600px) {\n    .modal-signin {\n        margin-top: 10%;\n        width: 300px;\n        float: right;\n    }\n}\n\n@media only screen and (max-width:600px) {\n    .modal-signup {\n        margin-top: 10%;\n        width: 300px;\n        height: 250px;\n        float: right;\n    }\n}\n\n.headertabs {\n    text-decoration: none;\n    color: #2C3E50 !important;\n    font-weight: 700;\n    cursor: pointer;\n    margin-right: 20px;\n    text-align: center;\n}\n\n.headericon {\n    color: #000;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsTUFBTTtJQUNOLFFBQVE7SUFDUixhQUFhO0lBQ2IsV0FBVztJQUNYLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJO1FBQ0ksZUFBZTtRQUNmLGFBQWE7UUFDYixXQUFXO1FBQ1gsWUFBWTtJQUNoQjtBQUNKOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxvQ0FBb0M7SUFDcEMsWUFBWTtJQUNaLGVBQWU7SUFDZixZQUFZO0lBQ1osU0FBUztJQUNULFVBQVU7SUFDVixhQUFhO0lBQ2IsV0FBVztJQUNYLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsNkNBQTZDO0lBQzdDLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLFlBQVk7SUFDWixZQUFZO0lBQ1osa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksMEJBQTBCO0lBQzFCLFdBQVc7SUFDWCx5QkFBeUI7SUFDekIsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCx5QkFBeUI7SUFDekIseUJBQXlCO0lBQ3pCLG1EQUFtRDtJQUNuRCxtQkFBbUI7SUFDbkIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksY0FBYztJQUNkLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixlQUFlO0FBQ25COztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLFdBQVc7SUFDWCxZQUFZO0lBQ1osV0FBVztJQUNYLHFCQUFxQjtJQUNyQixnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsNkNBQTZDO0lBQzdDLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGVBQWU7SUFDZixZQUFZO0lBQ1osWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixZQUFZO0lBQ1osWUFBWTtBQUNoQjs7QUFFQTtJQUNJO1FBQ0ksZUFBZTtRQUNmLFlBQVk7UUFDWixZQUFZO0lBQ2hCO0FBQ0o7O0FBRUE7SUFDSTtRQUNJLGVBQWU7UUFDZixZQUFZO1FBQ1osYUFBYTtRQUNiLFlBQVk7SUFDaEI7QUFDSjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQix5QkFBeUI7SUFDekIsZ0JBQWdCO0lBQ2hCLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksV0FBVztBQUNmIiwiZmlsZSI6InNyYy9hcHAvY29yZS9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2luaUxvZ28ge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogNSU7XG4gICAgei1pbmRleDogOTk5ODtcbiAgICB3aWR0aDogNzhweDtcbiAgICBwYWRkaW5nOiAycHggMHB4O1xufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgLnNpbmlMb2dvIHtcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICB6LWluZGV4OiA5OTk4O1xuICAgICAgICB3aWR0aDogNzBweDtcbiAgICAgICAgcGFkZGluZzogMnB4O1xuICAgIH1cbn1cblxuZm9ybSB7XG4gICAgbWF4LXdpZHRoOiAzMjBweDtcbiAgICBtYXJnaW46IDEwcHggYXV0bztcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG4gICAgYmFja2dyb3VuZDogI2Y0ZjdmODtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG59XG5cbmgxIHtcbiAgICBtYXJnaW46IDAgMCAzMHB4IDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5pbnB1dFt0eXBlPVwidGV4dFwiXSwgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLCBpbnB1dFt0eXBlPVwiZGF0ZVwiXSwgaW5wdXRbdHlwZT1cImRhdGV0aW1lXCJdLCBpbnB1dFt0eXBlPVwiZW1haWxcIl0sIGlucHV0W3R5cGU9XCJudW1iZXJcIl0sIGlucHV0W3R5cGU9XCJzZWFyY2hcIl0sIGlucHV0W3R5cGU9XCJ0ZWxcIl0sIGlucHV0W3R5cGU9XCJ0aW1lXCJdLCBpbnB1dFt0eXBlPVwidXJsXCJdLCB0ZXh0YXJlYSwgc2VsZWN0IHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gICAgbWFyZ2luOiAwO1xuICAgIG91dGxpbmU6IDA7XG4gICAgcGFkZGluZzogMTVweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZThlZWVmO1xuICAgIGNvbG9yOiAjOGE5N2EwO1xuICAgIGJveC1zaGFkb3c6IDAgMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjAzKSBpbnNldDtcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xufVxuXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0sIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XG4gICAgbWFyZ2luOiAwIDRweCA4cHggMDtcbn1cblxuc2VsZWN0IHtcbiAgICBwYWRkaW5nOiA2cHg7XG4gICAgaGVpZ2h0OiAzMnB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbn1cblxuI3NpZ25VcGJ0biB7XG4gICAgcGFkZGluZzogMTBweCAwcHggMTBweCAwcHg7XG4gICAgY29sb3I6ICNGRkY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRiYzk3MDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzNhYzE2MjtcbiAgICBib3JkZXItd2lkdGg6IDFweCAxcHggM3B4O1xuICAgIGJveC1zaGFkb3c6IDAgLTFweCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKSBpbnNldDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgIG1hcmdpbi10b3A6IGF1dG87XG59XG5cbmZpZWxkc2V0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICAgIGJvcmRlcjogbm9uZTtcbn1cblxubGVnZW5kIHtcbiAgICBmb250LXNpemU6IDEuNGVtO1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbmxhYmVsIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG59XG5cbmxhYmVsLmxpZ2h0IHtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIGRpc3BsYXk6IGlubGluZTtcbn1cblxuLm51bWJlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzVmY2Y4MDtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBoZWlnaHQ6IDMwcHg7XG4gICAgd2lkdGg6IDMwcHg7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMC44ZW07XG4gICAgbWFyZ2luLXJpZ2h0OiA0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHRleHQtc2hhZG93OiAwIDFweCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTtcbiAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xufVxuXG4ubW9kYWwtc2lnbmluIHtcbiAgICBtYXJnaW4tdG9wOiAxMCU7XG4gICAgd2lkdGg6IDQ1MHB4O1xuICAgIGZsb2F0OiByaWdodDtcbn1cblxuLm1vZGFsLXNpZ251cCB7XG4gICAgbWFyZ2luLXRvcDogMTAlO1xuICAgIHdpZHRoOiA0NTBweDtcbiAgICBmbG9hdDogcmlnaHQ7XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDo2MDBweCkge1xuICAgIC5tb2RhbC1zaWduaW4ge1xuICAgICAgICBtYXJnaW4tdG9wOiAxMCU7XG4gICAgICAgIHdpZHRoOiAzMDBweDtcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjYwMHB4KSB7XG4gICAgLm1vZGFsLXNpZ251cCB7XG4gICAgICAgIG1hcmdpbi10b3A6IDEwJTtcbiAgICAgICAgd2lkdGg6IDMwMHB4O1xuICAgICAgICBoZWlnaHQ6IDI1MHB4O1xuICAgICAgICBmbG9hdDogcmlnaHQ7XG4gICAgfVxufVxuXG4uaGVhZGVydGFicyB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGNvbG9yOiAjMkMzRTUwICFpbXBvcnRhbnQ7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmhlYWRlcmljb24ge1xuICAgIGNvbG9yOiAjMDAwO1xufSJdfQ== */"

/***/ }),

/***/ "./src/app/core/header/header.component.ts":
/*!*************************************************!*\
  !*** ./src/app/core/header/header.component.ts ***!
  \*************************************************/
/*! exports provided: HeaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderComponent", function() { return HeaderComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../auth/auth.service */ "./src/app/auth/auth.service.ts");
/* harmony import */ var _modals_permission__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../modals/permission */ "./src/app/modals/permission.ts");
/* harmony import */ var src_app_services_account_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/account.service */ "./src/app/services/account.service.ts");
/* harmony import */ var _services_api_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../_services/api.service */ "./src/app/core/_services/api.service.ts");







let HeaderComponent = class HeaderComponent {
    //show: boolean;
    //rId : any;
    constructor(router, authService, acc, apiService) {
        this.router = router;
        this.authService = authService;
        this.acc = acc;
        this.apiService = apiService;
        this.permission = new _modals_permission__WEBPACK_IMPORTED_MODULE_4__["Permission"]();
        this.menuHide = true;
        this.superadminmenu = true;
        this.staffMenu = true;
        this.listq = [];
        //this.clicked = this.clicked === undefined ? false : true;
        this.acc.currentUser.subscribe(x => this.currentUser = x);
    }
    ngOnInit() {
        this.getCount();
    }
    onLogout() {
        this.acc.LogOut();
        this.router.navigate(['/login']);
    }
    getCount() {
        let count = 0;
        this.apiService.getDATA("helpDesk/getAll").subscribe((response) => {
            if (response.success == true) {
                if (response.object != null && response.object != undefined) {
                    this.listq = response.object.helpDeskDtoList;
                }
            }
        });
    }
};
HeaderComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_3__["AuthService"] },
    { type: src_app_services_account_service__WEBPACK_IMPORTED_MODULE_5__["AccountService"] },
    { type: _services_api_service__WEBPACK_IMPORTED_MODULE_6__["ApiService"] }
];
HeaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'core-header',
        template: __webpack_require__(/*! raw-loader!./header.component.html */ "./node_modules/raw-loader/index.js!./src/app/core/header/header.component.html"),
        styles: [__webpack_require__(/*! ./header.component.css */ "./src/app/core/header/header.component.css")]
    })
], HeaderComponent);



/***/ }),

/***/ "./src/app/home/home.component.scss":
/*!******************************************!*\
  !*** ./src/app/home/home.component.scss ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".newscontent {\n  position: relative;\n  text-align: center;\n  color: #000;\n}\n\n.centered {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n/* marquee {\n    height: 57%;\n    width: 78%;\n    margin: -5% -1%;\n} */\n\n.movie-news {\n  background-image: linear-gradient(160deg, #fb333a, #060606ed);\n  color: #ffffff;\n  font-weight: 500;\n}\n\n.btnSearch {\n  background-color: #FBE116;\n  color: #2C3E50;\n  box-shadow: 3px 3px 5px grey;\n}\n\n.btnSearch:hover {\n  box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24), 0 17px 50px 0 rgba(0, 0, 0, 0.19);\n  color: white;\n  transform: scale(1);\n  transition: 1s;\n  background-color: #E21D24;\n}\n\n#btnSearch:hover {\n  font-size: 25px;\n}\n\n#btnClear {\n  background-color: #FBE116;\n  color: #2C3E50;\n}\n\n.card-title {\n  /* font-family: 'Marcellus', serif; */\n  color: #464645;\n  font-size: 17px;\n  line-height: 26px;\n  vertical-align: baseline;\n  /* letter-spacing: 2px; */\n}\n\n.card-title1 {\n  color: white;\n  font-size: 20px;\n  font-weight: bold;\n}\n\n/*Photo modal and click open system*/\n\n#photos {\n  /* Prevent vertical gaps */\n  line-height: 0;\n  -webkit-column-count: 4;\n  -webkit-column-gap: 2px;\n  -moz-column-count: 4;\n  -moz-column-gap: 2px;\n  column-count: 4;\n  -moz-column-gap: 15px;\n       column-gap: 15px;\n  background-color: black;\n}\n\n#photos img {\n  /* Just in case there are inline attributes */\n  width: 100% !important;\n  height: auto !important;\n  border: 8px solid white;\n  margin-bottom: 15px;\n}\n\n@media (max-width: 1200px) {\n  #photos {\n    -moz-column-count: 4;\n    column-count: 4;\n  }\n}\n\n@media (max-width: 1000px) {\n  #photos {\n    -moz-column-count: 3;\n    column-count: 3;\n  }\n}\n\n@media (max-width: 800px) {\n  #photos {\n    -moz-column-count: 2;\n    column-count: 2;\n  }\n}\n\n@media (max-width: 400px) {\n  #photos {\n    -moz-column-count: 1;\n    column-count: 1;\n  }\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n}\n\n.myImg {\n  cursor: pointer;\n  transition: 0.3s;\n}\n\n.myImg:hover {\n  opacity: 0.5;\n}\n\n/* The Modal (background) */\n\n.modal {\n  display: none;\n  /* Hidden by default */\n  /* Stay in place */\n  /* Sit on top */\n  position: fixed;\n  padding-top: 250px;\n  /* Location of the box */\n  left: 0;\n  top: 0;\n  width: 100%;\n  /* Full width */\n  height: 100%;\n  /* Full height */\n  overflow: auto;\n  /* Enable scroll if needed */\n  background-color: black;\n  /* Fallback color */\n  background-color: rgba(0, 0, 0, 0.9);\n  /* Black w/ opacity */\n}\n\n/* Modal Content (image) */\n\n.modal-content {\n  margin: auto;\n  display: block;\n  width: 80%;\n  max-width: 700px;\n}\n\n/* Caption of Modal Image */\n\n.zoom:hover {\n  /* IE 9 */\n  /* Safari 3-8 */\n  transform: scale(1.1);\n  z-index: 1;\n}\n\n.main-profile {\n  border: 1px solid #ddd;\n  border-radius: 0.5px;\n  padding: 2px;\n}\n\n.main-profile {\n  box-shadow: 0 0 5px 5px #2C3E50;\n}\n\n@media only screen and (max-width: 700px) {\n  .row actor-name {\n    margin-left: 150px;\n  }\n}\n\n/* [1] The container */\n\n.img-hover-zoom {\n  height: 300px;\n  /* [1.1] Set it as per your need */\n  overflow: hidden;\n  /* [1.2] Hide the overflowing of child elements */\n}\n\n/* [2] Transition property for smooth transformation of images */\n\n.img-hover-zoom img {\n  transition: transform 0.5s ease;\n}\n\n/* [3] Finally, transforming the image when container gets hovered */\n\n.img-hover-zoom:hover img {\n  transform: scale(1.5);\n}\n\n/* Quick-zoom Container */\n\n.img-hover-zoom--quick-zoom img {\n  transform-origin: 0 0;\n  transition: transform 0.25s, visibility 0.25s ease-in;\n}\n\n/* The Transformation */\n\n.img-hover-zoom--quick-zoom:hover img {\n  transform: scale(2);\n}\n\n.back-to-top {\n  position: fixed;\n  bottom: 25px;\n  right: 25px;\n  display: none;\n}\n\n/*COLLAPSE FOR ARTICLE AND PHOTO*/\n\n.collapse.show {\n  visibility: visible;\n  display: block;\n}\n\n#photos-collapse {\n  position: relative;\n  height: 0;\n  overflow: hidden;\n  transition-property: height, visibility;\n  transition-duration: 10s;\n  -webkit-animation-duration: 3s;\n          animation-duration: 3s;\n  transition-timing-function: ease-in-out;\n}\n\n.collapsing.width {\n  transition-property: width, visibility;\n  width: 0;\n  height: auto;\n}\n\n.video-profile {\n  width: 100%;\n  height: 150px;\n  margin: 5px;\n}\n\n.home-news {\n  width: 100%;\n  height: 150px;\n}\n\n.moviebtn {\n  width: 200px;\n  margin: 5px;\n  margin-bottom: -10px;\n}\n\n.center {\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.card {\n  border-radius: 8px;\n  color: white;\n  padding: 10px;\n  position: relative;\n}\n\n.card .dashboardicons {\n  color: white;\n  font-size: 28px;\n  opacity: 0.3;\n  position: absolute;\n  right: 13px;\n  top: 13px;\n}\n\n.card .stat {\n  border-top: 1px solid rgba(255, 255, 255, 0.3);\n  font-size: 8px;\n  margin-top: 25px;\n  padding: 10px 10px 0;\n  text-transform: uppercase;\n}\n\n.card .title {\n  display: inline-block;\n  font-size: 15px;\n  padding: 10px 10px 0;\n  text-transform: uppercase;\n}\n\n.card .value {\n  font-size: 28px;\n  padding: 0 10px;\n}\n\n.card.blue {\n  background-color: #2298F1;\n}\n\n.card.green {\n  background-color: #66B92E;\n}\n\n.card.orange {\n  background-color: #DA932C;\n}\n\n.card.red {\n  background-color: #D65B4A;\n}\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/home/home.component.ts":
/*!****************************************!*\
  !*** ./src/app/home/home.component.ts ***!
  \****************************************/
/*! exports provided: HomeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeComponent", function() { return HomeComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_account_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/account.service */ "./src/app/services/account.service.ts");
/* harmony import */ var _core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/_services/api.service */ "./src/app/core/_services/api.service.ts");




let HomeComponent = class HomeComponent {
    constructor(acc, apiService) {
        this.acc = acc;
        this.apiService = apiService;
        this.acc.currentUser.subscribe(x => this.currentUser = x);
    }
    ngOnInit() {
        // alert("HOME PAGE");
        // this.LoginStatus$ = this.acc.isLoggesIn;
        // this.UsreRoleName$ = this.acc.currentUser;
        this.getMemberCount();
    }
    // getMemberCount() {
    //   this.apiService.getDATA("memberReport/countOfMembers").subscribe(data => {
    //     if (data != undefined) {
    //       if (data.success) {
    //         if (data.object != undefined) {
    //           this.totalRecords = data.object.memberCount;
    //           this.totalApprovedRecords = data.object.approvedMemberCount;
    //           this.totalPendingRecords = data.object.pendingMemberCount;
    //         }
    //       }
    //     }
    //   })
    // }
    getMemberCount() {
        let roleData = JSON.parse(localStorage.getItem('staffLogin')).object.roleDto;
        let staffData = JSON.parse(localStorage.getItem('staffLogin')).object;
        let userData = JSON.parse(localStorage.getItem('staffLogin')).object.userDto;
        let countData = {
            "userId": userData.userId,
            "staffId": staffData.staffId,
            "roleId": roleData.roleId
        };
        this.apiService.Create("memberReport/countOfMembers", countData).subscribe(data => {
            if (data != undefined) {
                if (data.success) {
                    if (data.object != undefined) {
                        this.totalRecords = data.object.memberCount;
                        this.totalApprovedRecords = data.object.approvedMemberCount;
                        this.totalPendingRecords = data.object.pendingMemberCount;
                    }
                }
            }
        });
    }
};
HomeComponent.ctorParameters = () => [
    { type: src_app_services_account_service__WEBPACK_IMPORTED_MODULE_2__["AccountService"] },
    { type: _core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] }
];
HomeComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-home',
        template: __webpack_require__(/*! raw-loader!./home.component.html */ "./node_modules/raw-loader/index.js!./src/app/home/home.component.html"),
        styles: [__webpack_require__(/*! ./home.component.scss */ "./src/app/home/home.component.scss")]
    })
], HomeComponent);



/***/ }),

/***/ "./src/app/master/addscreation/addcreation.ts":
/*!****************************************************!*\
  !*** ./src/app/master/addscreation/addcreation.ts ***!
  \****************************************************/
/*! exports provided: AddCreation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddCreation", function() { return AddCreation; });
class AddCreation {
    constructor() {
        this.startDate = "";
        this.endDate = "";
    }
}


/***/ }),

/***/ "./src/app/master/addscreation/addscreation.component.scss":
/*!*****************************************************************!*\
  !*** ./src/app/master/addscreation/addscreation.component.scss ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.theader {\n  text-align: center;\n}\n\n.fa-pencil-square-o {\n  color: #000f92;\n  font-size: 21px;\n}\n\n.fa-trash {\n  color: #ff0000;\n  font-size: 21px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21hc3Rlci9hZGRzY3JlYXRpb24vYWRkc2NyZWF0aW9uLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tYXN0ZXIvYWRkc2NyZWF0aW9uL2FkZHNjcmVhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0VBQ0EsY0FBQTtBQ0NKOztBREVBO0VBQ0ksZ0JBQUE7QUNDSjs7QURFQTtFQUNJLHNCQUFBO0VBQ0EsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxnQkFBQTtFQUNBLHFCQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsT0FBQTtFQUNBLE1BQUE7RUFDQSxVQUFBO0FDQ0o7O0FERUE7RUFDSSxrQkFBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtFQUNDLGVBQUE7QUNDTDs7QURFQTtFQUNJLGNBQUE7RUFDQSxlQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9tYXN0ZXIvYWRkc2NyZWF0aW9uL2FkZHNjcmVhdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJkM2U1MDtcbiAgICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5idG4xIHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCBncmF5O1xuICAgIGNvbG9yOiBncmF5O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDRweCA4cHg7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xuICAgIGZvbnQtc2l6ZTogMTAwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIG9wYWNpdHk6IDA7XG59XG5cbi50aGVhZGVye1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmZhLXBlbmNpbC1zcXVhcmUtb3tcbiAgICBjb2xvcjpyZ2IoMCwgMTUsIDE0Nik7XG4gICAgIGZvbnQtc2l6ZTogMjFweDtcbn1cblxuLmZhLXRyYXNoe1xuICAgIGNvbG9yOiNmZjAwMDA7XG4gICAgZm9udC1zaXplOiAyMXB4O1xufVxuIiwiLmNhcmQtaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJkM2U1MDtcbiAgY29sb3I6ICNmYmUxMTY7XG59XG5cbmxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLmJ0bjEge1xuICBib3JkZXI6IDJweCBzb2xpZCBncmF5O1xuICBjb2xvcjogZ3JheTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDRweCA4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xuICBmb250LXNpemU6IDEwMHB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgb3BhY2l0eTogMDtcbn1cblxuLnRoZWFkZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5mYS1wZW5jaWwtc3F1YXJlLW8ge1xuICBjb2xvcjogIzAwMGY5MjtcbiAgZm9udC1zaXplOiAyMXB4O1xufVxuXG4uZmEtdHJhc2gge1xuICBjb2xvcjogI2ZmMDAwMDtcbiAgZm9udC1zaXplOiAyMXB4O1xufSJdfQ== */"

/***/ }),

/***/ "./src/app/master/addscreation/addscreation.component.ts":
/*!***************************************************************!*\
  !*** ./src/app/master/addscreation/addscreation.component.ts ***!
  \***************************************************************/
/*! exports provided: AddscreationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddscreationComponent", function() { return AddscreationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _addcreation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./addcreation */ "./src/app/master/addscreation/addcreation.ts");
/* harmony import */ var ngx_image_compress__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-image-compress */ "./node_modules/ngx-image-compress/fesm2015/ngx-image-compress.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");










let AddscreationComponent = class AddscreationComponent {
    constructor(apiService, fb, imageCompress, loaderService, datePipe) {
        this.apiService = apiService;
        this.fb = fb;
        this.imageCompress = imageCompress;
        this.loaderService = loaderService;
        this.datePipe = datePipe;
        // description:string;
        // sequencenumber:number;
        this.addcreation = new _addcreation__WEBPACK_IMPORTED_MODULE_4__["AddCreation"]();
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_7__["Subject"]();
        this.masterAdsList = [];
        this.croppedImage = '';
        this.imageChangedEvent = '';
        this.isDtInitialized = false;
        this.topPosToStartShowing = 100;
        this.masteraddsForm = this.fb.group({
            description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            imageRatio: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            imagePath: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            startDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            endDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            sequenceNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
        this.addcreation.imagePath = "";
        this.addcreation.addDuration;
        this.addsDurationForm = this.fb.group({
            durationRows: this.fb.array([this.initaddDurationRows()])
        });
        this.datePickerConfig = Object.assign({}, {
            containerClass: 'theme-dark-blue',
            showWeekNumbers: false,
            dateInputFormat: 'DD-MM-YYYY'
        });
        this.minStartDate = new Date();
        this.minEndDate = new Date();
        this.minEndDate.setDate(this.minEndDate.getDate());
    }
    ngOnInit() {
        this.getAllAdsList();
        this.addcreation.imageRatio = '4';
    }
    initaddDurationRows() {
        return this.fb.group({
            addDuration: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('^[7-9][0-9]{9}$')])],
        });
    }
    // get galleryRows
    getaddsRows(masteraddsForm) {
        return masteraddsForm.get('addsRows').controls;
    }
    getAdddurationRows(addsDurationForm) {
        return addsDurationForm.get('durationRows').controls;
    }
    clearForm() {
        this.masteraddsForm.reset();
        this.imageChangedEvent = "";
        this.croppedImage = null;
        this.addcreation.id = null;
        this.addcreation.imageRatio = '4';
        this.addcreation.sequenceNumber = null;
    }
    // Converting image to base64
    addImageUpload(e) {
        this.loaderService.display(true);
        this.imageChangedEvent = e;
        $('#file-upload').removeAttr('src');
        this.addcreation.filename = "";
        this.addcreation.filetype = "";
        this.addcreation.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG" || extention == "png" || extention == "PNG") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB 
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.addcreation.filename = file.name;
                    this.addcreation.filetype = file.type;
                    // const csv: string = reader.result as string;
                    // this.adminPage.profileImage = csv.replace("data:image/jpeg;base64,", "");
                    this.addcreation.imagePath = reader.result;
                };
                // this.masteraddsForm.controls.imagePath.setValue(this.addcreation.imagePath);
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG" && extention != "PNG" && extention != "png") {
                this.addcreation.filename = "";
                this.addcreation.filetype = "";
                this.addcreation.imagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Please Upload the valid file");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.addcreation.filename = "";
                this.addcreation.filetype = "";
                this.addcreation.imagePath = "";
                // this.adminPage.profileImagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Document size should be less than 10MB");
                return;
            }
        }
    }
    //Image cropping  
    imageCropped(event) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                this.masteraddsForm.controls.imagePath.setValue(this.croppedImage);
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.masteraddsForm.controls.imagePath.setValue(this.croppedImage);
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.masteraddsForm.controls.imagePath.setValue(this.croppedImage);
            });
        }
    }
    imageLoaded() {
        // show cropper
    }
    cropperReady() {
        // cropper ready
    }
    loadImageFailed() {
        // show message
    }
    // Getting All the Add list Master Table
    getAllAdsList() {
        this.apiService.getDATA("add/getAlladd").subscribe(data => {
            if (data != undefined) {
                if (data.success == true) {
                    if (data.object != undefined) {
                        if (data.object != undefined && data.object != null) {
                            this.masterAdsList = data.object;
                            if (this.isDtInitialized) {
                                this.dtElement.dtInstance.then((dtInstance) => {
                                    dtInstance.destroy();
                                    this.dtTrigger.next();
                                });
                            }
                            else {
                                this.isDtInitialized = true;
                                this.dtTrigger.next();
                            }
                            //this.dtTrigger.next();
                        }
                    }
                }
            }
        });
    }
    // To repopulate date in form field based on the Add Id
    editMasterAds(idd) {
        debugger;
        window.scroll({
            top: 0,
            left: 0,
            behavior: 'smooth'
        });
        this.addcreation.id = idd;
        this.apiService.getDATA("add/editadd/" + idd).subscribe(data => {
            if (data.object != null && data.object != undefined) {
                this.addcreation.description = data.object.description;
                this.addcreation.imageRatio = data.object.widthHeight;
                this.addcreation.imagePath = data.object.imagePath;
                this.masteraddsForm.controls.imagePath.setValue(this.addcreation.imagePath);
                //  this.addcreation.startDate=new Date(data.object.startDate);
                this.addcreation.startDate = this.datePipe.transform(data.object.startDate, "dd-MM-yyyy");
                this.addcreation.endDate = this.datePipe.transform(data.object.endDate, "dd-MM-yyyy");
                this.addcreation.sequenceNumber = data.object.sequenceNumber;
                this.croppedImage = data.object.imagePath;
                // this.croppedImage = "";
                // this.apiService.getBase64ImageFromURL(this.addcreation.imagePath).subscribe(base64data => {
                //   this.croppedImage = 'data:image/jpeg;base64,' + base64data;
                // });
            }
        });
    }
    // Saving add detail by storing it in object 
    submitAdds() {
        let addDtos1;
        if (this.masteraddsForm.valid) {
            let StartDate = this.addcreation.startDate.toString();
            let EndDate = this.addcreation.endDate.toString();
            if (StartDate.length > 10 && EndDate.length == 10) {
                addDtos1 = {
                    "id": this.addcreation.id,
                    "description": this.addcreation.description,
                    "widthHeight": this.addcreation.imageRatio,
                    "imagePath": this.croppedImage,
                    "startDate": this.datePipe.transform(this.addcreation.startDate, "dd-MM-yyyy"),
                    "endDate": this.addcreation.endDate,
                    "sequenceNumber": this.addcreation.sequenceNumber,
                    "addsDuration": 1,
                };
            }
            else if (EndDate.length > 10 && StartDate.length == 10) {
                addDtos1 = {
                    "id": this.addcreation.id,
                    "description": this.addcreation.description,
                    "widthHeight": this.addcreation.imageRatio,
                    "imagePath": this.croppedImage,
                    "startDate": this.addcreation.startDate,
                    "endDate": this.datePipe.transform(this.addcreation.endDate, "dd-MM-yyyy"),
                    "sequenceNumber": this.addcreation.sequenceNumber,
                    "addsDuration": 1,
                };
            }
            else if (StartDate.length > 10 && EndDate.length > 10) {
                addDtos1 = {
                    "id": this.addcreation.id,
                    "description": this.addcreation.description,
                    "widthHeight": this.addcreation.imageRatio,
                    "imagePath": this.croppedImage,
                    "startDate": this.datePipe.transform(this.addcreation.startDate, "dd-MM-yyyy"),
                    "endDate": this.datePipe.transform(this.addcreation.endDate, "dd-MM-yyyy"),
                    "sequenceNumber": this.addcreation.sequenceNumber,
                    "addsDuration": 1,
                };
            }
            else {
                addDtos1 = {
                    "id": this.addcreation.id,
                    "description": this.addcreation.description,
                    "widthHeight": this.addcreation.imageRatio,
                    "imagePath": this.croppedImage,
                    "startDate": this.addcreation.startDate,
                    "endDate": this.addcreation.endDate,
                    "sequenceNumber": this.addcreation.sequenceNumber,
                    "addsDuration": 1,
                };
            }
            this.loaderService.display(true);
            this.apiService.Create("add/saveAdd", addDtos1).subscribe(data => {
                this.loaderService.display(false);
                if (data.success == true) {
                    if (data.object != "" && data.object != undefined) {
                        sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(data.message);
                        this.clearForm();
                        this.ngOnInit();
                    }
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(data.message);
                }
            }, error => {
                console.log(error);
                this.loaderService.display(false);
            });
        }
        else {
            this.apiService.validateAllFormFields(this.masteraddsForm);
            sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire("Please enter all the fields");
        }
    }
    // Soft Delete by Id (setting isActive =0 in DB)
    deleteAddImage(id) {
        this.apiService.getDATA("add/delete/" + id).subscribe(data => {
            sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(data.message);
            this.ngOnInit();
        });
    }
    checkScroll() {
        const scrollPosition = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
        if (scrollPosition >= this.topPosToStartShowing) {
            this.isShow = true;
        }
        else {
            this.isShow = false;
        }
    }
};
AddscreationComponent.ctorParameters = () => [
    { type: src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: ngx_image_compress__WEBPACK_IMPORTED_MODULE_5__["NgxImageCompressService"] },
    { type: src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_8__["LoaderService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_9__["DatePipe"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('window:scroll')
], AddscreationComponent.prototype, "checkScroll", null);
AddscreationComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-addscreation',
        template: __webpack_require__(/*! raw-loader!./addscreation.component.html */ "./node_modules/raw-loader/index.js!./src/app/master/addscreation/addscreation.component.html"),
        styles: [__webpack_require__(/*! ./addscreation.component.scss */ "./src/app/master/addscreation/addscreation.component.scss")]
    })
], AddscreationComponent);



/***/ }),

/***/ "./src/app/master/callcenter/callcenter.component.scss":
/*!*************************************************************!*\
  !*** ./src/app/master/callcenter/callcenter.component.scss ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".showErrorMsg {\n  color: red;\n}\n\n.container-fluid {\n  margin-top: 1%;\n  margin-bottom: 1%;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.row {\n  padding: 1% 0%;\n}\n\n.theader {\n  text-align: center;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21hc3Rlci9jYWxsY2VudGVyL2NhbGxjZW50ZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21hc3Rlci9jYWxsY2VudGVyL2NhbGxjZW50ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxVQUFBO0FDQUo7O0FER0U7RUFDRSxjQUFBO0VBQ0EsaUJBQUE7QUNBSjs7QURJRTtFQUNFLHlCQUFBO0VBQ0EsY0FBQTtBQ0RKOztBRElFO0VBQ0UsZ0JBQUE7QUNESjs7QURJRTtFQUNFLHNCQUFBO0VBQ0EsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQ0RKOztBRElFO0VBQ0Usa0JBQUE7RUFDQSxnQkFBQTtFQUNBLHFCQUFBO0FDREo7O0FESUU7RUFDRSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsT0FBQTtFQUNBLE1BQUE7RUFDQSxVQUFBO0FDREo7O0FER0U7RUFDRSxjQUFBO0FDQUo7O0FER0U7RUFDRSxrQkFBQTtBQ0FKIiwiZmlsZSI6InNyYy9hcHAvbWFzdGVyL2NhbGxjZW50ZXIvY2FsbGNlbnRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLnNob3dFcnJvck1zZ3tcbiAgICBjb2xvcjogcmVkO1xuICB9XG4gIFxuICAuY29udGFpbmVyLWZsdWlkIHtcbiAgICBtYXJnaW4tdG9wOiAxJTtcbiAgICBtYXJnaW4tYm90dG9tOiAxJTtcbiAgfVxuICBcbiAgXG4gIC5jYXJkLWhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJkM2U1MDtcbiAgICBjb2xvcjogI2ZiZTExNjtcbiAgfVxuICBcbiAgbGFiZWwge1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIH1cbiAgXG4gIC5idG4xIHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCBncmF5O1xuICAgIGNvbG9yOiBncmF5O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDRweCA4cHg7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuICBcbiAgLnVwbG9hZC1idG4td3JhcHBlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB9XG4gIFxuICAudXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xuICAgIGZvbnQtc2l6ZTogMTAwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgLnJvdyB7XG4gICAgcGFkZGluZzogMSUgMCU7XG4gIH1cbiAgXG4gIC50aGVhZGVye1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfSIsIi5zaG93RXJyb3JNc2cge1xuICBjb2xvcjogcmVkO1xufVxuXG4uY29udGFpbmVyLWZsdWlkIHtcbiAgbWFyZ2luLXRvcDogMSU7XG4gIG1hcmdpbi1ib3R0b206IDElO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG4uYnRuMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gIGNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogNHB4IDhweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1maWxlXSB7XG4gIGZvbnQtc2l6ZTogMTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBvcGFjaXR5OiAwO1xufVxuXG4ucm93IHtcbiAgcGFkZGluZzogMSUgMCU7XG59XG5cbi50aGVhZGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */"

/***/ }),

/***/ "./src/app/master/callcenter/callcenter.component.ts":
/*!***********************************************************!*\
  !*** ./src/app/master/callcenter/callcenter.component.ts ***!
  \***********************************************************/
/*! exports provided: CallcenterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CallcenterComponent", function() { return CallcenterComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _core_services_api_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _callcenter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./callcenter */ "./src/app/master/callcenter/callcenter.ts");







let CallcenterComponent = class CallcenterComponent {
    constructor(apiService, fb) {
        this.apiService = apiService;
        this.fb = fb;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.callcenter = new _callcenter__WEBPACK_IMPORTED_MODULE_6__["Callcenter"];
        this.callCenterForm = this.fb.group({
            description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(10), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(1000)])]
        });
    }
    ngOnInit() {
        this.getAllActive();
    }
    getAllActive() {
        this.apiService.getDATA('callcenter/getAllActive').subscribe((result) => {
            console.log(result);
            if (result.success == true) {
                if (result.object.masterCallCenterDtoList != null && result.object.masterCallCenterDtoList != undefined) {
                    this.callcenterdata = result.object.masterCallCenterDtoList;
                }
            }
            this.dtTrigger.next();
        });
    }
    saveCallcenter() {
        if (this.callCenterForm.valid) {
            let data = {
                "cCId": this.callcenter.cCId,
                "description": this.callcenter.description
            };
            this.apiService.Create('callcenter/save', data).subscribe((res) => {
                if (res.success == true) {
                    if (res.object != null && res.object != undefined) {
                        sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(res.message);
                    }
                }
                else {
                    console.log(res.message);
                }
            });
        }
        else {
            this.apiService.validateAllFormFields(this.callCenterForm);
        }
    }
    editCallcenter(cCId) {
        let editcallcenterData = {
            "cCId": cCId
        };
        this.apiService.Create('callcenter/getById', editcallcenterData).subscribe((res) => {
            if (res.success == true) {
                if (res.object != null && res.object != undefined) {
                    this.callcenter.cCId = res.object.cCId;
                    this.callcenter.description = res.object.description;
                }
            }
        });
    }
    clearcallcenterForm() {
        this.callcenter.description = "";
    }
};
CallcenterComponent.ctorParameters = () => [
    { type: _core_services_api_service__WEBPACK_IMPORTED_MODULE_4__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] }
];
CallcenterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-callcenter',
        template: __webpack_require__(/*! raw-loader!./callcenter.component.html */ "./node_modules/raw-loader/index.js!./src/app/master/callcenter/callcenter.component.html"),
        styles: [__webpack_require__(/*! ./callcenter.component.scss */ "./src/app/master/callcenter/callcenter.component.scss")]
    })
], CallcenterComponent);



/***/ }),

/***/ "./src/app/master/callcenter/callcenter.ts":
/*!*************************************************!*\
  !*** ./src/app/master/callcenter/callcenter.ts ***!
  \*************************************************/
/*! exports provided: Callcenter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Callcenter", function() { return Callcenter; });
class Callcenter {
}


/***/ }),

/***/ "./src/app/master/city/city.component.scss":
/*!*************************************************!*\
  !*** ./src/app/master/city/city.component.scss ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container-fluid {\n  margin-top: 1%;\n  margin-bottom: 1%;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.theader {\n  text-align: center;\n}\n\n.fa-pencil-square-o {\n  color: #000f92;\n  font-size: 21px;\n}\n\n.fa-trash {\n  color: #ff0000;\n  font-size: 21px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21hc3Rlci9jaXR5L2NpdHkuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21hc3Rlci9jaXR5L2NpdHkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0EsaUJBQUE7QUNDSjs7QURFQTtFQUNJLHlCQUFBO0VBQ0EsY0FBQTtBQ0NKOztBREVBO0VBQ0ksZ0JBQUE7QUNDSjs7QURFQTtFQUNJLHNCQUFBO0VBQ0EsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxnQkFBQTtFQUNBLHFCQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsT0FBQTtFQUNBLE1BQUE7RUFDQSxVQUFBO0FDQ0o7O0FERUE7RUFDSSxrQkFBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7RUFDQSxlQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9tYXN0ZXIvY2l0eS9jaXR5LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lci1mbHVpZCB7XG4gICAgbWFyZ2luLXRvcDogMSU7XG4gICAgbWFyZ2luLWJvdHRvbTogMSU7XG59XG5cbi5jYXJkLWhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJkM2U1MDtcbiAgICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5idG4xIHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCBncmF5O1xuICAgIGNvbG9yOiBncmF5O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDRweCA4cHg7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xuICAgIGZvbnQtc2l6ZTogMTAwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIG9wYWNpdHk6IDA7XG59XG5cbi50aGVhZGVye1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmZhLXBlbmNpbC1zcXVhcmUtb3tcbiAgICBjb2xvcjpyZ2IoMCwgMTUsIDE0Nik7IFxuICAgIGZvbnQtc2l6ZTogMjFweDtcbn1cblxuLmZhLXRyYXNoe1xuICAgIGNvbG9yOiNmZjAwMDA7XG4gICAgZm9udC1zaXplOjIxcHg7XG59XG4iLCIuY29udGFpbmVyLWZsdWlkIHtcbiAgbWFyZ2luLXRvcDogMSU7XG4gIG1hcmdpbi1ib3R0b206IDElO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG4uYnRuMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gIGNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogNHB4IDhweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1maWxlXSB7XG4gIGZvbnQtc2l6ZTogMTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBvcGFjaXR5OiAwO1xufVxuXG4udGhlYWRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmZhLXBlbmNpbC1zcXVhcmUtbyB7XG4gIGNvbG9yOiAjMDAwZjkyO1xuICBmb250LXNpemU6IDIxcHg7XG59XG5cbi5mYS10cmFzaCB7XG4gIGNvbG9yOiAjZmYwMDAwO1xuICBmb250LXNpemU6IDIxcHg7XG59Il19 */"

/***/ }),

/***/ "./src/app/master/city/city.component.ts":
/*!***********************************************!*\
  !*** ./src/app/master/city/city.component.ts ***!
  \***********************************************/
/*! exports provided: CityComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CityComponent", function() { return CityComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _city__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./city */ "./src/app/master/city/city.ts");





let CityComponent = class CityComponent {
    constructor(apiService) {
        this.apiService = apiService;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.city = new _city__WEBPACK_IMPORTED_MODULE_4__["City"]();
    }
    ngOnInit() {
        this.getAllCity();
    }
    getAllCity() {
        this.apiService.getDATA('city/getAll').subscribe((result) => {
            console.log(result);
            if (result.success == true) {
                if (result.object.cityDtoList != null && result.object.cityDtoList != undefined) {
                    this.citydata = result.object.cityDtoList;
                }
            }
            this.dtTrigger.next();
        });
    }
};
CityComponent.ctorParameters = () => [
    { type: _core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] }
];
CityComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-city',
        template: __webpack_require__(/*! raw-loader!./city.component.html */ "./node_modules/raw-loader/index.js!./src/app/master/city/city.component.html"),
        styles: [__webpack_require__(/*! ./city.component.scss */ "./src/app/master/city/city.component.scss")]
    })
], CityComponent);



/***/ }),

/***/ "./src/app/master/city/city.ts":
/*!*************************************!*\
  !*** ./src/app/master/city/city.ts ***!
  \*************************************/
/*! exports provided: City */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "City", function() { return City; });
class City {
}


/***/ }),

/***/ "./src/app/master/comment-delete/comment-delete.component.scss":
/*!*********************************************************************!*\
  !*** ./src/app/master/comment-delete/comment-delete.component.scss ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container-fluid {\n  margin-top: 1%;\n  margin-bottom: 1%;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.theader {\n  text-align: center;\n}\n\n.fa-pencil-square-o {\n  color: #000f92;\n  font-size: 21px;\n}\n\n.fa-trash {\n  color: #ff0000;\n  font-size: 21px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21hc3Rlci9jb21tZW50LWRlbGV0ZS9jb21tZW50LWRlbGV0ZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbWFzdGVyL2NvbW1lbnQtZGVsZXRlL2NvbW1lbnQtZGVsZXRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtFQUNBLGlCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtFQUNBLGNBQUE7QUNDSjs7QURFQTtFQUNJLGdCQUFBO0FDQ0o7O0FERUE7RUFDSSxzQkFBQTtFQUNBLFdBQUE7RUFDQSx1QkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUNDSjs7QURFQTtFQUNJLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxxQkFBQTtBQ0NKOztBREVBO0VBQ0ksZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxNQUFBO0VBQ0EsVUFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7RUFDQSxlQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0VBQ0EsZUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbWFzdGVyL2NvbW1lbnQtZGVsZXRlL2NvbW1lbnQtZGVsZXRlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lci1mbHVpZCB7XG4gICAgbWFyZ2luLXRvcDogMSU7XG4gICAgbWFyZ2luLWJvdHRvbTogMSU7XG59XG5cbi5jYXJkLWhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJkM2U1MDtcbiAgICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5idG4xIHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCBncmF5O1xuICAgIGNvbG9yOiBncmF5O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDRweCA4cHg7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xuICAgIGZvbnQtc2l6ZTogMTAwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIG9wYWNpdHk6IDA7XG59XG5cbi50aGVhZGVye1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmZhLXBlbmNpbC1zcXVhcmUtb3tcbiAgICBjb2xvcjpyZ2IoMCwgMTUsIDE0Nik7IFxuICAgIGZvbnQtc2l6ZTogMjFweDtcbn1cblxuLmZhLXRyYXNoe1xuICAgIGNvbG9yOiNmZjAwMDA7XG4gICAgZm9udC1zaXplOjIxcHg7XG59XG4iLCIuY29udGFpbmVyLWZsdWlkIHtcbiAgbWFyZ2luLXRvcDogMSU7XG4gIG1hcmdpbi1ib3R0b206IDElO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG4uYnRuMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gIGNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogNHB4IDhweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1maWxlXSB7XG4gIGZvbnQtc2l6ZTogMTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBvcGFjaXR5OiAwO1xufVxuXG4udGhlYWRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmZhLXBlbmNpbC1zcXVhcmUtbyB7XG4gIGNvbG9yOiAjMDAwZjkyO1xuICBmb250LXNpemU6IDIxcHg7XG59XG5cbi5mYS10cmFzaCB7XG4gIGNvbG9yOiAjZmYwMDAwO1xuICBmb250LXNpemU6IDIxcHg7XG59Il19 */"

/***/ }),

/***/ "./src/app/master/comment-delete/comment-delete.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/master/comment-delete/comment-delete.component.ts ***!
  \*******************************************************************/
/*! exports provided: CommentDeleteComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommentDeleteComponent", function() { return CommentDeleteComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var ngx_image_compress__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-image-compress */ "./node_modules/ngx-image-compress/fesm2015/ngx-image-compress.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _comment__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./comment */ "./src/app/master/comment-delete/comment.ts");










let CommentDeleteComponent = class CommentDeleteComponent {
    constructor(apiService, fb, imageCompress, loaderService, datePipe) {
        this.apiService = apiService;
        this.fb = fb;
        this.imageCompress = imageCompress;
        this.loaderService = loaderService;
        this.datePipe = datePipe;
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_5__["Subject"]();
        this.comment = new _comment__WEBPACK_IMPORTED_MODULE_9__["Comment"]();
        this.commentForm = this.fb.group({
            comment: ['']
        });
    }
    ngOnInit() {
    }
    search() {
        let comm = {
            "comment": this.comment.comment
        };
        this.loaderService.display(true);
        this.apiService.Create("likeComment/findByComment", comm).subscribe(data => {
            this.loaderService.display(false);
            if (data.success == true) {
                if (data.object != null && data.object != undefined) {
                    this.searchResult = data.object;
                }
                this.dtTrigger.next();
            }
            else {
                sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(data.message);
            }
        });
    }
    deleteComment(commid) {
        let comid = {
            "likecommentId": commid
        };
        this.loaderService.display(true);
        this.apiService.Create("likeComment/deletByLikeCommentId", comid).subscribe(data => {
            this.loaderService.display(false);
            if (data.success == true) {
                if (data.object != null && data.object != undefined) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(data.message);
                }
            }
        });
    }
    clearComments() {
        this.comment.comment = null;
    }
};
CommentDeleteComponent.ctorParameters = () => [
    { type: _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: ngx_image_compress__WEBPACK_IMPORTED_MODULE_4__["NgxImageCompressService"] },
    { type: src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_7__["LoaderService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_8__["DatePipe"] }
];
CommentDeleteComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-comment-delete',
        template: __webpack_require__(/*! raw-loader!./comment-delete.component.html */ "./node_modules/raw-loader/index.js!./src/app/master/comment-delete/comment-delete.component.html"),
        styles: [__webpack_require__(/*! ./comment-delete.component.scss */ "./src/app/master/comment-delete/comment-delete.component.scss")]
    })
], CommentDeleteComponent);



/***/ }),

/***/ "./src/app/master/comment-delete/comment.ts":
/*!**************************************************!*\
  !*** ./src/app/master/comment-delete/comment.ts ***!
  \**************************************************/
/*! exports provided: Comment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Comment", function() { return Comment; });
class Comment {
}


/***/ }),

/***/ "./src/app/master/deletecomment/deletecomment.component.scss":
/*!*******************************************************************!*\
  !*** ./src/app/master/deletecomment/deletecomment.component.scss ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".showErrorMsg {\n  color: red;\n}\n\n.container-fluid {\n  margin-top: 1%;\n  margin-bottom: 1%;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.row {\n  padding: 1% 0%;\n}\n\n.theader {\n  text-align: center;\n}\n\n.fa-pencil-square-o {\n  color: #000f92;\n  font-size: 21px;\n}\n\n.fa-trash {\n  color: #ff0000;\n  font-size: 21px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21hc3Rlci9kZWxldGVjb21tZW50L2RlbGV0ZWNvbW1lbnQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21hc3Rlci9kZWxldGVjb21tZW50L2RlbGV0ZWNvbW1lbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxVQUFBO0FDQUo7O0FER0U7RUFDRSxjQUFBO0VBQ0EsaUJBQUE7QUNBSjs7QURJRTtFQUNFLHlCQUFBO0VBQ0EsY0FBQTtBQ0RKOztBRElFO0VBQ0UsZ0JBQUE7QUNESjs7QURJRTtFQUNFLHNCQUFBO0VBQ0EsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQ0RKOztBRElFO0VBQ0Usa0JBQUE7RUFDQSxnQkFBQTtFQUNBLHFCQUFBO0FDREo7O0FESUU7RUFDRSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsT0FBQTtFQUNBLE1BQUE7RUFDQSxVQUFBO0FDREo7O0FER0U7RUFDRSxjQUFBO0FDQUo7O0FER0U7RUFDRSxrQkFBQTtBQ0FKOztBREVFO0VBQ0UsY0FBQTtFQUNBLGVBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7RUFDQSxlQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9tYXN0ZXIvZGVsZXRlY29tbWVudC9kZWxldGVjb21tZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uc2hvd0Vycm9yTXNne1xuICAgIGNvbG9yOiByZWQ7XG4gIH1cbiAgXG4gIC5jb250YWluZXItZmx1aWQge1xuICAgIG1hcmdpbi10b3A6IDElO1xuICAgIG1hcmdpbi1ib3R0b206IDElO1xuICB9XG4gIFxuICBcbiAgLmNhcmQtaGVhZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICAgIGNvbG9yOiAjZmJlMTE2O1xuICB9XG4gIFxuICBsYWJlbCB7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgfVxuICBcbiAgLmJ0bjEge1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gICAgY29sb3I6IGdyYXk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgcGFkZGluZzogNHB4IDhweDtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG4gIFxuICAudXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIH1cbiAgXG4gIC51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1maWxlXSB7XG4gICAgZm9udC1zaXplOiAxMDBweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDA7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuICAucm93IHtcbiAgICBwYWRkaW5nOiAxJSAwJTtcbiAgfVxuICBcbiAgLnRoZWFkZXJ7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG4gIC5mYS1wZW5jaWwtc3F1YXJlLW97XG4gICAgY29sb3I6cmdiKDAsIDE1LCAxNDYpOyBcbiAgICBmb250LXNpemU6IDIxcHg7XG59XG5cbi5mYS10cmFzaHtcbiAgICBjb2xvcjojZmYwMDAwO1xuICAgIGZvbnQtc2l6ZToyMXB4O1xufSIsIi5zaG93RXJyb3JNc2cge1xuICBjb2xvcjogcmVkO1xufVxuXG4uY29udGFpbmVyLWZsdWlkIHtcbiAgbWFyZ2luLXRvcDogMSU7XG4gIG1hcmdpbi1ib3R0b206IDElO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG4uYnRuMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gIGNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogNHB4IDhweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1maWxlXSB7XG4gIGZvbnQtc2l6ZTogMTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBvcGFjaXR5OiAwO1xufVxuXG4ucm93IHtcbiAgcGFkZGluZzogMSUgMCU7XG59XG5cbi50aGVhZGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZmEtcGVuY2lsLXNxdWFyZS1vIHtcbiAgY29sb3I6ICMwMDBmOTI7XG4gIGZvbnQtc2l6ZTogMjFweDtcbn1cblxuLmZhLXRyYXNoIHtcbiAgY29sb3I6ICNmZjAwMDA7XG4gIGZvbnQtc2l6ZTogMjFweDtcbn0iXX0= */"

/***/ }),

/***/ "./src/app/master/deletecomment/deletecomment.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/master/deletecomment/deletecomment.component.ts ***!
  \*****************************************************************/
/*! exports provided: DeletecommentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeletecommentComponent", function() { return DeletecommentComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _deletecommentmodel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./deletecommentmodel */ "./src/app/master/deletecomment/deletecommentmodel.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");








let DeletecommentComponent = class DeletecommentComponent {
    constructor(fb, apiService, datePipe) {
        this.fb = fb;
        this.apiService = apiService;
        this.datePipe = datePipe;
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.Model = new _deletecommentmodel__WEBPACK_IMPORTED_MODULE_6__["DeleteCommentModel"]();
        this.userModal = new _deletecommentmodel__WEBPACK_IMPORTED_MODULE_6__["UserModel"]();
        this.isDtInitialized = false;
        this.DeleteCommentForm = this.fb.group({
            userId: [''],
            contenttype: [''],
            section: [''],
            createdDate: [''],
        });
    }
    ngOnInit() {
        this.Model = new _deletecommentmodel__WEBPACK_IMPORTED_MODULE_6__["DeleteCommentModel"]();
        this.userModal = new _deletecommentmodel__WEBPACK_IMPORTED_MODULE_6__["UserModel"]();
        this.searchResultData = [];
        if (this.isDtInitialized) {
            this.dtElement.dtInstance.then((dtInstance) => {
                dtInstance.destroy();
                this.dtTrigger.next();
            });
        }
        else {
            this.isDtInitialized = true;
            this.dtTrigger.next();
        }
        this.userSetting = {
            text: 'Select User',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search User',
            badgeShowLimit: 5,
            groupBy: "category"
        };
        this.getContentType();
    }
    GetUserDataByUserName(evt) {
        this.searchResultData = [];
        let userName = evt.target.value;
        if (userName.length >= 2) {
            let name = {
                "userName": userName
            };
            this.apiService.Create("user/getUserByUserName", name).subscribe(data => {
                if (data.success == true) {
                    if (data != null && data != undefined) {
                        if (data.object != undefined) {
                            let userDtoList = data.object;
                            let userList = [];
                            userDtoList.forEach(usrname => {
                                if (usrname.userId > 0) {
                                    userList.push({ "id": usrname.userId, "itemName": usrname.userName, "userImage": usrname.userImage });
                                }
                            });
                            this.userList = userList;
                        }
                    }
                }
            }, error => {
                console.log(error);
            });
        }
    }
    onUserSelect(item) {
        this.searchResultData = [];
        console.log(item);
        let data;
        this.userModal.userId = item.id;
        data = {
            "userId": item.id
        };
        this.apiService.Create("user/getById", data).subscribe((res) => {
            if (res.success == true) {
                this.userModal = res.object;
                this.userModal.userId = res.object.userId;
            }
        });
    }
    getContentType() {
        this.searchResultData = [];
        this.apiService.getDATA("likeComment/getAllContentType").subscribe((data) => {
            if (data.success == true) {
                this.contentTypes = data.object;
            }
        });
    }
    getSectionByContentType() {
        this.searchResultData = [];
        debugger;
        this.sections = [];
        let contentType = this.Model.contentType;
        let typedata = {
            "contentType": contentType
        };
        this.apiService.Create("likeComment/getTypeByContentType", typedata).subscribe((data) => {
            if (data.success == true) {
                this.sections = data.object;
            }
        });
    }
    OnchangeDate() {
        this.searchResultData = [];
    }
    resetForm() {
        this.ngOnInit();
    }
    SearchResult() {
        this.searchResultData = [];
        let date = "";
        if (this.Model.createdDate != "" && this.Model.createdDate != undefined) {
            var date1 = new Date(this.Model.createdDate);
            date = this.datePipe.transform(date1, "yyyy-MM-dd");
        }
        if (this.userModal.userId != undefined || this.userModal.userId != null) {
            this.Model.userId = this.userModal.userId;
        }
        else {
            this.Model.userId = 0;
        }
        let data = {
            "userId": this.Model.userId,
            "contentType": this.Model.contentType,
            "type": this.Model.type,
            "createdDate": date
        };
        console.log(JSON.stringify(data));
        this.apiService.Create("likeComment/searchComment", data).subscribe((data) => {
            if (data.success == true) {
                if (data.object != null && data.object != undefined) {
                    this.searchResultData = data.object;
                    if (this.isDtInitialized) {
                        this.dtElement.dtInstance.then((dtInstance) => {
                            dtInstance.destroy();
                            this.dtTrigger.next();
                        });
                    }
                    else {
                        this.isDtInitialized = true;
                        this.dtTrigger.next();
                    }
                }
                // this.dtTrigger.next();
            }
            else {
                sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(data.message);
            }
        });
    }
    deleteComment(commid) {
        let comid = {
            "likecommentId": commid
        };
        this.apiService.Create("likeComment/deletByLikeCommentId", comid).subscribe(data => {
            if (data.success == true) {
                if (data.object != null && data.object != undefined) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(data.message);
                    this.SearchResult();
                }
            }
        });
    }
};
DeletecommentComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DatePipe"] }
];
DeletecommentComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-deletecomment',
        template: __webpack_require__(/*! raw-loader!./deletecomment.component.html */ "./node_modules/raw-loader/index.js!./src/app/master/deletecomment/deletecomment.component.html"),
        styles: [__webpack_require__(/*! ./deletecomment.component.scss */ "./src/app/master/deletecomment/deletecomment.component.scss")]
    })
], DeletecommentComponent);



/***/ }),

/***/ "./src/app/master/deletecomment/deletecommentmodel.ts":
/*!************************************************************!*\
  !*** ./src/app/master/deletecomment/deletecommentmodel.ts ***!
  \************************************************************/
/*! exports provided: DeleteCommentModel, UserModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeleteCommentModel", function() { return DeleteCommentModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserModel", function() { return UserModel; });
class DeleteCommentModel {
    constructor() {
        this.userId = 0;
        this.contentType = "";
        this.type = "";
    }
}
class UserModel {
}


/***/ }),

/***/ "./src/app/master/header-message/header-message.component.scss":
/*!*********************************************************************!*\
  !*** ./src/app/master/header-message/header-message.component.scss ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.theader {\n  text-align: center;\n}\n\n.fa-pencil-square-o {\n  color: #000f92;\n  font-size: 20px;\n}\n\n.fa-trash {\n  color: #ff0000;\n  font-size: 21px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21hc3Rlci9oZWFkZXItbWVzc2FnZS9oZWFkZXItbWVzc2FnZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbWFzdGVyL2hlYWRlci1tZXNzYWdlL2hlYWRlci1tZXNzYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0kseUJBQUE7RUFDQSxjQUFBO0FDQUo7O0FER0E7RUFDSSxnQkFBQTtBQ0FKOztBREdBO0VBQ0ksZ0JBQUE7QUNBSjs7QURHQTtFQUNJLHNCQUFBO0VBQ0EsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQ0FKOztBREdBO0VBQ0ksa0JBQUE7RUFDQSxnQkFBQTtFQUNBLHFCQUFBO0FDQUo7O0FER0E7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsT0FBQTtFQUNBLE1BQUE7RUFDQSxVQUFBO0FDQUo7O0FER0E7RUFDSSxrQkFBQTtBQ0FKOztBREdBO0VBQ0ksY0FBQTtFQUNDLGVBQUE7QUNBTDs7QURFQTtFQUNJLGNBQUE7RUFBYyxlQUFBO0FDRWxCIiwiZmlsZSI6InNyYy9hcHAvbWFzdGVyL2hlYWRlci1tZXNzYWdlL2hlYWRlci1tZXNzYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uY2FyZC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gICAgY29sb3I6ICNmYmUxMTY7XG59XG5cbmxhYmVsIHtcbiAgICBmb250LXdlaWdodDogNzAwO1xufVxuXG5sYWJlbCB7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLmJ0bjEge1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gICAgY29sb3I6IGdyYXk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgcGFkZGluZzogNHB4IDhweDtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1maWxlXSB7XG4gICAgZm9udC1zaXplOiAxMDBweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDA7XG4gICAgb3BhY2l0eTogMDtcbn1cblxuLnRoZWFkZXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmZhLXBlbmNpbC1zcXVhcmUtb3tcbiAgICBjb2xvcjpyZ2IoMCwgMTUsIDE0Nik7XG4gICAgIGZvbnQtc2l6ZTogMjBweDtcbn1cbi5mYS10cmFzaHtcbiAgICBjb2xvcjojZmYwMDAwO2ZvbnQtc2l6ZTogMjFweDtcbn1cbiIsIi5jYXJkLWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gIGNvbG9yOiAjZmJlMTE2O1xufVxuXG5sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbmxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLmJ0bjEge1xuICBib3JkZXI6IDJweCBzb2xpZCBncmF5O1xuICBjb2xvcjogZ3JheTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDRweCA4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xuICBmb250LXNpemU6IDEwMHB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgb3BhY2l0eTogMDtcbn1cblxuLnRoZWFkZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5mYS1wZW5jaWwtc3F1YXJlLW8ge1xuICBjb2xvcjogIzAwMGY5MjtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uZmEtdHJhc2gge1xuICBjb2xvcjogI2ZmMDAwMDtcbiAgZm9udC1zaXplOiAyMXB4O1xufSJdfQ== */"

/***/ }),

/***/ "./src/app/master/header-message/header-message.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/master/header-message/header-message.component.ts ***!
  \*******************************************************************/
/*! exports provided: HeaderMessageComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderMessageComponent", function() { return HeaderMessageComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _header_message__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./header-message */ "./src/app/master/header-message/header-message.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _core_services_loader_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");








let HeaderMessageComponent = class HeaderMessageComponent {
    constructor(apiService, fb, loaderService) {
        this.apiService = apiService;
        this.fb = fb;
        this.loaderService = loaderService;
        this.headerMessage = new _header_message__WEBPACK_IMPORTED_MODULE_5__["HeaderMessage"]();
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.headerMessageForm = this.fb.group({
            kannadaMsg: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            engMsg: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]
        });
    }
    ngOnInit() { }
    onSubmit() {
        let messageData = {
            "marqueeId": this.headerMessage.marqueeId,
            "kannadaMsg": this.headerMessage.kannadaMsg,
            "engMsg": this.headerMessage.engMsg
        };
        this.loaderService.display(true);
        this.apiService.Create("headerMarquee/save", messageData).subscribe(data => {
            this.loaderService.display(false);
            if (data.success == true) {
                if (data.object != null && data.object != undefined) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(data.message);
                    this.clearMessage();
                }
            }
            else {
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(data.message);
            }
        });
    }
    clearMessage() {
        this.headerMessageForm.reset();
    }
};
HeaderMessageComponent.ctorParameters = () => [
    { type: src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"] },
    { type: _core_services_loader_service__WEBPACK_IMPORTED_MODULE_7__["LoaderService"] }
];
HeaderMessageComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-header-message',
        template: __webpack_require__(/*! raw-loader!./header-message.component.html */ "./node_modules/raw-loader/index.js!./src/app/master/header-message/header-message.component.html"),
        styles: [__webpack_require__(/*! ./header-message.component.scss */ "./src/app/master/header-message/header-message.component.scss")]
    })
], HeaderMessageComponent);



/***/ }),

/***/ "./src/app/master/header-message/header-message.ts":
/*!*********************************************************!*\
  !*** ./src/app/master/header-message/header-message.ts ***!
  \*********************************************************/
/*! exports provided: HeaderMessage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderMessage", function() { return HeaderMessage; });
class HeaderMessage {
    constructor() {
        this["engMsg"] = "No Message";
    }
}


/***/ }),

/***/ "./src/app/master/helpdesk/helpdesk.component.scss":
/*!*********************************************************!*\
  !*** ./src/app/master/helpdesk/helpdesk.component.scss ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.theader {\n  text-align: center;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21hc3Rlci9oZWxwZGVzay9oZWxwZGVzay5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbWFzdGVyL2hlbHBkZXNrL2hlbHBkZXNrLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUJBQUE7RUFDQSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtBQ0NKOztBREVBO0VBQ0ksc0JBQUE7RUFDQSxXQUFBO0VBQ0EsdUJBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0FDQ0o7O0FERUE7RUFDSSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EscUJBQUE7QUNDSjs7QURFQTtFQUNJLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxPQUFBO0VBQ0EsTUFBQTtFQUNBLFVBQUE7QUNDSjs7QURFQTtFQUNJLGtCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9tYXN0ZXIvaGVscGRlc2svaGVscGRlc2suY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gICAgY29sb3I6ICNmYmUxMTY7XG59XG5cbmxhYmVsIHtcbiAgICBmb250LXdlaWdodDogNzAwO1xufVxuXG4uYnRuMSB7XG4gICAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcbiAgICBjb2xvcjogZ3JheTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiA0cHggOHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPWZpbGVdIHtcbiAgICBmb250LXNpemU6IDEwMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICBvcGFjaXR5OiAwO1xufVxuXG4udGhlYWRlcntcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59IiwiLmNhcmQtaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJkM2U1MDtcbiAgY29sb3I6ICNmYmUxMTY7XG59XG5cbmxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLmJ0bjEge1xuICBib3JkZXI6IDJweCBzb2xpZCBncmF5O1xuICBjb2xvcjogZ3JheTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDRweCA4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xuICBmb250LXNpemU6IDEwMHB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgb3BhY2l0eTogMDtcbn1cblxuLnRoZWFkZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il19 */"

/***/ }),

/***/ "./src/app/master/helpdesk/helpdesk.component.ts":
/*!*******************************************************!*\
  !*** ./src/app/master/helpdesk/helpdesk.component.ts ***!
  \*******************************************************/
/*! exports provided: HelpdeskComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HelpdeskComponent", function() { return HelpdeskComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");




let HelpdeskComponent = class HelpdeskComponent {
    constructor(apiService) {
        this.apiService = apiService;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.querylist = [];
        this.queryById = [];
        this.listq = [];
    }
    ngOnInit() {
        this.getAllQueries();
        this.getCount();
    }
    getAllQueries() {
        this.apiService.getDATA("helpDesk/getAll").subscribe((response) => {
            if (response.success == true) {
                if (response.object != null && response.object != undefined) {
                    this.querylist = response.object;
                    this.queryCount;
                    this.dtTrigger.next();
                }
            }
        });
    }
    deleteQueryById(id) {
        let qid = {
            "helpId": id
        };
        this.apiService.Create("helpDesk/deleteByHelpId", qid).subscribe(data => {
            if (data.success == true) {
                this.getAllQueries();
            }
        });
    }
    getQueryById(idd) {
        let id = {
            "helpId": idd
        };
        this.apiService.Create("helpDesk/getByHelpId", id).subscribe((data) => {
            if (data.success == true) {
                if (data.object != null || data.object != undefined) {
                    this.queryById = data.object;
                }
            }
        });
    }
    getCount() {
        let count = 0;
        this.apiService.getDATA("helpDesk/getAll").subscribe((response) => {
            if (response.success == true) {
                if (response.object != null && response.object != undefined) {
                    this.listq = response.object.helpDeskDtoList;
                    this.listq.forEach(response => {
                        if (response.isActive == 1) {
                            count++;
                        }
                    });
                    this.queryCount = count;
                }
            }
        });
        this.queryCount = count;
    }
};
HelpdeskComponent.ctorParameters = () => [
    { type: src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] }
];
HelpdeskComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-helpdesk',
        template: __webpack_require__(/*! raw-loader!./helpdesk.component.html */ "./node_modules/raw-loader/index.js!./src/app/master/helpdesk/helpdesk.component.html"),
        styles: [__webpack_require__(/*! ./helpdesk.component.scss */ "./src/app/master/helpdesk/helpdesk.component.scss")]
    })
], HelpdeskComponent);



/***/ }),

/***/ "./src/app/master/master-gallery/master-gallery.component.scss":
/*!*********************************************************************!*\
  !*** ./src/app/master/master-gallery/master-gallery.component.scss ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container-fluid {\n  margin-top: 1%;\n  margin-bottom: 1%;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.theader {\n  text-align: center;\n}\n\n.fa-pencil-square-o {\n  color: #000f92;\n  font-size: 21px;\n}\n\n.fa-trash {\n  color: #ff0000;\n  font-size: 21px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21hc3Rlci9tYXN0ZXItZ2FsbGVyeS9tYXN0ZXItZ2FsbGVyeS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbWFzdGVyL21hc3Rlci1nYWxsZXJ5L21hc3Rlci1nYWxsZXJ5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtFQUNBLGlCQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtFQUNBLGNBQUE7QUNDSjs7QURFQTtFQUNJLGdCQUFBO0FDQ0o7O0FERUE7RUFDSSxzQkFBQTtFQUNBLFdBQUE7RUFDQSx1QkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUNDSjs7QURFQTtFQUNJLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxxQkFBQTtBQ0NKOztBREVBO0VBQ0ksZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxNQUFBO0VBQ0EsVUFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7RUFDQSxlQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0VBQ0EsZUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbWFzdGVyL21hc3Rlci1nYWxsZXJ5L21hc3Rlci1nYWxsZXJ5LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lci1mbHVpZCB7XG4gICAgbWFyZ2luLXRvcDogMSU7XG4gICAgbWFyZ2luLWJvdHRvbTogMSU7XG59XG5cbi5jYXJkLWhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJkM2U1MDtcbiAgICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5idG4xIHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCBncmF5O1xuICAgIGNvbG9yOiBncmF5O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDRweCA4cHg7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xuICAgIGZvbnQtc2l6ZTogMTAwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIG9wYWNpdHk6IDA7XG59XG5cbi50aGVhZGVye1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmZhLXBlbmNpbC1zcXVhcmUtb3tcbiAgICBjb2xvcjpyZ2IoMCwgMTUsIDE0Nik7IFxuICAgIGZvbnQtc2l6ZTogMjFweDtcbn1cblxuLmZhLXRyYXNoe1xuICAgIGNvbG9yOiNmZjAwMDA7XG4gICAgZm9udC1zaXplOjIxcHg7XG59XG4iLCIuY29udGFpbmVyLWZsdWlkIHtcbiAgbWFyZ2luLXRvcDogMSU7XG4gIG1hcmdpbi1ib3R0b206IDElO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG4uYnRuMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gIGNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogNHB4IDhweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1maWxlXSB7XG4gIGZvbnQtc2l6ZTogMTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBvcGFjaXR5OiAwO1xufVxuXG4udGhlYWRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmZhLXBlbmNpbC1zcXVhcmUtbyB7XG4gIGNvbG9yOiAjMDAwZjkyO1xuICBmb250LXNpemU6IDIxcHg7XG59XG5cbi5mYS10cmFzaCB7XG4gIGNvbG9yOiAjZmYwMDAwO1xuICBmb250LXNpemU6IDIxcHg7XG59Il19 */"

/***/ }),

/***/ "./src/app/master/master-gallery/master-gallery.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/master/master-gallery/master-gallery.component.ts ***!
  \*******************************************************************/
/*! exports provided: MasterGalleryComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MasterGalleryComponent", function() { return MasterGalleryComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var ngx_image_compress__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-image-compress */ "./node_modules/ngx-image-compress/fesm2015/ngx-image-compress.js");
/* harmony import */ var _master_gallery_mastergallery__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../master-gallery/mastergallery */ "./src/app/master/master-gallery/mastergallery.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");










let MasterGalleryComponent = class MasterGalleryComponent {
    constructor(apiService, fb, imageCompress, loaderService, datePipe) {
        this.apiService = apiService;
        this.fb = fb;
        this.imageCompress = imageCompress;
        this.loaderService = loaderService;
        this.datePipe = datePipe;
        this.mastergallery = new _master_gallery_mastergallery__WEBPACK_IMPORTED_MODULE_8__["MasterGallery"]();
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.masterAdsList = [];
        this.croppedImage = '';
        this.imageChangedEvent = '';
        this.isDtInitialized = false;
        this.topPosToStartShowing = 100;
        this.masterGalleryForm = this.fb.group({
            description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            imagePath: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            // newsImagefakePath:['',Validators.required],
            // startDate: ['', Validators.required],
            // endDate: ['', Validators.required],
            sequenceNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required]
        });
    }
    ngOnInit() {
        this.getAllAdsList();
    }
    clearForm() {
        this.masterGalleryForm.reset();
        this.imageChangedEvent = "";
        this.croppedImage = null;
        this.mastergallery.id = null;
        this.sequencenumber = null;
    }
    //Image Upload and Converting it into base64
    addImageUpload(e) {
        this.loaderService.display(true);
        this.imageChangedEvent = e;
        $('#file-upload').removeAttr('src');
        this.mastergallery.filename = "";
        this.mastergallery.filetype = "";
        this.mastergallery.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG" || extention == "png" || extention == "PNG") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB 
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.mastergallery.filename = file.name;
                    this.mastergallery.filetype = file.type;
                    // const csv: string = reader.result as string;
                    // this.adminPage.profileImage = csv.replace("data:image/jpeg;base64,", "");
                    this.mastergallery.imagePath = reader.result;
                };
                // this.masterGalleryForm.controls.imagePath.setValue(this.addcreation.imagePath);
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG" && extention != "PNG" && extention != "png") {
                this.mastergallery.filename = "";
                this.mastergallery.filetype = "";
                this.mastergallery.imagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_3___default.a.fire("Please Upload the valid file");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.mastergallery.filename = "";
                this.mastergallery.filetype = "";
                this.mastergallery.imagePath = "";
                // this.adminPage.profileImagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_3___default.a.fire("Document size should be less than 10MB");
                return;
            }
        }
    }
    imageCropped(event) {
        var orientation = 1;
        var rotation = 1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.masterGalleryForm.controls.imagePath.setValue(this.croppedImage);
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.masterGalleryForm.controls.imagePath.setValue(this.croppedImage);
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.masterGalleryForm.controls.imagePath.setValue(this.croppedImage);
            });
        }
    }
    imageLoaded() {
        // show cropper
    }
    cropperReady() {
        // cropper ready
    }
    loadImageFailed() {
        // show message
    }
    editMasterAds(idd) {
        window.scroll({
            top: 0,
            left: 0,
            behavior: 'smooth'
        });
        let id = {
            "galaryId": idd
        };
        this.apiService.Create("masterGalary/getById/", id).subscribe(data => {
            if (data.object != null && data.object != undefined) {
                this.mastergallery.id = data.object.galaryId;
                this.mastergallery.description = data.object.title;
                this.mastergallery.imagePath = data.object.galaryImagePath;
                this.masterGalleryForm.controls.imagePath.setValue(this.mastergallery.imagePath);
                this.mastergallery.sequenceNumber = data.object.sequenceNumber;
                this.croppedImage = data.object.galaryImagePath;
                // this.croppedImage = "";
                // this.apiService.getBase64ImageFromURL(this.mastergallery.imagePath).subscribe(base64data => {
                //   this.croppedImage = 'data:image/jpeg;base64,' + base64data;
                // });
            }
        });
    }
    submitAdds() {
        let masterGalaryList;
        if (this.masterGalleryForm.valid) {
            masterGalaryList = {
                "galaryId": this.mastergallery.id,
                "title": this.mastergallery.description,
                "galaryImagePath": this.croppedImage,
                "sequenceNumber": this.mastergallery.sequenceNumber
            };
            this.loaderService.display(true);
            this.apiService.Create("masterGalary/save", masterGalaryList).subscribe(data => {
                this.loaderService.display(false);
                if (data.success == true) {
                    if (data.object != "" && data.object != undefined) {
                        this.clearForm();
                        this.getAllAdsList();
                        sweetalert2__WEBPACK_IMPORTED_MODULE_3___default.a.fire(data.message);
                    }
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_3___default.a.fire(data.message);
                }
            }, error => {
                console.log(error);
                this.loaderService.display(false);
            });
        }
        else {
            this.apiService.validateAllFormFields(this.masterGalleryForm);
            sweetalert2__WEBPACK_IMPORTED_MODULE_3___default.a.fire("Please enter all the fields");
        }
        //this.loaderService.display(false);
    }
    //Delete image By it's Id
    deleteMasterImage(id) {
        let idd = {
            "galaryId": id
        };
        this.apiService.Create("masterGalary/deleteById/", idd).subscribe(data => {
            sweetalert2__WEBPACK_IMPORTED_MODULE_3___default.a.fire(data.message);
            this.ngOnInit();
        });
    }
    getAllAdsList() {
        this.masterAdsList = [];
        this.apiService.getDATA("masterGalary/getAll").subscribe(data => {
            if (data != undefined) {
                if (data.success == true) {
                    if (data.object != undefined) {
                        if (data.object != undefined && data.object != null) {
                            this.masterAdsList = data.object;
                            if (this.isDtInitialized) {
                                this.dtElement.dtInstance.then((dtInstance) => {
                                    dtInstance.destroy();
                                    this.dtTrigger.next();
                                });
                            }
                            else {
                                this.isDtInitialized = true;
                                this.dtTrigger.next();
                            }
                        }
                    }
                }
            }
        });
    }
    checkScroll() {
        const scrollPosition = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
        if (scrollPosition >= this.topPosToStartShowing) {
            this.isShow = true;
        }
        else {
            this.isShow = false;
        }
    }
};
MasterGalleryComponent.ctorParameters = () => [
    { type: src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_2__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormBuilder"] },
    { type: ngx_image_compress__WEBPACK_IMPORTED_MODULE_7__["NgxImageCompressService"] },
    { type: src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_5__["LoaderService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_9__["DatePipe"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('window:scroll')
], MasterGalleryComponent.prototype, "checkScroll", null);
MasterGalleryComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-master-gallery',
        template: __webpack_require__(/*! raw-loader!./master-gallery.component.html */ "./node_modules/raw-loader/index.js!./src/app/master/master-gallery/master-gallery.component.html"),
        styles: [__webpack_require__(/*! ./master-gallery.component.scss */ "./src/app/master/master-gallery/master-gallery.component.scss")]
    })
], MasterGalleryComponent);



/***/ }),

/***/ "./src/app/master/master-gallery/mastergallery.ts":
/*!********************************************************!*\
  !*** ./src/app/master/master-gallery/mastergallery.ts ***!
  \********************************************************/
/*! exports provided: MasterGallery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MasterGallery", function() { return MasterGallery; });
class MasterGallery {
}


/***/ }),

/***/ "./src/app/master/masterbanner/bannerModel.ts":
/*!****************************************************!*\
  !*** ./src/app/master/masterbanner/bannerModel.ts ***!
  \****************************************************/
/*! exports provided: BannerModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BannerModel", function() { return BannerModel; });
class BannerModel {
    constructor() {
        this.start_date = "";
        this.end_date = "";
    }
}


/***/ }),

/***/ "./src/app/master/masterbanner/masterbanner.component.scss":
/*!*****************************************************************!*\
  !*** ./src/app/master/masterbanner/masterbanner.component.scss ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.theader {\n  text-align: center;\n}\n\n.fa-pencil-square-o {\n  color: #000f92;\n  font-size: 20px;\n}\n\n.fa-trash {\n  color: #ff0000;\n  font-size: 21px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21hc3Rlci9tYXN0ZXJiYW5uZXIvbWFzdGVyYmFubmVyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tYXN0ZXIvbWFzdGVyYmFubmVyL21hc3RlcmJhbm5lci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLHlCQUFBO0VBQ0EsY0FBQTtBQ0FKOztBREdBO0VBQ0ksZ0JBQUE7QUNBSjs7QURHQTtFQUNJLGdCQUFBO0FDQUo7O0FER0E7RUFDSSxzQkFBQTtFQUNBLFdBQUE7RUFDQSx1QkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUNBSjs7QURHQTtFQUNJLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxxQkFBQTtBQ0FKOztBREdBO0VBQ0ksZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxNQUFBO0VBQ0EsVUFBQTtBQ0FKOztBREdBO0VBQ0ksa0JBQUE7QUNBSjs7QURHQTtFQUNJLGNBQUE7RUFDQyxlQUFBO0FDQUw7O0FERUE7RUFDSSxjQUFBO0VBQWMsZUFBQTtBQ0VsQiIsImZpbGUiOiJzcmMvYXBwL21hc3Rlci9tYXN0ZXJiYW5uZXIvbWFzdGVyYmFubmVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uY2FyZC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gICAgY29sb3I6ICNmYmUxMTY7XG59XG5cbmxhYmVsIHtcbiAgICBmb250LXdlaWdodDogNzAwO1xufVxuXG5sYWJlbCB7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLmJ0bjEge1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gICAgY29sb3I6IGdyYXk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgcGFkZGluZzogNHB4IDhweDtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1maWxlXSB7XG4gICAgZm9udC1zaXplOiAxMDBweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDA7XG4gICAgb3BhY2l0eTogMDtcbn1cblxuLnRoZWFkZXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmZhLXBlbmNpbC1zcXVhcmUtb3tcbiAgICBjb2xvcjpyZ2IoMCwgMTUsIDE0Nik7XG4gICAgIGZvbnQtc2l6ZTogMjBweDtcbn1cbi5mYS10cmFzaHtcbiAgICBjb2xvcjojZmYwMDAwO2ZvbnQtc2l6ZTogMjFweDtcbn1cbiIsIi5jYXJkLWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gIGNvbG9yOiAjZmJlMTE2O1xufVxuXG5sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbmxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLmJ0bjEge1xuICBib3JkZXI6IDJweCBzb2xpZCBncmF5O1xuICBjb2xvcjogZ3JheTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDRweCA4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xuICBmb250LXNpemU6IDEwMHB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgb3BhY2l0eTogMDtcbn1cblxuLnRoZWFkZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5mYS1wZW5jaWwtc3F1YXJlLW8ge1xuICBjb2xvcjogIzAwMGY5MjtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uZmEtdHJhc2gge1xuICBjb2xvcjogI2ZmMDAwMDtcbiAgZm9udC1zaXplOiAyMXB4O1xufSJdfQ== */"

/***/ }),

/***/ "./src/app/master/masterbanner/masterbanner.component.ts":
/*!***************************************************************!*\
  !*** ./src/app/master/masterbanner/masterbanner.component.ts ***!
  \***************************************************************/
/*! exports provided: MasterbannerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MasterbannerComponent", function() { return MasterbannerComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _bannerModel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bannerModel */ "./src/app/master/masterbanner/bannerModel.ts");
/* harmony import */ var ngx_image_compress__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-image-compress */ "./node_modules/ngx-image-compress/fesm2015/ngx-image-compress.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");










let MasterbannerComponent = class MasterbannerComponent {
    constructor(apiService, fb, imageCompress, loaderService, datePipe) {
        this.apiService = apiService;
        this.fb = fb;
        this.imageCompress = imageCompress;
        this.loaderService = loaderService;
        this.datePipe = datePipe;
        this.masterBanner = new _bannerModel__WEBPACK_IMPORTED_MODULE_4__["BannerModel"]();
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_6__["Subject"]();
        this.isDtInitialized = false;
        this.sDate = new Date();
        this.croppedImage = '';
        this.imageChangedEvent = '';
        this.topPosToStartShowing = 100;
        this.bannerForm = this.fb.group({
            banner_title: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required])],
            seq_no: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            imagePath: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            start_date: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            end_date: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
        });
        this.datePickerConfig = Object.assign({}, {
            containerClass: 'theme-dark-blue',
            showWeekNumbers: false,
            dateInputFormat: 'DD-MM-YYYY'
        });
        this.minStartDate = new Date();
        this.minEndDate = new Date();
        this.minEndDate.setDate(this.minEndDate.getDate());
    }
    ngOnInit() {
        this.GetAllDetails();
    }
    clearBannerForm() {
        this.bannerForm.reset();
        this.masterBanner.mnu_id = null;
        this.imageChangedEvent = "";
        this.croppedImage = null;
    }
    // #endregion
    //Image cropping and compression Start
    bannerUpload(e) {
        debugger;
        this.loaderService.display(true);
        this.imageChangedEvent = e;
        $('#file-upload').removeAttr('src');
        this.masterBanner.filename = "";
        this.masterBanner.filetype = "";
        this.masterBanner.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG" || extention == "png" || extention == "PNG") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB 
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.masterBanner.filename = file.name;
                    this.masterBanner.filetype = file.type;
                    // const csv: string = reader.result as string;
                    // this.adminPage.profileImage = csv.replace("data:image/jpeg;base64,", "");
                    this.masterBanner.imagePath = reader.result;
                };
                // this.masterGalleryForm.controls.imagePath.setValue(this.addcreation.imagePath);
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG" && extention != "PNG" && extention != "png") {
                this.masterBanner.filename = "";
                this.masterBanner.filetype = "";
                this.masterBanner.imagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Please Upload the valid file");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.masterBanner.filename = "";
                this.masterBanner.filetype = "";
                this.masterBanner.imagePath = "";
                // this.adminPage.profileImagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Document size should be less than 10MB");
                return;
            }
        }
    }
    imageCropped(event) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 300000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.bannerForm.controls.imagePath.setValue(this.croppedImage);
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 80).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.bannerForm.controls.imagePath.setValue(this.croppedImage);
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.bannerForm.controls.imagePath.setValue(this.croppedImage);
            });
        }
    }
    imageLoaded() {
        // show cropper
    }
    cropperReady() {
        // cropper ready
    }
    loadImageFailed() {
        // show message
    }
    //Image cropping and compression End 
    //Submit function
    GetAllDetails() {
        this.apiService.getDATA("banner/getAllBannerData").subscribe(data => {
            if (data != undefined) {
                if (data.success == true) {
                    if (data.object != undefined) {
                        if (data.object != undefined && data.object != null) {
                            this.getAllDetailsList = data.object;
                            if (this.isDtInitialized) {
                                this.dtElement.dtInstance.then((dtInstance) => {
                                    dtInstance.destroy();
                                    this.dtTrigger.next();
                                });
                            }
                            else {
                                this.isDtInitialized = true;
                                this.dtTrigger.next();
                            }
                        }
                    }
                }
            }
        });
    }
    OnSubmit() {
        var Data;
        if (this.bannerForm.valid) {
            let StartDate = this.masterBanner.start_date.toString();
            let EndDate = this.masterBanner.end_date.toString();
            if (StartDate.length > 10 && EndDate.length == 10) {
                Data = {
                    "id": this.masterBanner.mnu_id,
                    "imagePath": this.croppedImage,
                    "sequenceNumber": this.masterBanner.seq_no,
                    "title": this.masterBanner.banner_title,
                    "startDate": this.datePipe.transform(this.masterBanner.start_date, "dd-MM-yyyy"),
                    "endDate": this.masterBanner.end_date
                };
            }
            else if (EndDate.length > 10 && StartDate.length == 10) {
                Data = {
                    "id": this.masterBanner.mnu_id,
                    "imagePath": this.croppedImage,
                    "sequenceNumber": this.masterBanner.seq_no,
                    "title": this.masterBanner.banner_title,
                    "startDate": this.masterBanner.start_date,
                    "endDate": this.datePipe.transform(this.masterBanner.end_date, "dd-MM-yyyy")
                };
            }
            else if (StartDate.length > 10 && EndDate.length > 10) {
                Data = {
                    "id": this.masterBanner.mnu_id,
                    "imagePath": this.croppedImage,
                    "sequenceNumber": this.masterBanner.seq_no,
                    "title": this.masterBanner.banner_title,
                    "startDate": this.datePipe.transform(this.masterBanner.start_date, "dd-MM-yyyy"),
                    "endDate": this.datePipe.transform(this.masterBanner.end_date, "dd-MM-yyyy")
                };
            }
            else {
                Data = {
                    "id": this.masterBanner.mnu_id,
                    "imagePath": this.croppedImage,
                    "sequenceNumber": this.masterBanner.seq_no,
                    "title": this.masterBanner.banner_title,
                    "startDate": this.masterBanner.start_date,
                    "endDate": this.masterBanner.end_date
                };
            }
            this.loaderService.display(true);
            this.apiService.Create("banner/save", Data).subscribe(data => {
                this.loaderService.display(false);
                if (data.success == true) {
                    if (data.object != "" && data.object != undefined) {
                        sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
                        this.ngOnInit();
                        this.clearBannerForm();
                    }
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
                }
            }, error => {
                console.log(error);
                this.loaderService.display(false);
            });
        }
        else {
            this.apiService.validateAllFormFields(this.bannerForm);
            sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Please enter all the fields");
        }
    }
    EditBanner(Id) {
        debugger;
        window.scroll({
            top: 0,
            left: 0,
            behavior: 'smooth'
        });
        let idd = {
            "id": Id
        };
        this.croppedImage = "";
        this.imageChangedEvent = "";
        this.apiService.Create("banner/getByBannerId ", idd).subscribe(data => {
            // if (data.object != null && data.object != undefined) {
            this.masterBanner.mnu_id = data.object.id;
            this.masterBanner.banner_title = data.object.title;
            this.masterBanner.seq_no = data.object.sequenceNumber;
            this.masterBanner.imagePath = data.object.imagePath;
            this.bannerForm.controls.imagePath.setValue(this.masterBanner.imagePath);
            this.masterBanner.start_date = this.datePipe.transform(data.object.startDate, "dd-MM-yyyy");
            this.masterBanner.end_date = this.datePipe.transform(data.object.endDate, "dd-MM-yyyy");
            this.croppedImage = data.object.imagePath;
            // this.apiService.getBase64ImageFromURL(this.masterBanner.imagePath).subscribe(base64data => {
            //   this.croppedImage = 'data:image/jpeg;base64,' + base64data;
        });
    }
    DeleteBanner(id) {
        let da = {
            "id": id
        };
        this.apiService.Create("banner/deleteByBannerId", da).subscribe(data => {
            sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
            this.ngOnInit();
        });
    }
    checkScroll() {
        const scrollPosition = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
        if (scrollPosition >= this.topPosToStartShowing) {
            this.isShow = true;
        }
        else {
            this.isShow = false;
        }
    }
};
MasterbannerComponent.ctorParameters = () => [
    { type: _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: ngx_image_compress__WEBPACK_IMPORTED_MODULE_5__["NgxImageCompressService"] },
    { type: src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_8__["LoaderService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_9__["DatePipe"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('window:scroll')
], MasterbannerComponent.prototype, "checkScroll", null);
MasterbannerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-masterbanner',
        template: __webpack_require__(/*! raw-loader!./masterbanner.component.html */ "./node_modules/raw-loader/index.js!./src/app/master/masterbanner/masterbanner.component.html"),
        styles: [__webpack_require__(/*! ./masterbanner.component.scss */ "./src/app/master/masterbanner/masterbanner.component.scss")]
    })
], MasterbannerComponent);



/***/ }),

/***/ "./src/app/master/membernews/membernews.component.scss":
/*!*************************************************************!*\
  !*** ./src/app/master/membernews/membernews.component.scss ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.pro1pic {\n  height: auto;\n  width: 100%;\n  margin: auto;\n  display: block;\n}\n\n.pro2pic {\n  height: auto;\n  width: 107%;\n  margin: auto;\n  display: block;\n}\n\n.pro3pic {\n  height: auto;\n  width: 119%;\n  margin: auto;\n  display: block;\n}\n\n.newsth {\n  text-align: center;\n}\n\n.fa-pencil-square-o {\n  color: #000f92;\n  font-size: 20px;\n}\n\n.fa-trash {\n  color: #ff0000;\n  font-size: 21px;\n}\n\n.actdeacbtn {\n  padding: 0% 2%;\n  font-size: 12px;\n  margin-right: 1%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21hc3Rlci9tZW1iZXJuZXdzL21lbWJlcm5ld3MuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21hc3Rlci9tZW1iZXJuZXdzL21lbWJlcm5ld3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtFQUNBLGNBQUE7QUNDSjs7QURFQTtFQUNJLHNCQUFBO0VBQ0EsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxnQkFBQTtFQUNBLHFCQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsT0FBQTtFQUNBLE1BQUE7RUFDQSxVQUFBO0FDQ0o7O0FERUE7RUFDSSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxrQkFBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7RUFDQSxlQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9tYXN0ZXIvbWVtYmVybmV3cy9tZW1iZXJuZXdzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtaGVhZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICAgIGNvbG9yOiAjZmJlMTE2O1xufVxuXG4uYnRuMSB7XG4gICAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcbiAgICBjb2xvcjogZ3JheTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiA0cHggOHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPWZpbGVdIHtcbiAgICBmb250LXNpemU6IDEwMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICBvcGFjaXR5OiAwO1xufVxuXG4ucHJvMXBpYyB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnBybzJwaWMge1xuICAgIGhlaWdodDogYXV0bztcbiAgICB3aWR0aDogMTA3JTtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5wcm8zcGljIHtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgd2lkdGg6IDExOSU7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ubmV3c3RoIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5mYS1wZW5jaWwtc3F1YXJlLW8ge1xuICAgIGNvbG9yOiByZ2IoMCwgMTUsIDE0Nik7XG4gICAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uZmEtdHJhc2gge1xuICAgIGNvbG9yOiAjZmYwMDAwO1xuICAgIGZvbnQtc2l6ZTogMjFweDtcbn1cblxuLmFjdGRlYWNidG4ge1xuICAgIHBhZGRpbmc6IDAlIDIlO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDElO1xufSIsIi5jYXJkLWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gIGNvbG9yOiAjZmJlMTE2O1xufVxuXG4uYnRuMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gIGNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogNHB4IDhweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1maWxlXSB7XG4gIGZvbnQtc2l6ZTogMTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBvcGFjaXR5OiAwO1xufVxuXG4ucHJvMXBpYyB7XG4gIGhlaWdodDogYXV0bztcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5wcm8ycGljIHtcbiAgaGVpZ2h0OiBhdXRvO1xuICB3aWR0aDogMTA3JTtcbiAgbWFyZ2luOiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnBybzNwaWMge1xuICBoZWlnaHQ6IGF1dG87XG4gIHdpZHRoOiAxMTklO1xuICBtYXJnaW46IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ubmV3c3RoIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZmEtcGVuY2lsLXNxdWFyZS1vIHtcbiAgY29sb3I6ICMwMDBmOTI7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLmZhLXRyYXNoIHtcbiAgY29sb3I6ICNmZjAwMDA7XG4gIGZvbnQtc2l6ZTogMjFweDtcbn1cblxuLmFjdGRlYWNidG4ge1xuICBwYWRkaW5nOiAwJSAyJTtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBtYXJnaW4tcmlnaHQ6IDElO1xufSJdfQ== */"

/***/ }),

/***/ "./src/app/master/membernews/membernews.component.ts":
/*!***********************************************************!*\
  !*** ./src/app/master/membernews/membernews.component.ts ***!
  \***********************************************************/
/*! exports provided: MembernewsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MembernewsComponent", function() { return MembernewsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _membernews__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./membernews */ "./src/app/master/membernews/membernews.ts");
/* harmony import */ var _core_services_loader_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var ngx_image_compress__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-image-compress */ "./node_modules/ngx-image-compress/fesm2015/ngx-image-compress.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");









let MembernewsComponent = class MembernewsComponent {
    constructor(apiService, fb, loaderService, imageCompress) {
        this.apiService = apiService;
        this.fb = fb;
        this.loaderService = loaderService;
        this.imageCompress = imageCompress;
        this.membernews = new _membernews__WEBPACK_IMPORTED_MODULE_4__["Membernews"]();
        this.memberList = [];
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_8__["Subject"]();
        this.selectedItems = [];
        this.isDtInitialized = false;
        this.modules = {};
        // imageChangedEvent01: any = '';
        // url01: any;
        // fileChangeEventFirstType(e: any, seqno: number) {
        //   this.loaderService.display(true);
        //   this.imageChangedEvent01 = "";
        //   var orientation = 1;
        //   this.membernews.filename = "";
        //   this.membernews.filetype = "";
        //   if (e.target.files && e.target.files[0]) {
        //     let file = e.target.files[0];
        //     var filename = e.target.files[0].name.toString();
        //     var nameArray = filename.split('.');
        //     var extention = nameArray[nameArray.length - 1];
        //     if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") && e.target.files[0].size <= 10000000)  // 10000000 bytes = 10MB 
        //     {
        //       let reader = new FileReader();
        //       reader.readAsDataURL(file);
        //       reader.onload = () => {
        //         if (seqno == 1) {
        //           this.url01 = reader.result;
        //           this.imageChangedEvent01 = e;
        //         }
        //         this.membernews.filename = file.name;
        //         this.membernews.filetype = file.type;
        //       };
        //     } else if (extention != "JPEG" && extention != "jpeg" && extention != "JPG" && extention != "jpg") {
        //       this.membernews.filename = "";
        //       this.membernews.filetype = "";
        //       this.loaderService.display(false);
        //       Swal.fire("Image format should be only jpeg or jpg");
        //       return;
        //     } else if (e.target.files[0].size > 10000000) {
        //       this.membernews.filename = "";
        //       this.membernews.filetype = "";
        //       this.loaderService.display(false);
        //       Swal.fire("Document size should be less than 10MB");
        //       return;
        //     }
        //   }
        // }
        // imageSendArr01: any[] = [];
        // imageCropped(event: ImageCroppedEvent, seqno: number) {
        //   var orientation = 1;
        //   this.imageCompress.compressFile(event.base64, orientation, 80, 80).then(
        //     result => {
        //       if (this.imageChangedEvent01) {
        //         this.url01 = result;
        //       }
        //       this.loaderService.display(false);
        //       const csv: string = result as string;
        //       // this.profileMember.imageBase64String = csv.replace("data:image/jpeg;base64,", "");
        //       let cur = [];
        //       cur = this.imageSendArr01.filter((temp: any) => temp.seqNum == seqno);
        //       if (cur.length > 0) {
        //         this.imageSendArr01.forEach(da => {
        //           if (da.seqNum == seqno) {
        //             da.imagePath = csv;
        //           }
        //         });
        //       } else {
        //         let obj = {
        //           "imagePath": csv,
        //           "seqNum": seqno
        //         };
        //         this.imageSendArr01.push(obj);
        //       }
        //     })
        // }
        // imageChangedEvent31: any = '';
        // imageChangedEvent32: any = '';
        // imageChangedEvent33: any = '';
        // imageSendArr03 = [];
        // url31: any;
        // url32: any;
        // url33: any;
        // fileChangeEventSecondType(e: any, seqno: number) {
        //   this.loaderService.display(true);
        //   this.imageChangedEvent31 = "";
        //   this.imageChangedEvent32 = "";
        //   this.imageChangedEvent33 = "";
        //   var orientation = 1;
        //   this.membernews.filename = "";
        //   this.membernews.filetype = "";
        //   if (e.target.files && e.target.files[0]) {
        //     let file = e.target.files[0];
        //     var filename = e.target.files[0].name.toString();
        //     var nameArray = filename.split('.');
        //     var extention = nameArray[nameArray.length - 1];
        //     if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") && e.target.files[0].size <= 10000000)  // 10000000 bytes = 10MB 
        //     {
        //       let reader = new FileReader();
        //       reader.readAsDataURL(file);
        //       reader.onload = () => {
        //         if (seqno == 1) {
        //           this.url31 = reader.result;
        //           this.imageChangedEvent31 = e;
        //         } else if (seqno == 2) {
        //           this.url32 = reader.result;
        //           this.imageChangedEvent32 = e;
        //         } else if (seqno == 3) {
        //           this.url33 = reader.result;
        //           this.imageChangedEvent33 = e;
        //         }
        //         this.membernews.filename = file.name;
        //         this.membernews.filetype = file.type;
        //       };
        //     } else if (extention != "JPEG" && extention != "jpeg" && extention != "JPG" && extention != "jpg") {
        //       this.membernews.filename = "";
        //       this.membernews.filetype = "";
        //       this.loaderService.display(false);
        //       Swal.fire("Image Format should be jpeg or jpg");
        //       return;
        //     } else if (e.target.files[0].size > 10000000) {
        //       this.membernews.filename = "";
        //       this.membernews.filetype = "";
        //       this.loaderService.display(false);
        //       Swal.fire("Document size should be less than 10MB");
        //       return;
        //     }
        //   }
        // }
        // imageCroppedSecondType(event: ImageCroppedEvent, seqno: number) {
        //   var orientation = 1;
        //   this.imageCompress.compressFile(event.base64, orientation, 80, 80).then(
        //     result => {
        //       if (this.imageChangedEvent31) {
        //         this.url31 = result;
        //       }
        //       else if (this.imageChangedEvent32) {
        //         this.url32 = result;
        //       }
        //       else if (this.imageChangedEvent33) {
        //         this.url33 = result;
        //       }
        //       this.loaderService.display(false);
        //       const csv: string = result as string;
        //       let cur = [];
        //       cur = this.imageSendArr03.filter((temp: any) => temp.seqNum == seqno);
        //       if (cur.length > 0) {
        //         this.imageSendArr03.forEach(da => {
        //           if (da.seqNum == seqno) {
        //             da.imagePath = csv;
        //           }
        //         });
        //       } else {
        //         let obj = {
        //           "imagePath": csv,
        //           "seqNum": seqno
        //         };
        //         this.imageSendArr03.push(obj);
        //       }
        //     })
        // }
        this.imageChangedEvent71 = '';
        this.imageChangedEvent72 = '';
        this.imageChangedEvent73 = '';
        this.imageChangedEvent74 = '';
        this.imageChangedEvent75 = '';
        this.imageChangedEvent76 = '';
        this.imageChangedEvent77 = '';
        this.imageSendArr07 = [];
        this.userCroppedPhoto = ''; // image crop
        this.memnewsalldata = [];
        this.NewsForm = this.fb.group({
            MemberName: [''],
            title: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(300), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(2)])],
            description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(8000), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(2)])],
            templateId: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            userName: [''],
            userImage: [''],
            imagePath: [''],
            imagePath31: [''],
            imagePath32: [''],
            imagePath33: [''],
            imagePath71: [''],
            imagePath72: [''],
            imagePath73: [''],
            imagePath74: [''],
            imagePath75: [''],
            imagePath76: [''],
            imagePath77: [''],
        });
        this.modules = {
            'toolbar': [
                ['bold', 'italic', 'underline', 'strike'],
                [{ 'header': 1 }, { 'header': 2 }],
                [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                // [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript
                // [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
                // [{ 'direction': 'rtl' }],                         // text direction
                [{ 'size': ['small', false, 'large', 'huge'] }],
                // [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                [{ 'color': [] }, { 'background': [] }],
                [{ 'font': [] }],
                [{ 'align': [] }],
            ]
        };
    }
    ngOnInit() {
        this.memberNewsSettings = {
            text: 'Select',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search ',
            badgeShowLimit: 5,
            groupBy: "category"
        };
        this.membernews.templateId = '1';
        this.getAllMemebrNews();
    }
    getMemberList(event) {
        let memberName = event.target.value;
        let memName = {
            "firstName": memberName
        };
        this.apiService.Create("memberNews/getAllWebMembers", memName).subscribe(data => {
            let memList = [];
            let memdata = data.object;
            if (memdata != null && memdata != undefined) {
                memdata.forEach(ml => {
                    memList.push({ "id": ml.membershipId, "itemName": ml.firstName, "profileImage": ml.profileImage, "webPageId": ml.webpageId });
                });
                this.memberList = memList;
            }
        });
    }
    selectedMemId(memdata) {
        this.selectedMemWebPageId = memdata.webPageId;
    }
    fileChangeEventProfile(e, seqno) {
        this.loaderService.display(true);
        this.imageChangedEvent71 = "";
        this.imageChangedEvent72 = "";
        this.imageChangedEvent73 = "";
        this.imageChangedEvent74 = "";
        this.imageChangedEvent75 = "";
        this.imageChangedEvent76 = "";
        this.imageChangedEvent77 = "";
        var orientation = 1;
        this.membernews.filename = "";
        this.membernews.filetype = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB 
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    if (seqno == 1) {
                        this.url1 = reader.result;
                        this.imageChangedEvent71 = e;
                    }
                    else if (seqno == 2) {
                        this.url2 = reader.result;
                        this.imageChangedEvent72 = e;
                    }
                    else if (seqno == 3) {
                        this.url3 = reader.result;
                        this.imageChangedEvent73 = e;
                    }
                    else if (seqno == 4) {
                        this.url4 = reader.result;
                        this.imageChangedEvent74 = e;
                    }
                    else if (seqno == 5) {
                        this.url5 = reader.result;
                        this.imageChangedEvent75 = e;
                    }
                    else if (seqno == 6) {
                        this.url6 = reader.result;
                        this.imageChangedEvent76 = e;
                    }
                    else if (seqno == 7) {
                        this.url7 = reader.result;
                        this.imageChangedEvent77 = e;
                    }
                    this.membernews.filename = file.name;
                    this.membernews.filetype = file.type;
                    //this.adminPage.profileImagePath = this.adminPage.imageBase64String;
                    //this.model.user_imagepath = this.model.imageBase64String;
                };
                // console.log("====>"+this.profileMember.imageBase64String);
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "JPG" && extention != "jpg") {
                this.membernews.filename = "";
                this.membernews.filetype = "";
                // this.profileMember.imageBase64String = "";
                // this.adminPage.profileImagePath = this.adminPage.imageBase64String;
                //  $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Image format should be jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.membernews.filename = "";
                this.membernews.filetype = "";
                // this.profileMember.imageBase64String = "";
                // this.adminPage.profileImagePath = "";
                //  $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Document size should be less than 10MB");
                return;
            }
        }
    }
    //cropped image 
    imageCroppedProfile(event, seqno) {
        var orientation = 1;
        this.imageCompress.compressFile(event.base64, orientation, 80, 80).then(result => {
            if (this.imageChangedEvent71) {
                this.url1 = result;
            }
            else if (this.imageChangedEvent72) {
                this.url2 = result;
            }
            else if (this.imageChangedEvent73) {
                this.url3 = result;
            }
            else if (this.imageChangedEvent74) {
                this.url4 = result;
            }
            else if (this.imageChangedEvent75) {
                this.url5 = result;
            }
            else if (this.imageChangedEvent76) {
                this.url6 = result;
            }
            else if (this.imageChangedEvent77) {
                this.url7 = result;
            }
            this.loaderService.display(false);
            const csv = result;
            // this.profileMember.imageBase64String = csv.replace("data:image/jpeg;base64,", "");
            let cur = [];
            cur = this.imageSendArr07.filter((temp) => temp.seqNum == seqno);
            if (cur.length > 0) {
                this.imageSendArr07.forEach(da => {
                    if (da.seqNum == seqno) {
                        da.imagePath = csv;
                    }
                });
            }
            else {
                let obj = {
                    "imagePath": csv,
                    "seqNum": seqno
                };
                this.imageSendArr07.push(obj);
            }
        });
    }
    imageLoadedProfile() {
        // show cropper
    }
    cropperReadyProfile() {
        // cropper ready
    }
    loadImageFailedProfile() {
        // show message
    }
    //upload file
    authorPhoto(e) {
        $('#file-upload').removeAttr('src');
        this.membernews.filename = "";
        this.membernews.filetype = "";
        this.membernews.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0] && e.target.files[0].size <= 10000000) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if (extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") // 10000000 bytes = 10MB 
             {
                this.loaderService.display(true);
                this.imageChangedEvent = e; // image crop
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.membernews.filename = file.name;
                    this.membernews.filetype = file.type;
                    // const csv: string = reader.result as string;
                    // this.adminPage.profileImage = csv.replace("data:image/jpeg;base64,", "");
                    this.membernews.userImage = reader.result;
                };
                this.NewsForm.controls.userImage.setValue(this.membernews.userImage);
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG") {
                this.membernews.filename = "";
                this.membernews.filetype = "";
                this.membernews.userImage = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.membernews.filename = "";
                this.membernews.filetype = "";
                this.membernews.userImage = "";
                // this.adminPage.profileImagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire("Image size should be less than 10MB");
                return;
            }
        }
    }
    userPhotoCropped(event) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.userCroppedPhoto = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.NewsForm.controls.userImage.setValue(this.userCroppedPhoto);
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                this.userCroppedPhoto = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.NewsForm.controls.userImage.setValue(this.userCroppedPhoto);
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.userCroppedPhoto = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.NewsForm.controls.userImage.setValue(this.userCroppedPhoto);
            });
        }
    }
    imageLoaded() {
        // show cropper
    }
    cropperReady() {
        // cropper ready
    }
    loadImageFailed() {
        // show message
    }
    OnSubmit() {
        if ((this.membernews.userName == null || this.membernews.userName == undefined || this.membernews.userName == "") && (this.membernews.userImage == "" || this.membernews.userImage == null || this.membernews.userImage == undefined)) {
            this.membernews.userName = null;
            this.membernews.userImage = null;
        }
        if (this.NewsForm.valid) {
            if (this.membernews.templateId == '1') {
                this.membernews.member_news_photosDtos = this.imageSendArr07;
            }
            else if (this.membernews.templateId == '3') {
                this.membernews.member_news_photosDtos = this.imageSendArr07;
            }
            else if (this.membernews.templateId == '7') {
                this.membernews.member_news_photosDtos = this.imageSendArr07;
            }
            let Data;
            // if (this.membernews.templateId == '1') {
            //   let dd: any[] = [];
            //   dd.push({ "memberNewsPhotoId": this.membernews.newsPhotoId01, "imagePath": this.url01 })
            //   Data = {
            //     "membersNewsId": this.membernews.membersNewsId,
            //     "title": this.membernews.title,
            //     "description": this.membernews.description,
            //     "templateId": this.membernews.templateId,
            //     "type": "Member News",
            //     "sequenceNumber": "1",
            //     "refWebPageId": this.selectedMemWebPageId,
            //     "userName": this.membernews.userName,
            //     "userImage": this.userCroppedPhoto,
            //     "member_news_photosDtos": dd
            //   }
            // }
            // else if (this.membernews.templateId == '3') {
            //   let dd: any[] = [];
            //   dd.push({ "memberNewsPhotoId": this.membernews.newsPhotoId01, "imagePath": this.url31 },
            //     { "memberNewsPhotoId": this.membernews.newsPhotoId32, "imagePath": this.url32 },
            //     { "memberNewsPhotoId": this.membernews.newsPhotoId33, "imagePath": this.url33 })
            //   Data = {
            //     "membersNewsId": this.membernews.membersNewsId,
            //     "title": this.membernews.title,
            //     "description": this.membernews.description,
            //     "templateId": this.membernews.templateId,
            //     "type": "Member News",
            //     "sequenceNumber": "1",
            //     "refWebPageId": this.selectedMemWebPageId,
            //     "userName": this.membernews.userName,
            //     "userImage": this.userCroppedPhoto,
            //     "member_news_photosDtos": dd
            //   }
            // }
            // else if (this.membernews.templateId == '7') {
            //   let dd: any[] = [];
            //   dd.push(
            //     { "memberNewsPhotoId": this.membernews.newsPhotoId01, "imagePath": this.url1 },
            //     { "memberNewsPhotoId": this.membernews.newsPhotoId32, "imagePath": this.url2 },
            //     { "memberNewsPhotoId": this.membernews.newsPhotoId33, "imagePath": this.url3 },
            //     { "memberNewsPhotoId": this.membernews.newsPhotoId74, "imagePath": this.url4 },
            //     { "memberNewsPhotoId": this.membernews.newsPhotoId75, "imagePath": this.url5 },
            //     { "memberNewsPhotoId": this.membernews.newsPhotoId76, "imagePath": this.url6 },
            //     { "memberNewsPhotoId": this.membernews.newsPhotoId77, "imagePath": this.url7 })
            //   Data = {
            //     "membersNewsId": this.membernews.membersNewsId,
            //     "title": this.membernews.title,
            //     "description": this.membernews.description,
            //     "templateId": this.membernews.templateId,
            //     "type": "Member News",
            //     "sequenceNumber": "1",
            //     "refWebPageId": this.selectedMemWebPageId,
            //     "userName": this.membernews.userName,
            //     "userImage": this.userCroppedPhoto,
            //     "member_news_photosDtos": dd
            //   }
            // }
            let dd = [];
            if (this.membernews.templateId == '1') {
                dd.push({ "memberNewsPhotoId": this.membernews.newsPhotoId71, "imagePath": this.url1 });
            }
            else if (this.membernews.templateId == '3') {
                dd.push({ "memberNewsPhotoId": this.membernews.newsPhotoId71, "imagePath": this.url1 }, { "memberNewsPhotoId": this.membernews.newsPhotoId72, "imagePath": this.url2 }, { "memberNewsPhotoId": this.membernews.newsPhotoId73, "imagePath": this.url3 });
            }
            else if (this.membernews.templateId == '7') {
                dd.push({ "memberNewsPhotoId": this.membernews.newsPhotoId71, "imagePath": this.url1 }, { "memberNewsPhotoId": this.membernews.newsPhotoId72, "imagePath": this.url2 }, { "memberNewsPhotoId": this.membernews.newsPhotoId73, "imagePath": this.url3 }, { "memberNewsPhotoId": this.membernews.newsPhotoId74, "imagePath": this.url4 }, { "memberNewsPhotoId": this.membernews.newsPhotoId75, "imagePath": this.url5 }, { "memberNewsPhotoId": this.membernews.newsPhotoId76, "imagePath": this.url6 }, { "memberNewsPhotoId": this.membernews.newsPhotoId77, "imagePath": this.url7 });
            }
            Data = {
                "membersNewsId": this.membernews.membersNewsId,
                "title": this.membernews.title,
                "description": this.membernews.description,
                "templateId": this.membernews.templateId,
                "type": "Member News",
                "sequenceNumber": "1",
                "refWebPageId": this.selectedMemWebPageId,
                "userName": this.membernews.userName,
                "userImage": this.userCroppedPhoto,
                "member_news_photosDtos": dd
            };
            this.loaderService.display(true);
            this.apiService.Create("memberNews/save", Data).subscribe(data => {
                this.loaderService.display(false);
                if (data.object != "" && data.object != undefined) {
                    this.ngOnInit();
                    sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(data.message);
                    this.clearMemberNewsForm();
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(data.message);
                }
            });
        }
    }
    clearMemberNewsForm() {
        this.membernews.membersNewsId = null;
        this.membernews.type = 'Member News';
        this.membernews.title = "";
        this.membernews.description = "";
        this.membernews.sequenceNumber = null;
        this.membernews.templateId = '1';
        // this.imageChangedEvent01 = "";
        // this.url01 = "";
        this.croppedImage = null;
        // this.imageChangedEvent31 = "";
        // this.url31 = '';
        // this.imageChangedEvent32 = "";
        // this.url32 = '';
        // this.imageChangedEvent33 = '';
        // this.url33 = '';
        this.imageChangedEvent71 = "";
        this.url1 = '';
        this.imageChangedEvent72 = "";
        this.url2 = '';
        this.imageChangedEvent73 = "";
        this.url3 = '';
        this.imageChangedEvent74 = "";
        this.url4 = '';
        this.imageChangedEvent75 = "";
        this.url5 = '';
        this.imageChangedEvent76 = "";
        this.url6 = '';
        this.imageChangedEvent77 = "";
        this.url7 = '';
        this.membernews.userName = null;
        this.userCroppedPhoto = null;
    }
    getAllMemebrNews() {
        this.apiService.getDATA("/memberNews/getAll").subscribe(data => {
            let memnewsdata = data.object;
            if (memnewsdata != null && memnewsdata != undefined) {
                this.memnewsalldata = memnewsdata;
            }
            if (this.isDtInitialized) {
                this.dtElement.dtInstance.then((dtInstance) => {
                    dtInstance.destroy();
                    this.dtTrigger.next();
                });
            }
            else {
                this.isDtInitialized = true;
                this.dtTrigger.next();
            }
        });
    }
    editMemberNews(eid) {
        debugger;
        this.selectedItems = [];
        let memid = {
            "refmembersNewsId": eid
        };
        this.apiService.Create("memberNewsPhotos/getByRefMemberNewsId", memid).subscribe(data => {
            if (data.success == true) {
                if (data.object.templateId == '1') {
                    this.membernews.membersNewsId = eid;
                    this.membernews.title = data.object.title;
                    this.membernews.description = data.object.description;
                    this.membernews.sequenceNumber = data.object.sequenceNumber;
                    this.membernews.type = data.object.type;
                    this.membernews.templateId = '1';
                    this.url1 = data.object.membernewsphotosDtoList[0].imagePath;
                    this.membernews.newsPhotoId71 = data.object.membernewsphotosDtoList[0].memberNewsPhotoId;
                    this.membernews.userName = data.object.userName;
                    this.userCroppedPhoto = data.object.userImage;
                    this.selectedMember = [{ "id": data.object.memberId, "itemName": data.object.memberName }];
                    if (data.object.refWebPgaeId != undefined && data.object.refWebPgaeId != null) {
                        this.selectedMemWebPageId = data.object.refWebPgaeId;
                        this.selectedItems = [
                            { "id": data.object.refWebPgaeId, "itemName": data.object.memberName }
                        ];
                    }
                    //this.membernews.refWebPageId = data.object.refWebPageId;
                }
                else if (data.object.templateId == '3') {
                    this.membernews.membersNewsId = eid;
                    this.membernews.title = data.object.title;
                    this.membernews.description = data.object.description;
                    this.membernews.sequenceNumber = data.object.sequenceNumber;
                    this.membernews.type = data.object.type;
                    this.membernews.templateId = '3';
                    this.url1 = data.object.membernewsphotosDtoList[0].imagePath;
                    this.membernews.newsPhotoId71 = data.object.membernewsphotosDtoList[0].memberNewsPhotoId;
                    this.url2 = data.object.membernewsphotosDtoList[1].imagePath;
                    this.membernews.newsPhotoId72 = data.object.membernewsphotosDtoList[1].memberNewsPhotoId;
                    this.url3 = data.object.membernewsphotosDtoList[2].imagePath;
                    this.membernews.newsPhotoId73 = data.object.membernewsphotosDtoList[2].memberNewsPhotoId;
                    this.membernews.userName = data.object.userName;
                    this.userCroppedPhoto = data.object.userImage;
                    this.selectedMember = [{ "id": data.object.memberId, "itemName": data.object.memberName }];
                    if (data.object.refWebPgaeId != undefined && data.object.refWebPgaeId != null) {
                        this.selectedMemWebPageId = data.object.refWebPgaeId;
                        this.selectedItems = [
                            { "id": data.object.refWebPgaeId, "itemName": data.object.memberName }
                        ];
                    }
                }
                else if (data.object.templateId == '7') {
                    this.membernews.membersNewsId = eid;
                    this.membernews.title = data.object.title;
                    this.membernews.description = data.object.description;
                    this.membernews.sequenceNumber = data.object.seqNumber;
                    this.membernews.type = data.object.type;
                    this.membernews.templateId = '7';
                    this.url1 = data.object.membernewsphotosDtoList[0].imagePath;
                    this.membernews.newsPhotoId71 = data.object.membernewsphotosDtoList[0].memberNewsPhotoId;
                    this.url2 = data.object.membernewsphotosDtoList[1].imagePath;
                    this.membernews.newsPhotoId72 = data.object.membernewsphotosDtoList[1].memberNewsPhotoId;
                    this.url3 = data.object.membernewsphotosDtoList[2].imagePath;
                    this.membernews.newsPhotoId73 = data.object.membernewsphotosDtoList[2].memberNewsPhotoId;
                    this.url4 = data.object.membernewsphotosDtoList[3].imagePath;
                    this.membernews.newsPhotoId74 = data.object.membernewsphotosDtoList[3].memberNewsPhotoId;
                    this.url5 = data.object.membernewsphotosDtoList[4].imagePath;
                    this.membernews.newsPhotoId75 = data.object.membernewsphotosDtoList[4].memberNewsPhotoId;
                    this.url6 = data.object.membernewsphotosDtoList[5].imagePath;
                    this.membernews.newsPhotoId76 = data.object.membernewsphotosDtoList[5].memberNewsPhotoId;
                    this.url7 = data.object.membernewsphotosDtoList[6].imagePath;
                    this.membernews.newsPhotoId77 = data.object.membernewsphotosDtoList[6].memberNewsPhotoId;
                    this.membernews.userName = data.object.userName;
                    this.userCroppedPhoto = data.object.userImage;
                    this.selectedMember = [{ "id": data.object.memberId, "itemName": data.object.memberName }];
                    if (data.object.refWebPgaeId != undefined && data.object.refWebPgaeId != null) {
                        this.selectedMemWebPageId = data.object.refWebPgaeId;
                        this.selectedItems = [
                            { "id": data.object.refWebPgaeId, "itemName": data.object.memberName }
                        ];
                    }
                }
            }
        });
    }
    deleteMemberNews(deldata) {
        if (deldata.isActive == 0) {
            deldata.isActive = 1;
        }
        else {
            deldata.isActive = 0;
        }
        let memnewsid = deldata.membersNewsId;
        let isActive = deldata.isActive;
        let memdata = {
            "membersNewsId": memnewsid,
            "isActive": isActive
        };
        this.loaderService.display(true);
        this.apiService.Create("memberNews/deleteByMemberNewsId", memdata).subscribe(data => {
            this.loaderService.display(false);
            if (data != undefined) {
                if (data.success) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(data.message);
                }
            }
        });
    }
};
MembernewsComponent.ctorParameters = () => [
    { type: _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_2__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: _core_services_loader_service__WEBPACK_IMPORTED_MODULE_5__["LoaderService"] },
    { type: ngx_image_compress__WEBPACK_IMPORTED_MODULE_7__["NgxImageCompressService"] }
];
MembernewsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-membernews',
        template: __webpack_require__(/*! raw-loader!./membernews.component.html */ "./node_modules/raw-loader/index.js!./src/app/master/membernews/membernews.component.html"),
        styles: [__webpack_require__(/*! ./membernews.component.scss */ "./src/app/master/membernews/membernews.component.scss")]
    })
], MembernewsComponent);



/***/ }),

/***/ "./src/app/master/membernews/membernews.ts":
/*!*************************************************!*\
  !*** ./src/app/master/membernews/membernews.ts ***!
  \*************************************************/
/*! exports provided: Membernews */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Membernews", function() { return Membernews; });
class Membernews {
    constructor() {
        this.member_news_photosDtos = [];
    }
}


/***/ }),

/***/ "./src/app/master/mstjobseekerandjobprovider/JobSeekerAndJobProviderModel.ts":
/*!***********************************************************************************!*\
  !*** ./src/app/master/mstjobseekerandjobprovider/JobSeekerAndJobProviderModel.ts ***!
  \***********************************************************************************/
/*! exports provided: JobSeekerAndJobProviderModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JobSeekerAndJobProviderModel", function() { return JobSeekerAndJobProviderModel; });
class JobSeekerAndJobProviderModel {
    constructor() {
        this.start_date = "";
        this.end_date = "";
    }
}


/***/ }),

/***/ "./src/app/master/mstjobseekerandjobprovider/mstjobseekerandjobprovider.component.scss":
/*!*********************************************************************************************!*\
  !*** ./src/app/master/mstjobseekerandjobprovider/mstjobseekerandjobprovider.component.scss ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container-fluid {\n  margin-top: 1%;\n  margin-bottom: 1%;\n}\n\n.row {\n  padding: 1% 0%;\n}\n\n.col-3 {\n  padding: 1% 1%;\n}\n\n.col-4 {\n  padding: 1% 1%;\n}\n\n.col-1 {\n  padding: 1% 1%;\n}\n\n.col-2 {\n  padding: 1% 1%;\n}\n\n.col-12 {\n  padding: 1% 1%;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.fa-pencil-square-o {\n  color: #000f92;\n  font-size: 21px;\n}\n\n.fa:hover {\n  font-size: 23px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21hc3Rlci9tc3Rqb2JzZWVrZXJhbmRqb2Jwcm92aWRlci9tc3Rqb2JzZWVrZXJhbmRqb2Jwcm92aWRlci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbWFzdGVyL21zdGpvYnNlZWtlcmFuZGpvYnByb3ZpZGVyL21zdGpvYnNlZWtlcmFuZGpvYnByb3ZpZGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtFQUNBLGlCQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtFQUNBLGNBQUE7QUNDSjs7QURDQTtFQUNJLGdCQUFBO0FDRUo7O0FEQ0E7RUFDSSxnQkFBQTtBQ0VKOztBRENBO0VBQ0ksc0JBQUE7RUFDQSxXQUFBO0VBQ0EsdUJBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0FDRUo7O0FEQ0E7RUFDSSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EscUJBQUE7QUNFSjs7QURDQTtFQUNJLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxPQUFBO0VBQ0EsTUFBQTtFQUNBLFVBQUE7QUNFSjs7QURFQTtFQUNJLGNBQUE7RUFDQSxlQUFBO0FDQ0o7O0FER0E7RUFDSSxlQUFBO0FDQUoiLCJmaWxlIjoic3JjL2FwcC9tYXN0ZXIvbXN0am9ic2Vla2VyYW5kam9icHJvdmlkZXIvbXN0am9ic2Vla2VyYW5kam9icHJvdmlkZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyLWZsdWlkIHtcbiAgICBtYXJnaW4tdG9wOiAxJTtcbiAgICBtYXJnaW4tYm90dG9tOiAxJTtcbn1cblxuLnJvdyB7XG4gICAgcGFkZGluZzogMSUgMCU7XG59XG5cbi5jb2wtMyB7XG4gICAgcGFkZGluZzogMSUgMSU7XG59XG5cbi5jb2wtNCB7XG4gICAgcGFkZGluZzogMSUgMSU7XG59XG5cbi5jb2wtMSB7XG4gICAgcGFkZGluZzogMSUgMSU7XG59XG5cbi5jb2wtMiB7XG4gICAgcGFkZGluZzogMSUgMSU7XG59XG5cbi5jb2wtMTIge1xuICAgIHBhZGRpbmc6IDElIDElO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gICAgY29sb3I6ICNmYmUxMTY7XG59XG5sYWJlbCB7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cbi8vIEZvciBJbWFnZSBDcm9waW5nIGRhdGU6MTItMDMtMjAyMC0tLS0tLS0tLS0tLVN0YXJ0LS0tLS0tLS0tLS0tLS1cbmxhYmVsIHtcbiAgICBmb250LXdlaWdodDogNzAwO1xufVxuXG4uYnRuMSB7XG4gICAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcbiAgICBjb2xvcjogZ3JheTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiA0cHggOHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPWZpbGVdIHtcbiAgICBmb250LXNpemU6IDEwMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICBvcGFjaXR5OiAwO1xufVxuLy8gRm9yIEltYWdlIENyb3BpbmcgZGF0ZToxMi0wMy0yMDIwLS0tRW5kLS0tLS0tLS0tLVxuXG4uZmEtcGVuY2lsLXNxdWFyZS1ve1xuICAgIGNvbG9yOnJnYigwLCAxNSwgMTQ2KTsgXG4gICAgZm9udC1zaXplOiAyMXB4O1xufVxuXG5cbi5mYTpob3ZlcntcbiAgICBmb250LXNpemU6IDIzcHg7XG59IiwiLmNvbnRhaW5lci1mbHVpZCB7XG4gIG1hcmdpbi10b3A6IDElO1xuICBtYXJnaW4tYm90dG9tOiAxJTtcbn1cblxuLnJvdyB7XG4gIHBhZGRpbmc6IDElIDAlO1xufVxuXG4uY29sLTMge1xuICBwYWRkaW5nOiAxJSAxJTtcbn1cblxuLmNvbC00IHtcbiAgcGFkZGluZzogMSUgMSU7XG59XG5cbi5jb2wtMSB7XG4gIHBhZGRpbmc6IDElIDElO1xufVxuXG4uY29sLTIge1xuICBwYWRkaW5nOiAxJSAxJTtcbn1cblxuLmNvbC0xMiB7XG4gIHBhZGRpbmc6IDElIDElO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG5sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5idG4xIHtcbiAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcbiAgY29sb3I6IGdyYXk7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nOiA0cHggOHB4O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPWZpbGVdIHtcbiAgZm9udC1zaXplOiAxMDBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5mYS1wZW5jaWwtc3F1YXJlLW8ge1xuICBjb2xvcjogIzAwMGY5MjtcbiAgZm9udC1zaXplOiAyMXB4O1xufVxuXG4uZmE6aG92ZXIge1xuICBmb250LXNpemU6IDIzcHg7XG59Il19 */"

/***/ }),

/***/ "./src/app/master/mstjobseekerandjobprovider/mstjobseekerandjobprovider.component.ts":
/*!*******************************************************************************************!*\
  !*** ./src/app/master/mstjobseekerandjobprovider/mstjobseekerandjobprovider.component.ts ***!
  \*******************************************************************************************/
/*! exports provided: JobSeekerAndJobProviderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JobSeekerAndJobProviderComponent", function() { return JobSeekerAndJobProviderComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _JobSeekerAndJobProviderModel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./JobSeekerAndJobProviderModel */ "./src/app/master/mstjobseekerandjobprovider/JobSeekerAndJobProviderModel.ts");
/* harmony import */ var ngx_image_compress__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-image-compress */ "./node_modules/ngx-image-compress/fesm2015/ngx-image-compress.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");










let JobSeekerAndJobProviderComponent = class JobSeekerAndJobProviderComponent {
    constructor(apiService, fb, imageCompress, loaderService, datePipe) {
        this.apiService = apiService;
        this.fb = fb;
        this.imageCompress = imageCompress;
        this.loaderService = loaderService;
        this.datePipe = datePipe;
        this.JobSeekerAndJobProvide = new _JobSeekerAndJobProviderModel__WEBPACK_IMPORTED_MODULE_4__["JobSeekerAndJobProviderModel"]();
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_6__["Subject"]();
        this.isDtInitialized = false;
        this.sDate = new Date();
        this.start_date = new Date();
        this.topPosToStartShowing = 100;
        this.jobSeekerJobProviderForm = this.fb.group({
            job_type: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            image_URL: [''],
            start_date: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            end_date: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            imageRatio: [''],
            imagePath: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            sequenceNumber: ['']
        });
        this.datePickerConfig = Object.assign({}, {
            containerClass: 'theme-dark-blue',
            showWeekNumbers: false,
            dateInputFormat: 'DD-MM-YYYY'
        });
        this.minStartDate = new Date();
        // this.maxStartDate = new Date();
        this.minEndDate = new Date();
        // this.maxEndDate = new Date();
        //this.minEndDate.setDate(this.minEndDate.getDate() + 1);
        //this.minEndDate.setDate(this.minEndDate.getDate());
        this.minEndDate = new Date(this.minEndDate.setDate(this.minStartDate.getDate() + 1));
    }
    ngOnInit() {
        this.GetAllDetails();
        this.JobSeekerAndJobProvide.job_type = "JobProvider";
    }
    clearNewsAndUpdate() {
        this.jobSeekerJobProviderForm.reset();
        this.JobSeekerAndJobProvide.jsp_id = null;
        this.imageChangedEvent = "";
        this.croppedImage = null;
    }
    //Image cropping and compression Start
    newsImageUpload(e) {
        //alert(e.target.files[0]);
        this.loaderService.display(true);
        this.imageChangedEvent = e;
        $('#file-upload').removeAttr('src');
        this.JobSeekerAndJobProvide.filename = "";
        this.JobSeekerAndJobProvide.filetype = "";
        this.JobSeekerAndJobProvide.imageBase64String = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG" || extention == "png" || extention == "PNG") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB 
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.JobSeekerAndJobProvide.filename = file.name;
                    this.JobSeekerAndJobProvide.filetype = file.type;
                    this.JobSeekerAndJobProvide.imagePath = reader.result;
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG" && extention != "PNG" && extention != "png") {
                this.JobSeekerAndJobProvide.filename = "";
                this.JobSeekerAndJobProvide.filetype = "";
                this.JobSeekerAndJobProvide.imagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Please Upload the valid file");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.JobSeekerAndJobProvide.filename = "";
                this.JobSeekerAndJobProvide.filetype = "";
                this.JobSeekerAndJobProvide.imagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Document size should be less than 10MB");
                return;
            }
        }
    }
    imageCropped(event) {
        var orientation = 1;
        var rotation = 1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.jobSeekerJobProviderForm.controls.imagePath.setValue(this.croppedImage);
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.jobSeekerJobProviderForm.controls.imagePath.setValue(this.croppedImage);
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.jobSeekerJobProviderForm.controls.imagePath.setValue(this.croppedImage);
            });
        }
    }
    GetAllDetails() {
        this.apiService.getDATA("jobSeeker/getAll").subscribe(data => {
            if (data.success == true) {
                if (data.object != undefined && data.object != null) {
                    this.getAllDetailsList = data.object.masterJobSeekerProviderDtoList;
                    var jobprovider = [];
                    var jobseeker = [];
                    this.getAllDetailsList.forEach(data => {
                        if (data.isActive == '1' && data.jobType == 'JobProvider') {
                            jobprovider.push({ "id": data.jspId, "type": data.jobType, "image": data.imageURL, "startdate": data.startDate, "enddate": data.endDate, "seqno": data.sequenceNumber, "isActive": data.isActive });
                        }
                        else if (data.isActive == '1' && data.jobType == 'JobSeeker') {
                            jobseeker.push({ "id": data.jspId, "type": data.jobType, "image": data.imageURL, "startdate": data.startDate, "enddate": data.endDate, "seqno": data.sequenceNumber, "isActive": data.isActive });
                        }
                        this.jobproviderList = jobprovider;
                        this.jobseekerList = jobseeker;
                    });
                    if (this.isDtInitialized) {
                        this.dtElement.dtInstance.then((dtInstance) => {
                            dtInstance.destroy();
                            this.dtTrigger.next();
                        });
                    }
                    else {
                        this.isDtInitialized = true;
                        this.dtTrigger.next();
                    }
                    // this.dtTrigger.next();
                }
            }
        });
    }
    OnSubmit() {
        var Data;
        if (this.jobSeekerJobProviderForm.valid) {
            //this.loaderService.display(true);
            if (this.JobSeekerAndJobProvide.jsp_id != null || this.JobSeekerAndJobProvide.jsp_id != undefined) {
                let StartDate = this.JobSeekerAndJobProvide.start_date.toString();
                let EndDate = this.JobSeekerAndJobProvide.end_date.toString();
                if (StartDate.length > 10 && EndDate.length == 10) {
                    Data = {
                        "jspId": this.JobSeekerAndJobProvide.jsp_id,
                        "jobType": this.JobSeekerAndJobProvide.job_type,
                        "imageURL": this.croppedImage,
                        "startDate": this.datePipe.transform(this.JobSeekerAndJobProvide.start_date, "dd-MM-yyyy"),
                        "endDate": this.JobSeekerAndJobProvide.end_date,
                        "sequenceNumber": this.JobSeekerAndJobProvide.sequenceNumber
                    };
                }
                else if (EndDate.length > 10 && StartDate.length == 10) {
                    Data = {
                        "jspId": this.JobSeekerAndJobProvide.jsp_id,
                        "jobType": this.JobSeekerAndJobProvide.job_type,
                        "imageURL": this.croppedImage,
                        "startDate": this.JobSeekerAndJobProvide.start_date,
                        "endDate": this.datePipe.transform(this.JobSeekerAndJobProvide.end_date, "dd-MM-yyyy"),
                        "sequenceNumber": this.JobSeekerAndJobProvide.sequenceNumber
                    };
                }
                else if (StartDate.length > 10 || EndDate.length > 10) {
                    Data = {
                        "jspId": this.JobSeekerAndJobProvide.jsp_id,
                        "jobType": this.JobSeekerAndJobProvide.job_type,
                        "imageURL": this.croppedImage,
                        "startDate": this.datePipe.transform(this.JobSeekerAndJobProvide.start_date, "dd-MM-yyyy"),
                        "endDate": this.datePipe.transform(this.JobSeekerAndJobProvide.end_date, "dd-MM-yyyy"),
                        "sequenceNumber": this.JobSeekerAndJobProvide.sequenceNumber
                    };
                }
                else {
                    Data = {
                        "jspId": this.JobSeekerAndJobProvide.jsp_id,
                        "jobType": this.JobSeekerAndJobProvide.job_type,
                        "imageURL": this.croppedImage,
                        "startDate": this.JobSeekerAndJobProvide.start_date,
                        "endDate": this.JobSeekerAndJobProvide.end_date,
                        "sequenceNumber": this.JobSeekerAndJobProvide.sequenceNumber
                    };
                }
            }
            else {
                Data = {
                    "jspId": this.JobSeekerAndJobProvide.jsp_id,
                    "jobType": this.JobSeekerAndJobProvide.job_type,
                    "imageURL": this.croppedImage,
                    "startDate": this.datePipe.transform(this.JobSeekerAndJobProvide.start_date, "dd-MM-yyyy"),
                    "endDate": this.datePipe.transform(this.JobSeekerAndJobProvide.end_date, "dd-MM-yyyy"),
                    "sequenceNumber": this.JobSeekerAndJobProvide.sequenceNumber
                };
            }
            this.loaderService.display(true);
            this.apiService.Create("jobSeeker/save", Data).subscribe(data => {
                this.loaderService.display(false);
                if (data.success == true) {
                    if (data.object != "" && data.object != undefined) {
                        sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
                        this.GetAllDetails();
                        this.clearNewsAndUpdate();
                    }
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
                }
            }, error => {
                this.loaderService.display(false);
                console.log(error);
            });
        }
        else {
            this.apiService.validateAllFormFields(this.jobSeekerJobProviderForm);
            sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Please Select All The Fields");
        }
    }
    EditAndUpdate(Id) {
        window.scroll({
            top: 0,
            left: 0,
            behavior: 'smooth'
        });
        this.JobSeekerAndJobProvide.jsp_id = Id;
        let data1 = {
            "jspId": Id
        };
        this.apiService.Create("jobSeeker/getByJspId", data1).subscribe(data => {
            if (data.object != null && data.object != undefined) {
                this.JobSeekerAndJobProvide.job_type = data.object.jobType;
                this.JobSeekerAndJobProvide.imagePath = data.object.imageURL;
                this.jobSeekerJobProviderForm.controls.imagePath.setValue(this.JobSeekerAndJobProvide.imagePath);
                this.JobSeekerAndJobProvide.is_active = data.object.isActive;
                this.JobSeekerAndJobProvide.start_date = data.object.startDate;
                this.JobSeekerAndJobProvide.end_date = data.object.endDate;
                this.JobSeekerAndJobProvide.sequenceNumber = data.object.sequenceNumber;
                this.JobSeekerAndJobProvide.start_date = this.datePipe.transform(data.object.startDate, "dd-MM-yyyy");
                this.JobSeekerAndJobProvide.end_date = this.datePipe.transform(data.object.endDate, "dd-MM-yyyy");
                this.croppedImage = data.object.imageURL;
                // this.croppedImage = "";
                // this.apiService.getBase64ImageFromURL(this.JobSeekerAndJobProvide.imagePath).subscribe(base64data => {
                //   this.croppedImage = 'data:image/jpeg;base64,' + base64data;
                // });
            }
        });
    }
    DeleteNewsAndUpdate(id) {
        if (id.isActive == 0) {
            id.isActive = 1;
        }
        else {
            id.isActive = 0;
        }
        var da = {
            "jspId": id.id,
            "isActive": id.isActive
        };
        this.apiService.Create("jobSeeker/deleteByJspId", da).subscribe(data => {
            this.loaderService.display(false);
            if (data != undefined) {
                if (data.success) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    checkScroll() {
        const scrollPosition = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
        if (scrollPosition >= this.topPosToStartShowing) {
            this.isShow = true;
        }
        else {
            this.isShow = false;
        }
    }
};
JobSeekerAndJobProviderComponent.ctorParameters = () => [
    { type: _core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: ngx_image_compress__WEBPACK_IMPORTED_MODULE_5__["NgxImageCompressService"] },
    { type: src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_8__["LoaderService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_9__["DatePipe"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('window:scroll')
], JobSeekerAndJobProviderComponent.prototype, "checkScroll", null);
JobSeekerAndJobProviderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-mstjobseekerandjobprovider',
        template: __webpack_require__(/*! raw-loader!./mstjobseekerandjobprovider.component.html */ "./node_modules/raw-loader/index.js!./src/app/master/mstjobseekerandjobprovider/mstjobseekerandjobprovider.component.html"),
        styles: [__webpack_require__(/*! ./mstjobseekerandjobprovider.component.scss */ "./src/app/master/mstjobseekerandjobprovider/mstjobseekerandjobprovider.component.scss")]
    })
], JobSeekerAndJobProviderComponent);



/***/ }),

/***/ "./src/app/master/mstmakingvideoandevent/MakingVideoAndEventModel.ts":
/*!***************************************************************************!*\
  !*** ./src/app/master/mstmakingvideoandevent/MakingVideoAndEventModel.ts ***!
  \***************************************************************************/
/*! exports provided: MakingVideoAndEventModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MakingVideoAndEventModel", function() { return MakingVideoAndEventModel; });
class MakingVideoAndEventModel {
    constructor() {
        this.start_date = "";
        this.end_date = "";
    }
}


/***/ }),

/***/ "./src/app/master/mstmakingvideoandevent/mstmakingvideoandevent.component.scss":
/*!*************************************************************************************!*\
  !*** ./src/app/master/mstmakingvideoandevent/mstmakingvideoandevent.component.scss ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container-fluid {\n  margin-top: 1%;\n  margin-bottom: 1%;\n}\n\n.row {\n  padding: 1% 0%;\n}\n\n.col-3 {\n  padding: 1% 1%;\n}\n\n.col-4 {\n  padding: 1% 1%;\n}\n\n.col-1 {\n  padding: 1% 1%;\n}\n\n.col-2 {\n  padding: 1% 1%;\n}\n\n.col-12 {\n  padding: 1% 1%;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.fa-pencil-square-o {\n  color: #000f92;\n  font-size: 21px;\n}\n\n.fa:hover {\n  font-size: 23px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21hc3Rlci9tc3RtYWtpbmd2aWRlb2FuZGV2ZW50L21zdG1ha2luZ3ZpZGVvYW5kZXZlbnQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21hc3Rlci9tc3RtYWtpbmd2aWRlb2FuZGV2ZW50L21zdG1ha2luZ3ZpZGVvYW5kZXZlbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0EsaUJBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7QUNDSjs7QURFQTtFQUNJLHlCQUFBO0VBQ0EsY0FBQTtBQ0NKOztBRENBO0VBQ0ksZ0JBQUE7QUNFSjs7QURDQTtFQUNJLGdCQUFBO0FDRUo7O0FEQ0E7RUFDSSxzQkFBQTtFQUNBLFdBQUE7RUFDQSx1QkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUNFSjs7QURDQTtFQUNJLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxxQkFBQTtBQ0VKOztBRENBO0VBQ0ksZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxNQUFBO0VBQ0EsVUFBQTtBQ0VKOztBREdBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7QUNBSjs7QURFQTtFQUNJLGVBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL21hc3Rlci9tc3RtYWtpbmd2aWRlb2FuZGV2ZW50L21zdG1ha2luZ3ZpZGVvYW5kZXZlbnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyLWZsdWlkIHtcbiAgICBtYXJnaW4tdG9wOiAxJTtcbiAgICBtYXJnaW4tYm90dG9tOiAxJTtcbn1cblxuLnJvdyB7XG4gICAgcGFkZGluZzogMSUgMCU7XG59XG5cbi5jb2wtMyB7XG4gICAgcGFkZGluZzogMSUgMSU7XG59XG5cbi5jb2wtNCB7XG4gICAgcGFkZGluZzogMSUgMSU7XG59XG5cbi5jb2wtMSB7XG4gICAgcGFkZGluZzogMSUgMSU7XG59XG5cbi5jb2wtMiB7XG4gICAgcGFkZGluZzogMSUgMSU7XG59XG5cbi5jb2wtMTIge1xuICAgIHBhZGRpbmc6IDElIDElO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gICAgY29sb3I6ICNmYmUxMTY7XG59XG5sYWJlbCB7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cbi8vIEZvciBJbWFnZSBDcm9waW5nIGRhdGU6MTItMDMtMjAyMC0tLS0tLS0tLS0tLVN0YXJ0LS0tLS0tLS0tLS0tLS1cbmxhYmVsIHtcbiAgICBmb250LXdlaWdodDogNzAwO1xufVxuXG4uYnRuMSB7XG4gICAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcbiAgICBjb2xvcjogZ3JheTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiA0cHggOHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPWZpbGVdIHtcbiAgICBmb250LXNpemU6IDEwMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICBvcGFjaXR5OiAwO1xufVxuLy8gRm9yIEltYWdlIENyb3BpbmcgZGF0ZToxMi0wMy0yMDIwLS0tRW5kLS0tLS0tLS0tLVxuXG5cbi5mYS1wZW5jaWwtc3F1YXJlLW97XG4gICAgY29sb3I6cmdiKDAsIDE1LCAxNDYpOyBcbiAgICBmb250LXNpemU6IDIxcHg7XG59XG4uZmE6aG92ZXJ7XG4gICAgZm9udC1zaXplOiAyM3B4O1xufSIsIi5jb250YWluZXItZmx1aWQge1xuICBtYXJnaW4tdG9wOiAxJTtcbiAgbWFyZ2luLWJvdHRvbTogMSU7XG59XG5cbi5yb3cge1xuICBwYWRkaW5nOiAxJSAwJTtcbn1cblxuLmNvbC0zIHtcbiAgcGFkZGluZzogMSUgMSU7XG59XG5cbi5jb2wtNCB7XG4gIHBhZGRpbmc6IDElIDElO1xufVxuXG4uY29sLTEge1xuICBwYWRkaW5nOiAxJSAxJTtcbn1cblxuLmNvbC0yIHtcbiAgcGFkZGluZzogMSUgMSU7XG59XG5cbi5jb2wtMTIge1xuICBwYWRkaW5nOiAxJSAxJTtcbn1cblxuLmNhcmQtaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJkM2U1MDtcbiAgY29sb3I6ICNmYmUxMTY7XG59XG5cbmxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxubGFiZWwge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG4uYnRuMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gIGNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogNHB4IDhweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1maWxlXSB7XG4gIGZvbnQtc2l6ZTogMTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBvcGFjaXR5OiAwO1xufVxuXG4uZmEtcGVuY2lsLXNxdWFyZS1vIHtcbiAgY29sb3I6ICMwMDBmOTI7XG4gIGZvbnQtc2l6ZTogMjFweDtcbn1cblxuLmZhOmhvdmVyIHtcbiAgZm9udC1zaXplOiAyM3B4O1xufSJdfQ== */"

/***/ }),

/***/ "./src/app/master/mstmakingvideoandevent/mstmakingvideoandevent.component.ts":
/*!***********************************************************************************!*\
  !*** ./src/app/master/mstmakingvideoandevent/mstmakingvideoandevent.component.ts ***!
  \***********************************************************************************/
/*! exports provided: MakingVideoAndEventComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MakingVideoAndEventComponent", function() { return MakingVideoAndEventComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _MakingVideoAndEventModel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./MakingVideoAndEventModel */ "./src/app/master/mstmakingvideoandevent/MakingVideoAndEventModel.ts");
/* harmony import */ var ngx_image_compress__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-image-compress */ "./node_modules/ngx-image-compress/fesm2015/ngx-image-compress.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");










let MakingVideoAndEventComponent = class MakingVideoAndEventComponent {
    constructor(apiService, fb, imageCompress, loaderService, datePipe) {
        this.apiService = apiService;
        this.fb = fb;
        this.imageCompress = imageCompress;
        this.loaderService = loaderService;
        this.datePipe = datePipe;
        this.MakingvideoAndEvent = new _MakingVideoAndEventModel__WEBPACK_IMPORTED_MODULE_4__["MakingVideoAndEventModel"]();
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_6__["Subject"]();
        this.isDtInitialized = false;
        this.sDate = new Date();
        this.start_date = new Date();
        this.topPosToStartShowing = 100;
        this.MakingvideoAndEventForm = this.fb.group({
            video_type: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            image_URL: [''],
            title: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            video_link: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            //start_date: ['', Validators.required],
            // end_date: ['', Validators.required],
            imageRatio: [''],
            imagePath: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            sequenceNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
        this.datePickerConfig = Object.assign({}, {
            containerClass: 'theme-dark-blue',
            showWeekNumbers: false,
            dateInputFormat: 'DD-MM-YYYY'
        });
        this.minStartDate = new Date();
        // this.maxStartDate = new Date();
        this.minEndDate = new Date();
        // this.maxEndDate = new Date();
        //this.minEndDate.setDate(this.minEndDate.getDate() + 1);
        //this.minEndDate.setDate(this.minEndDate.getDate());
        this.minEndDate = new Date(this.minEndDate.setDate(this.minStartDate.getDate() + 1));
    }
    ngOnInit() {
        this.GetAllDetails();
        this.MakingvideoAndEvent.video_type = "MakingVideo";
    }
    clearNewsAndUpdate() {
        this.MakingvideoAndEventForm.reset();
        this.MakingvideoAndEvent.mve_id = null;
        this.imageChangedEvent = "";
        this.croppedImage = null;
        this.MakingvideoAndEvent.video_type = "MakingVideo";
        this.MakingvideoAndEvent.sequenceNumber = null;
    }
    //Image cropping and compression Start
    newsImageUpload(e) {
        this.imageChangedEvent = e;
        this.loaderService.display(true);
        $('#file-upload').removeAttr('src');
        this.MakingvideoAndEvent.filename = "";
        this.MakingvideoAndEvent.filetype = "";
        this.MakingvideoAndEvent.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG" || extention == "png" || extention == "PNG") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB 
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.MakingvideoAndEvent.filename = file.name;
                    this.MakingvideoAndEvent.filetype = file.type;
                    this.MakingvideoAndEvent.imagePath = reader.result;
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG" && extention != "PNG" && extention != "png") {
                this.MakingvideoAndEvent.filename = "";
                this.MakingvideoAndEvent.filetype = "";
                this.MakingvideoAndEvent.imagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Please Upload the valid file");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.MakingvideoAndEvent.filename = "";
                this.MakingvideoAndEvent.filetype = "";
                this.MakingvideoAndEvent.imagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Document size should be less than 10MB");
                return;
            }
        }
    }
    imageCropped(event) {
        var orientation = 1;
        var rotation = 1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.MakingvideoAndEventForm.controls.imagePath.setValue(this.croppedImage);
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.MakingvideoAndEventForm.controls.imagePath.setValue(this.croppedImage);
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.MakingvideoAndEventForm.controls.imagePath.setValue(this.croppedImage);
            });
        }
    }
    GetAllDetails() {
        this.apiService.getDATA("makingVideoEvent/getAll").subscribe(data => {
            if (data.success == true) {
                if (data.object != undefined && data.object != null) {
                    var mvvideo = [];
                    var evvideo = [];
                    var svvideo = [];
                    var yvvideo = [];
                    this.getAllDetailsList = data.object.masterMakingVideoEventDtos;
                    this.getAllDetailsList.forEach(data => {
                        if (data.isActive == '1' && data.videoType == 'MakingVideo') {
                            mvvideo.push({ "id": data.mveId, "type": data.videoType, "title": data.title, "link": data.videoLink, "image": data.imageURL, "createdDate": data.createdDate, "seqno": data.sequenceNumber, "isActive": data.isActive });
                        }
                        else if (data.isActive == '1' && data.videoType == 'EventVideo') {
                            evvideo.push({ "id": data.mveId, "type": data.videoType, "title": data.title, "link": data.videoLink, "image": data.imageURL, "createdDate": data.createdDate, "seqno": data.sequenceNumber, "isActive": data.isActive });
                        }
                        else if (data.isActive == '1' && data.videoType == 'SinighamaVideo') {
                            svvideo.push({ "id": data.mveId, "type": data.videoType, "title": data.title, "link": data.videoLink, "image": data.imageURL, "createdDate": data.createdDate, "seqno": data.sequenceNumber, "isActive": data.isActive });
                        }
                        else if (data.isActive == '1' && data.videoType == 'SinighamaYoutubeVideo') {
                            yvvideo.push({ "id": data.mveId, "type": data.videoType, "title": data.title, "link": data.videoLink, "image": data.imageURL, "createdDate": data.createdDate, "seqno": data.sequenceNumber, "isActive": data.isActive });
                        }
                    });
                    this.makingvideoList = mvvideo;
                    this.eventvideoList = evvideo;
                    this.sinighamavideoList = svvideo;
                    this.youtubevideoList = yvvideo;
                    if (this.isDtInitialized) {
                        this.dtElement.dtInstance.then((dtInstance) => {
                            dtInstance.destroy();
                            this.dtTrigger.next();
                        });
                    }
                    else {
                        this.isDtInitialized = true;
                        this.dtTrigger.next();
                    }
                    //this.dtTrigger.next();
                }
            }
        });
    }
    OnSubmit() {
        var Data;
        if (this.MakingvideoAndEventForm.valid) {
            //this.loaderService.display(true);
            if (this.MakingvideoAndEvent.mve_id != null || this.MakingvideoAndEvent.mve_id != undefined) {
                // let StartDate = this.MakingvideoAndEvent.start_date.toString();
                // let EndDate = this.MakingvideoAndEvent.end_date.toString()
                //   if (StartDate.length > 10) {
                //     Data = {
                //       "mveId": this.MakingvideoAndEvent.mve_id,
                //       "videoType": this.MakingvideoAndEvent.video_type,
                //       "videoLink": this.MakingvideoAndEvent.video_link,
                //       "imageURL": this.croppedImage,
                //       "title": this.MakingvideoAndEvent.title,
                //       "startDate": this.datePipe.transform(this.MakingvideoAndEvent.start_date, "dd-MM-yyyy"),
                //      // "endDate": this.MakingvideoAndEvent.end_date,
                //       "sequenceNumber": this.MakingvideoAndEvent.sequenceNumber
                //     };
                //   }
                //   else if (StartDate.length == 10) {
                //     Data = {
                //       "mveId": this.MakingvideoAndEvent.mve_id,
                //       "videoType": this.MakingvideoAndEvent.video_type,
                //       "videoLink": this.MakingvideoAndEvent.video_link,
                //       "imageURL": this.croppedImage,
                //       "title": this.MakingvideoAndEvent.title,
                //       "startDate": this.MakingvideoAndEvent.start_date,
                //      // "endDate": this.datePipe.transform(this.MakingvideoAndEvent.end_date, "dd-MM-yyyy"),
                //       "sequenceNumber": this.MakingvideoAndEvent.sequenceNumber
                //     };
                //   }
                //   else if (StartDate.length > 10) {
                //     Data = {
                //       "mveId": this.MakingvideoAndEvent.mve_id,
                //       "videoType": this.MakingvideoAndEvent.video_type,
                //       "videoLink": this.MakingvideoAndEvent.video_link,
                //       "imageURL": this.croppedImage,
                //       "title": this.MakingvideoAndEvent.title,
                //       "startDate": this.datePipe.transform(this.MakingvideoAndEvent.start_date, "dd-MM-yyyy"),
                //       //"endDate": this.datePipe.transform(this.MakingvideoAndEvent.end_date, "dd-MM-yyyy"),
                //       "sequenceNumber": this.MakingvideoAndEvent.sequenceNumber
                //     };
                //   }
                //   else {
                //     Data = {
                //       "mveId": this.MakingvideoAndEvent.mve_id,
                //       "videoType": this.MakingvideoAndEvent.video_type,
                //       "videoLink": this.MakingvideoAndEvent.video_link,
                //       "imageURL": this.croppedImage,
                //       "title": this.MakingvideoAndEvent.title,
                //       "startDate": this.MakingvideoAndEvent.start_date,
                //      // "endDate": this.MakingvideoAndEvent.end_date,
                //       "sequenceNumber": this.MakingvideoAndEvent.sequenceNumber
                //     };
                //   }
                // } else {
                // Data = {
                //   "mveId": this.MakingvideoAndEvent.mve_id,
                //   "videoType": this.MakingvideoAndEvent.video_type,
                //   "videoLink": this.MakingvideoAndEvent.video_link,
                //   "imageURL": this.croppedImage,
                //   "title": this.MakingvideoAndEvent.title,
                //  "startDate": this.datePipe.transform(this.MakingvideoAndEvent.start_date, "dd-MM-yyyy"),
                //  "endDate": this.datePipe.transform(this.MakingvideoAndEvent.end_date, "dd-MM-yyyy"),
                //   "sequenceNumber": this.MakingvideoAndEvent.sequenceNumber
                // };
            }
            Data = {
                "mveId": this.MakingvideoAndEvent.mve_id,
                "videoType": this.MakingvideoAndEvent.video_type,
                "videoLink": this.MakingvideoAndEvent.video_link,
                "imageURL": this.croppedImage,
                "title": this.MakingvideoAndEvent.title,
                // "startDate": this.datePipe.transform(this.MakingvideoAndEvent.start_date, "dd-MM-yyyy"),
                // "endDate": this.datePipe.transform(this.MakingvideoAndEvent.end_date, "dd-MM-yyyy"),
                "sequenceNumber": this.MakingvideoAndEvent.sequenceNumber
            };
            this.loaderService.display(true);
            this.apiService.Create("makingVideoEvent/save", Data).subscribe(data => {
                this.loaderService.display(false);
                if (data.success == true) {
                    if (data.object != "" && data.object != undefined) {
                        sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
                        this.GetAllDetails();
                        this.clearNewsAndUpdate();
                    }
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
                }
            }, error => {
                console.log(error);
                this.loaderService.display(false);
            });
        }
        else {
            this.apiService.validateAllFormFields(this.MakingvideoAndEventForm);
            sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Please enter all the fields");
        }
    }
    EditAndUpdate(Id) {
        window.scroll({
            top: 0,
            left: 0,
            behavior: 'smooth'
        });
        this.MakingvideoAndEvent.mve_id = Id;
        let data1 = {
            "mveId": Id
        };
        this.apiService.Create("makingVideoEvent/getById", data1).subscribe(data => {
            if (data.object != null && data.object != undefined) {
                this.MakingvideoAndEvent.title = data.object.title;
                this.MakingvideoAndEvent.video_link = data.object.videoLink;
                this.MakingvideoAndEvent.imagePath = data.object.imageURL;
                this.MakingvideoAndEventForm.controls.imagePath.setValue(this.MakingvideoAndEvent.imagePath);
                this.MakingvideoAndEvent.video_type = data.object.videoType;
                // this.MakingvideoAndEvent.start_date = data.object.startDate;
                // this.MakingvideoAndEvent.end_date = data.object.endDate;
                this.MakingvideoAndEvent.sequenceNumber = data.object.sequenceNumber;
                this.MakingvideoAndEvent.start_date = this.datePipe.transform(data.object.startDate, "dd-MM-yyyy");
                this.MakingvideoAndEvent.end_date = this.datePipe.transform(data.object.endDate, "dd-MM-yyyy");
                this.croppedImage = data.object.imageURL;
                // this.croppedImage = "";
                // this.apiService.getBase64ImageFromURL(this.MakingvideoAndEvent.imagePath).subscribe(base64data => {
                //   this.croppedImage = 'data:image/jpeg;base64,' + base64data;
                // });
            }
        });
    }
    ActiveDeactive(gd) {
        if (gd.isActive == 0) {
            gd.isActive = 1;
        }
        else {
            gd.isActive = 0;
        }
        let mnu_Id = gd.id;
        let isActive = gd.isActive;
        var da = {
            "mveId": mnu_Id,
            "isActive": isActive
        };
        this.loaderService.display(true);
        this.apiService.Create("makingVideoEvent/activeOrDeactiveById", da).subscribe(data => {
            this.loaderService.display(false);
            if (data != undefined) {
                if (data.success) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    checkScroll() {
        const scrollPosition = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
        if (scrollPosition >= this.topPosToStartShowing) {
            this.isShow = true;
        }
        else {
            this.isShow = false;
        }
    }
};
MakingVideoAndEventComponent.ctorParameters = () => [
    { type: _core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: ngx_image_compress__WEBPACK_IMPORTED_MODULE_5__["NgxImageCompressService"] },
    { type: src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_8__["LoaderService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_9__["DatePipe"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('window:scroll')
], MakingVideoAndEventComponent.prototype, "checkScroll", null);
MakingVideoAndEventComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-mstmakingvideoandevent',
        template: __webpack_require__(/*! raw-loader!./mstmakingvideoandevent.component.html */ "./node_modules/raw-loader/index.js!./src/app/master/mstmakingvideoandevent/mstmakingvideoandevent.component.html"),
        styles: [__webpack_require__(/*! ./mstmakingvideoandevent.component.scss */ "./src/app/master/mstmakingvideoandevent/mstmakingvideoandevent.component.scss")]
    })
], MakingVideoAndEventComponent);



/***/ }),

/***/ "./src/app/master/newsandupdates/NewsAndUpdatesModel.ts":
/*!**************************************************************!*\
  !*** ./src/app/master/newsandupdates/NewsAndUpdatesModel.ts ***!
  \**************************************************************/
/*! exports provided: NewsAndUpdatesModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NewsAndUpdatesModel", function() { return NewsAndUpdatesModel; });
class NewsAndUpdatesModel {
    constructor() {
        this.newsPhotosDtos = [];
    }
}


/***/ }),

/***/ "./src/app/master/newsandupdates/newsandupdates.component.scss":
/*!*********************************************************************!*\
  !*** ./src/app/master/newsandupdates/newsandupdates.component.scss ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.btn2 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.newsth {\n  text-align: center;\n}\n\n.fa-pencil-square-o {\n  color: #000f92;\n  font-size: 21px;\n}\n\n.fa-trash {\n  color: #ff0000;\n  font-size: 21px;\n}\n\n.fa:hover {\n  font-size: 25px;\n  color: black;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21hc3Rlci9uZXdzYW5kdXBkYXRlcy9uZXdzYW5kdXBkYXRlcy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbWFzdGVyL25ld3NhbmR1cGRhdGVzL25ld3NhbmR1cGRhdGVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUJBQUE7RUFDQSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtBQ0NKOztBREdBO0VBQ0ksZ0JBQUE7QUNBSjs7QURHQTtFQUNJLHNCQUFBO0VBQ0EsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQ0FKOztBREdBO0VBQ0ksc0JBQUE7RUFDQSxXQUFBO0VBQ0EsdUJBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0FDQUo7O0FER0E7RUFDSSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EscUJBQUE7QUNBSjs7QURHQTtFQUNJLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxPQUFBO0VBQ0EsTUFBQTtFQUNBLFVBQUE7QUNBSjs7QURJQTtFQUNJLGtCQUFBO0FDREo7O0FESUE7RUFDSSxjQUFBO0VBQ0EsZUFBQTtBQ0RKOztBRElBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7QUNESjs7QURJQTtFQUNJLGVBQUE7RUFDQSxZQUFBO0FDREoiLCJmaWxlIjoic3JjL2FwcC9tYXN0ZXIvbmV3c2FuZHVwZGF0ZXMvbmV3c2FuZHVwZGF0ZXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gICAgY29sb3I6ICNmYmUxMTY7XG59XG5cbmxhYmVsIHtcbiAgICBmb250LXdlaWdodDogNzAwO1xufVxuXG4vLyBGb3IgSW1hZ2UgQ3JvcGluZyBkYXRlOjEyLTAzLTIwMjAtLS0tLS0tLS0tLS1TdGFydC0tLS0tLS0tLS0tLS0tXG5sYWJlbCB7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLmJ0bjEge1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gICAgY29sb3I6IGdyYXk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgcGFkZGluZzogNHB4IDhweDtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4uYnRuMiB7XG4gICAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcbiAgICBjb2xvcjogZ3JheTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiA0cHggOHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPVwiZmlsZVwiXSB7XG4gICAgZm9udC1zaXplOiAxMDBweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDA7XG4gICAgb3BhY2l0eTogMDtcbn1cblxuLy8gRm9yIEltYWdlIENyb3BpbmcgZGF0ZToxMi0wMy0yMDIwLS0tRW5kLS0tLS0tLS0tLVxuLm5ld3N0aCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZmEtcGVuY2lsLXNxdWFyZS1vIHtcbiAgICBjb2xvcjogcmdiKDAsIDE1LCAxNDYpO1xuICAgIGZvbnQtc2l6ZTogMjFweDtcbn1cblxuLmZhLXRyYXNoIHtcbiAgICBjb2xvcjogI2ZmMDAwMDtcbiAgICBmb250LXNpemU6IDIxcHg7XG59XG5cbi5mYTpob3ZlciB7XG4gICAgZm9udC1zaXplOiAyNXB4O1xuICAgIGNvbG9yOiBibGFjaztcbn0iLCIuY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG5sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5idG4xIHtcbiAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcbiAgY29sb3I6IGdyYXk7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nOiA0cHggOHB4O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5idG4yIHtcbiAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcbiAgY29sb3I6IGdyYXk7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nOiA0cHggOHB4O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPWZpbGVdIHtcbiAgZm9udC1zaXplOiAxMDBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5uZXdzdGgge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5mYS1wZW5jaWwtc3F1YXJlLW8ge1xuICBjb2xvcjogIzAwMGY5MjtcbiAgZm9udC1zaXplOiAyMXB4O1xufVxuXG4uZmEtdHJhc2gge1xuICBjb2xvcjogI2ZmMDAwMDtcbiAgZm9udC1zaXplOiAyMXB4O1xufVxuXG4uZmE6aG92ZXIge1xuICBmb250LXNpemU6IDI1cHg7XG4gIGNvbG9yOiBibGFjaztcbn0iXX0= */"

/***/ }),

/***/ "./src/app/master/newsandupdates/newsandupdates.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/master/newsandupdates/newsandupdates.component.ts ***!
  \*******************************************************************/
/*! exports provided: NewsandupdatesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NewsandupdatesComponent", function() { return NewsandupdatesComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _NewsAndUpdatesModel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./NewsAndUpdatesModel */ "./src/app/master/newsandupdates/NewsAndUpdatesModel.ts");
/* harmony import */ var ngx_image_compress__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-image-compress */ "./node_modules/ngx-image-compress/fesm2015/ngx-image-compress.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _core_services_loader_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");









let NewsandupdatesComponent = class NewsandupdatesComponent {
    constructor(apiService, fb, imageCompress, loaderService) {
        this.apiService = apiService;
        this.fb = fb;
        this.imageCompress = imageCompress;
        this.loaderService = loaderService;
        this.NewsAndUpdates = new _NewsAndUpdatesModel__WEBPACK_IMPORTED_MODULE_4__["NewsAndUpdatesModel"]();
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_6__["Subject"]();
        this.isDtInitialized = false;
        this.modules = {};
        this.imageChangedEvent01 = '';
        this.imageSendArr01 = [];
        //Image cropping and compression End 
        //Image cropping and compression  for 3 photos
        this.imageChangedEvent31 = '';
        this.imageChangedEvent32 = '';
        this.imageChangedEvent33 = '';
        this.imageSendArr03 = [];
        //image cropping and saving for 7 image template 
        this.imageChangedEvent71 = '';
        this.imageChangedEvent72 = '';
        this.imageChangedEvent73 = '';
        this.imageChangedEvent74 = '';
        this.imageChangedEvent75 = '';
        this.imageChangedEvent76 = '';
        this.imageChangedEvent77 = '';
        // croppedImageProfile: any = '';
        this.imageSendArr07 = [];
        this.userCroppedPhoto = ''; // image crop
        this.topPosToStartShowing = 100;
        this.newsAndUpdatesForm = this.fb.group({
            news_title: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(300), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(2)])],
            news_description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(8000), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(2)])],
            // seq_no: ['', Validators.required],
            userName: [''],
            userImage: [''],
            news_type: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            photo_type: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            imagePath: [''],
            imagePath31: [''],
            imagePath32: [''],
            imagePath33: [''],
            imagePath71: [''],
            imagePath72: [''],
            imagePath73: [''],
            imagePath74: [''],
            imagePath75: [''],
            imagePath76: [''],
            imagePath77: [''],
            newsType_table: ['']
        });
        this.modules = {
            'toolbar': [
                ['bold', 'italic', 'underline', 'strike'],
                [{ 'header': 1 }, { 'header': 2 }],
                [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                // [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript
                // [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
                // [{ 'direction': 'rtl' }],                         // text direction
                [{ 'size': ['small', false, 'large', 'huge'] }],
                // [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                [{ 'color': [] }, { 'background': [] }],
                [{ 'font': [] }],
                [{ 'align': [] }],
                //  ['clean'],                                       // remove formatting button
                ['link']
            ]
        };
    }
    ngOnInit() {
        this.NewsAndUpdates.news_type = 'MovieNews';
        this.NewsAndUpdates.photo_type = '1';
        this.GetAllDetails();
    }
    initnewsRows() {
        return this.fb.group({});
    }
    clearNewsAndUpdate() {
        this.newsAndUpdatesForm.reset();
        this.NewsAndUpdates.mnu_id = null;
        this.NewsAndUpdates.news_type = 'MovieNews';
        // this.NewsAndUpdates.news_title = "";
        // this.NewsAndUpdates.news_description = "";
        // this.NewsAndUpdates.seq_no = null;
        this.NewsAndUpdates.photo_type = '1';
        this.NewsAndUpdates.temp_type = '1';
        this.NewsAndUpdates.temp_type = '1';
        this.imageChangedEvent01 = "";
        this.url01 = "";
        this.croppedImage = null;
        this.imageChangedEvent31 = "";
        this.url31 = '';
        this.imageChangedEvent32 = "";
        this.url32 = '';
        this.imageChangedEvent33 = '';
        this.url33 = '';
        this.imageChangedEvent71 = "";
        this.url1 = '';
        this.imageChangedEvent72 = "";
        this.url2 = '';
        this.imageChangedEvent73 = "";
        this.url3 = '';
        this.imageChangedEvent74 = "";
        this.url4 = '';
        this.imageChangedEvent75 = "";
        this.url5 = '';
        this.imageChangedEvent76 = "";
        this.url6 = '';
        this.imageChangedEvent77 = "";
        this.url7 = '';
        this.NewsAndUpdates.userImage = "";
        this.NewsAndUpdates.userName = "";
        this.userCroppedPhoto = "";
    }
    fileChangeEventFirstType(e, seqno) {
        this.loaderService.display(true);
        this.imageChangedEvent01 = "";
        var orientation = 1;
        this.NewsAndUpdates.filename = "";
        this.NewsAndUpdates.filetype = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG" || extention == "png" || extention == "PNG") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB 
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    if (seqno == 1) {
                        this.url01 = reader.result;
                        this.imageChangedEvent01 = e;
                    }
                    this.NewsAndUpdates.filename = file.name;
                    this.NewsAndUpdates.filetype = file.type;
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "JPG" && extention != "jpg" && extention != "PNG" && extention != "png") {
                this.NewsAndUpdates.filename = "";
                this.NewsAndUpdates.filetype = "";
                // this.profileMember.imageBase64String = "";
                // this.adminPage.profileImagePath = this.adminPage.imageBase64String;
                //  $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Please Upload the valid file");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.NewsAndUpdates.filename = "";
                this.NewsAndUpdates.filetype = "";
                // this.profileMember.imageBase64String = "";
                // this.adminPage.profileImagePath = "";
                //  $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Document size should be less than 10MB");
                return;
            }
        }
    }
    imageCropped(event, seqno) {
        var orientation = 1;
        this.imageCompress.compressFile(event.base64, orientation, 80, 80).then(result => {
            if (this.imageChangedEvent01) {
                this.url01 = result;
            }
            this.loaderService.display(false);
            const csv = result;
            // this.profileMember.imageBase64String = csv.replace("data:image/jpeg;base64,", "");
            let cur = [];
            cur = this.imageSendArr03.filter((temp) => temp.seqNum == seqno);
            if (cur.length > 0) {
                this.imageSendArr03.forEach(da => {
                    if (da.seqNum == seqno) {
                        da.imagePath = csv;
                    }
                });
            }
            else {
                let obj = {
                    "imagePath": csv,
                    "seqNum": seqno
                };
                this.imageSendArr01.push(obj);
            }
        });
    }
    fileChangeEventSecondType(e, seqno) {
        this.loaderService.display(true);
        this.imageChangedEvent31 = "";
        this.imageChangedEvent32 = "";
        this.imageChangedEvent33 = "";
        this.NewsAndUpdates.filename = "";
        this.NewsAndUpdates.filetype = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG" || extention == "png" || extention == "PNG") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB 
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    if (seqno == 1) {
                        this.url31 = reader.result;
                        this.imageChangedEvent31 = e;
                    }
                    else if (seqno == 2) {
                        this.url32 = reader.result;
                        this.imageChangedEvent32 = e;
                    }
                    else if (seqno == 3) {
                        this.url33 = reader.result;
                        this.imageChangedEvent33 = e;
                    }
                    this.NewsAndUpdates.filename = file.name;
                    this.NewsAndUpdates.filetype = file.type;
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "JPG" && extention != "jpg" && extention != "PNG" && extention != "png") {
                this.NewsAndUpdates.filename = "";
                this.NewsAndUpdates.filetype = "";
                // this.profileMember.imageBase64String = "";
                // this.adminPage.profileImagePath = this.adminPage.imageBase64String;
                //  $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Please Upload the valid file");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.NewsAndUpdates.filename = "";
                this.NewsAndUpdates.filetype = "";
                // this.profileMember.imageBase64String = "";
                // this.adminPage.profileImagePath = "";
                //  $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Document size should be less than 10MB");
                return;
            }
        }
    }
    imageCroppedSecondType(event, seqno) {
        var orientation = 1;
        this.imageCompress.compressFile(event.base64, orientation, 80, 80).then(result => {
            if (this.imageChangedEvent31) {
                this.url31 = result;
            }
            else if (this.imageChangedEvent32) {
                this.url32 = result;
            }
            else if (this.imageChangedEvent33) {
                this.url33 = result;
            }
            this.loaderService.display(false);
            const csv = result;
            // this.profileMember.imageBase64String = csv.replace("data:image/jpeg;base64,", "");
            let cur = [];
            cur = this.imageSendArr03.filter((temp) => temp.seqNum == seqno);
            if (cur.length > 0) {
                this.imageSendArr03.forEach(da => {
                    if (da.seqNum == seqno) {
                        da.imagePath = csv;
                    }
                });
            }
            else {
                let obj = {
                    "imagePath": csv,
                    "seqNum": seqno
                };
                this.imageSendArr03.push(obj);
            }
        });
    }
    fileChangeEventProfile(e, seqno) {
        this.loaderService.display(true);
        this.imageChangedEvent71 = "";
        this.imageChangedEvent72 = "";
        this.imageChangedEvent73 = "";
        this.imageChangedEvent74 = "";
        this.imageChangedEvent75 = "";
        this.imageChangedEvent76 = "";
        this.imageChangedEvent77 = "";
        var orientation = 1;
        this.NewsAndUpdates.filename = "";
        this.NewsAndUpdates.filetype = "";
        // this.profileMember.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG" || extention == "png" || extention == "PNG") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB 
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    if (seqno == 1) {
                        this.url1 = reader.result;
                        this.imageChangedEvent71 = e;
                    }
                    else if (seqno == 2) {
                        this.url2 = reader.result;
                        this.imageChangedEvent72 = e;
                    }
                    else if (seqno == 3) {
                        this.url3 = reader.result;
                        this.imageChangedEvent73 = e;
                    }
                    else if (seqno == 4) {
                        this.url4 = reader.result;
                        this.imageChangedEvent74 = e;
                    }
                    else if (seqno == 5) {
                        this.url5 = reader.result;
                        this.imageChangedEvent75 = e;
                    }
                    else if (seqno == 6) {
                        this.url6 = reader.result;
                        this.imageChangedEvent76 = e;
                    }
                    else if (seqno == 7) {
                        this.url7 = reader.result;
                        this.imageChangedEvent77 = e;
                    }
                    this.NewsAndUpdates.filename = file.name;
                    this.NewsAndUpdates.filetype = file.type;
                    //this.adminPage.profileImagePath = this.adminPage.imageBase64String;
                    //this.model.user_imagepath = this.model.imageBase64String;
                };
                // console.log("====>"+this.profileMember.imageBase64String);
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "JPG" && extention != "jpg" && extention != "PNG" && extention != "png") {
                this.NewsAndUpdates.filename = "";
                this.NewsAndUpdates.filetype = "";
                // this.profileMember.imageBase64String = "";
                // this.adminPage.profileImagePath = this.adminPage.imageBase64String;
                //  $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Please Upload the valid file");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.NewsAndUpdates.filename = "";
                this.NewsAndUpdates.filetype = "";
                // this.profileMember.imageBase64String = "";
                // this.adminPage.profileImagePath = "";
                //  $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Document size should be less than 10MB");
                return;
            }
        }
    }
    //cropped image 
    imageCroppedProfile(event, seqno) {
        var orientation = 1;
        this.imageCompress.compressFile(event.base64, orientation, 80, 80).then(result => {
            if (this.imageChangedEvent71) {
                this.url1 = result;
            }
            else if (this.imageChangedEvent72) {
                this.url2 = result;
            }
            else if (this.imageChangedEvent73) {
                this.url3 = result;
            }
            else if (this.imageChangedEvent74) {
                this.url4 = result;
            }
            else if (this.imageChangedEvent75) {
                this.url5 = result;
            }
            else if (this.imageChangedEvent76) {
                this.url6 = result;
            }
            else if (this.imageChangedEvent77) {
                this.url7 = result;
            }
            this.loaderService.display(false);
            const csv = result;
            // this.profileMember.imageBase64String = csv.replace("data:image/jpeg;base64,", "");
            let cur = [];
            cur = this.imageSendArr07.filter((temp) => temp.seqNum == seqno);
            if (cur.length > 0) {
                this.imageSendArr07.forEach(da => {
                    if (da.seqNum == seqno) {
                        da.imagePath = csv;
                    }
                });
            }
            else {
                let obj = {
                    "imagePath": csv,
                    "seqNum": seqno
                };
                this.imageSendArr07.push(obj);
            }
        });
    }
    imageLoadedProfile() {
        // show cropper
    }
    cropperReadyProfile() {
        // cropper ready
    }
    loadImageFailedProfile() {
        // show message
    }
    //upload file
    authorPhoto(e) {
        $('#file-upload').removeAttr('src');
        this.NewsAndUpdates.filename = "";
        this.NewsAndUpdates.filetype = "";
        this.NewsAndUpdates.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0] && e.target.files[0].size <= 10000000) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if (extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") // 10000000 bytes = 10MB 
             {
                this.loaderService.display(true);
                this.imageChangedEvent = e; // image crop
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.NewsAndUpdates.filename = file.name;
                    this.NewsAndUpdates.filetype = file.type;
                    // const csv: string = reader.result as string;
                    // this.adminPage.profileImage = csv.replace("data:image/jpeg;base64,", "");
                    this.NewsAndUpdates.userImage = reader.result;
                };
                this.newsAndUpdatesForm.controls.userImage.setValue(this.NewsAndUpdates.userImage);
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG") {
                this.NewsAndUpdates.filename = "";
                this.NewsAndUpdates.filetype = "";
                this.NewsAndUpdates.userImage = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.NewsAndUpdates.filename = "";
                this.NewsAndUpdates.filetype = "";
                this.NewsAndUpdates.userImage = "";
                // this.adminPage.profileImagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Image size should be less than 10MB");
                return;
            }
        }
    }
    userPhotoCropped(event) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.userCroppedPhoto = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.newsAndUpdatesForm.controls.userImage.setValue(this.userCroppedPhoto);
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                this.userCroppedPhoto = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.newsAndUpdatesForm.controls.userImage.setValue(this.userCroppedPhoto);
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.userCroppedPhoto = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.newsAndUpdatesForm.controls.userImage.setValue(this.userCroppedPhoto);
            });
        }
    }
    imageLoaded() {
        // show cropper
    }
    cropperReady() {
        // cropper ready
    }
    loadImageFailed() {
        // show message
    }
    GetAllDetails() {
        this.apiService.getDATA("masternewsandupdate/getAllDataForAdmin").subscribe(data => {
            if (data != undefined) {
                if (data.success == true) {
                    if (data.object != undefined && data.object != null) {
                        var moviesNews = [];
                        var tvNews = [];
                        var splarticle = [];
                        this.getAllDetailsList = data.object;
                        this.getAllDetailsList.forEach((data) => {
                            let imagePath = "https://sini.blob.core.windows.net/sinighamaimages/9880501705/MemberGallery9.jpeg";
                            if (data.newsPhotosDtoList != null && data.newsPhotosDtoList != undefined) {
                                imagePath = data.newsPhotosDtoList[0].imagePath;
                            }
                            if (data.isActive == '1' && data.type == 'MovieNews') {
                                moviesNews.push({ "id": data.id, "title": data.title, "description": data.description, "imagePath": imagePath, "type": data.type, "createdDate": data.createdDate, "templateId": data.templateId });
                            }
                            else if (data.isActive == '1' && data.type == 'TvNews') {
                                tvNews.push({ "id": data.id, "title": data.title, "description": data.description, "imagePath": imagePath, "type": data.type, "createdDate": data.createdDate, "templateId": data.templateId });
                            }
                            else if (data.isActive == '1' && data.type == 'special_article') {
                                splarticle.push({ "id": data.id, "title": data.title, "description": data.description, "imagePath": imagePath, "type": data.type, "createdDate": data.createdDate, "templateId": data.templateId });
                            }
                        });
                        this.movieNewsList = moviesNews;
                        this.tvNewsList = tvNews;
                        this.specialArticleList = splarticle;
                        if (this.isDtInitialized) {
                            this.dtElement.dtInstance.then((dtInstance) => {
                                dtInstance.destroy();
                                this.dtTrigger.next();
                            });
                        }
                        else {
                            this.isDtInitialized = true;
                            this.dtTrigger.next();
                        }
                    }
                }
            }
        });
    }
    OnSubmit() {
        // if(this.NewsAndUpdates.userName == null && this.NewsAndUpdates.userName == undefined && this.NewsAndUpdates.userImage == null && this.NewsAndUpdates.userImage == undefined){
        //   this.NewsAndUpdates.userName = "";
        //   this.NewsAndUpdates.userImage = "";
        // }
        if (this.NewsAndUpdates.userName == null || this.NewsAndUpdates.userName == undefined || this.NewsAndUpdates.userName == "") {
            this.NewsAndUpdates.userName = "ಸಿನಿಘಮಾ";
        }
        if (this.userCroppedPhoto == "" || this.userCroppedPhoto == null || this.userCroppedPhoto == undefined) {
            this.userCroppedPhoto = "https://sini.blob.core.windows.net/sinighamaimages/9880501705/MemberGallery9.jpeg";
        }
        if (this.newsAndUpdatesForm.valid) {
            if (this.NewsAndUpdates.photo_type == '1') {
                this.NewsAndUpdates.newsPhotosDtos = this.imageSendArr01;
            }
            else if (this.NewsAndUpdates.photo_type == '3') {
                this.NewsAndUpdates.newsPhotosDtos = this.imageSendArr03;
            }
            else if (this.NewsAndUpdates.photo_type == '7') {
                this.NewsAndUpdates.newsPhotosDtos = this.imageSendArr07;
            }
            debugger;
            if (this.NewsAndUpdates.newsPhotosDtos != null && this.NewsAndUpdates.newsPhotosDtos != undefined && this.NewsAndUpdates.newsPhotosDtos.length > 0) {
                let Data;
                if (this.NewsAndUpdates.mnu_id == null || this.NewsAndUpdates.mnu_id == undefined) {
                    Data = {
                        "templateId": this.NewsAndUpdates.photo_type,
                        "type": this.NewsAndUpdates.news_type,
                        "description": this.NewsAndUpdates.news_description,
                        "sequenceNumber": this.NewsAndUpdates.seq_no,
                        "title": this.NewsAndUpdates.news_title,
                        "newsPhotosDtos": this.NewsAndUpdates.newsPhotosDtos,
                        "userName": this.NewsAndUpdates.userName,
                        "userImage": this.userCroppedPhoto
                    };
                }
                else {
                    if (this.NewsAndUpdates.photo_type == '1') {
                        let dd = [];
                        dd.push({ "newsPhotosId": this.NewsAndUpdates.newsPhotoId01, "imagePath": this.url01 });
                        Data = {
                            "id": this.NewsAndUpdates.mnu_id,
                            "templateId": this.NewsAndUpdates.photo_type,
                            "type": this.NewsAndUpdates.news_type,
                            "description": this.NewsAndUpdates.news_description,
                            "sequenceNumber": this.NewsAndUpdates.seq_no,
                            "title": this.NewsAndUpdates.news_title,
                            "newsPhotosDtos": dd,
                            "userName": this.NewsAndUpdates.userName,
                            "userImage": this.userCroppedPhoto
                        };
                    }
                    else if (this.NewsAndUpdates.photo_type == '3') {
                        let dd = [];
                        dd.push({ "newsPhotosId": this.NewsAndUpdates.newsPhotoId31, "imagePath": this.url31 }, { "newsPhotosId": this.NewsAndUpdates.newsPhotoId32, "imagePath": this.url32 }, { "newsPhotosId": this.NewsAndUpdates.newsPhotoId33, "imagePath": this.url33 });
                        Data = {
                            "id": this.NewsAndUpdates.mnu_id,
                            "templateId": this.NewsAndUpdates.photo_type,
                            "type": this.NewsAndUpdates.news_type,
                            "description": this.NewsAndUpdates.news_description,
                            "sequenceNumber": this.NewsAndUpdates.seq_no,
                            "title": this.NewsAndUpdates.news_title,
                            "newsPhotosDtos": dd,
                            "userName": this.NewsAndUpdates.userName,
                            "userImage": this.userCroppedPhoto
                        };
                    }
                    else if (this.NewsAndUpdates.photo_type == '7') {
                        let dd = [];
                        dd.push({ "newsPhotosId": this.NewsAndUpdates.newsPhotoId71, "imagePath": this.url1 }, { "newsPhotosId": this.NewsAndUpdates.newsPhotoId72, "imagePath": this.url2 }, { "newsPhotosId": this.NewsAndUpdates.newsPhotoId73, "imagePath": this.url3 }, { "newsPhotosId": this.NewsAndUpdates.newsPhotoId74, "imagePath": this.url4 }, { "newsPhotosId": this.NewsAndUpdates.newsPhotoId75, "imagePath": this.url5 }, { "newsPhotosId": this.NewsAndUpdates.newsPhotoId76, "imagePath": this.url6 }, { "newsPhotosId": this.NewsAndUpdates.newsPhotoId77, "imagePath": this.url7 });
                        Data = {
                            "id": this.NewsAndUpdates.mnu_id,
                            "templateId": this.NewsAndUpdates.photo_type,
                            "type": this.NewsAndUpdates.news_type,
                            "description": this.NewsAndUpdates.news_description,
                            "sequenceNumber": this.NewsAndUpdates.seq_no,
                            "title": this.NewsAndUpdates.news_title,
                            "newsPhotosDtos": dd,
                            "userName": this.NewsAndUpdates.userName,
                            "userImage": this.userCroppedPhoto
                        };
                    }
                }
                this.loaderService.display(true);
                // if(Data.userImage == "" || Data.userImage == undefined){
                //   Data.userImage = "";
                // }
                this.apiService.Create("masternewsandupdate/saveNewsAndUpdates", Data).subscribe(data => {
                    this.loaderService.display(false);
                    if (data.success == true) {
                        this.loaderService.display(false);
                        if (data.object != "" && data.object != undefined) {
                            sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
                            this.GetAllDetails();
                            this.clearNewsAndUpdate();
                        }
                    }
                    else {
                        sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
                    }
                }, error => {
                    console.log(error);
                    this.loaderService.display(false);
                });
            }
            else {
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Please select photo");
            }
        }
        else {
            this.apiService.validateAllFormFields(this.newsAndUpdatesForm);
            sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Please enter all the fields");
        }
    }
    EditNewsAndUpdate(Id) {
        window.scroll({
            top: 0,
            left: 0,
            behavior: 'smooth'
        });
        let postData = {
            refNewsId: Id
        };
        this.apiService.Create("newsPhotos/getAllNewsByRefNewsId", postData).subscribe(data => {
            if (data.success == true) {
                let data1 = {};
                if (data.object.templateId == '1') {
                    this.NewsAndUpdates.mnu_id = Id;
                    this.NewsAndUpdates.news_title = data.object.title;
                    this.NewsAndUpdates.news_description = data.object.description;
                    this.NewsAndUpdates.seq_no = data.object.seqNumber;
                    this.NewsAndUpdates.news_type = data.object.type;
                    this.NewsAndUpdates.photo_type = data.object.templateId;
                    this.url01 = data.object.newsPhotosDtoList[0].imagePath;
                    this.NewsAndUpdates.newsPhotoId01 = data.object.newsPhotosDtoList[0].newsPhotosId;
                    this.NewsAndUpdates.userName = data.object.userName;
                    this.userCroppedPhoto = data.object.userImage;
                }
                else if (data.object.templateId == '3') {
                    this.NewsAndUpdates.mnu_id = Id;
                    this.NewsAndUpdates.news_title = data.object.title;
                    this.NewsAndUpdates.news_description = data.object.description;
                    this.NewsAndUpdates.seq_no = data.object.seqNumber;
                    this.NewsAndUpdates.news_type = data.object.type;
                    this.NewsAndUpdates.photo_type = data.object.templateId;
                    this.url31 = data.object.newsPhotosDtoList[0].imagePath;
                    this.NewsAndUpdates.newsPhotoId31 = data.object.newsPhotosDtoList[0].newsPhotosId;
                    this.url32 = data.object.newsPhotosDtoList[1].imagePath;
                    this.NewsAndUpdates.newsPhotoId32 = data.object.newsPhotosDtoList[1].newsPhotosId;
                    this.url33 = data.object.newsPhotosDtoList[2].imagePath;
                    this.NewsAndUpdates.newsPhotoId33 = data.object.newsPhotosDtoList[2].newsPhotosId;
                    this.NewsAndUpdates.userName = data.object.userName;
                    this.userCroppedPhoto = data.object.userImage;
                }
                else if (data.object.templateId == '7') {
                    this.NewsAndUpdates.mnu_id = Id;
                    this.NewsAndUpdates.news_title = data.object.title;
                    this.NewsAndUpdates.news_description = data.object.description;
                    this.NewsAndUpdates.seq_no = data.object.seqNumber;
                    this.NewsAndUpdates.news_type = data.object.type;
                    this.NewsAndUpdates.photo_type = data.object.templateId;
                    this.url1 = data.object.newsPhotosDtoList[0].imagePath;
                    this.NewsAndUpdates.newsPhotoId71 = data.object.newsPhotosDtoList[0].newsPhotosId;
                    this.url2 = data.object.newsPhotosDtoList[1].imagePath;
                    this.NewsAndUpdates.newsPhotoId72 = data.object.newsPhotosDtoList[1].newsPhotosId;
                    this.url3 = data.object.newsPhotosDtoList[2].imagePath;
                    this.NewsAndUpdates.newsPhotoId73 = data.object.newsPhotosDtoList[2].newsPhotosId;
                    this.url4 = data.object.newsPhotosDtoList[3].imagePath;
                    this.NewsAndUpdates.newsPhotoId74 = data.object.newsPhotosDtoList[3].newsPhotosId;
                    this.url5 = data.object.newsPhotosDtoList[4].imagePath;
                    this.NewsAndUpdates.newsPhotoId75 = data.object.newsPhotosDtoList[4].newsPhotosId;
                    this.url6 = data.object.newsPhotosDtoList[5].imagePath;
                    this.NewsAndUpdates.newsPhotoId76 = data.object.newsPhotosDtoList[5].newsPhotosId;
                    this.url7 = data.object.newsPhotosDtoList[6].imagePath;
                    this.NewsAndUpdates.newsPhotoId77 = data.object.newsPhotosDtoList[6].newsPhotosId;
                    this.NewsAndUpdates.userName = data.object.userName;
                    this.userCroppedPhoto = data.object.userImage;
                }
            }
        });
    }
    ActiveDeactiveNewsAndUpdate(gd) {
        if (gd.isActive == 0) {
            gd.isActive = 1;
        }
        else {
            gd.isActive = 0;
        }
        let mnu_Id = gd.id;
        let isActive = gd.isActive;
        var da = {
            "id": mnu_Id,
            "isActive": isActive
        };
        this.loaderService.display(true);
        this.apiService.Create("member/activeOrDeactiveMember", da).subscribe(data => {
            this.loaderService.display(false);
            if (data != undefined) {
                if (data.success) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
                }
            }
        }, error => {
            console.log(error);
            this.loaderService.display(false);
        });
    }
    DeleteNewsAndUpdate(id) {
        this.apiService.getDATA("masternewsandupdate/delete/" + id).subscribe(data => {
            sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
            this.GetAllDetails();
        });
    }
    checkScroll() {
        const scrollPosition = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
        if (scrollPosition >= this.topPosToStartShowing) {
            this.isShow = true;
        }
        else {
            this.isShow = false;
        }
    }
};
NewsandupdatesComponent.ctorParameters = () => [
    { type: _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: ngx_image_compress__WEBPACK_IMPORTED_MODULE_5__["NgxImageCompressService"] },
    { type: _core_services_loader_service__WEBPACK_IMPORTED_MODULE_8__["LoaderService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('window:scroll')
], NewsandupdatesComponent.prototype, "checkScroll", null);
NewsandupdatesComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-newsandupdates',
        template: __webpack_require__(/*! raw-loader!./newsandupdates.component.html */ "./node_modules/raw-loader/index.js!./src/app/master/newsandupdates/newsandupdates.component.html"),
        styles: [__webpack_require__(/*! ./newsandupdates.component.scss */ "./src/app/master/newsandupdates/newsandupdates.component.scss")]
    })
], NewsandupdatesComponent);



/***/ }),

/***/ "./src/app/master/notificationchatlist/notificationchatlist.component.scss":
/*!*********************************************************************************!*\
  !*** ./src/app/master/notificationchatlist/notificationchatlist.component.scss ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "* {\n  box-sizing: border-box;\n}\n\nbody {\n  background-color: #abd9e9;\n  font-family: Arial;\n}\n\n#container {\n  width: 90%;\n  height: 50%;\n  background: #eff3f7;\n  margin: 0 auto;\n  font-size: 0;\n  border-radius: 5px;\n  overflow: hidden;\n}\n\naside {\n  width: 30%;\n  height: 50%;\n  background-color: #3b3e49;\n  display: inline-block;\n  font-size: 15px;\n  vertical-align: top;\n}\n\nmain {\n  width: 70%;\n  height: 50%;\n  display: inline-block;\n  font-size: 15px;\n  vertical-align: top;\n}\n\naside header {\n  padding: 30px 20px;\n}\n\naside input {\n  width: 100%;\n  height: 50px;\n  line-height: 50px;\n  padding: 0 50px 0 20px;\n  background-color: #5e616a;\n  border: none;\n  border-radius: 3px;\n  color: #fff;\n  background-image: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/1940306/ico_search.png);\n  background-repeat: no-repeat;\n  background-position: 100%;\n  background-size: 40px;\n}\n\naside input::-moz-placeholder {\n  color: #fff;\n}\n\naside input::placeholder {\n  color: #fff;\n}\n\naside ul {\n  padding-left: 0;\n  margin: 0;\n  list-style-type: none;\n  overflow-y: scroll;\n  height: 690px;\n}\n\naside li {\n  padding: 10px 0;\n}\n\naside li:hover {\n  background-color: #5e616a;\n}\n\nh2,\nh3 {\n  margin: 0;\n}\n\naside li img {\n  width: 55px;\n  height: 55px;\n  border-radius: 50%;\n  margin-left: 20px;\n  margin-right: 8px;\n}\n\naside li div {\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 12px;\n}\n\naside li h2 {\n  font-size: 14px;\n  color: #fff;\n  font-weight: normal;\n  margin-bottom: 5px;\n}\n\naside li h3 {\n  font-size: 12px;\n  color: #7e818a;\n  font-weight: normal;\n}\n\n.status {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  display: inline-block;\n  margin-right: 7px;\n}\n\n.green {\n  background-color: #58b666;\n}\n\n.orange {\n  background-color: #ff725d;\n}\n\n.blue {\n  background-color: #6fbced;\n  margin-right: 0;\n  margin-left: 7px;\n}\n\nmain header {\n  height: 80px;\n  padding: 10px 20px;\n}\n\nmain header > * {\n  display: inline-block;\n  vertical-align: top;\n}\n\nmain header img:first-child {\n  width: 55px;\n  height: 55px;\n  border-radius: 50%;\n}\n\nmain header img:last-child {\n  width: 24px;\n  margin-top: 8px;\n}\n\nmain header div {\n  margin-left: 10px;\n  margin-right: 145px;\n}\n\nmain header h2 {\n  font-size: 16px;\n  margin-bottom: 5px;\n}\n\nmain header h3 {\n  font-size: 14px;\n  font-weight: normal;\n  color: #7e818a;\n}\n\n#chat {\n  padding-left: 0;\n  margin: 0;\n  list-style-type: none;\n  overflow-y: scroll;\n  height: 535px;\n  border-top: 2px solid #fff;\n  border-bottom: 2px solid #fff;\n}\n\n#chat li {\n  padding: 10px 30px;\n}\n\n#chat h2,\n#chat h3 {\n  display: inline-block;\n  font-size: 13px;\n  font-weight: normal;\n}\n\n#chat h3 {\n  color: #bbb;\n}\n\n#chat .entete {\n  margin-bottom: 5px;\n}\n\n#chat .message {\n  padding: 10px;\n  color: #fff;\n  line-height: 25px;\n  max-width: 90%;\n  display: inline-block;\n  text-align: left;\n  border-radius: 5px;\n}\n\n#chat .me {\n  text-align: right;\n}\n\n#chat .you .message {\n  background-color: #58b666;\n}\n\n#chat .me .message {\n  background-color: #6fbced;\n}\n\n#chat .triangle {\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 0 10px 10px 10px;\n}\n\n#chat .you .triangle {\n  border-color: transparent transparent #58b666 transparent;\n  margin-left: 15px;\n}\n\n#chat .me .triangle {\n  border-color: transparent transparent #6fbced transparent;\n  margin-left: 96%;\n}\n\nmain footer {\n  height: 155px;\n  padding: 20px 30px 10px 20px;\n}\n\nmain footer textarea {\n  resize: none;\n  border: none;\n  display: block;\n  width: 100%;\n  height: 80px;\n  border-radius: 3px;\n  padding: 20px;\n  font-size: 13px;\n  margin-bottom: 13px;\n}\n\nmain footer textarea::-moz-placeholder {\n  color: #ddd;\n}\n\nmain footer textarea::placeholder {\n  color: #ddd;\n}\n\nmain footer img {\n  height: 30px;\n  cursor: pointer;\n}\n\nmain footer button {\n  text-decoration: none;\n  text-transform: uppercase;\n  font-weight: bold;\n  color: #6fbced;\n  vertical-align: top;\n  margin-top: 5px;\n  display: inline-block;\n  float: right;\n}\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/master/notificationchatlist/notificationchatlist.component.ts":
/*!*******************************************************************************!*\
  !*** ./src/app/master/notificationchatlist/notificationchatlist.component.ts ***!
  \*******************************************************************************/
/*! exports provided: NotificationchatlistComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationchatlistComponent", function() { return NotificationchatlistComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");





let NotificationchatlistComponent = class NotificationchatlistComponent {
    constructor(apiService, fb) {
        this.apiService = apiService;
        this.fb = fb;
        this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.messageForm = this.fb.group({
            message: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]
        });
    }
    ngOnInit() {
        this.getTopChatUserDetails();
        this.openChatDialog = false;
        this.loggedInUserDetails = JSON.parse(localStorage.getItem('staffLogin'));
        var objDiv = document.getElementById("chat");
        objDiv.scrollTop = objDiv.scrollHeight;
    }
    getTopChatUserDetails() {
        let mdata = {
            "sentReceivedFlag": 1,
            "userName": ""
        };
        this.apiService.Create("chat/getLatestUser", mdata).subscribe(data => {
            if (data.success == true) {
                this.userDetails = data.object;
                if (data.object.length > 0)
                    // this.apiService.chatimmediate.subscribe((res)=>{
                    this.getUserChatDetails(this.userDetails[0].userId);
                // })
            }
            //  console.log(this.userDetails);
        });
    }
    callUserGetApi(event) {
        console.log(event);
        let mdata = {
            "sentReceivedFlag": 2,
            "userName": event.target.value
        };
        this.apiService.Create("chat/getLatestUser", mdata).subscribe(data => {
            if (data.success == true) {
                this.userDetails = data.object;
                if (data.object.length > 0)
                    this.getUserChatDetails(this.userDetails[0].userId);
            }
            // console.log(this.userDetails);
        });
    }
    getUserChatDetails(userId) {
        let data = {
            "sentByUserId": userId
        };
        this.apiService.Create("chat/getChatDetailsByUserId", data).subscribe(data => {
            if (data.success == true) {
                if (data.object != undefined && data.object != null) {
                    this.chatuserdetails = data.object;
                    if (data.object.chatDetailsDtoList != null && data.object.chatDetailsDtoList != undefined) {
                        // this.timer = interval(5000);
                        // this.subscription = this.timer.subscribe((val) => {
                        this.chatDetails = data.object.chatDetailsDtoList;
                        // this.getUserChatDetails(this.userDetails[0].userId);
                        this.apiService.setSubject(this.chatDetails);
                        // })
                        // setInterval(this.updateScroll,1000);
                        // })
                    }
                }
            }
        });
    }
    sendMessage() {
        let mdata = {
            "message": this.messageForm.value.message,
            "sentByUserId": this.loggedInUserDetails.object.userDto.userId,
            "sendToUserId": this.chatuserdetails.userId
        };
        this.apiService.Create("chat/save", mdata).subscribe(data => {
            if (data.success == true) {
                this.messageForm.reset();
                this.getUserChatDetails(this.chatuserdetails.userId);
            }
        });
    }
    openChatDialogBox() {
        this.openChatDialog = true;
    }
    closeChatDialogBox() {
        this.openChatDialog = false;
    }
    updateScroll() {
        var element = document.getElementById("chat");
        element.scrollTop = element.scrollHeight;
    }
};
NotificationchatlistComponent.ctorParameters = () => [
    { type: _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_2__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] }
];
NotificationchatlistComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-notificationchatlist',
        template: __webpack_require__(/*! raw-loader!./notificationchatlist.component.html */ "./node_modules/raw-loader/index.js!./src/app/master/notificationchatlist/notificationchatlist.component.html"),
        styles: [__webpack_require__(/*! ./notificationchatlist.component.scss */ "./src/app/master/notificationchatlist/notificationchatlist.component.scss")]
    })
], NotificationchatlistComponent);



/***/ }),

/***/ "./src/app/master/notificationpanel/NotifiModal.ts":
/*!*********************************************************!*\
  !*** ./src/app/master/notificationpanel/NotifiModal.ts ***!
  \*********************************************************/
/*! exports provided: NotifiModal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotifiModal", function() { return NotifiModal; });
class NotifiModal {
    constructor() {
        this.title = "";
        this.showDropDown = false;
    }
}


/***/ }),

/***/ "./src/app/master/notificationpanel/notificationpanel.component.scss":
/*!***************************************************************************!*\
  !*** ./src/app/master/notificationpanel/notificationpanel.component.scss ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "@import url(\"https://fonts.googleapis.com/css?family=Lato:100,100i,300,300i,400,400i,700,700i,900,900i\");\n/* * {\n\tmargin: 0;\n\tpadding: 0;\n  box-sizing: border-box;\n} */\n/* body {\n\tfont-family: 'Lato', sans-serif;\n\tfont-size: 14px;\n\tcolor: #999999;\n\tword-wrap: break-word;\n} */\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\nul {\n  list-style: none;\n}\n.chatbox-holder {\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: flex-end;\n  height: 0;\n}\n.chatbox {\n  width: 400px;\n  height: 400px;\n  margin: 0 20px 0 0;\n  position: relative;\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-flow: column;\n  border-radius: 10px 10px 0 0;\n  background: white;\n  bottom: 0;\n  transition: 0.1s ease-out;\n}\n.chatbox-top {\n  position: relative;\n  display: flex;\n  padding: 10px 0;\n  border-radius: 10px 10px 0 0;\n  background: rgba(0, 0, 0, 0.05);\n}\n.chatbox-icons {\n  padding: 0 10px 0 0;\n  display: flex;\n  position: relative;\n}\n.chatbox-icons .fa {\n  background: rgba(220, 0, 0, 0.6);\n  padding: 3px 5px;\n  margin: 0 0 0 3px;\n  color: white;\n  border-radius: 0 5px 0 5px;\n  transition: 0.3s;\n}\n.chatbox-icons .fa:hover {\n  border-radius: 5px 0 5px 0;\n  background: #dc0000;\n}\n.chatbox-icons a, .chatbox-icons a:link, .chatbox-icons a:visited {\n  color: white;\n}\n.chat-partner-name, .chat-group-name {\n  flex: 1;\n  padding: 0 0 0 95px;\n  font-size: 15px;\n  font-weight: bold;\n  color: #30649c;\n  text-shadow: 1px 1px 0 white;\n  transition: 0.1s ease-out;\n}\n.status {\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  display: inline-block;\n  box-shadow: inset 0 0 3px 0 rgba(0, 0, 0, 0.2);\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  background: #cacaca;\n  margin: 0 3px 0 0;\n}\n.online {\n  background: #b7fb00;\n}\n.away {\n  background: #ffae00;\n}\n.donot-disturb {\n  background: #ff4343;\n}\n.chatbox-avatar {\n  width: 80px;\n  height: 80px;\n  overflow: hidden;\n  border-radius: 50%;\n  background: white;\n  padding: 3px;\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.2);\n  position: absolute;\n  transition: 0.1s ease-out;\n  bottom: 0;\n  left: 6px;\n}\n.chatbox-avatar img {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n}\n.chat-messages {\n  border-top: 1px solid rgba(0, 0, 0, 0.05);\n  padding: 10px;\n  overflow: auto;\n  display: flex;\n  flex-flow: row wrap;\n  align-content: flex-start;\n  flex: 1;\n}\n.message-box-holder {\n  width: 100%;\n  margin: 0 0 15px;\n  display: flex;\n  flex-flow: column;\n  align-items: flex-end;\n}\n.message-sender {\n  font-size: 12px;\n  margin: 0 0 15px;\n  color: #30649c;\n  align-self: flex-start;\n}\n.message-sender a, .message-sender a:link, .message-sender a:visited, .chat-partner-name a, .chat-partner-name a:link, .chat-partner-name a:visited {\n  color: #30649c;\n  text-decoration: none;\n}\n.message-box {\n  padding: 6px 10px;\n  border-radius: 6px 0 6px 0;\n  position: relative;\n  background: rgba(100, 170, 0, 0.1);\n  border: 2px solid rgba(100, 170, 0, 0.1);\n  color: #6c6c6c;\n  font-size: 12px;\n}\n.message-box:after {\n  content: \"\";\n  position: absolute;\n  border: 10px solid transparent;\n  border-top: 10px solid rgba(100, 170, 0, 0.2);\n  border-right: none;\n  bottom: -22px;\n  right: 10px;\n}\n.message-partner {\n  background: rgba(0, 114, 135, 0.1);\n  border: 2px solid rgba(0, 114, 135, 0.1);\n  align-self: flex-start;\n}\n.message-partner:after {\n  right: auto;\n  bottom: auto;\n  top: -22px;\n  left: 9px;\n  border: 10px solid transparent;\n  border-bottom: 10px solid rgba(0, 114, 135, 0.2);\n  border-left: none;\n}\n.chat-input-holder {\n  display: flex;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n}\n.chat-input {\n  resize: none;\n  padding: 5px 10px;\n  height: 40px;\n  font-family: \"Lato\", sans-serif;\n  font-size: 14px;\n  color: #999999;\n  flex: 1;\n  border: none;\n  background: rgba(0, 0, 0, 0.05);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n}\n.chat-input:focus, .message-send:focus {\n  outline: none;\n}\n.message-send::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\n.message-send {\n  -webkit-appearance: none;\n  background: #9cc900;\n  background: linear-gradient(180deg, #00d8ff, #00b5d6);\n  color: white;\n  padding: 0 15px;\n  border: none;\n  text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.3);\n  float: right;\n}\n.attachment-panel {\n  padding: 3px 10px;\n  text-align: right;\n}\n.attachment-panel a, .attachment-panel a:link, .attachment-panel a:visited {\n  margin: 0 0 0 7px;\n  text-decoration: none;\n  color: rgba(0, 0, 0, 0.5);\n}\n.chatbox-min {\n  margin-bottom: -362px;\n  /*   height: 46px; */\n}\n.chatbox-min .chatbox-avatar {\n  width: 60px;\n  height: 60px;\n}\n.chatbox-min .chat-partner-name, .chatbox-min .chat-group-name {\n  padding: 0 0 0 75px;\n}\n.settings-popup {\n  background: white;\n  border-radius: 20px/10px;\n  box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.2);\n  font-size: 13px;\n  opacity: 0;\n  padding: 10px 0;\n  position: absolute;\n  right: 0;\n  text-align: left;\n  top: 33px;\n  transition: 0.15s;\n  transform: scale(1, 0);\n  transform-origin: 50% 0;\n  width: 120px;\n  z-index: 2;\n  border-top: 1px solid rgba(0, 0, 0, 0.2);\n  border-bottom: 2px solid rgba(0, 0, 0, 0.3);\n}\n.settings-popup:after, .settings-popup:before {\n  border: 7px solid transparent;\n  border-bottom: 7px solid white;\n  border-top: none;\n  content: \"\";\n  position: absolute;\n  left: 45px;\n  top: -10px;\n  border-top: 3px solid rgba(0, 0, 0, 0.2);\n}\n.settings-popup:before {\n  border-bottom: 7px solid rgba(0, 0, 0, 0.25);\n  top: -11px;\n}\n.settings-popup:after {\n  border-top-color: transparent;\n}\n#chkSettings {\n  display: none;\n}\n#chkSettings:checked + .settings-popup {\n  opacity: 1;\n  transform: scale(1, 1);\n}\n.settings-popup ul li a, .settings-popup ul li a:link, .settings-popup ul li a:visited {\n  color: #999;\n  text-decoration: none;\n  display: block;\n  padding: 5px 10px;\n}\n.settings-popup ul li a:hover {\n  background: rgba(0, 0, 0, 0.05);\n}\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/master/notificationpanel/notificationpanel.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/master/notificationpanel/notificationpanel.component.ts ***!
  \*************************************************************************/
/*! exports provided: NotificationpanelComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationpanelComponent", function() { return NotificationpanelComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _NotifiModal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./NotifiModal */ "./src/app/master/notificationpanel/NotifiModal.ts");
/* harmony import */ var _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");








let NotificationpanelComponent = class NotificationpanelComponent {
    constructor(apiService, fb, loaderService) {
        this.apiService = apiService;
        this.fb = fb;
        this.loaderService = loaderService;
        this.notifiModal = new _NotifiModal__WEBPACK_IMPORTED_MODULE_2__["NotifiModal"]();
        this.dec = "";
        this.modules = {};
        this.isDtInitialized = false;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_7__["Subject"]();
        this.selectedMemId = (event) => {
            let memberVal = event.id;
            this.notifiModal.individualId = event.id;
        };
        this.chatBoxClass = "chatbox chatbox-min";
        this.messageForm = this.fb.group({
            message: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]
        });
        this.notificationForm = this.fb.group({
            title: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].maxLength(200), _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].minLength(2)])],
            type: [''],
            memname: ['']
        });
        this.modules = {
            'toolbar': [
                ['bold', 'italic', 'underline', 'strike'],
                [{ 'header': 1 }, { 'header': 2 }],
                [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                // [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript
                // [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
                // [{ 'direction': 'rtl' }],                         // text direction
                [{ 'size': ['small', false, 'large', 'huge'] }],
                // [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                [{ 'color': [] }, { 'background': [] }],
                [{ 'font': [] }],
                [{ 'align': [] }],
            ]
        };
    }
    ngOnInit() {
        this.getUserChatDetails(54);
        this.getAllNotification();
        this.chatBoxClass = "chatbox chatbox-min";
        this.notifiModal.type = "All";
        this.memberNewsSettings = {
            text: 'Select',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search ',
            badgeShowLimit: 5,
            groupBy: "category"
        };
    }
    selectType(type) {
        if (type == 'Individual') {
            this.notifiModal.showDropDown = true;
        }
        else {
            this.notifiModal.showDropDown = false;
        }
    }
    getAllNotification() {
        this.apiService.getDATA('notification/getAllNotification').subscribe((result) => {
            if (result.success == true) {
                if (result.object.notificationDtoList != null && result.object.notificationDtoList != undefined) {
                    this.notificationdata = result.object.notificationDtoList;
                    if (this.isDtInitialized) {
                        this.dtElement.dtInstance.then((dtInstance) => {
                            dtInstance.destroy();
                            this.dtTrigger.next();
                        });
                    }
                    else {
                        this.isDtInitialized = true;
                        this.dtTrigger.next();
                    }
                }
            }
        });
    }
    getMemberList(event) {
        let memberName = event.target.value;
        let memName = {
            "firstName": memberName
        };
        this.apiService.Create("memberNews/getAllWebMembers", memName).subscribe(data => {
            let memList = [];
            let memdata = data.object;
            if (memdata != null && memdata != undefined) {
                memdata.forEach(ml => {
                    memList.push({ "id": ml.membershipId, "itemName": ml.firstName, "profileImage": ml.profileImage, "webPageId": ml.webpageId });
                });
                this.notifiModal.memberList = memList;
            }
        });
    }
    onSubmit() {
        if (this.notificationForm.valid) {
            let loggedInUser = localStorage.getItem("staffLogin");
            let loggedInData = JSON.parse(loggedInUser);
            let userId = loggedInData.object.roleId;
            let da = {
                "refUserId": userId,
                "notificationType": this.notifiModal.type,
                "description": this.notifiModal.title
            };
            this.loaderService.display(true);
            this.apiService.Create('notification/save', da).subscribe((data) => {
                this.loaderService.display(false);
                if (data.success == true) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire({
                        position: 'top-end',
                        icon: 'success',
                        title: "Sent Notification to All",
                        showConfirmButton: false,
                        timer: 1500
                    });
                }
            }, (error) => {
                console.log(error);
                this.loaderService.display(false);
            });
        }
        else {
            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire({
                position: 'top-end',
                icon: 'error',
                title: "Please Check Validation",
                showConfirmButton: false,
                timer: 1500
            });
        }
    }
    openCloseChatBox(className) {
        if (className == "chatbox") {
            this.chatBoxClass = "chatbox chatbox-min";
        }
        else {
            this.chatBoxClass = "chatbox";
        }
    }
    sendMessage() {
        let mdata = {
            "message": this.messageForm.value.message,
            "sentByUserId": 54,
            "sendToUserId": 1712
        };
        console.log(mdata);
        this.apiService.Create("/chat/save", mdata).subscribe(data => {
            if (data.success == true) {
                this.messageForm.reset();
                this.getUserChatDetails(this.chatDetails.userId);
            }
        });
    }
    getUserChatDetails(userId) {
        let data = {
            "sentByUserId": userId
        };
        this.apiService.Create("/chat/getChatDetailsByUserId", data).subscribe(data => {
            this.chatDetails = data.object;
        });
    }
    deleteNotification(id) {
        let deletenotificationdata = {
            "id": id
        };
        this.loaderService.display(true);
        this.apiService.Create('notification/deleteByNotificationId', deletenotificationdata).subscribe((res) => {
            this.loaderService.display(false);
            if (res.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(res.message);
                this.ngOnInit();
            }
            else {
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(res.message);
            }
        });
    }
    clearNotificationForm() {
        this.notifiModal.title = "";
    }
};
NotificationpanelComponent.ctorParameters = () => [
    { type: _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"] },
    { type: src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_6__["LoaderService"] }
];
NotificationpanelComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-notificationpanel',
        template: __webpack_require__(/*! raw-loader!./notificationpanel.component.html */ "./node_modules/raw-loader/index.js!./src/app/master/notificationpanel/notificationpanel.component.html"),
        styles: [__webpack_require__(/*! ./notificationpanel.component.scss */ "./src/app/master/notificationpanel/notificationpanel.component.scss")]
    })
], NotificationpanelComponent);



/***/ }),

/***/ "./src/app/master/profession/profession.component.scss":
/*!*************************************************************!*\
  !*** ./src/app/master/profession/profession.component.scss ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.newsth {\n  text-align: center;\n}\n\n.fa-pencil-square-o {\n  color: #000f92;\n  font-size: 21px;\n}\n\n.fa-trash {\n  color: #ff0000;\n  font-size: 21px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21hc3Rlci9wcm9mZXNzaW9uL3Byb2Zlc3Npb24uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21hc3Rlci9wcm9mZXNzaW9uL3Byb2Zlc3Npb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBQTtFQUNBLGNBQUE7QUNDRjs7QURFQTtFQUNFLGdCQUFBO0FDQ0Y7O0FERUE7RUFDRSxnQkFBQTtBQ0NGOztBREVBO0VBQ0Usc0JBQUE7RUFDQSxXQUFBO0VBQ0EsdUJBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0FDQ0Y7O0FERUE7RUFDRSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EscUJBQUE7QUNDRjs7QURFQTtFQUNFLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxPQUFBO0VBQ0EsTUFBQTtFQUNBLFVBQUE7QUNDRjs7QURFQTtFQUNFLGtCQUFBO0FDQ0Y7O0FERUE7RUFDRSxjQUFBO0VBQ0EsZUFBQTtBQ0NGOztBREVBO0VBQ0UsY0FBQTtFQUNBLGVBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL21hc3Rlci9wcm9mZXNzaW9uL3Byb2Zlc3Npb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG5sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5idG4xIHtcbiAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcbiAgY29sb3I6IGdyYXk7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nOiA0cHggOHB4O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPWZpbGVdIHtcbiAgZm9udC1zaXplOiAxMDBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5uZXdzdGgge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5mYS1wZW5jaWwtc3F1YXJlLW8ge1xuICBjb2xvcjogcmdiKDAsIDE1LCAxNDYpO1xuICBmb250LXNpemU6IDIxcHg7XG59XG5cbi5mYS10cmFzaCB7XG4gIGNvbG9yOiAjZmYwMDAwO1xuICBmb250LXNpemU6IDIxcHg7XG59XG4iLCIuY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG5sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5idG4xIHtcbiAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcbiAgY29sb3I6IGdyYXk7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nOiA0cHggOHB4O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPWZpbGVdIHtcbiAgZm9udC1zaXplOiAxMDBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5uZXdzdGgge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5mYS1wZW5jaWwtc3F1YXJlLW8ge1xuICBjb2xvcjogIzAwMGY5MjtcbiAgZm9udC1zaXplOiAyMXB4O1xufVxuXG4uZmEtdHJhc2gge1xuICBjb2xvcjogI2ZmMDAwMDtcbiAgZm9udC1zaXplOiAyMXB4O1xufSJdfQ== */"

/***/ }),

/***/ "./src/app/master/profession/profession.component.ts":
/*!***********************************************************!*\
  !*** ./src/app/master/profession/profession.component.ts ***!
  \***********************************************************/
/*! exports provided: ProfessionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProfessionComponent", function() { return ProfessionComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _profession__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./profession */ "./src/app/master/profession/profession.ts");
/* harmony import */ var src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../../app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");








let ProfessionComponent = class ProfessionComponent {
    constructor(apiService, loaderService) {
        this.apiService = apiService;
        this.loaderService = loaderService;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_7__["Subject"]();
        this.isDtInitialized = false;
        this.profession = new _profession__WEBPACK_IMPORTED_MODULE_2__["Profession"]();
    }
    ngOnInit() {
        this.createForm();
        this.profession.individualInstitute = "Individual";
        // this.getAllProfession(this.profession.individualInstitute);
        this.getAllProfession();
        this.profession.parentChildType = "0";
        this.getAllParentList(this.profession.individualInstitute);
    }
    createForm() {
        this.form = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"]({
            parentId: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](''),
            title: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"]('', [
                _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required,
                _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].minLength(3),
                _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].maxLength(50)
            ]),
            individualInstitute: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"]('', [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]),
            parentChildType: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"]('', [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]),
            professionId: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"]('')
        });
    }
    saveProfession() {
        if (this.form.valid) {
            if (this.profession.parentChildType == '0') {
                this.profession.parentId = "0";
            }
            let data = {
                "individualInstitute": this.profession.individualInstitute,
                "parentId": this.profession.parentId,
                "title": this.profession.title,
                "professionId": this.profession.professionId
            };
            this.loaderService.display(true);
            this.apiService.Create('profession/save', data).subscribe((data) => {
                this.loaderService.display(false);
                if (data.success == true) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(data.message);
                    this.clearProfession();
                }
                else {
                    this.loaderService.display(false);
                    console.log(data.mesaage);
                }
            });
        }
        else {
            sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire("Please enter all field");
        }
    }
    setParentList(type) {
        //console.log(type);
        this.getAllParentList(type);
        // 
        this.getAllProfession();
    }
    getAllParentList(type) {
        var jsonObject = {
            "individualInstitute": type
        };
        this.apiService.Create('profession/getParentProfessions', jsonObject).subscribe(data => {
            if (data.success == true) {
                this.parentList = data.object.professionDtoList;
                if (this.isDtInitialized) {
                    this.dtElement.dtInstance.then((dtInstance) => {
                        dtInstance.destroy();
                        this.dtTrigger.next();
                    });
                }
                else {
                    this.isDtInitialized = true;
                    this.dtTrigger.next();
                }
            }
        });
    }
    // getAllProfession(val) {
    //   let data = {
    //     "individualInstitute": val
    //   }
    //   this.apiService.Create('profession/getAll', data).subscribe(data => {
    //     if (data.success == true) {
    //       if (data.object.professionDtoList != null && data.object.professionDtoList != undefined) {
    //         this.professionList = data.object.professionDtoList;
    //         if (this.isDtInitialized) {
    //           this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {
    //             dtInstance.destroy();
    //             this.dtTrigger.next();
    //           });
    //         } else {
    //           this.isDtInitialized = true
    //           this.dtTrigger.next();
    //         }
    //       }
    //     }
    //     // this.dtTrigger.next();
    //   })
    // }
    getAllProfession() {
        this.apiService.getDATA('profession/getAllActive').subscribe(data => {
            console.log(data);
            if (data.success == true) {
                if (data.object.professionDtoList != null && data.object.professionDtoList != undefined) {
                    this.professionList = data.object.professionDtoList;
                    if (this.isDtInitialized) {
                        this.dtElement.dtInstance.then((dtInstance) => {
                            dtInstance.destroy();
                            this.dtTrigger.next();
                        });
                    }
                    else {
                        this.isDtInitialized = true;
                        this.dtTrigger.next();
                    }
                }
            }
            // this.dtTrigger.next();
        });
    }
    editProfession(data) {
        window.scroll({
            top: 0,
            left: 0,
            behavior: 'smooth'
        });
        this.profession = data;
        if (data.parentId == 0) {
            this.profession.parentChildType = "0";
        }
        else {
            this.profession.parentChildType = "1";
        }
    }
    deleteProfession(data) {
        var jsonData = {
            "professionId": data.professionId
        };
        this.apiService.Create("profession/deleteById", jsonData).subscribe(data => {
            sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(data.message);
            this.ngOnInit();
        });
    }
    clearProfession() {
        // this.form.reset();
        this.profession.individualInstitute = "Individual";
        this.profession.parentId = "";
        this.profession.title = "";
        this.profession.professionId = null;
    }
};
ProfessionComponent.ctorParameters = () => [
    { type: src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_4__["LoaderService"] }
];
ProfessionComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-profession',
        template: __webpack_require__(/*! raw-loader!./profession.component.html */ "./node_modules/raw-loader/index.js!./src/app/master/profession/profession.component.html"),
        styles: [__webpack_require__(/*! ./profession.component.scss */ "./src/app/master/profession/profession.component.scss")]
    })
], ProfessionComponent);



/***/ }),

/***/ "./src/app/master/profession/profession.ts":
/*!*************************************************!*\
  !*** ./src/app/master/profession/profession.ts ***!
  \*************************************************/
/*! exports provided: Profession */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Profession", function() { return Profession; });
class Profession {
}


/***/ }),

/***/ "./src/app/master/sinighamaservice/sinighamaservice.component.scss":
/*!*************************************************************************!*\
  !*** ./src/app/master/sinighamaservice/sinighamaservice.component.scss ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.card-table {\n  margin-top: 1%;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.fa-pencil-square-o {\n  color: #000f92;\n  font-size: 20px;\n}\n\n.fa-trash {\n  color: #ff0000;\n  font-size: 20px;\n}\n\n.showErrorMsg {\n  color: #ff0000;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21hc3Rlci9zaW5pZ2hhbWFzZXJ2aWNlL3NpbmlnaGFtYXNlcnZpY2UuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21hc3Rlci9zaW5pZ2hhbWFzZXJ2aWNlL3NpbmlnaGFtYXNlcnZpY2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBQTtFQUNBLGNBQUE7QUNDRjs7QURDQTtFQUNFLGdCQUFBO0FDRUY7O0FEQUE7RUFDRSxjQUFBO0FDR0Y7O0FEREE7RUFDRSxzQkFBQTtFQUNBLFdBQUE7RUFDQSx1QkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUNJRjs7QURGQTtFQUNFLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxxQkFBQTtBQ0tGOztBREZBO0VBQ0UsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxNQUFBO0VBQ0EsVUFBQTtBQ0tGOztBREZBO0VBQ0UsY0FBQTtFQUNBLGVBQUE7QUNLRjs7QURGQTtFQUNFLGNBQUE7RUFDQSxlQUFBO0FDS0Y7O0FERkE7RUFDRSxjQUFBO0FDS0YiLCJmaWxlIjoic3JjL2FwcC9tYXN0ZXIvc2luaWdoYW1hc2VydmljZS9zaW5pZ2hhbWFzZXJ2aWNlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJkM2U1MDtcbiAgY29sb3I6ICNmYmUxMTY7XG59XG5sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG4uY2FyZC10YWJsZSB7XG4gIG1hcmdpbi10b3A6IDElO1xufVxuLmJ0bjEge1xuICBib3JkZXI6IDJweCBzb2xpZCBncmF5O1xuICBjb2xvcjogZ3JheTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDRweCA4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi51cGxvYWQtYnRuLXdyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPVwiZmlsZVwiXSB7XG4gIGZvbnQtc2l6ZTogMTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBvcGFjaXR5OiAwO1xufVxuXG4uZmEtcGVuY2lsLXNxdWFyZS1vIHtcbiAgY29sb3I6IHJnYigwLCAxNSwgMTQ2KTtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uZmEtdHJhc2gge1xuICBjb2xvcjogI2ZmMDAwMDtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uc2hvd0Vycm9yTXNnIHtcbiAgY29sb3I6ICNmZjAwMDA7XG59XG4iLCIuY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG4uY2FyZC10YWJsZSB7XG4gIG1hcmdpbi10b3A6IDElO1xufVxuXG4uYnRuMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gIGNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogNHB4IDhweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1maWxlXSB7XG4gIGZvbnQtc2l6ZTogMTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBvcGFjaXR5OiAwO1xufVxuXG4uZmEtcGVuY2lsLXNxdWFyZS1vIHtcbiAgY29sb3I6ICMwMDBmOTI7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLmZhLXRyYXNoIHtcbiAgY29sb3I6ICNmZjAwMDA7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLnNob3dFcnJvck1zZyB7XG4gIGNvbG9yOiAjZmYwMDAwO1xufSJdfQ== */"

/***/ }),

/***/ "./src/app/master/sinighamaservice/sinighamaservice.component.ts":
/*!***********************************************************************!*\
  !*** ./src/app/master/sinighamaservice/sinighamaservice.component.ts ***!
  \***********************************************************************/
/*! exports provided: SinighamaserviceComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SinighamaserviceComponent", function() { return SinighamaserviceComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var ngx_image_compress__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-image-compress */ "./node_modules/ngx-image-compress/fesm2015/ngx-image-compress.js");
/* harmony import */ var _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../../app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var _siniservicemodel__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./siniservicemodel */ "./src/app/master/sinighamaservice/siniservicemodel.ts");









let SinighamaserviceComponent = class SinighamaserviceComponent {
    constructor(apiService, imageCompress, loaderService) {
        this.apiService = apiService;
        this.imageCompress = imageCompress;
        this.loaderService = loaderService;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.siniservicemodel = new _siniservicemodel__WEBPACK_IMPORTED_MODULE_8__["SiniserviceModel"]();
        this.imageChangedEvent = "";
        this.aspectRatio = 5 / 3;
        this.croppedImage = '';
        this.updateButton = false;
        this.isDtInitialized = false;
    }
    ngOnInit() {
        this.getSiniServiceTypeGetAll();
        this.createForm();
        this.siniservicemodel.serviceType = "";
        this.getAllSinighamaService();
    }
    getSiniServiceTypeGetAll() {
        this.apiService.getDATA('masterSinighamaService/getAll').subscribe((data) => {
            if (data.success == true) {
                this.serviceTypeList = data.object.masterSinighamaServiceDtoList;
            }
        });
    }
    createForm() {
        this.form = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
            serviceType: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]),
            serviceName: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(3), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(50)]),
            serviceLink: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(3)]),
            serviceImage: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]),
            sequenceNumber: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]),
            serviceId: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('')
        });
    }
    // Image Compression and Croppin
    addImageUpload(e) {
        this.loaderService.display(true);
        this.imageChangedEvent = e;
        if (this.siniservicemodel.refSiniServiceId == 4) {
            /* For Co-sponser img */
            this.aspectRatio = 6 / 8;
        }
        $('#file-upload').removeAttr('src');
        this.filename = "";
        this.filetype = "";
        this.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG" || extention == "png" || extention == "PNG") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB 
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.filename = file.name;
                    this.filetype = file.type;
                    this.imagePath = reader.result;
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG" && extention != "PNG" && extention != "png") {
                this.filename = "";
                this.filetype = "";
                this.imagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire("Please Upload the valid file");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.filename = "";
                this.filetype = "";
                this.imagePath = "";
                // this.adminPage.profileImagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire("Document size should be less than 10MB");
                return;
            }
        }
    }
    imageCropped(event) {
        var orientation = 1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.form.patchValue({ serviceImage: this.croppedImage });
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.form.patchValue({ serviceImage: this.croppedImage });
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.form.patchValue({ serviceImage: this.croppedImage });
            });
        }
    }
    imageLoaded() {
        // show cropper
    }
    cropperReady() {
        // cropper ready
    }
    loadImageFailed() {
        // show message
    }
    saveSinighamaService() {
        debugger;
        if (this.form.valid) {
            let data = {
                "trxSiniServiceId": this.siniservicemodel.trxSiniServiceId,
                "refSiniServiceId": this.siniservicemodel.refSiniServiceId,
                "serviceName": this.siniservicemodel.serviceName,
                "serviceLink": this.siniservicemodel.serviceLink,
                "sequenceNumber": this.siniservicemodel.sequenceNumber,
                "serviceImageURL": this.croppedImage
            };
            this.loaderService.display(true);
            this.apiService.Create('trsSinighamaService/save', data).subscribe((data) => {
                this.loaderService.display(false);
                if (data.success == true) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(data.message);
                    this.getAllSinighamaService();
                    this.clearForm();
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(data.message);
                }
            });
        }
        else {
            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire("Please enter all field");
        }
    }
    clearForm() {
        this.siniservicemodel.trxSiniServiceId = null;
        this.siniservicemodel.refSiniServiceId = null;
        this.siniservicemodel.serviceName = "";
        this.siniservicemodel.serviceLink = "";
        this.croppedImage = null;
        this.imageChangedEvent = "";
        this.imagePath = null;
    }
    getAllSinighamaService() {
        this.loaderService.display(true);
        this.apiService.getDATA('trsSinighamaService/getAll').subscribe((data) => {
            this.loaderService.display(false);
            if (data.success == false) {
                this.serviceList = data.object;
                var snetwork = [];
                var sngroup = [];
                var snpatners = [];
                var sncospncer = [];
                var filmorg = [];
                this.serviceList.forEach(data => {
                    if (data.isActive == '1' && data.serviceType == 'Sinighama Social Network') {
                        snetwork.push({ "trxSiniServiceId": data.trxSiniServiceId, "refSiniServiceId": data.refSiniServiceId, "serviceName": data.serviceName, "serviceType": data.serviceType, "serviceImageURL": data.serviceImageURL, "serviceLink": data.serviceLink, "sequenceNumber": data.sequenceNumber, "isActive": data.isActive });
                    }
                    else if (data.isActive == '1' && data.serviceType == 'Sinighama Group') {
                        sngroup.push({ "trxSiniServiceId": data.trxSiniServiceId, "refSiniServiceId": data.refSiniServiceId, "serviceName": data.serviceName, "serviceType": data.serviceType, "serviceImageURL": data.serviceImageURL, "serviceLink": data.serviceLink, "sequenceNumber": data.sequenceNumber, "isActive": data.isActive });
                    }
                    else if (data.isActive == '1' && data.serviceType == 'Sinighama Partners') {
                        snpatners.push({ "trxSiniServiceId": data.trxSiniServiceId, "refSiniServiceId": data.refSiniServiceId, "serviceName": data.serviceName, "serviceType": data.serviceType, "serviceImageURL": data.serviceImageURL, "serviceLink": data.serviceLink, "sequenceNumber": data.sequenceNumber, "isActive": data.isActive });
                    }
                    else if (data.isActive == '1' && data.serviceType == 'Sinighama Co-Sponcers') {
                        sncospncer.push({ "trxSiniServiceId": data.trxSiniServiceId, "refSiniServiceId": data.refSiniServiceId, "serviceName": data.serviceName, "serviceType": data.serviceType, "serviceImageURL": data.serviceImageURL, "serviceLink": data.serviceLink, "sequenceNumber": data.sequenceNumber, "isActive": data.isActive });
                    }
                    else if (data.isActive == '1' && data.serviceType == 'Film Institution') {
                        filmorg.push({ "trxSiniServiceId": data.trxSiniServiceId, "refSiniServiceId": data.refSiniServiceId, "serviceName": data.serviceName, "serviceType": data.serviceType, "serviceImageURL": data.serviceImageURL, "serviceLink": data.serviceLink, "sequenceNumber": data.sequenceNumber, "isActive": data.isActive });
                    }
                });
                this.sininetworkList = snetwork;
                this.sinigroupList = sngroup;
                this.sinipatnersList = snpatners;
                this.sinicosponcersList = sncospncer;
                this.filmoranizationList = filmorg;
                if (this.isDtInitialized) {
                    this.dtElement.dtInstance.then((dtInstance) => {
                        dtInstance.destroy();
                        this.dtTrigger.next();
                    });
                }
                else {
                    this.isDtInitialized = true;
                    this.dtTrigger.next();
                }
            }
        });
    }
    editSiniGhamaService(data) {
        window.scroll({
            top: 0,
            left: 0,
            behavior: 'smooth'
        });
        // this.siniservicemodel = data;
        // this.form.patchValue({ serviceImage: data.serviceImageURL })
        // this.apiService.getBase64ImageFromURL(data.serviceImageURL).subscribe(base64data => {
        //   this.croppedImage = 'data:image/jpeg;base64,' + base64data;
        // });
        let editdatas = {
            "trxSiniServiceId": data.trxSiniServiceId
        };
        this.apiService.Create("trsSinighamaService/getByServiceId", editdatas).subscribe((result) => {
            if (result.success == true) {
                if (result.object != null && result.object != undefined) {
                    this.croppedImage = "";
                    this.siniservicemodel.trxSiniServiceId = result.object.trxSiniServiceId;
                    this.siniservicemodel.refSiniServiceId = result.object.refSiniServiceId;
                    this.siniservicemodel.sequenceNumber = result.object.sequenceNumber;
                    this.siniservicemodel.serviceImageURL = result.object.serviceImageURL;
                    this.siniservicemodel.serviceLink = result.object.serviceLink;
                    this.siniservicemodel.serviceName = result.object.serviceName;
                    this.form.controls.serviceImage.setValue(this.siniservicemodel.serviceImageURL);
                    this.croppedImage = result.object.serviceImageURL;
                    // this.apiService.getBase64ImageFromURL(this.siniservicemodel.serviceImageURL).subscribe(base64data => {
                    //   this.croppedImage = 'data:image/jpeg;base64,' + base64data;
                    // });
                }
            }
        });
    }
    deleteSinighamaService(data) {
        let JsonData = {
            "trxSiniServiceId": data.trxSiniServiceId
        };
        this.loaderService.display(true);
        this.apiService.Create("trsSinighamaService/deleteByServiceId", JsonData).subscribe(data => {
            this.loaderService.display(false);
            this.ngOnInit();
            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(data.message);
        });
    }
};
SinighamaserviceComponent.ctorParameters = () => [
    { type: src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: ngx_image_compress__WEBPACK_IMPORTED_MODULE_6__["NgxImageCompressService"] },
    { type: _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_7__["LoaderService"] }
];
SinighamaserviceComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-sinighamaservice',
        template: __webpack_require__(/*! raw-loader!./sinighamaservice.component.html */ "./node_modules/raw-loader/index.js!./src/app/master/sinighamaservice/sinighamaservice.component.html"),
        styles: [__webpack_require__(/*! ./sinighamaservice.component.scss */ "./src/app/master/sinighamaservice/sinighamaservice.component.scss")]
    })
], SinighamaserviceComponent);



/***/ }),

/***/ "./src/app/master/sinighamaservice/siniservicemodel.ts":
/*!*************************************************************!*\
  !*** ./src/app/master/sinighamaservice/siniservicemodel.ts ***!
  \*************************************************************/
/*! exports provided: SiniserviceModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SiniserviceModel", function() { return SiniserviceModel; });
class SiniserviceModel {
}


/***/ }),

/***/ "./src/app/master/staff/staff.component.scss":
/*!***************************************************!*\
  !*** ./src/app/master/staff/staff.component.scss ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".showErrorMsg {\n  color: red;\n}\n\n.container-fluid {\n  margin-top: 1%;\n  margin-bottom: 1%;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.row {\n  padding: 1% 0%;\n}\n\n.theader {\n  text-align: center;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21hc3Rlci9zdGFmZi9zdGFmZi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbWFzdGVyL3N0YWZmL3N0YWZmLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0UsVUFBQTtBQ0FGOztBREdBO0VBQ0UsY0FBQTtFQUNBLGlCQUFBO0FDQUY7O0FESUE7RUFDRSx5QkFBQTtFQUNBLGNBQUE7QUNERjs7QURJQTtFQUNFLGdCQUFBO0FDREY7O0FESUE7RUFDRSxzQkFBQTtFQUNBLFdBQUE7RUFDQSx1QkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUNERjs7QURJQTtFQUNFLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxxQkFBQTtBQ0RGOztBRElBO0VBQ0UsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxNQUFBO0VBQ0EsVUFBQTtBQ0RGOztBREdBO0VBQ0UsY0FBQTtBQ0FGOztBREdBO0VBQ0Usa0JBQUE7QUNBRiIsImZpbGUiOiJzcmMvYXBwL21hc3Rlci9zdGFmZi9zdGFmZi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLnNob3dFcnJvck1zZ3tcbiAgY29sb3I6IHJlZDtcbn1cblxuLmNvbnRhaW5lci1mbHVpZCB7XG4gIG1hcmdpbi10b3A6IDElO1xuICBtYXJnaW4tYm90dG9tOiAxJTtcbn1cblxuXG4uY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG4uYnRuMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gIGNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogNHB4IDhweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1maWxlXSB7XG4gIGZvbnQtc2l6ZTogMTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBvcGFjaXR5OiAwO1xufVxuLnJvdyB7XG4gIHBhZGRpbmc6IDElIDAlO1xufVxuXG4udGhlYWRlcntcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufSIsIi5zaG93RXJyb3JNc2cge1xuICBjb2xvcjogcmVkO1xufVxuXG4uY29udGFpbmVyLWZsdWlkIHtcbiAgbWFyZ2luLXRvcDogMSU7XG4gIG1hcmdpbi1ib3R0b206IDElO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG4uYnRuMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gIGNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogNHB4IDhweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1maWxlXSB7XG4gIGZvbnQtc2l6ZTogMTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBvcGFjaXR5OiAwO1xufVxuXG4ucm93IHtcbiAgcGFkZGluZzogMSUgMCU7XG59XG5cbi50aGVhZGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */"

/***/ }),

/***/ "./src/app/master/staff/staff.component.ts":
/*!*************************************************!*\
  !*** ./src/app/master/staff/staff.component.ts ***!
  \*************************************************/
/*! exports provided: StaffComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StaffComponent", function() { return StaffComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _staffModel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./staffModel */ "./src/app/master/staff/staffModel.ts");







let StaffComponent = class StaffComponent {
    constructor(apiService) {
        this.apiService = apiService;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.staff = new _staffModel__WEBPACK_IMPORTED_MODULE_6__["StaffModel"]();
        this.updateButton = false;
    }
    ngOnInit() {
        this.createForm();
        this.getRole();
        this.getAllStaff();
    }
    getRole() {
        this.apiService.getDATA('role/getAll').subscribe((data) => {
            if (data.success == true) {
                // this.roles = data.object.roleDtoList;
                if (data.object != null && data.object != undefined) {
                    if (data.object.roleDtoList != null && data.object.roleDtoList != undefined) {
                        let rolelist = data.object.roleDtoList;
                        let rle = [];
                        rolelist.forEach((rl) => {
                            if (rl.roleId != 10) {
                                rle.push({ 'roleId': rl.roleId, 'roleName': rl.roleName, 'roleCode': rl.roleCode });
                            }
                        });
                        this.roles = rle;
                    }
                }
            }
        });
    }
    getAllStaff() {
        this.apiService.getDATA('staff/getAll').subscribe((data) => {
            if (data.success == true) {
                this.staffList = data.object;
            }
        });
    }
    createForm() {
        this.form = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
            name: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('', [
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required,
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('[a-zA-Z ]*'),
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(3),
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(30)
            ]),
            mobile: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('', [
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required,
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(10),
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(10),
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('^[6-9]\\d{9}$')
            ]),
            email: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('', [
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required,
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(4),
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(30),
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$')
            ]),
            address: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('', [
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required,
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(3),
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(100)
            ]),
            password: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('', [
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required,
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6),
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(20)
            ]),
            role: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('', [
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required
            ]),
            staffId: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('')
        });
    }
    saveStaff() {
        if (this.form.valid) {
            let data = {
                "name": this.form.value['name'],
                "email": this.form.value['email'],
                "mobile": this.form.value['mobile'],
                "address": this.form.value['address'],
                "password": this.form.value['password'],
                "roleId": this.form.value['role']
            };
            this.apiService.Create('staff/save', data).subscribe((data) => {
                if (data.success == true) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(data.message);
                    this.ngOnInit();
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(data.message);
                }
            });
        }
        else {
            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire("Please enter all field");
        }
    }
    editStaff(id) {
        this.updateButton = true;
        let data = {
            "staffId": id
        };
        this.apiService.Create('staff/edit', data).subscribe((data) => {
            if (data.success == true) {
                this.form.patchValue({
                    name: data.object.name, email: data.object.email, mobile: data.object.mobile, address: data.object.address, password: data.object.password,
                    role: data.object.roleId, staffId: data.object.staffId
                });
            }
            else {
                sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(data.message);
            }
        });
    }
    updateStaff() {
        if (this.form.valid) {
            let data = {
                "name": this.form.value['name'],
                "email": this.form.value['email'],
                "mobile": this.form.value['mobile'],
                "address": this.form.value['address'],
                "password": this.form.value['password'],
                "roleId": this.form.value['role'],
                "staffId": this.form.value['staffId']
            };
            this.apiService.Create('staff/update', data).subscribe((data) => {
                if (data.success == true) {
                    this.updateButton = false;
                    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(data.message);
                    this.ngOnInit();
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(data.message);
                }
            });
        }
        else {
            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire("Please enter all field...!");
        }
    }
    deleteStaff(id) {
        let data = {
            "staffId": id
        };
        this.apiService.Create('staff/delete', data).subscribe((data) => {
            if (data.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(data.message);
                this.ngOnInit();
            }
            else {
                sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(data.message);
            }
        });
    }
    clearForm() {
        this.updateButton = false;
        this.form.reset();
    }
};
StaffComponent.ctorParameters = () => [
    { type: src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] }
];
StaffComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-staff',
        template: __webpack_require__(/*! raw-loader!./staff.component.html */ "./node_modules/raw-loader/index.js!./src/app/master/staff/staff.component.html"),
        styles: [__webpack_require__(/*! ./staff.component.scss */ "./src/app/master/staff/staff.component.scss")]
    })
], StaffComponent);



/***/ }),

/***/ "./src/app/master/staff/staffModel.ts":
/*!********************************************!*\
  !*** ./src/app/master/staff/staffModel.ts ***!
  \********************************************/
/*! exports provided: StaffModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StaffModel", function() { return StaffModel; });
class StaffModel {
    constructor() {
        this.staffId = 0;
    }
}


/***/ }),

/***/ "./src/app/master/state/state.component.scss":
/*!***************************************************!*\
  !*** ./src/app/master/state/state.component.scss ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".showErrorMsg {\n  color: red;\n}\n\n.container-fluid {\n  margin-top: 1%;\n  margin-bottom: 1%;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.row {\n  padding: 1% 0%;\n}\n\n.theader {\n  text-align: center;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21hc3Rlci9zdGF0ZS9zdGF0ZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbWFzdGVyL3N0YXRlL3N0YXRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksVUFBQTtBQ0FKOztBREdFO0VBQ0UsY0FBQTtFQUNBLGlCQUFBO0FDQUo7O0FESUU7RUFDRSx5QkFBQTtFQUNBLGNBQUE7QUNESjs7QURJRTtFQUNFLGdCQUFBO0FDREo7O0FESUU7RUFDRSxzQkFBQTtFQUNBLFdBQUE7RUFDQSx1QkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUNESjs7QURJRTtFQUNFLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxxQkFBQTtBQ0RKOztBRElFO0VBQ0UsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxNQUFBO0VBQ0EsVUFBQTtBQ0RKOztBREdFO0VBQ0UsY0FBQTtBQ0FKOztBREdFO0VBQ0Usa0JBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL21hc3Rlci9zdGF0ZS9zdGF0ZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLnNob3dFcnJvck1zZ3tcbiAgICBjb2xvcjogcmVkO1xuICB9XG4gIFxuICAuY29udGFpbmVyLWZsdWlkIHtcbiAgICBtYXJnaW4tdG9wOiAxJTtcbiAgICBtYXJnaW4tYm90dG9tOiAxJTtcbiAgfVxuICBcbiAgXG4gIC5jYXJkLWhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJkM2U1MDtcbiAgICBjb2xvcjogI2ZiZTExNjtcbiAgfVxuICBcbiAgbGFiZWwge1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIH1cbiAgXG4gIC5idG4xIHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCBncmF5O1xuICAgIGNvbG9yOiBncmF5O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDRweCA4cHg7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuICBcbiAgLnVwbG9hZC1idG4td3JhcHBlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB9XG4gIFxuICAudXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xuICAgIGZvbnQtc2l6ZTogMTAwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgLnJvdyB7XG4gICAgcGFkZGluZzogMSUgMCU7XG4gIH1cbiAgXG4gIC50aGVhZGVye1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfSIsIi5zaG93RXJyb3JNc2cge1xuICBjb2xvcjogcmVkO1xufVxuXG4uY29udGFpbmVyLWZsdWlkIHtcbiAgbWFyZ2luLXRvcDogMSU7XG4gIG1hcmdpbi1ib3R0b206IDElO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG4uYnRuMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gIGNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogNHB4IDhweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1maWxlXSB7XG4gIGZvbnQtc2l6ZTogMTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBvcGFjaXR5OiAwO1xufVxuXG4ucm93IHtcbiAgcGFkZGluZzogMSUgMCU7XG59XG5cbi50aGVhZGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */"

/***/ }),

/***/ "./src/app/master/state/state.component.ts":
/*!*************************************************!*\
  !*** ./src/app/master/state/state.component.ts ***!
  \*************************************************/
/*! exports provided: StateComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StateComponent", function() { return StateComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _core_services_api_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./state */ "./src/app/master/state/state.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_6__);







let StateComponent = class StateComponent {
    constructor(apiService, fb) {
        this.apiService = apiService;
        this.fb = fb;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.state = new _state__WEBPACK_IMPORTED_MODULE_5__["State"]();
        this.stateForm = this.fb.group({
            stateCode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(2), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(10)])],
            stateName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(5), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(20)])]
        });
    }
    ngOnInit() {
        this.getAllState();
    }
    getAllState() {
        this.apiService.getDATA('state/getAllActive').subscribe((result) => {
            console.log(result);
            if (result.success == true) {
                if (result.object.stateDtoList != null && result.object.stateDtoList != undefined) {
                    this.statedata = result.object.stateDtoList;
                }
            }
            this.dtTrigger.next();
        });
    }
    saveState() {
        //alert("state code --> " +  +" "+ "state Name -->" + )
        if (this.stateForm.valid) {
            let data = {
                "stateId": this.state.stateId,
                "stateCode": this.state.stateCode,
                "stateName": this.state.stateName
            };
            this.apiService.Create('state/save', data).subscribe((res) => {
                if (res.success == true) {
                    if (res.object != null && res.object != undefined) {
                        sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(res.message);
                        this.getAllState();
                    }
                }
                else {
                    console.log(res.message);
                }
            });
        }
        else {
            this.apiService.validateAllFormFields(this.stateForm);
        }
    }
    editState(stid) {
        let editstateData = {
            "stateId": stid
        };
        this.apiService.Create('state/getStateById', editstateData).subscribe((res) => {
            if (res.success == true) {
                if (res.object != null && res.object != undefined) {
                    this.state.stateId = res.object.stateId;
                    this.state.stateCode = res.object.stateCode;
                    this.state.stateName = res.object.stateName;
                    this.state.isActive = res.object.isActive;
                }
            }
        });
    }
    deleteState(stid) {
        let deleteStateData = {
            "stateId": stid
        };
        this.apiService.Create('state/deleteStateById', deleteStateData).subscribe((res) => {
            if (res.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(res.message);
                this.ngOnInit();
            }
            else {
                sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(res.message);
            }
        });
    }
    clearStateForm() {
        this.state.stateCode = null;
        this.state.stateName = null;
    }
};
StateComponent.ctorParameters = () => [
    { type: _core_services_api_service__WEBPACK_IMPORTED_MODULE_4__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] }
];
StateComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-state',
        template: __webpack_require__(/*! raw-loader!./state.component.html */ "./node_modules/raw-loader/index.js!./src/app/master/state/state.component.html"),
        styles: [__webpack_require__(/*! ./state.component.scss */ "./src/app/master/state/state.component.scss")]
    })
], StateComponent);



/***/ }),

/***/ "./src/app/master/state/state.ts":
/*!***************************************!*\
  !*** ./src/app/master/state/state.ts ***!
  \***************************************/
/*! exports provided: State */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "State", function() { return State; });
class State {
}


/***/ }),

/***/ "./src/app/master/trailervideos/trailervideos.component.scss":
/*!*******************************************************************!*\
  !*** ./src/app/master/trailervideos/trailervideos.component.scss ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.card-table {\n  margin-top: 1%;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.fa-pencil-square-o {\n  color: #000f92;\n  font-size: 20px;\n}\n\n.fa-trash {\n  color: #ff0000;\n  font-size: 20px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21hc3Rlci90cmFpbGVydmlkZW9zL3RyYWlsZXJ2aWRlb3MuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21hc3Rlci90cmFpbGVydmlkZW9zL3RyYWlsZXJ2aWRlb3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtFQUNBLGNBQUE7QUNDSjs7QURDQTtFQUNJLGdCQUFBO0FDRUo7O0FEQUE7RUFDSSxjQUFBO0FDR0o7O0FEREE7RUFDSSxzQkFBQTtFQUNBLFdBQUE7RUFDQSx1QkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUNJSjs7QURGQTtFQUNJLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxxQkFBQTtBQ0tKOztBREZBO0VBQ0ksZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxNQUFBO0VBQ0EsVUFBQTtBQ0tKOztBREZBO0VBQ0ksY0FBQTtFQUNDLGVBQUE7QUNLTDs7QURGQTtFQUNJLGNBQUE7RUFBYyxlQUFBO0FDTWxCIiwiZmlsZSI6InNyYy9hcHAvbWFzdGVyL3RyYWlsZXJ2aWRlb3MvdHJhaWxlcnZpZGVvcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJkM2U1MDtcbiAgICBjb2xvcjogI2ZiZTExNjtcbn1cbmxhYmVsIHtcbiAgICBmb250LXdlaWdodDogNzAwO1xufVxuLmNhcmQtdGFibGV7XG4gICAgbWFyZ2luLXRvcDoxJVxufVxuLmJ0bjEge1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gICAgY29sb3I6IGdyYXk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgcGFkZGluZzogNHB4IDhweDtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLnVwbG9hZC1idG4td3JhcHBlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xuICAgIGZvbnQtc2l6ZTogMTAwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIG9wYWNpdHk6IDA7XG59XG5cbi5mYS1wZW5jaWwtc3F1YXJlLW8ge1xuICAgIGNvbG9yOnJnYigwLCAxNSwgMTQ2KTtcbiAgICAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uZmEtdHJhc2h7XG4gICAgY29sb3I6I2ZmMDAwMDtmb250LXNpemU6IDIwcHg7XG59XG4iLCIuY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG4uY2FyZC10YWJsZSB7XG4gIG1hcmdpbi10b3A6IDElO1xufVxuXG4uYnRuMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gIGNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogNHB4IDhweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1maWxlXSB7XG4gIGZvbnQtc2l6ZTogMTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBvcGFjaXR5OiAwO1xufVxuXG4uZmEtcGVuY2lsLXNxdWFyZS1vIHtcbiAgY29sb3I6ICMwMDBmOTI7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLmZhLXRyYXNoIHtcbiAgY29sb3I6ICNmZjAwMDA7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn0iXX0= */"

/***/ }),

/***/ "./src/app/master/trailervideos/trailervideos.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/master/trailervideos/trailervideos.component.ts ***!
  \*****************************************************************/
/*! exports provided: TrailervideosComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TrailervideosComponent", function() { return TrailervideosComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var ngx_image_compress__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-image-compress */ "./node_modules/ngx-image-compress/fesm2015/ngx-image-compress.js");
/* harmony import */ var _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../../app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");










let TrailervideosComponent = class TrailervideosComponent {
    constructor(apiService, fb, sanitizer, datePipe, imageCompress, loaderService) {
        this.apiService = apiService;
        this.fb = fb;
        this.sanitizer = sanitizer;
        this.datePipe = datePipe;
        this.imageCompress = imageCompress;
        this.loaderService = loaderService;
        // trailermodel: trialerModel = new trialerModel();
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_5__["Subject"]();
        this.masterVideoList = [];
        this.masterParentVideo = [];
        this.masterChildVideo = [];
        this.videoType = "1";
        this.imageChangedEvent = "";
        this.croppedImage = '';
        this.isDtInitialized = false;
        this.topPosToStartShowing = 100;
        this.masterTrailerVideoFrom = this.fb.group({
            description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required])],
            videoURL: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(100), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(5)])],
            // startDate: ['', Validators.required],
            // endDate: ['', Validators.required],
            sequenceNumber: [''],
            imagePath: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
        this.datePickerConfig = Object.assign({}, {
            containerClass: 'theme-dark-blue',
            showWeekNumbers: false,
            dateInputFormat: 'DD-MM-YYYY'
        });
        this.minStartDate = new Date();
        this.minEndDate = new Date();
        this.minEndDate.setDate(this.minEndDate.getDate());
    }
    initvideoRows() {
        return this.fb.group({});
    }
    // get videoRows
    getvideoRows(masterTrailerVideoFrom) {
        return masterTrailerVideoFrom.get('videoRows').controls;
    }
    ngOnInit() {
        this.getMasterVideoList();
    }
    clearTrailer() {
        this.masterTrailerVideoFrom.reset();
        this.imageChangedEvent = "";
        this.croppedImage = null;
        this.id = null;
    }
    // Image Compression and Croppin
    addImageUpload(e) {
        //alert(e.target.files[0]);
        this.loaderService.display(true);
        this.imageChangedEvent = e;
        $('#file-upload').removeAttr('src');
        this.filename = "";
        this.filetype = "";
        this.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG" || extention == "png" || extention == "PNG") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB 
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.filename = file.name;
                    this.filetype = file.type;
                    // const csv: string = reader.result as string;
                    // this.adminPage.profileImage = csv.replace("data:image/jpeg;base64,", "");
                    this.imagePath = reader.result;
                };
                // this.masterGalleryForm.controls.imagePath.setValue(this.addcreation.imagePath);
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG" && extention != "PNG" && extention != "png") {
                this.filename = "";
                this.filetype = "";
                this.imagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Please Upload the valid file");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.filename = "";
                this.filetype = "";
                this.imagePath = "";
                // this.adminPage.profileImagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Document size should be less than 10MB");
                return;
            }
        }
    }
    imageCropped(event) {
        var orientation = 1;
        // var rotation = 1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 2000000) {
            // this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(
            //   result => {
            this.croppedImage = imgResultBeforeCompress;
            this.loaderService.display(false);
            // this.adminPage.profileImage = this.croppedImage;
            this.masterTrailerVideoFrom.controls.imagePath.setValue(this.croppedImage);
            // })
        }
        else if (isbc > 2000000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.masterTrailerVideoFrom.controls.imagePath.setValue(this.croppedImage);
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.croppedImage = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.masterTrailerVideoFrom.controls.imagePath.setValue(this.croppedImage);
            });
        }
    }
    imageLoaded() {
        // show cropper
    }
    cropperReady() {
        // cropper ready
    }
    loadImageFailed() {
        // show message
    }
    // populate data to form while updating "BY ID"
    editMasterVideoById(idd) {
        window.scroll({
            top: 0,
            left: 0,
            behavior: 'smooth'
        });
        this.apiService.getDATA("video/editvideo/" + idd).subscribe(data => {
            if (data.object != null && data.object != undefined) {
                this.id = data.object.id;
                this.description = data.object.description;
                this.videoURL = data.object.link;
                this.startDate = this.datePipe.transform(data.object.startDate, "dd-MM-yyyy");
                this.endDate = this.datePipe.transform(data.object.endDate, "dd-MM-yyyy");
                this.sequenceNumber = data.object.sequenceNumber;
                //  this.videoType = data.object.parentVideo;
                this.imagePath = data.object.imagePath;
                this.masterTrailerVideoFrom.controls.imagePath.setValue(this.imagePath);
                this.croppedImage = data.object.imagePath;
                // this.apiService.getBase64ImageFromURL(this.imagePath).subscribe(base64data => {
                //   this.croppedImage = 'data:image/jpeg;base64,' + base64data;
                // });
            }
        });
    }
    //Submit Master Videos List
    submitDetails() {
        if (this.masterTrailerVideoFrom.valid) {
            let videosDtos;
            // let StartDate = this.startDate.toString();
            // let EndDate = this.endDate.toString();
            // if (StartDate.length > 10 && EndDate.length == 10) {
            //   videosDtos = {
            //     "id": this.id,
            //     "description": this.description,
            //     "link": this.videoURL,
            //     "sequenceNumber": this.sequenceNumber,
            //     "startDate": this.datePipe.transform(this.startDate, "dd-MM-yyyy"),
            //     "endDate": this.endDate,
            //     "parentVideo": this.videoType,
            //     "imagePath": this.croppedImage,
            //   };
            // } else if (EndDate.length > 10 && StartDate.length == 10) {
            //   videosDtos = {
            //     "id": this.id,
            //     "description": this.description,
            //     "link": this.videoURL,
            //     "sequenceNumber": this.sequenceNumber,
            //     "startDate": this.startDate,
            //     "endDate": this.datePipe.transform(this.endDate, "dd-MM-yyyy"),
            //     "parentVideo": this.videoType,
            //     "imagePath": this.croppedImage,
            //   };
            // } else if (StartDate.length > 10 && EndDate.length > 10) {
            //   videosDtos = {
            //     "id": this.id,
            //     "description": this.description,
            //     "link": this.videoURL,
            //     "sequenceNumber": this.sequenceNumber,
            //     "startDate": this.datePipe.transform(this.startDate, "dd-MM-yyyy"),
            //     "endDate": this.datePipe.transform(this.endDate, "dd-MM-yyyy"),
            //     "parentVideo": this.videoType,
            //     "imagePath": this.croppedImage,
            //   };
            // } else {
            //   videosDtos = {
            //     "id": this.id,
            //     "description": this.description,
            //     "link": this.videoURL,
            //     "sequenceNumber": this.sequenceNumber,
            //     "startDate": this.startDate,
            //     "endDate": this.endDate,
            //     "parentVideo": this.videoType,
            //     "imagePath": this.croppedImage,
            //   };
            // }
            videosDtos = {
                "id": this.id,
                "description": this.description,
                "link": this.videoURL,
                "sequenceNumber": this.sequenceNumber,
                // "startDate": this.startDate,
                // "endDate": this.endDate,
                "parentVideo": this.videoType,
                "imagePath": this.croppedImage
            };
            this.loaderService.display(true);
            this.apiService.Create("video/saveVideo", videosDtos).subscribe(data => {
                this.loaderService.display(false);
                if (data.success == true) {
                    this.ngOnInit();
                    sweetalert2__WEBPACK_IMPORTED_MODULE_4___default.a.fire(data.message);
                    this.clearTrailer();
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_4___default.a.fire(data.message);
                }
            }, error => {
                console.log(error);
                this.loaderService.display(false);
            });
        }
        else {
            this.apiService.validateAllFormFields(this.masterTrailerVideoFrom);
            sweetalert2__WEBPACK_IMPORTED_MODULE_4___default.a.fire("Please enter all the fields");
        }
    }
    //get All videos List
    getMasterVideoList() {
        this.masterVideoList = [];
        this.masterParentVideo = [];
        this.apiService.getDATA("video/getAllvideo").subscribe(data => {
            this.loaderService.display(false);
            if (data != undefined) {
                if (data.success == true) {
                    if (data.object != undefined) {
                        if (data.object != undefined && data.object != null) {
                            this.masterVideoList = data.object;
                            this.masterVideoList.forEach(response => {
                                this.masterParentVideo.push(response);
                            });
                            if (this.isDtInitialized) {
                                this.dtElement.dtInstance.then((dtInstance) => {
                                    dtInstance.destroy();
                                    this.dtTrigger.next();
                                });
                            }
                            else {
                                this.isDtInitialized = true;
                                this.dtTrigger.next();
                            }
                            //this.dtTrigger.next();             
                        }
                    }
                }
            }
            this.loaderService.display(false);
        }, error => {
            console.log(error);
        });
    }
    deleteVideoImage(id) {
        this.apiService.getDATA("video/delete/" + id).subscribe(data => {
            this.ngOnInit();
            sweetalert2__WEBPACK_IMPORTED_MODULE_4___default.a.fire(data.message);
        });
    }
    checkScroll() {
        const scrollPosition = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
        if (scrollPosition >= this.topPosToStartShowing) {
            this.isShow = true;
        }
        else {
            this.isShow = false;
        }
    }
};
TrailervideosComponent.ctorParameters = () => [
    { type: _app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__["DomSanitizer"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DatePipe"] },
    { type: ngx_image_compress__WEBPACK_IMPORTED_MODULE_8__["NgxImageCompressService"] },
    { type: _app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_9__["LoaderService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('window:scroll')
], TrailervideosComponent.prototype, "checkScroll", null);
TrailervideosComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-trailervideos',
        template: __webpack_require__(/*! raw-loader!./trailervideos.component.html */ "./node_modules/raw-loader/index.js!./src/app/master/trailervideos/trailervideos.component.html"),
        styles: [__webpack_require__(/*! ./trailervideos.component.scss */ "./src/app/master/trailervideos/trailervideos.component.scss")]
    })
], TrailervideosComponent);



/***/ }),

/***/ "./src/app/modals/ExtendMembership.ts":
/*!********************************************!*\
  !*** ./src/app/modals/ExtendMembership.ts ***!
  \********************************************/
/*! exports provided: ExtendMembership */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExtendMembership", function() { return ExtendMembership; });
class ExtendMembership {
    constructor() {
        this.id = 0;
        this.memberTypeId = "0";
        this.membershipId = "0";
        this.extendedDate = "";
        this.remark = "";
        this.createdBy = "";
        this.searchstr = "";
    }
}


/***/ }),

/***/ "./src/app/modals/MasterContentRestriction.ts":
/*!****************************************************!*\
  !*** ./src/app/modals/MasterContentRestriction.ts ***!
  \****************************************************/
/*! exports provided: MasterContentRestriction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MasterContentRestriction", function() { return MasterContentRestriction; });
class MasterContentRestriction {
    constructor() {
        this.configId = 0;
        this.newsLimit = 0;
        this.galaryLimit = 0;
        this.articleImageLimit = 0;
        this.articlePdfLimit = 0;
        this.videoLimit = 0;
        this.enableMovieAccess = false;
    }
}


/***/ }),

/***/ "./src/app/modals/SearchData.ts":
/*!**************************************!*\
  !*** ./src/app/modals/SearchData.ts ***!
  \**************************************/
/*! exports provided: SearchData, Menu */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SearchData", function() { return SearchData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Menu", function() { return Menu; });
class SearchData {
    constructor() {
        this.refProfessionId = 0;
        this.individualInstitute = "";
        this.experienceType = "";
        this.yearOfExp = "";
        this.generalSearch = "";
        this.ageGroup = "";
        this.gender = "";
        this.auditionId = 0;
        this.isaudition = false;
        this.auditionAppliedDate = "";
        this.createdDate = "";
        this.RegDate = "";
        this.AppliedDate = "";
        this.currentPage = 1;
        this.offset = 0;
        this.limit = 20;
        this.totalRecords = 0;
        this.noOfPages = 1;
    }
}
class Menu {
    constructor() {
        this.id = 0;
        this.itemName = "";
    }
}


/***/ }),

/***/ "./src/app/modals/adminpage.ts":
/*!*************************************!*\
  !*** ./src/app/modals/adminpage.ts ***!
  \*************************************/
/*! exports provided: AdminPage, MemberTypeData, SocialLinksDto */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminPage", function() { return AdminPage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MemberTypeData", function() { return MemberTypeData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SocialLinksDto", function() { return SocialLinksDto; });
class AdminPage {
    constructor() {
        this.membershipId = 0;
        this.status = "";
        this.instructionByMember = "";
        this.leagueTypeId = "";
    }
}
class MemberTypeData {
    constructor() {
        this.fresherAmount = 0;
        this.memberTypeId = 0;
        this.name = "";
        this.experiencedAmount = "";
        this.description = "";
    }
}
class SocialLinksDto {
    constructor() {
        this.socialLinksId = 0;
        this.socialLinksName = "";
        this.seqNum = 0;
        this.icon = "";
        this.socialLinksUrl = "";
    }
}


/***/ }),

/***/ "./src/app/modals/permission.ts":
/*!**************************************!*\
  !*** ./src/app/modals/permission.ts ***!
  \**************************************/
/*! exports provided: Permission */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Permission", function() { return Permission; });
class Permission {
    constructor() {
        this.rolePermissionId = 0;
        this.roleId = 0;
        this.view = false;
        this.edit = false;
        this.pending = false;
        this.approved = false;
        this.rejected = false;
        this.redCorner = false;
        this.paymentSkip = false;
        this.active = false;
        this.inActive = false;
        this.superPower = false;
    }
}


/***/ }),

/***/ "./src/app/modals/premiumprofile.ts":
/*!******************************************!*\
  !*** ./src/app/modals/premiumprofile.ts ***!
  \******************************************/
/*! exports provided: PremiumProfile, article */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PremiumProfile", function() { return PremiumProfile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "article", function() { return article; });
class PremiumProfile {
}
class article {
    constructor() {
        this.articalPath = "";
        this.articalPathFileType = "";
        this.articalPathPDF = "";
    }
}


/***/ }),

/***/ "./src/app/modals/profilemember.ts":
/*!*****************************************!*\
  !*** ./src/app/modals/profilemember.ts ***!
  \*****************************************/
/*! exports provided: ProfileMember */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProfileMember", function() { return ProfileMember; });
class ProfileMember {
    constructor() {
        this.experience = "";
        this.aboutMe = "";
        this.seqNum = 1;
        this.description = "";
        this.ProfileimagePath1 = "";
        this.sample = "";
    }
}


/***/ }),

/***/ "./src/app/modals/validityprofile.ts":
/*!*******************************************!*\
  !*** ./src/app/modals/validityprofile.ts ***!
  \*******************************************/
/*! exports provided: ValidityProfile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValidityProfile", function() { return ValidityProfile; });
class ValidityProfile {
}


/***/ }),

/***/ "./src/app/movie/create-movie/create-movie.component.scss":
/*!****************************************************************!*\
  !*** ./src/app/movie/create-movie/create-movie.component.scss ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container-fluid {\n  margin-top: 1%;\n  margin-bottom: 1%;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.theader {\n  text-align: center;\n}\n\n.fa-pencil-square-o {\n  color: #000f92;\n  font-size: 21px;\n}\n\n.fa-trash {\n  color: #ff0000;\n  font-size: 21px;\n}\n\n.section {\n  border: 1px solid #bbb;\n  padding: 1% 1%;\n  border-radius: 10px;\n  margin-bottom: 1%;\n}\n\n.labelhead {\n  margin-top: 2%;\n}\n\n.addremoveicon {\n  display: block;\n  margin: auto;\n  right: auto;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21vdmllL2NyZWF0ZS1tb3ZpZS9jcmVhdGUtbW92aWUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vdmllL2NyZWF0ZS1tb3ZpZS9jcmVhdGUtbW92aWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0EsaUJBQUE7QUNDSjs7QURFQTtFQUNJLHlCQUFBO0VBQ0EsY0FBQTtBQ0NKOztBREVBO0VBQ0ksZ0JBQUE7QUNDSjs7QURFQTtFQUNJLHNCQUFBO0VBQ0EsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxnQkFBQTtFQUNBLHFCQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsT0FBQTtFQUNBLE1BQUE7RUFDQSxVQUFBO0FDQ0o7O0FERUE7RUFDSSxrQkFBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7RUFDQSxlQUFBO0FDQ0o7O0FEQ0E7RUFDSSxzQkFBQTtFQUNBLGNBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0FDRUo7O0FEQUE7RUFDSSxjQUFBO0FDR0o7O0FEREE7RUFDSSxjQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUNJSiIsImZpbGUiOiJzcmMvYXBwL21vdmllL2NyZWF0ZS1tb3ZpZS9jcmVhdGUtbW92aWUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyLWZsdWlkIHtcbiAgICBtYXJnaW4tdG9wOiAxJTtcbiAgICBtYXJnaW4tYm90dG9tOiAxJTtcbn1cblxuLmNhcmQtaGVhZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICAgIGNvbG9yOiAjZmJlMTE2O1xufVxuXG5sYWJlbCB7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLmJ0bjEge1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gICAgY29sb3I6IGdyYXk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgcGFkZGluZzogNHB4IDhweDtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1cImZpbGVcIl0ge1xuICAgIGZvbnQtc2l6ZTogMTAwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIG9wYWNpdHk6IDA7XG59XG5cbi50aGVhZGVyIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5mYS1wZW5jaWwtc3F1YXJlLW8ge1xuICAgIGNvbG9yOiByZ2IoMCwgMTUsIDE0Nik7XG4gICAgZm9udC1zaXplOiAyMXB4O1xufVxuXG4uZmEtdHJhc2gge1xuICAgIGNvbG9yOiAjZmYwMDAwO1xuICAgIGZvbnQtc2l6ZTogMjFweDtcbn1cbi5zZWN0aW9uIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjYmJiO1xuICAgIHBhZGRpbmc6IDElIDElO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMSU7XG59XG4ubGFiZWxoZWFkIHtcbiAgICBtYXJnaW4tdG9wOiAyJTtcbn1cbi5hZGRyZW1vdmVpY29ue1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICByaWdodDogYXV0bztcbn1cbiIsIi5jb250YWluZXItZmx1aWQge1xuICBtYXJnaW4tdG9wOiAxJTtcbiAgbWFyZ2luLWJvdHRvbTogMSU7XG59XG5cbi5jYXJkLWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gIGNvbG9yOiAjZmJlMTE2O1xufVxuXG5sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5idG4xIHtcbiAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcbiAgY29sb3I6IGdyYXk7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nOiA0cHggOHB4O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPWZpbGVdIHtcbiAgZm9udC1zaXplOiAxMDBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi50aGVhZGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZmEtcGVuY2lsLXNxdWFyZS1vIHtcbiAgY29sb3I6ICMwMDBmOTI7XG4gIGZvbnQtc2l6ZTogMjFweDtcbn1cblxuLmZhLXRyYXNoIHtcbiAgY29sb3I6ICNmZjAwMDA7XG4gIGZvbnQtc2l6ZTogMjFweDtcbn1cblxuLnNlY3Rpb24ge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYmJiO1xuICBwYWRkaW5nOiAxJSAxJTtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgbWFyZ2luLWJvdHRvbTogMSU7XG59XG5cbi5sYWJlbGhlYWQge1xuICBtYXJnaW4tdG9wOiAyJTtcbn1cblxuLmFkZHJlbW92ZWljb24ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiBhdXRvO1xuICByaWdodDogYXV0bztcbn0iXX0= */"

/***/ }),

/***/ "./src/app/movie/create-movie/create-movie.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/movie/create-movie/create-movie.component.ts ***!
  \**************************************************************/
/*! exports provided: CreateMovieComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateMovieComponent", function() { return CreateMovieComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _create_movie__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./create-movie */ "./src/app/movie/create-movie/create-movie.ts");
/* harmony import */ var ngx_image_compress__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-image-compress */ "./node_modules/ngx-image-compress/fesm2015/ngx-image-compress.js");
/* harmony import */ var src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_10__);












let CreateMovieComponent = class CreateMovieComponent {
    constructor(apiService, fb, imageCompress, loaderService, datepipe, sanitizer, _compiler) {
        this.apiService = apiService;
        this.fb = fb;
        this.imageCompress = imageCompress;
        this.loaderService = loaderService;
        this.datepipe = datepipe;
        this.sanitizer = sanitizer;
        this._compiler = _compiler;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.memberList = [];
        this.professionList = [];
        this.selectedProductionHouseName = [];
        this.galImg = [];
        this.imageChangedEventGalary = [];
        this.articleImg = [];
        this.articlePdf = [];
        this.croppedImage1 = '';
        this.croppedImage2 = '';
        this.imageChangedEvent1 = '';
        this.imageChangedEvent2 = '';
        this.create_movie = new _create_movie__WEBPACK_IMPORTED_MODULE_5__["createmovie"]();
        this.modules = {};
        //#region geners list
        this.gl = [];
        this.geners_list = [];
        this.glist = [];
        //#endregion 2nd poster capture
        //#region basic details
        this.movie_id = 0;
        this.posterOneId = 0;
        this.posterTwoId = 0;
        // initTechnicianRow() {
        //   return this.fb.group({
        //     technicianTypeName: ['']
        //   })
        // }
        // getTechnicianRow(technicianForm: any) {
        //   return technicianForm.get('technicianRow').controls
        // }
        // addTechnicianRow(index: number) {
        //   const control = <FormArray>this.technicianForm.controls['technicianRow'];
        //   control.insert(index + 1, this.initTechnicianRow());
        //  // control.push(this.initTechnicianRow());
        // }
        // removeTechnicianRow(index: number) {
        //   const control = <FormArray>this.technicianForm.controls['technicianRow'];
        //   control.removeAt(index);
        // }
        // initTechRow() {
        //   return this.fb.group({
        //     techName: [''],
        //     memberName:['']
        //   })
        // }
        // getTechRow(technicianForm: any) {
        //   return technicianForm.get('techRow').controls
        // }
        // addTechRow() {
        //   const control = <FormArray>this.techForm.controls['techRow'];
        //   control.push(this.initTechRow());
        // }
        // removeTechRow(index: number) {
        //   const control = <FormArray>this.techForm.controls['techRow'];
        //   control.removeAt(index);
        // }
        // saveTechnician() {
        //   let technicianName: string;
        //   for (let value of this.technicianForm.value.technicianRow) {
        //     if (value.technicianTypeName != null && value.technicianTypeName != undefined) {
        //       technicianName = value.technicianTypeName
        //     }
        //   }
        //   let techname = [];
        //   for (let value of this.techForm.value.techRow) {
        //     if (value.techName != null && value.techName != undefined) {
        //       value.techName.forEach((da) => {
        //         techname.push({ "movieTechId": "", "refMemberId": da.id })
        //       })
        //     }
        //   }
        //   let techDatas = {
        //     "techTypeId": "",
        //     "refMovieId": this.movie_id,
        //     "technicianTypeName": technicianName,
        //     "masterMovieTechniciansDtos": techname
        //   }
        //   this.loaderService.display(true);
        //   this.apiService.Create("MasterTechniciansType/save", techDatas).subscribe((result) => {
        //     this.loaderService.display(false);
        //     if (result.success == true) {
        //       Swal.fire({
        //         position: 'top-end',
        //         icon: 'success',
        //         title: result.message,
        //         showConfirmButton: false,
        //         timer: 1500
        //       })
        //     }
        //     else {
        //       this.loaderService.display(false);
        //       console.log(result.message);
        //     }
        //   })
        // }
        //#region for social media links
        this.socialMediaLinks = [];
        this.socialLinksId = [];
        this.CreateForm();
        this.modules = {
            'toolbar': [
                ['bold', 'italic', 'underline', 'strike'],
                [{ 'header': 1 }, { 'header': 2 }],
                [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                // [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript
                // [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
                // [{ 'direction': 'rtl' }],                         // text direction
                [{ 'size': ['small', false, 'large', 'huge'] }],
                // [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                [{ 'color': [] }, { 'background': [] }],
                [{ 'font': [] }],
                [{ 'align': [] }],
            ]
        };
    }
    CreateForm() {
        this.basicMovieForm = this.fb.group({
            movieId: [''],
            posterOneId: [''],
            posterTwoId: [''],
            movieType: [''],
            movieOrSerial: [''],
            title: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(200), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(2)])],
            shortSynopsis: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(5000), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(2)])],
            synopsis: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(10000), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(2)])],
            generslist: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required])],
            yearStarted: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            yearCompleted: [''],
            otherTechnicalDetails: ['']
        });
        this.datePickerConfig = Object.assign({}, {
            containerClass: 'theme-dark-blue',
            showWeekNumbers: false,
            dateInputFormat: 'DD-MM-YYYY'
        });
        this.productionHouseForm = this.fb.group({
            prodHouseRows: this.fb.array([this.initProdHouseRows()])
        });
        this.producerForm = this.fb.group({
            producerRow: this.fb.array([this.initProducerRow()])
        });
        this.writerForm = this.fb.group({
            writerRow: this.fb.array([this.initWriterRow()])
        });
        this.directorForm = this.fb.group({
            directorRow: this.fb.array([this.initDirectorRow()])
        });
        this.musicDirectorForm = this.fb.group({
            musicDirectorRow: this.fb.array([this.initMusicDirectorRow()])
        });
        this.starringForm = this.fb.group({
            starringRow: this.fb.array([this.initStarringRow()])
        });
        this.galleryForm = this.fb.group({
            galleryRow: this.fb.array([this.initGalleryRow()])
        });
        this.articleForm = this.fb.group({
            articleRow: this.fb.array([this.initArticleRow()])
        });
        this.articlePdfForm = this.fb.group({
            articlePdfRow: this.fb.array([this.initArticlePdfRow()])
        });
        this.memberOpinionForm = this.fb.group({
            memberOpinionRow: this.fb.array([this.initMemberOpinionRow()])
        });
        this.videoForm = this.fb.group({
            videoRow: this.fb.array([this.initVideoRow()])
        });
        // this.technicianForm = this.fb.group({
        //   technicianRow: this.fb.array([this.initTechnicianRow()])
        // })
        // this.techForm = this.fb.group({
        //   techRow: this.fb.array([this.initTechRow()])
        // })
        this.socialMediaForm = this.fb.group({
            socialLinkRow: this.fb.array([this.initSocialLinkRow()])
        });
        this.TechnicianForm = this.fb.group({
            technicianHeads: this.fb.array([this.newTechnicianHeads()]),
        });
    }
    ngOnInit() {
        this.create_movie.movieOrSerial = "movie";
        // console.log(this.create_movie.movieOrSerial);
        this.articlePdf.push('');
        this.productionHouseSettings = {
            text: 'Select',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search ',
            badgeShowLimit: 5,
            groupBy: "category",
        };
        this.TechniciansSettings = {
            text: 'Select',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search ',
            badgeShowLimit: 5,
            groupBy: "category"
        };
        this.ProfessionTitleSettings = {
            text: 'Select',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Profession',
            badgeShowLimit: 5,
            groupBy: "category"
        };
        this.getGeners();
        this.getSocialMediaLinks();
        this.create_movie.movieType = 'trending';
        this.genersSettings = {
            singleSelection: false,
            text: 'Select',
            enableCheckAll: false,
            enableFilterSelectAll: false,
            searchPlaceholderText: 'Search Geners',
            enableSearchFilter: true,
            selectGroup: true,
        };
    }
    ongenersSelect(item) {
        //  console.log(item);
    }
    ongenersDeSelect(item) {
        // console.log(item);
    }
    ongenersSelectAll(items) {
        //  console.log(items);
    }
    ongenersDeSelectAll(items) {
        //  console.log(items);
    }
    //#endregion for  start
    gettechnicianHeads() {
        return this.TechnicianForm.get("technicianHeads");
    }
    newTechnicianHeads() {
        return this.fb.group({
            technicianTypeName: '',
            technicianTypeNameIfNot: '',
            seqNo: '',
            technicians: this.fb.array([this.newTechnician()])
        });
    }
    addTechnicianHead() {
        //  Adding a TechnicianHead
        this.gettechnicianHeads().push(this.newTechnicianHeads());
    }
    removeTechnicianHead(TechIndex) {
        this.gettechnicianHeads().removeAt(TechIndex);
    }
    getTechnicians(TechIndex) {
        return this.gettechnicianHeads().at(TechIndex).get("technicians");
    }
    newTechnician() {
        return this.fb.group({
            technicianName: '',
            technicianNameIfNot: '',
            seqNo: ''
        });
    }
    addTechnicianHeadTechnician(TechIndex) {
        this.getTechnicians(TechIndex).push(this.newTechnician());
    }
    removeTechnicianHeadTechnician(TechIndex, technicianNameIndex) {
        this.getTechnicians(TechIndex).removeAt(technicianNameIndex);
    }
    onClearTechnicians(TechIndex) {
        this.gettechnicianHeads().removeAt(TechIndex);
    }
    onTechniciansSubmit(TechIndex) {
        //console.log(this.gettechnicianHeads().controls[TechIndex].value)
        let techniciansData = this.gettechnicianHeads().controls[TechIndex].value;
        let techmem = techniciansData.technicians;
        let techData = [];
        if (techmem != undefined && techmem != null) {
            for (let value of techmem) {
                if (value.technicianName !== "") {
                    techData.push({ "movieTechId": "", "refMemberId": value.technicianName[0].id, "seqNo": value.seqNo });
                }
                else {
                    techData.push({ "movieTechId": "", "refMemberId": 0, "memberName": value.technicianNameIfNot, "seqNo": value.seqNo });
                }
            }
        }
        let techDatas;
        if (techniciansData.technicianTypeName == null || techniciansData.technicianTypeName == undefined || techniciansData.technicianTypeName == "") {
            techDatas = {
                "techTypeId": "",
                "refMovieId": this.movie_id,
                "refProfessionId": "",
                "technicianTypeName": techniciansData.technicianTypeNameIfNot,
                "masterMovieTechniciansDtos": techData,
                "seqNo": techniciansData.seqNo
            };
        }
        else {
            techDatas = {
                "techTypeId": "",
                "refMovieId": this.movie_id,
                "refProfessionId": techniciansData.technicianTypeName[0].id,
                "technicianTypeName": techniciansData.technicianTypeNameIfNot,
                "masterMovieTechniciansDtos": techData,
                "seqNo": techniciansData.seqNo
            };
        }
        this.loaderService.display(true);
        this.apiService.Create("MasterTechniciansType/save", techDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    //#endregion for Tech end
    getMemberList(event) {
        let memberName = event.target.value;
        if (memberName != "" && memberName.length > 2) {
            let memName = {
                "firstName": memberName
            };
            this.apiService.Create("member/getMemberDetailsByMemberName", memName).subscribe(data => {
                let memList = [];
                let memdata = data.object;
                if (memdata != null && memdata != undefined) {
                    memdata.forEach(ml => {
                        memList.push({ "id": ml.membershipId, "itemName": ml.firstName, "profileImage": ml.profileImage });
                    });
                    this.memberList = memList;
                }
            });
        }
    }
    selectedMemId(memdata) {
        this.selectedMemWebPageId = memdata.webPageId;
    }
    getProfessionList(event) {
        let profName = event.target.value;
        if (profName != "" && profName.length > 2) {
            let professionName = {
                "title": profName
            };
            this.apiService.Create("profession/getAllProfessionByName", professionName).subscribe((data) => {
                let proList = [];
                let prodata = data.object;
                if (prodata != null && prodata != undefined) {
                    prodata.forEach(pd => {
                        if (pd.individualInstitute === "Individual") {
                            proList.push({ "id": pd.professionId, "itemName": pd.title });
                        }
                    });
                    this.professionList = proList;
                }
            });
        }
    }
    selectedProfId(profdata) {
        this.selectedProfessionId = profdata.professionId;
    }
    getGeners() {
        this.apiService.getDATA("masterGeners/getAll").subscribe((data) => {
            if (data.object.masterGenersDtoList != null && data.object.masterGenersDtoList != undefined) {
                this.gl = data.object.masterGenersDtoList;
                this.gl.forEach((gnli) => {
                    this.glist.push({ "id": gnli.genersId, "itemName": gnli.name });
                });
                this.geners_list = this.glist;
            }
        });
    }
    //#endregion geners list
    //#region 1st poster capture
    firstPosterUpload(e) {
        this.loaderService.display(true);
        this.imageChangedEvent1 = e;
        $('#file-upload').removeAttr('src');
        this.create_movie.filename = "";
        this.create_movie.filetype = "";
        this.create_movie.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG" || extention == "png" || extention == "PNG") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.create_movie.filename = file.name;
                    this.create_movie.filetype = file.type;
                    // const csv: string = reader.result as string;
                    // this.adminPage.profileImage = csv.replace("data:image/jpeg;base64,", "");
                    this.create_movie.imagePath = reader.result;
                };
                // this.masterGalleryForm.controls.imagePath.setValue(this.addcreation.imagePath);
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG" && extention != "PNG" && extention != "png") {
                this.create_movie.filename = "";
                this.create_movie.filetype = "";
                this.create_movie.imagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Please Upload the valid file");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.create_movie.filename = "";
                this.create_movie.filetype = "";
                this.create_movie.imagePath = "";
                // this.adminPage.profileImagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Document size should be less than 10MB");
                return;
            }
        }
    }
    firstimageCropped(event) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 300000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.croppedImage1 = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMovieForm.controls.imagePath.setValue(this.croppedImage1);
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 80).then(result => {
                this.croppedImage1 = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMovieForm.controls.imagePath.setValue(this.croppedImage1);
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.croppedImage1 = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMovieForm.controls.imagePath.setValue(this.croppedImage1);
            });
        }
    }
    firstimageLoaded() {
        // show cropper
    }
    firstcropperReady() {
        // cropper ready
    }
    firstloadImageFailed() {
        // show message
    }
    //#endregion 1st poster capture
    //#region 2nd poster capture
    secondPosterUpload(e) {
        this.loaderService.display(true);
        this.imageChangedEvent2 = e;
        $('#file-upload').removeAttr('src');
        this.create_movie.filename = "";
        this.create_movie.filetype = "";
        this.create_movie.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG" || extention == "png" || extention == "PNG") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.create_movie.filename = file.name;
                    this.create_movie.filetype = file.type;
                    // const csv: string = reader.result as string;
                    // this.adminPage.profileImage = csv.replace("data:image/jpeg;base64,", "");
                    this.create_movie.imagePath = reader.result;
                };
                // this.masterGalleryForm.controls.imagePath.setValue(this.addcreation.imagePath);
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG" && extention != "PNG" && extention != "png") {
                this.create_movie.filename = "";
                this.create_movie.filetype = "";
                this.create_movie.imagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Please Upload the valid file");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.create_movie.filename = "";
                this.create_movie.filetype = "";
                this.create_movie.imagePath = "";
                // this.adminPage.profileImagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Document size should be less than 10MB");
                return;
            }
        }
    }
    imageCropped(event) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 300000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.croppedImage2 = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMovieForm.controls.imagePath.setValue(this.croppedImage2);
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 80).then(result => {
                this.croppedImage2 = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMovieForm.controls.imagePath.setValue(this.croppedImage2);
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.croppedImage2 = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMovieForm.controls.imagePath.setValue(this.croppedImage2);
            });
        }
    }
    imageLoaded() {
        // show cropper
    }
    cropperReady() {
        // cropper ready
    }
    loadImageFailed() {
        // show message
    }
    basicSaveMovie() {
        if (this.geners_data != null && this.geners_data != undefined) {
            if (this.geners_data.length > 0) {
                let listIds = new Array();
                this.geners_data.forEach(gd => {
                    if (gd.id > 0) {
                        listIds.push(gd.id);
                    }
                });
                this.create_movie.refGenersId = listIds;
            }
        }
        let moviePosters = [{ "poster": this.croppedImage1 }, { "poster": this.croppedImage2 }];
        let stdate = this.datepipe.transform(this.create_movie.yearStarted, 'dd-MM-yyyy');
        let datecmpl = this.datepipe.transform(this.create_movie.yearCompleted, 'dd-MM-yyyy');
        if (datecmpl == null && datecmpl == undefined) {
            datecmpl = "";
        }
        if (this.basicMovieForm.valid) {
            let data = {
                "movieId": this.movie_id,
                "title": this.create_movie.title,
                "shortSynopsis": this.create_movie.shortSynopsis,
                "synopsis": this.create_movie.synopsis,
                "refGenersId": this.create_movie.refGenersId,
                "movieOrSerial": this.create_movie.movieOrSerial,
                "movieType": this.create_movie.movieType,
                "otherTechnicalDetails": this.create_movie.otherTechnicalDetails,
                "yearStarted": stdate,
                "yearCompleted": datecmpl,
                "movieImagesDtos": moviePosters
            };
            this.loaderService.display(true);
            this.apiService.Create("movieDetails/save", data).subscribe((result) => {
                this.loaderService.display(false);
                if (result.success == true) {
                    this.movie_id = result.object.movieId;
                    this.posterOneId = 0;
                    this.posterTwoId = 0;
                    sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                        position: 'top-end',
                        icon: 'success',
                        title: result.message,
                        showConfirmButton: false,
                        timer: 1500
                    });
                }
                else {
                    this.loaderService.display(false);
                    console.log(result.message);
                }
            }, error => {
                this.loaderService.display(false);
                console.log(error);
            });
        }
        else {
            this.apiService.validateAllFormFields(this.basicMovieForm);
            sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire("Please enter all the fields");
        }
    }
    //#endregion basic details
    clearBasicDetails() {
        this.create_movie.title = "",
            this.create_movie.shortSynopsis = "",
            this.create_movie.synopsis = "",
            this.create_movie.refGenersId = "",
            this.create_movie.movieType = 'trending',
            this.create_movie.yearStarted = "",
            this.create_movie.yearCompleted = "",
            this.create_movie.otherTechnicalDetails = "",
            this.croppedImage1 = "",
            this.imageChangedEvent1 = "",
            this.croppedImage2 = "",
            this.imageChangedEvent2 = "",
            this.geners_data = "";
    }
    //#region PRODUCTION HOUSE
    initProdHouseRows() {
        return this.fb.group({
            prodHouseTitle: [''],
            memberName: ['']
        });
    }
    getProductionHouseRows(productionHouseForm) {
        return productionHouseForm.get('prodHouseRows').controls;
    }
    addProductionHouseRow() {
        const control = this.productionHouseForm.controls['prodHouseRows'];
        control.push(this.initProdHouseRows());
    }
    removeProductionHouseRow(index) {
        const control = this.productionHouseForm.controls['prodHouseRows'];
        control.removeAt(index);
        // this.selectedItems.splice(index,0);
    }
    saveProductionHouse() {
        let prodHouseData = [];
        this.loaderService.display(true);
        for (let value of this.productionHouseForm.value.prodHouseRows) {
            if (value != undefined && value != null) {
                // let refMemberId = value.prodHouseTitle[0].id;
                // let prodName = value.prodHouseTitle[0].itemName;
                // prodHouseData.push({ "productionName":"","refMemberId": refMemberId, "refMovieId": 1, "memberName":value.memberName});
                //here production name not required need to remove from api
                if (value.memberName !== "") {
                    prodHouseData.push({ "productionId": "", "refMemberId": 0, "refMovieId": this.movie_id, "memberName": value.memberName });
                }
                else {
                    prodHouseData.push({ "productionId": "", "refMemberId": value.prodHouseTitle[0].id, "refMovieId": this.movie_id, "memberName": value.prodHouseTitle[0].itemName });
                }
            }
        }
        ;
        let movieProductionDatas = {
            "refMovieId": this.movie_id,
            "movieProductionHouseDtos": prodHouseData
        };
        this.apiService.Create("movieProduction/saveproductionhouse", movieProductionDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    clearProductionHouse() {
        this.productionHouseForm.reset();
    }
    //Producer Form
    initProducerRow() {
        return this.fb.group({
            producerName: [''],
            memberName: ['']
        });
    }
    getProducerRow(producerForm) {
        return producerForm.get('producerRow').controls;
    }
    addProducerRow() {
        const control = this.producerForm.controls['producerRow'];
        control.push(this.initProducerRow());
    }
    removeProducerRow(index) {
        const control = this.producerForm.controls['producerRow'];
        control.removeAt(index);
    }
    saveProducer() {
        let producerData = [];
        this.loaderService.display(true);
        for (let value of this.producerForm.value.producerRow) {
            // if (value.producerName != "") {
            //   if (value.producerName != null) {
            //     if (value.producerName.length > 0) {
            //       let refMemberId = value.producerName[0].id;
            //       producerData.push({ "refMemberId": refMemberId });
            //     }
            //   }
            // }
            if (value.producerName == "") {
                producerData.push({ "producerId": "", "refMemberId": 0, "refMovieId": this.movie_id, "memberName": value.memberName });
            }
            else {
                producerData.push({ "producerId": "", "refMemberId": value.producerName[0].id, "refMovieId": this.movie_id, "memberName": value.producerName[0].itemName });
            }
        }
        ;
        let movieProducerDatas = {
            "refMovieId": this.movie_id,
            "movieProducerDtos": producerData
        };
        this.apiService.Create("movieProducer/saveproducer", movieProducerDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    clearProducer() {
        this.producerForm.reset();
    }
    //Writter Form
    initWriterRow() {
        return this.fb.group({
            writerName: [''],
            memberName: ['']
        });
    }
    getWriterRow(writerForm) {
        return writerForm.get('writerRow').controls;
    }
    addWriterRow() {
        const control = this.writerForm.controls['writerRow'];
        control.push(this.initWriterRow());
    }
    removeWriterRow(index) {
        const control = this.writerForm.controls['writerRow'];
        control.removeAt(index);
    }
    saveWriter() {
        let witerData = [];
        this.loaderService.display(true);
        for (let value of this.writerForm.value.writerRow) {
            // if (value.writerName != "") {
            //   if (value.writerName != null) {
            //     if (value.writerName.length > 0) {
            //       let refMemberId = value.writerName[0].id;
            //       witerData.push({ "refMemberId": refMemberId });
            //     }
            //   }
            // }
            if (value.memberName !== "") {
                witerData.push({ "writerId": "", "refMemberId": 0, "refMovieId": this.movie_id, "memberName": value.memberName });
            }
            else {
                witerData.push({ "writerId": "", "refMemberId": value.writerName[0].id, "refMovieId": this.movie_id, "memberName": value.writerName[0].itemName });
            }
        }
        ;
        let writerDatas = {
            "refMovieId": this.movie_id,
            "movieWriterDtos": witerData
        };
        this.apiService.Create("movieWriter/savewriter", writerDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    clearWriter() {
        this.writerForm.reset();
    }
    //Director Form
    initDirectorRow() {
        return this.fb.group({
            directorName: [''],
            memberName: ['']
        });
    }
    getDirectorRow(directorForm) {
        return directorForm.get('directorRow').controls;
    }
    addDirectorRow() {
        const control = this.directorForm.controls['directorRow'];
        control.push(this.initDirectorRow());
    }
    removeDirectorRow(index) {
        const control = this.directorForm.controls['directorRow'];
        control.removeAt(index);
    }
    saveDirector() {
        let directorData = [];
        this.loaderService.display(true);
        for (let value of this.directorForm.value.directorRow) {
            // if (value.directorName != "") {
            //   if (value.directorName != null) {
            //     if (value.directorName.length > 0) {
            //       let refMemberId = value.directorName[0].id;
            //       directorData.push({ "refMemberId": refMemberId });
            //     }
            //   }
            // }
            if (value.memberName !== "") {
                directorData.push({ "directorId": "", "refMemberId": 0, "refMovieId": this.movie_id, "memberName": value.memberName });
            }
            else {
                directorData.push({ "directorId": "", "refMemberId": value.directorName[0].id, "refMovieId": this.movie_id, "memberName": value.directorName[0].itemName });
            }
        }
        ;
        let directorDatas = {
            "refMovieId": this.movie_id,
            "movieDirectorDtos": directorData
        };
        this.apiService.Create("movieDirector/savedirector", directorDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    clearDirector() {
        this.directorForm.reset();
    }
    //Music Director Form
    initMusicDirectorRow() {
        return this.fb.group({
            musicDirectorName: [''],
            memberName: ['']
        });
    }
    getMusicDirectorRow(musicDirectorForm) {
        return musicDirectorForm.get('musicDirectorRow').controls;
    }
    addMusicDirectorRow() {
        const control = this.musicDirectorForm.controls['musicDirectorRow'];
        control.push(this.initMusicDirectorRow());
    }
    removeMusicDirectorRow(index) {
        const control = this.musicDirectorForm.controls['musicDirectorRow'];
        control.removeAt(index);
    }
    saveMusicDirector() {
        let musicDirectorData = [];
        this.loaderService.display(true);
        for (let value of this.musicDirectorForm.value.musicDirectorRow) {
            // if (value.musicDirectorName != "") {
            //   if (value.musicDirectorName != null) {
            //     if (value.musicDirectorName.length > 0) {
            //       let refMemberId = value.musicDirectorName[0].id;
            //       musicDirectorData.push({ "refMemberId": refMemberId });
            //     }
            //   }
            // }
            if (value.memberName !== "") {
                musicDirectorData.push({ "refMemberId": 0, "refMovieId": this.movie_id, "memberName": value.memberName });
            }
            else {
                musicDirectorData.push({ "refMemberId": value.musicDirectorName[0].id, "refMovieId": this.movie_id, "memberName": value.musicDirectorName[0].itemName });
            }
        }
        ;
        let movieMusicDirectorDatas = {
            "refMovieId": this.movie_id,
            "movieMusicDirectorDtos": musicDirectorData
        };
        this.apiService.Create("movieMusicdirector/savemusicdirector", movieMusicDirectorDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    clearMusicDirector() {
        this.musicDirectorForm.reset();
    }
    //Starring Form
    initStarringRow() {
        return this.fb.group({
            starringName: [''],
            memberName: ['']
        });
    }
    getStarringRow(starringForm) {
        return starringForm.get('starringRow').controls;
    }
    addStarringRow() {
        const control = this.starringForm.controls['starringRow'];
        control.push(this.initStarringRow());
    }
    removeStarringRow(index) {
        const control = this.starringForm.controls['starringRow'];
        control.removeAt(index);
    }
    saveStarring() {
        let starringData = [];
        this.loaderService.display(true);
        for (let value of this.starringForm.value.starringRow) {
            // if (value.starringName != "") {
            //   if (value.starringName != null) {
            //     if (value.starringName.length > 0) {
            //       let refMemberId = value.starringName[0].id;
            //       starringData.push({ "refMemberId": refMemberId });
            //     }
            //   }
            // }
            if (value.memberName !== "") {
                starringData.push({ "refMemberId": 0, "refMovieId": this.movie_id, "memberName": value.memberName });
            }
            else {
                starringData.push({ "refMemberId": value.starringName[0].id, "refMovieId": this.movie_id, "memberName": value.starringName[0].itemName });
            }
        }
        ;
        let movieStarDatas = {
            "refMovieId": this.movie_id,
            "movieStarringDtos": starringData
        };
        this.apiService.Create("movieStarring/savestarring", movieStarDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    clearStarring() {
        this.starringForm.reset();
    }
    // Gallery Fom
    initGalleryRow() {
        return this.fb.group({
            galaryPath: [''],
            galaryfakePath: ['']
        });
    }
    getGalleryRow(galleryForm) {
        return galleryForm.get('galleryRow').controls;
    }
    addGalleryRowInPosition(index) {
        const control = this.galleryForm.controls['galleryRow'];
        control.insert(index + 1, this.initGalleryRow());
        this.galImg.splice(index + 1, 0, "");
        this.imageChangedEventGalary.splice(index + 1, 0, "");
    }
    deleteGalleryRow(index) {
        this.galImg.splice(index, 1);
        this.imageChangedEventGalary.splice(index, 1);
        const control = this.galleryForm.controls['galleryRow'];
        control.removeAt(index);
    }
    galleryImageUpload(e, seqNo) {
        this.imageChangedEventGalary[seqNo] = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") && e.target.files[0].size <= 10000000) // 2097152 bytes = 2MB
             {
                this.loaderService.display(true);
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.galImg[seqNo] = reader.result;
                    this.imageChangedEventGalary[seqNo] = e;
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG") {
                this.galImg[seqNo] = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.galImg[seqNo] = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire("Document size should be less than 10MB");
                return;
            }
        }
    }
    imageCroppedGalary(event, seqNo) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.loaderService.display(false);
                this.galImg[seqNo] = "";
                if (this.imageChangedEventGalary[seqNo]) {
                    const ctrl = this.galleryForm.controls['galleryRow'];
                    ctrl.controls[seqNo].get('galaryPath').setValue(result);
                    this.galImg[seqNo] = result;
                }
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                this.loaderService.display(false);
                this.galImg[seqNo] = "";
                if (this.imageChangedEventGalary[seqNo]) {
                    const ctrl = this.galleryForm.controls['galleryRow'];
                    ctrl.controls[seqNo].get('galaryPath').setValue(result);
                    this.galImg[seqNo] = result;
                }
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.loaderService.display(false);
                this.galImg[seqNo] = "";
                if (this.imageChangedEventGalary[seqNo]) {
                    const ctrl = this.galleryForm.controls['galleryRow'];
                    ctrl.controls[seqNo].get('galaryPath').setValue(result);
                    this.galImg[seqNo] = result;
                }
            });
        }
    }
    imageLoadedGalary() {
        // show cropper
    }
    cropperReadyGalary() {
        // cropper ready
    }
    loadImageFailedGalary() {
        // show message
    }
    saveGallery() {
        let galleryData = [];
        this.loaderService.display(true);
        for (let value of this.galleryForm.value.galleryRow) {
            if (value.galaryPath != null && value.galaryPath != undefined) {
                galleryData.push({ "movieGalId": "", "movieId": this.movie_id, "movieImgTitle": "", "seqNo": "1", "movieImgPath": value.galaryPath });
            }
        }
        let galleryDatas = {
            "movieId": this.movie_id,
            "movieGallaryDtos": galleryData
        };
        this.apiService.Create("moviegallery/savegallary", galleryDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    //Article Form
    initArticleRow() {
        return this.fb.group({
            articlePath: [''],
            articlefakePath: ['']
        });
    }
    getArticleRow(articleForm) {
        return articleForm.get('articleRow').controls;
    }
    addArticleRowInPosition(index) {
        const control = this.articleForm.controls['articleRow'];
        control.insert(index + 1, this.initArticleRow());
        this.articleImg.splice(index + 1, 0, "");
    }
    deleteArticleRow(index) {
        this.articleImg.splice(index, 1);
        const control = this.articleForm.controls['articleRow'];
        control.removeAt(index);
    }
    multipartArticleUpload(e, seqNo) {
        if (e.target.files && e.target.files[0]) {
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            let file = e.target.files[0];
            var extention = nameArray[nameArray.length - 1];
            // if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") && e.target.files[0].size <= 10000000)  // 2097152 bytes = 2MB
            // {
            //   this.loaderService.display(true);
            //   var date = new Date();
            //   var uploadFor = "Article" + (Number(seqNo) + 1) + date.getFullYear() + date.getMonth() + date.getDate() + date.getHours() + date.getMinutes() + date.getSeconds();
            //   let formData = new FormData();
            //   let data = {
            //     "mobile": "Movie" + 2,
            //     "for": uploadFor
            //   };
            //   formData.append("file", e.target.files[0]);
            //   formData.append("info", new Blob([JSON.stringify(data)], {
            //     type: "application/json"
            //   }));
            //   this.apiService.saveFormData("file/upload", formData).subscribe(data1 => {
            //     if (data1.success == true) {
            //       this.articleImg[seqNo] = "";
            //       const ctrl = <FormArray>this.articleForm.controls['articleRow'];
            //       ctrl.controls[seqNo].get('articlePath').setValue(data1.object);
            //       this.articleImg[seqNo] = data1.object;
            //     }
            //     this.loaderService.display(false);
            //   })
            // }
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") && e.target.files[0].size <= 200000) // 2097152 bytes = 2MB
             {
                this.loaderService.display(true);
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.articleImg[seqNo] = "";
                    const ctrl = this.articleForm.controls['articleRow'];
                    ctrl.controls[seqNo].get('articlePath').setValue(reader.result);
                    this.articleImg[seqNo] = reader.result;
                    // this.imageChangedEventGalary[seqNo] = e;
                    this.loaderService.display(false);
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG") {
                this.articleImg[seqNo] = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 200000) {
                this.articleImg[seqNo] = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire("Image size should be less than 200KB");
                return;
            }
        }
    }
    saveImageArticle() {
        let imageArticleData = [];
        for (let value of this.articleForm.value.articleRow) {
            if (value.articlePath != null && value.articlePath != undefined) {
                imageArticleData.push({ "movieArticleId": "", "movieId": this.movie_id, "imgArticleTitle": "", "imgArticlePath": value.articlePath });
            }
        }
        let imageArticleDatas = {
            "movieId": this.movie_id,
            "movieImgArticleDtos": imageArticleData
        };
        this.loaderService.display(true);
        this.apiService.Create("movieimgarticle/saveimgarticle", imageArticleDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    //Pdf Form
    initArticlePdfRow() {
        return this.fb.group({
            articlePdfPath: [''],
            articlepdffakePath: ['']
        });
    }
    getArticlePdfRow(articlePdfForm) {
        return articlePdfForm.get('articlePdfRow').controls;
    }
    addArticlePdfRowInPosition(index) {
        const control = this.articlePdfForm.controls['articlePdfRow'];
        control.insert(index + 1, this.initArticlePdfRow());
        this.articlePdf.splice(index + 1, 0, "");
    }
    deleteArticlePdfRow(index) {
        this.articlePdf.splice(index, 1);
        const control = this.articlePdfForm.controls['articlePdfRow'];
        control.removeAt(index);
    }
    multipartArticlePdfUpload(e, seqNo) {
        if (e.target.files && e.target.files[0] && e.target.files[0].size <= 1024000) {
            this.loaderService.display(true);
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if (extention == "pdf" || extention == "PDF") {
                // var date = new Date();
                // var uploadFor = "ArticlePdf" + (Number(seqNo) + 1) + date.getFullYear() + date.getMonth() + date.getDate() + date.getHours() + date.getMinutes() + date.getSeconds();
                // let formData = new FormData();
                // let data = {
                //   "mobile": "Movie" + 2,
                //   "for": uploadFor
                // };
                // formData.append("file", e.target.files[0]);
                // formData.append("info", new Blob([JSON.stringify(data)], {
                //   type: "application/json"
                // }));
                // this.apiService.saveFormData("file/upload", formData).subscribe(data1 => {
                //   if (data1.success == true) {
                //     this.articlePdf[seqNo] = "";
                //     const ctrl = <FormArray>this.articlePdfForm.controls['articlePdfRow'];
                //     ctrl.controls[seqNo].get('articlePdfPath').setValue(data1.object);
                //     this.articlePdf[seqNo] = data1.object;
                //   }
                //   this.loaderService.display(false);
                // })
                this.loaderService.display(true);
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.articlePdf[seqNo] = "";
                    const ctrl = this.articlePdfForm.controls['articlePdfRow'];
                    ctrl.controls[seqNo].get('articlePdfPath').setValue(reader.result);
                    this.articlePdf[seqNo] = reader.result;
                    this.loaderService.display(false);
                };
            }
            else {
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire("Please Upload the valid PDF file");
                return;
            }
        }
        else {
            this.loaderService.display(false);
            sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire("Please Upload PDF size less than 1MB");
            return;
        }
    }
    savePdfArticle() {
        let pdfArticleData = [];
        for (let value of this.articlePdfForm.value.articlePdfRow) {
            if (value.articlePdfPath != null && value.articlePdfPath != undefined) {
                pdfArticleData.push({ "pdfArticleId": "", "movieId": this.movie_id, "pdfTitle": "", "pdfPath": value.articlePdfPath });
            }
        }
        let pdfArticleDatas = {
            "movieId": this.movie_id,
            "moviePdfArticleDtos": pdfArticleData
        };
        this.loaderService.display(true);
        this.apiService.Create("moviepdfarticle/savepdfarticle", pdfArticleDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    //Member Opinion Form
    initMemberOpinionRow() {
        return this.fb.group({
            memberOpinionName: [''],
            memberOpinionDescription: ['']
        });
    }
    getMemberOpinionRow(memberOpinionForm) {
        return memberOpinionForm.get('memberOpinionRow').controls;
    }
    addMemberOpinionRow() {
        const control = this.memberOpinionForm.controls['memberOpinionRow'];
        control.push(this.initMemberOpinionRow());
    }
    removeMemberOpinionRow(index) {
        const control = this.memberOpinionForm.controls['memberOpinionRow'];
        control.removeAt(index);
    }
    saveMemberOpenion() {
        this.loaderService.display(true);
        let memberOpenionData = [];
        for (let value of this.memberOpinionForm.value.memberOpinionRow) {
            if (value.memberOpinionDescription != null && value.memberOpinionDescription != undefined && value.memberOpinionName != null && value.memberOpinionName) {
                memberOpenionData.push({ "movieId": this.movie_id, "refMembershipId": value.memberOpinionName[0].id, "description": value.memberOpinionDescription });
            }
        }
        let openionDatas = {
            "movieId": this.movie_id,
            "movieOpinionDtos": memberOpenionData
        };
        this.apiService.Create("movieopinion/saveopinion", openionDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    clearMemberOpenion() {
        this.memberOpinionForm.reset();
    }
    //Video form
    initVideoRow() {
        return this.fb.group({
            videoName: [''],
            videoURL: ['']
        });
    }
    getVideoRow(videoForm) {
        return videoForm.get('videoRow').controls;
    }
    addVideoRowInPosition() {
        const control = this.videoForm.controls['videoRow'];
        control.push(this.initVideoRow());
    }
    deleteVideoRow(index) {
        const control = this.videoForm.controls['videoRow'];
        control.removeAt(index);
    }
    saveMovieVideos() {
        let movieVideos = [];
        this.loaderService.display(true);
        for (let value of this.videoForm.value.videoRow) {
            if (value.videoName != null && value.videoName != undefined && value.videoURL != undefined && value.videoURL != null) {
                movieVideos.push({ "movieId": this.movie_id, "videoName": value.videoName, "videoUrl": value.videoURL });
            }
        }
        let videoDatas = {
            "movieId": this.movie_id,
            "movieVideosDtos": movieVideos
        };
        this.apiService.Create("movievideos/savevideo", videoDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    clearMovieVideos() {
        this.videoForm.reset();
    }
    getSocialMediaLinks() {
        this.apiService.getDATA("detailsDto/getAll").subscribe((result) => {
            if (result.success == true) {
                if (result.object.socialLinksDtoList != null && result.object.socialLinksDtoList != undefined) {
                    this.socialMediaLinks = result.object.socialLinksDtoList;
                    for (var i = 0; i < this.socialMediaLinks.length; i++) {
                        this.addNewsocialLinkDetails();
                        const control = this.socialMediaForm.controls['socialLinkRow'];
                        control.controls[i].get('socialLinksUrl').setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(200)]);
                        control.controls[i].get('socialLinksUrl').updateValueAndValidity();
                    }
                }
            }
        });
    }
    //#endregion for social media links
    initSocialLinkRow() {
        return this.fb.group({
            socialLinksUrl: [''],
        });
    }
    getsocialLinkDetails(Form) {
        return Form.get('socialLinkRow').controls;
    }
    addNewsocialLinkDetails() {
        const control = this.socialMediaForm.controls['socialLinkRow'];
        control.push(this.initSocialLinkRow());
    }
    saveSocialMedias() {
        let socialmedias = [];
        this.loaderService.display(true);
        this.socialMediaLinks.forEach(social => {
            if (social.socialLinksUrl != "" && social.socialLinksUrl != undefined) {
                socialmedias.push({ "movieId": this.movie_id, "refSocialLinkId": social.socialLinksId, "socialLinkUrl": social.socialLinksUrl });
            }
        });
        let socialMediaDatas = {
            "movieId": this.movie_id,
            "movieSocialMediaLinkDtos": socialmedias
        };
        this.apiService.Create("moviesocialmedialink/savelinks", socialMediaDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    clearSocialMedias() {
        this.socialMediaForm.reset();
    }
};
CreateMovieComponent.ctorParameters = () => [
    { type: src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_4__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: ngx_image_compress__WEBPACK_IMPORTED_MODULE_6__["NgxImageCompressService"] },
    { type: src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_7__["LoaderService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_8__["DatePipe"] },
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_9__["DomSanitizer"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Compiler"] }
];
CreateMovieComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-create-movie',
        template: __webpack_require__(/*! raw-loader!./create-movie.component.html */ "./node_modules/raw-loader/index.js!./src/app/movie/create-movie/create-movie.component.html"),
        styles: [__webpack_require__(/*! ./create-movie.component.scss */ "./src/app/movie/create-movie/create-movie.component.scss")]
    })
], CreateMovieComponent);



/***/ }),

/***/ "./src/app/movie/create-movie/create-movie.ts":
/*!****************************************************!*\
  !*** ./src/app/movie/create-movie/create-movie.ts ***!
  \****************************************************/
/*! exports provided: createmovie, ProductionHouse, SocialLinksDto */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createmovie", function() { return createmovie; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProductionHouse", function() { return ProductionHouse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SocialLinksDto", function() { return SocialLinksDto; });
class createmovie {
    constructor() {
        this.movieImagesDtos = [];
    }
}
class ProductionHouse {
}
// export class SocialMedias{
//     facebook:string;
//     twitter:string;
//     instagram:string;
//     youtube:string;
//     socialLinksUrl:string;
// }
class SocialLinksDto {
    constructor() {
        this.socialLinksId = 0;
        this.socialLinksName = "";
        this.seqNum = 0;
        this.icon = "";
        this.socialLinksUrl = "";
    }
}


/***/ }),

/***/ "./src/app/movie/dummy-table/dummy-table.component.scss":
/*!**************************************************************!*\
  !*** ./src/app/movie/dummy-table/dummy-table.component.scss ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vdmllL2R1bW15LXRhYmxlL2R1bW15LXRhYmxlLmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./src/app/movie/dummy-table/dummy-table.component.ts":
/*!************************************************************!*\
  !*** ./src/app/movie/dummy-table/dummy-table.component.ts ***!
  \************************************************************/
/*! exports provided: DummyTableComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DummyTableComponent", function() { return DummyTableComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");




let DummyTableComponent = class DummyTableComponent {
    constructor(apiservice) {
        this.apiservice = apiservice;
        this.dtOptions = {};
        this.persons = [];
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
    }
    ngOnInit() {
        this.dtOptions = {
            pagingType: 'full_numbers',
            pageLength: 2
        };
        this.apiservice.getDATA("movieDetails/getAllActive").subscribe(data => {
            this.persons = data.object;
            this.dtTrigger.next();
        });
    }
    ngOnDestroy() {
        this.dtTrigger.unsubscribe();
    }
};
DummyTableComponent.ctorParameters = () => [
    { type: src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] }
];
DummyTableComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-dummy-table',
        template: __webpack_require__(/*! raw-loader!./dummy-table.component.html */ "./node_modules/raw-loader/index.js!./src/app/movie/dummy-table/dummy-table.component.html"),
        styles: [__webpack_require__(/*! ./dummy-table.component.scss */ "./src/app/movie/dummy-table/dummy-table.component.scss")]
    })
], DummyTableComponent);



/***/ }),

/***/ "./src/app/movie/mastergeners/mastergeners.component.scss":
/*!****************************************************************!*\
  !*** ./src/app/movie/mastergeners/mastergeners.component.scss ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container-fluid {\n  margin-top: 1%;\n  margin-bottom: 1%;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.theader {\n  text-align: center;\n}\n\n.fa-pencil-square-o {\n  color: #000f92;\n  font-size: 21px;\n}\n\n.fa-trash {\n  color: #ff0000;\n  font-size: 21px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21vdmllL21hc3RlcmdlbmVycy9tYXN0ZXJnZW5lcnMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vdmllL21hc3RlcmdlbmVycy9tYXN0ZXJnZW5lcnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0EsaUJBQUE7QUNDSjs7QURFQTtFQUNJLHlCQUFBO0VBQ0EsY0FBQTtBQ0NKOztBREVBO0VBQ0ksZ0JBQUE7QUNDSjs7QURFQTtFQUNJLHNCQUFBO0VBQ0EsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxnQkFBQTtFQUNBLHFCQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsT0FBQTtFQUNBLE1BQUE7RUFDQSxVQUFBO0FDQ0o7O0FERUE7RUFDSSxrQkFBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7RUFDQSxlQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9tb3ZpZS9tYXN0ZXJnZW5lcnMvbWFzdGVyZ2VuZXJzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lci1mbHVpZCB7XG4gICAgbWFyZ2luLXRvcDogMSU7XG4gICAgbWFyZ2luLWJvdHRvbTogMSU7XG59XG5cbi5jYXJkLWhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJkM2U1MDtcbiAgICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5idG4xIHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCBncmF5O1xuICAgIGNvbG9yOiBncmF5O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDRweCA4cHg7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xuICAgIGZvbnQtc2l6ZTogMTAwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIG9wYWNpdHk6IDA7XG59XG5cbi50aGVhZGVye1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmZhLXBlbmNpbC1zcXVhcmUtb3tcbiAgICBjb2xvcjpyZ2IoMCwgMTUsIDE0Nik7IFxuICAgIGZvbnQtc2l6ZTogMjFweDtcbn1cblxuLmZhLXRyYXNoe1xuICAgIGNvbG9yOiNmZjAwMDA7XG4gICAgZm9udC1zaXplOjIxcHg7XG59XG4iLCIuY29udGFpbmVyLWZsdWlkIHtcbiAgbWFyZ2luLXRvcDogMSU7XG4gIG1hcmdpbi1ib3R0b206IDElO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG4uYnRuMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gIGNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogNHB4IDhweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1maWxlXSB7XG4gIGZvbnQtc2l6ZTogMTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBvcGFjaXR5OiAwO1xufVxuXG4udGhlYWRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmZhLXBlbmNpbC1zcXVhcmUtbyB7XG4gIGNvbG9yOiAjMDAwZjkyO1xuICBmb250LXNpemU6IDIxcHg7XG59XG5cbi5mYS10cmFzaCB7XG4gIGNvbG9yOiAjZmYwMDAwO1xuICBmb250LXNpemU6IDIxcHg7XG59Il19 */"

/***/ }),

/***/ "./src/app/movie/mastergeners/mastergeners.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/movie/mastergeners/mastergeners.component.ts ***!
  \**************************************************************/
/*! exports provided: MastergenersComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MastergenersComponent", function() { return MastergenersComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _mastergeners__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mastergeners */ "./src/app/movie/mastergeners/mastergeners.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _core_services_loader_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");








let MastergenersComponent = class MastergenersComponent {
    constructor(apiService, fb, loaderService) {
        this.apiService = apiService;
        this.fb = fb;
        this.loaderService = loaderService;
        this.isDtInitialized = false;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.mastergeners = new _mastergeners__WEBPACK_IMPORTED_MODULE_5__["MasterGeners"]();
        this.masterGenersForm = this.fb.group({
            name: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(2), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(20)])]
        });
    }
    ngOnInit() {
        this.getAllMasterGeners();
    }
    getAllMasterGeners() {
        this.apiService.getDATA('masterGeners/getAll').subscribe((result) => {
            if (result.success == true) {
                if (result.object.masterGenersDtoList != null && result.object.masterGenersDtoList != undefined) {
                    this.mastergenersdata = result.object.masterGenersDtoList;
                    if (this.isDtInitialized) {
                        this.dtElement.dtInstance.then((dtInstance) => {
                            dtInstance.destroy();
                            this.dtTrigger.next();
                        });
                    }
                    else {
                        this.isDtInitialized = true;
                        this.dtTrigger.next();
                    }
                }
            }
        });
    }
    saveMasterGeners() {
        if (this.masterGenersForm.valid) {
            let data = {
                "genersId": this.mastergeners.genersId,
                "name": this.mastergeners.name
            };
            this.loaderService.display(true);
            this.apiService.Create('masterGeners/save', data).subscribe((res) => {
                this.loaderService.display(false);
                if (res.success == true) {
                    if (res.object != null && res.object != undefined) {
                        sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(res.message);
                        this.ngOnInit();
                        this.clearMasterGenersForm();
                    }
                }
                else {
                    this.loaderService.display(false);
                    console.log(res.message);
                }
            });
        }
        else {
            this.apiService.validateAllFormFields(this.masterGenersForm);
        }
    }
    editMasterGeners(gid) {
        let editmastergenersData = {
            "genersId": gid
        };
        this.apiService.Create('masterGeners/getById', editmastergenersData).subscribe((res) => {
            if (res.success == true) {
                if (res.object != null && res.object != undefined) {
                    this.mastergeners.genersId = res.object.genersId;
                    this.mastergeners.name = res.object.name;
                    this.mastergeners.isActive = res.object.isActive;
                }
            }
        });
    }
    deleteMasterGeners(gid) {
        let deletemastergenersData = {
            "genersId": gid
        };
        this.loaderService.display(true);
        this.apiService.Create('masterGeners/deleteById', deletemastergenersData).subscribe((res) => {
            this.loaderService.display(false);
            if (res.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(res.message);
                this.ngOnInit();
            }
            else {
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_6___default.a.fire(res.message);
            }
        });
    }
    clearMasterGenersForm() {
        this.masterGenersForm.reset();
    }
};
MastergenersComponent.ctorParameters = () => [
    { type: src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_4__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _core_services_loader_service__WEBPACK_IMPORTED_MODULE_7__["LoaderService"] }
];
MastergenersComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-mastergeners',
        template: __webpack_require__(/*! raw-loader!./mastergeners.component.html */ "./node_modules/raw-loader/index.js!./src/app/movie/mastergeners/mastergeners.component.html"),
        styles: [__webpack_require__(/*! ./mastergeners.component.scss */ "./src/app/movie/mastergeners/mastergeners.component.scss")]
    })
], MastergenersComponent);



/***/ }),

/***/ "./src/app/movie/mastergeners/mastergeners.ts":
/*!****************************************************!*\
  !*** ./src/app/movie/mastergeners/mastergeners.ts ***!
  \****************************************************/
/*! exports provided: MasterGeners */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MasterGeners", function() { return MasterGeners; });
class MasterGeners {
}


/***/ }),

/***/ "./src/app/movie/membermoviemapping/membermoviemapping.component.scss":
/*!****************************************************************************!*\
  !*** ./src/app/movie/membermoviemapping/membermoviemapping.component.scss ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container-fluid {\n  margin-top: 1%;\n  margin-bottom: 1%;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.theader {\n  text-align: center;\n}\n\n.fa-pencil-square-o {\n  color: #000f92;\n  font-size: 21px;\n}\n\n.fa-trash {\n  color: #ff0000;\n  font-size: 21px;\n}\n\n.section {\n  border: 1px solid #bbb;\n  padding: 1% 1%;\n  border-radius: 10px;\n  margin-bottom: 1%;\n}\n\n.labelhead {\n  margin-top: 2%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21vdmllL21lbWJlcm1vdmllbWFwcGluZy9tZW1iZXJtb3ZpZW1hcHBpbmcuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vdmllL21lbWJlcm1vdmllbWFwcGluZy9tZW1iZXJtb3ZpZW1hcHBpbmcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0EsaUJBQUE7QUNDSjs7QURFQTtFQUNJLHlCQUFBO0VBQ0EsY0FBQTtBQ0NKOztBREVBO0VBQ0ksZ0JBQUE7QUNDSjs7QURFQTtFQUNJLHNCQUFBO0VBQ0EsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxnQkFBQTtFQUNBLHFCQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsT0FBQTtFQUNBLE1BQUE7RUFDQSxVQUFBO0FDQ0o7O0FERUE7RUFDSSxrQkFBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7RUFDQSxlQUFBO0FDQ0o7O0FEQ0E7RUFDSSxzQkFBQTtFQUNBLGNBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0FDRUo7O0FEQUE7RUFDSSxjQUFBO0FDR0oiLCJmaWxlIjoic3JjL2FwcC9tb3ZpZS9tZW1iZXJtb3ZpZW1hcHBpbmcvbWVtYmVybW92aWVtYXBwaW5nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lci1mbHVpZCB7XG4gICAgbWFyZ2luLXRvcDogMSU7XG4gICAgbWFyZ2luLWJvdHRvbTogMSU7XG59XG5cbi5jYXJkLWhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJkM2U1MDtcbiAgICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5idG4xIHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCBncmF5O1xuICAgIGNvbG9yOiBncmF5O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDRweCA4cHg7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9XCJmaWxlXCJdIHtcbiAgICBmb250LXNpemU6IDEwMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICBvcGFjaXR5OiAwO1xufVxuXG4udGhlYWRlciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZmEtcGVuY2lsLXNxdWFyZS1vIHtcbiAgICBjb2xvcjogcmdiKDAsIDE1LCAxNDYpO1xuICAgIGZvbnQtc2l6ZTogMjFweDtcbn1cblxuLmZhLXRyYXNoIHtcbiAgICBjb2xvcjogI2ZmMDAwMDtcbiAgICBmb250LXNpemU6IDIxcHg7XG59XG4uc2VjdGlvbiB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2JiYjtcbiAgICBwYWRkaW5nOiAxJSAxJTtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDElO1xufVxuLmxhYmVsaGVhZCB7XG4gICAgbWFyZ2luLXRvcDogMiU7XG59XG4iLCIuY29udGFpbmVyLWZsdWlkIHtcbiAgbWFyZ2luLXRvcDogMSU7XG4gIG1hcmdpbi1ib3R0b206IDElO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICBjb2xvcjogI2ZiZTExNjtcbn1cblxubGFiZWwge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG4uYnRuMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gIGNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogNHB4IDhweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1maWxlXSB7XG4gIGZvbnQtc2l6ZTogMTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBvcGFjaXR5OiAwO1xufVxuXG4udGhlYWRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmZhLXBlbmNpbC1zcXVhcmUtbyB7XG4gIGNvbG9yOiAjMDAwZjkyO1xuICBmb250LXNpemU6IDIxcHg7XG59XG5cbi5mYS10cmFzaCB7XG4gIGNvbG9yOiAjZmYwMDAwO1xuICBmb250LXNpemU6IDIxcHg7XG59XG5cbi5zZWN0aW9uIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2JiYjtcbiAgcGFkZGluZzogMSUgMSU7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIG1hcmdpbi1ib3R0b206IDElO1xufVxuXG4ubGFiZWxoZWFkIHtcbiAgbWFyZ2luLXRvcDogMiU7XG59Il19 */"

/***/ }),

/***/ "./src/app/movie/membermoviemapping/membermoviemapping.component.ts":
/*!**************************************************************************!*\
  !*** ./src/app/movie/membermoviemapping/membermoviemapping.component.ts ***!
  \**************************************************************************/
/*! exports provided: MembermoviemappingComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MembermoviemappingComponent", function() { return MembermoviemappingComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _membermoviemapping__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./membermoviemapping */ "./src/app/movie/membermoviemapping/membermoviemapping.ts");
/* harmony import */ var src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");







let MembermoviemappingComponent = class MembermoviemappingComponent {
    constructor(apiService, fb, loaderService) {
        this.apiService = apiService;
        this.fb = fb;
        this.loaderService = loaderService;
        this.membermoviemapping = new _membermoviemapping__WEBPACK_IMPORTED_MODULE_2__["membermoviemapping"];
        this.memberList = [];
        this.movieList = [];
        this.memberNames = [];
        this.movieNames = [];
        this.memberMovieForm = this.fb.group({
            memberName: [''],
            movieName: ['']
        });
    }
    ngOnInit() {
        this.memberNameSettings = {
            text: 'Select',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Member',
            badgeShowLimit: 5,
            groupBy: "category"
        },
            this.movieNameSettings = {
                text: 'Select',
                singleSelection: false,
                enableSearchFilter: true,
                classes: "myclass custom-class",
                searchPlaceholderText: 'Search Movie',
                badgeShowLimit: 5,
                groupBy: "category"
            };
    }
    getMemberList(event) {
        let memberName = event.target.value;
        let memName = {
            "firstName": memberName
        };
        this.apiService.Create("member/getMemberDetailsByMemberName", memName).subscribe(data => {
            let memList = [];
            let memdata = data.object;
            if (memdata != null && memdata != undefined) {
                memdata.forEach(ml => {
                    memList.push({ "id": ml.membershipId, "itemName": ml.firstName, "profileImage": ml.profileImage });
                });
                this.memberList = memList;
            }
        });
    }
    getMovieList(event) {
        let movieName = event.target.value;
        let movieNameSearch = {
            "title": movieName
        };
        this.apiService.Create("movieDetails/searchmovie", movieNameSearch).subscribe(data => {
            let memList = [];
            let memdata = data.object;
            if (memdata != null && memdata != undefined) {
                memdata.forEach(ml => {
                    memList.push({ "id": ml.movieId, "itemName": ml.title, "profileImage": ml.movieImagesDtoList[0].poster });
                });
                this.movieList = memList;
            }
        });
    }
    saveMovieMember() {
        const control = this.memberMovieForm.value;
        let mnames = [];
        this.movieNames = [];
        this.memberNames = control.memberName[0].id;
        mnames = control.movieName;
        mnames.forEach((mi) => {
            this.movieNames.push({ "refmovieId": mi.id, "refmemberId": this.memberNames });
        });
        let mmdata = {
            "refmemberId": this.memberNames,
            "memberMovieMappingDtos": this.movieNames
        };
        this.loaderService.display(true);
        this.apiService.Create("membermoviemapping/savemapping", mmdata).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire(result.message);
                this.clearMapping();
            }
        }, error => {
            this.loaderService.display(false);
            console.log(error);
        });
    }
    getMovieByMember(memdata) {
        this.selectedMemId = memdata.id;
        let selectedId = {
            "refmemberId": this.selectedMemId
        };
        this.apiService.Create("membermoviemapping/getByMemberId", selectedId).subscribe((data) => {
            if (data.object.memberMovieMappingDtoList != null && data.object.memberMovieMappingDtoList != undefined) {
                let movieData = [];
                let md = data.object.memberMovieMappingDtoList;
                md.forEach((movies) => {
                    movieData.push({ "id": movies.refmovieId, "itemName": movies.title });
                });
                this.selectedMovie = movieData;
            }
        });
    }
    clearMapping() {
        this.memberMovieForm.reset();
    }
};
MembermoviemappingComponent.ctorParameters = () => [
    { type: src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_3__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"] },
    { type: src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_6__["LoaderService"] }
];
MembermoviemappingComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-membermoviemapping',
        template: __webpack_require__(/*! raw-loader!./membermoviemapping.component.html */ "./node_modules/raw-loader/index.js!./src/app/movie/membermoviemapping/membermoviemapping.component.html"),
        styles: [__webpack_require__(/*! ./membermoviemapping.component.scss */ "./src/app/movie/membermoviemapping/membermoviemapping.component.scss")]
    })
], MembermoviemappingComponent);



/***/ }),

/***/ "./src/app/movie/membermoviemapping/membermoviemapping.ts":
/*!****************************************************************!*\
  !*** ./src/app/movie/membermoviemapping/membermoviemapping.ts ***!
  \****************************************************************/
/*! exports provided: membermoviemapping */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "membermoviemapping", function() { return membermoviemapping; });
class membermoviemapping {
}


/***/ }),

/***/ "./src/app/movie/movie.module.ts":
/*!***************************************!*\
  !*** ./src/app/movie/movie.module.ts ***!
  \***************************************/
/*! exports provided: getDatepickerConfig, MovieModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDatepickerConfig", function() { return getDatepickerConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MovieModule", function() { return MovieModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _angular_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/http */ "./node_modules/@angular/http/fesm2015/http.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _create_movie_create_movie_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./create-movie/create-movie.component */ "./src/app/movie/create-movie/create-movie.component.ts");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var ngx_quill__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-quill */ "./node_modules/ngx-quill/fesm2015/ngx-quill.js");
/* harmony import */ var angular2_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! angular2-multiselect-dropdown */ "./node_modules/angular2-multiselect-dropdown/fesm2015/angular2-multiselect-dropdown.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _sanitize_html_pipe__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../sanitize-html.pipe */ "./src/app/sanitize-html.pipe.ts");
/* harmony import */ var ngx_image_compress__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ngx-image-compress */ "./node_modules/ngx-image-compress/fesm2015/ngx-image-compress.js");
/* harmony import */ var ngx_image_cropper__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ngx-image-cropper */ "./node_modules/ngx-image-cropper/fesm2015/ngx-image-cropper.js");
/* harmony import */ var ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ngx-bootstrap/datepicker */ "./node_modules/ngx-bootstrap/datepicker/fesm2015/ngx-bootstrap-datepicker.js");
/* harmony import */ var _mastergeners_mastergeners_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./mastergeners/mastergeners.component */ "./src/app/movie/mastergeners/mastergeners.component.ts");
/* harmony import */ var _movielist_movielist_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./movielist/movielist.component */ "./src/app/movie/movielist/movielist.component.ts");
/* harmony import */ var _dummy_table_dummy_table_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./dummy-table/dummy-table.component */ "./src/app/movie/dummy-table/dummy-table.component.ts");
/* harmony import */ var _movienews_movienews_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./movienews/movienews.component */ "./src/app/movie/movienews/movienews.component.ts");
/* harmony import */ var _membermoviemapping_membermoviemapping_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./membermoviemapping/membermoviemapping.component */ "./src/app/movie/membermoviemapping/membermoviemapping.component.ts");




















function getDatepickerConfig() {
    return Object.assign(new ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_14__["BsDatepickerConfig"](), {
        dateInputFormat: 'DD-MM-YYYY'
    });
}
let MovieModule = class MovieModule {
};
MovieModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        declarations: [
            _create_movie_create_movie_component__WEBPACK_IMPORTED_MODULE_6__["CreateMovieComponent"],
            _mastergeners_mastergeners_component__WEBPACK_IMPORTED_MODULE_15__["MastergenersComponent"], _movielist_movielist_component__WEBPACK_IMPORTED_MODULE_16__["MovielistComponent"], _dummy_table_dummy_table_component__WEBPACK_IMPORTED_MODULE_17__["DummyTableComponent"], _movienews_movienews_component__WEBPACK_IMPORTED_MODULE_18__["MovienewsComponent"], _membermoviemapping_membermoviemapping_component__WEBPACK_IMPORTED_MODULE_19__["MembermoviemappingComponent"]
        ],
        imports: [
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__["BrowserModule"],
            _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClientModule"],
            _angular_http__WEBPACK_IMPORTED_MODULE_4__["HttpModule"],
            _angular_common__WEBPACK_IMPORTED_MODULE_5__["CommonModule"],
            angular_datatables__WEBPACK_IMPORTED_MODULE_7__["DataTablesModule"],
            angular2_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_9__["AngularMultiSelectModule"],
            ngx_image_cropper__WEBPACK_IMPORTED_MODULE_13__["ImageCropperModule"],
            ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_14__["BsDatepickerModule"].forRoot(),
            ngx_quill__WEBPACK_IMPORTED_MODULE_8__["QuillModule"].forRoot(),
            _angular_forms__WEBPACK_IMPORTED_MODULE_10__["FormsModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_10__["ReactiveFormsModule"]
        ],
        providers: [_sanitize_html_pipe__WEBPACK_IMPORTED_MODULE_11__["SanitizeHtmlPipe"], ngx_image_compress__WEBPACK_IMPORTED_MODULE_12__["NgxImageCompressService"], { provide: ngx_bootstrap_datepicker__WEBPACK_IMPORTED_MODULE_14__["BsDatepickerConfig"], useFactory: getDatepickerConfig }]
    })
], MovieModule);



/***/ }),

/***/ "./src/app/movie/movielist/movielist.component.scss":
/*!**********************************************************!*\
  !*** ./src/app/movie/movielist/movielist.component.scss ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container-fluid {\n  margin-top: 1%;\n  margin-bottom: 1%;\n}\n\n.card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\nlabel {\n  font-weight: 700;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.theader {\n  text-align: center;\n}\n\n.fa-pencil-square-o {\n  color: #000f92;\n  font-size: 21px;\n}\n\n.fa-trash {\n  color: #ff0000;\n  font-size: 21px;\n}\n\n.section {\n  border: 1px solid #bbb;\n  padding: 1% 1%;\n  border-radius: 10px;\n  margin-bottom: 1%;\n}\n\n.labelhead {\n  margin-top: 2%;\n}\n\n.moviename {\n  font-family: \"Noto Sans Kannada\", sans-serif;\n}\n\n.backbtn {\n  color: #000;\n  padding: 1% 5%;\n  float: right;\n}\n\n.addremoveicon {\n  display: block;\n  margin: auto;\n  right: auto;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21vdmllL21vdmllbGlzdC9tb3ZpZWxpc3QuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vdmllL21vdmllbGlzdC9tb3ZpZWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0EsaUJBQUE7QUNDSjs7QURFQTtFQUNJLHlCQUFBO0VBQ0EsY0FBQTtBQ0NKOztBREVBO0VBQ0ksZ0JBQUE7QUNDSjs7QURFQTtFQUNJLHNCQUFBO0VBQ0EsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxnQkFBQTtFQUNBLHFCQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsT0FBQTtFQUNBLE1BQUE7RUFDQSxVQUFBO0FDQ0o7O0FERUE7RUFDSSxrQkFBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7RUFDQSxlQUFBO0FDQ0o7O0FEQ0E7RUFDSSxzQkFBQTtFQUNBLGNBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0FDRUo7O0FEQUE7RUFDSSxjQUFBO0FDR0o7O0FEREE7RUFDSSw0Q0FBQTtBQ0lKOztBREZBO0VBQ0ksV0FBQTtFQUNBLGNBQUE7RUFDQSxZQUFBO0FDS0o7O0FESEE7RUFDSSxjQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUNNSiIsImZpbGUiOiJzcmMvYXBwL21vdmllL21vdmllbGlzdC9tb3ZpZWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyLWZsdWlkIHtcbiAgICBtYXJnaW4tdG9wOiAxJTtcbiAgICBtYXJnaW4tYm90dG9tOiAxJTtcbn1cblxuLmNhcmQtaGVhZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQzZTUwO1xuICAgIGNvbG9yOiAjZmJlMTE2O1xufVxuXG5sYWJlbCB7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLmJ0bjEge1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gICAgY29sb3I6IGdyYXk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgcGFkZGluZzogNHB4IDhweDtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1cImZpbGVcIl0ge1xuICAgIGZvbnQtc2l6ZTogMTAwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIG9wYWNpdHk6IDA7XG59XG5cbi50aGVhZGVyIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5mYS1wZW5jaWwtc3F1YXJlLW8ge1xuICAgIGNvbG9yOiByZ2IoMCwgMTUsIDE0Nik7XG4gICAgZm9udC1zaXplOiAyMXB4O1xufVxuXG4uZmEtdHJhc2gge1xuICAgIGNvbG9yOiAjZmYwMDAwO1xuICAgIGZvbnQtc2l6ZTogMjFweDtcbn1cbi5zZWN0aW9uIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjYmJiO1xuICAgIHBhZGRpbmc6IDElIDElO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMSU7XG59XG4ubGFiZWxoZWFkIHtcbiAgICBtYXJnaW4tdG9wOiAyJTtcbn1cbi5tb3ZpZW5hbWUge1xuICAgIGZvbnQtZmFtaWx5OiBcIk5vdG8gU2FucyBLYW5uYWRhXCIsIHNhbnMtc2VyaWY7XG59XG4uYmFja2J0biB7XG4gICAgY29sb3I6ICMwMDA7XG4gICAgcGFkZGluZzogMSUgNSU7XG4gICAgZmxvYXQ6IHJpZ2h0O1xufVxuLmFkZHJlbW92ZWljb24ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICByaWdodDogYXV0bztcbn1cbiIsIi5jb250YWluZXItZmx1aWQge1xuICBtYXJnaW4tdG9wOiAxJTtcbiAgbWFyZ2luLWJvdHRvbTogMSU7XG59XG5cbi5jYXJkLWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gIGNvbG9yOiAjZmJlMTE2O1xufVxuXG5sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5idG4xIHtcbiAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcbiAgY29sb3I6IGdyYXk7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nOiA0cHggOHB4O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPWZpbGVdIHtcbiAgZm9udC1zaXplOiAxMDBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi50aGVhZGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZmEtcGVuY2lsLXNxdWFyZS1vIHtcbiAgY29sb3I6ICMwMDBmOTI7XG4gIGZvbnQtc2l6ZTogMjFweDtcbn1cblxuLmZhLXRyYXNoIHtcbiAgY29sb3I6ICNmZjAwMDA7XG4gIGZvbnQtc2l6ZTogMjFweDtcbn1cblxuLnNlY3Rpb24ge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYmJiO1xuICBwYWRkaW5nOiAxJSAxJTtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgbWFyZ2luLWJvdHRvbTogMSU7XG59XG5cbi5sYWJlbGhlYWQge1xuICBtYXJnaW4tdG9wOiAyJTtcbn1cblxuLm1vdmllbmFtZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk5vdG8gU2FucyBLYW5uYWRhXCIsIHNhbnMtc2VyaWY7XG59XG5cbi5iYWNrYnRuIHtcbiAgY29sb3I6ICMwMDA7XG4gIHBhZGRpbmc6IDElIDUlO1xuICBmbG9hdDogcmlnaHQ7XG59XG5cbi5hZGRyZW1vdmVpY29uIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogYXV0bztcbiAgcmlnaHQ6IGF1dG87XG59Il19 */"

/***/ }),

/***/ "./src/app/movie/movielist/movielist.component.ts":
/*!********************************************************!*\
  !*** ./src/app/movie/movielist/movielist.component.ts ***!
  \********************************************************/
/*! exports provided: MovielistComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MovielistComponent", function() { return MovielistComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var ngx_image_compress__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-image-compress */ "./node_modules/ngx-image-compress/fesm2015/ngx-image-compress.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _create_movie_create_movie__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../create-movie/create-movie */ "./src/app/movie/create-movie/create-movie.ts");












let MovielistComponent = class MovielistComponent {
    constructor(apiService, fb, imageCompress, loaderService, datepipe, sanitizer, _compiler) {
        this.apiService = apiService;
        this.fb = fb;
        this.imageCompress = imageCompress;
        this.loaderService = loaderService;
        this.datepipe = datepipe;
        this.sanitizer = sanitizer;
        this._compiler = _compiler;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_7__["Subject"]();
        this.isDtInitialized = false;
        this.memberList = [];
        this.professionList = [];
        this.posters = [];
        this.croppedImage1 = '';
        this.croppedImage2 = '';
        this.imageChangedEvent1 = '';
        this.imageChangedEvent2 = '';
        this.geners_data = [];
        this.create_movie = new _create_movie_create_movie__WEBPACK_IMPORTED_MODULE_11__["createmovie"]();
        this.galImg = [];
        this.imageChangedEventGalary = [];
        this.articleImg = [];
        this.articlePdf = [];
        this.selectedItems = []; //prodhouse
        this.selectedProducerItems = [];
        this.selectedWriterItems = [];
        this.selectedDirectorItems = [];
        this.selectedMusicDirectorItems = [];
        this.selectedStaringItems = [];
        this.selectedOpenionItems = [];
        this.selectedTechHeadItems = [];
        this.movieList = [];
        this.listMovie = true;
        this.modules = {};
        this.gl = [];
        this.geners_list = [];
        this.glist = [];
        this.socialLinksId = [];
        this.modules = {
            'toolbar': [
                ['bold', 'italic', 'underline', 'strike'],
                [{ 'header': 1 }, { 'header': 2 }],
                [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                // [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript
                // [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
                // [{ 'direction': 'rtl' }],                         // text direction
                [{ 'size': ['small', false, 'large', 'huge'] }],
                // [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                [{ 'color': [] }, { 'background': [] }],
                [{ 'font': [] }],
                [{ 'align': [] }],
            ]
        };
        this.datePickerConfig = Object.assign({}, {
            containerClass: 'theme-dark-blue',
            showWeekNumbers: false,
            dateInputFormat: 'DD-MM-YYYY'
        });
        this.minStartDate = new Date();
        this.minEndDate = new Date();
        this.minEndDate.setDate(this.minEndDate.getDate());
    }
    ngOnInit() {
        this.getAllMovies();
        this.create_movie.movieOrSerial = "movie";
    }
    GenerateForm() {
        this.basicMovieForm = this.fb.group({
            movieId: [''],
            posterOneId: [''],
            posterTwoId: [''],
            movieType: [''],
            movieOrSerial: [''],
            title: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(200), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(2)])],
            shortSynopsis: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(5000), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(2)])],
            synopsis: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(10000), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(2)])],
            generslist: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required])],
            yearStarted: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            yearCompleted: [''],
            otherTechnicalDetails: [''],
        });
        this.productionHouseForm = this.fb.group({
            prodHouseRows: this.fb.array([this.initProdHouseRows()])
        });
        this.producerForm = this.fb.group({
            producerRow: this.fb.array([this.initProducerRow()])
        });
        this.writerForm = this.fb.group({
            writerRow: this.fb.array([this.initWriterRow()])
        });
        this.directorForm = this.fb.group({
            directorRow: this.fb.array([this.initDirectorRow()])
        });
        this.musicDirectorForm = this.fb.group({
            musicDirectorRow: this.fb.array([this.initMusicDirectorRow()])
        });
        this.starringForm = this.fb.group({
            starringRow: this.fb.array([this.initStarringRow()])
        });
        this.galleryForm = this.fb.group({
            galleryRow: this.fb.array([this.initGalleryRow()])
        });
        this.articleForm = this.fb.group({
            articleRow: this.fb.array([this.initArticleRow()])
        });
        this.articlePdfForm = this.fb.group({
            articlePdfRow: this.fb.array([this.initArticlePdfRow()])
        });
        this.memberOpinionForm = this.fb.group({
            memberOpinionRow: this.fb.array([this.initMemberOpinionRow()])
        });
        this.videoForm = this.fb.group({
            videoRow: this.fb.array([this.initVideoRow()])
        });
        this.socialMediaForm = this.fb.group({
            socialLinkRow: this.fb.array([this.initSocialLinkRow()])
        });
        this.TechnicianForm = this.fb.group({
            technicianHeads: this.fb.array([this.newTechnicianHeads()]),
        });
        this.genersSettings = {
            singleSelection: false,
            text: 'Select',
            enableCheckAll: false,
            enableFilterSelectAll: false,
            searchPlaceholderText: 'Search Geners',
            enableSearchFilter: true,
            selectGroup: true,
        };
        this.productionHouseSettings = {
            text: 'Select',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Production House',
            badgeShowLimit: 5,
            groupBy: "category",
        };
        this.producerSettings = {
            text: 'Select',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Producers',
            badgeShowLimit: 5,
            groupBy: "category",
        };
        this.writerSettings = {
            text: 'Select',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Writers',
            badgeShowLimit: 5,
            groupBy: "category",
        };
        this.directorSettings = {
            text: 'Select',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Directors',
            badgeShowLimit: 5,
            groupBy: "category"
        };
        this.musicDirectorSettings = {
            text: 'Select',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Music Directors',
            badgeShowLimit: 5,
            groupBy: "category"
        };
        this.staringSettings = {
            text: 'Select',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Stars',
            badgeShowLimit: 5,
            groupBy: "category"
        };
        this.TechniciansSettings = {
            text: 'Select',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search ',
            badgeShowLimit: 5,
            groupBy: "category"
        };
        this.ProfessionTitleSettings = {
            text: 'Select',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Profession',
            badgeShowLimit: 5,
            groupBy: "category"
        };
        this.openionSettings = {
            text: 'Select',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search Member',
            badgeShowLimit: 5,
            groupBy: "category"
        };
        this.getGeners();
        this.getSocialMediaLinks();
    }
    getAllMovies() {
        this.enableEditMovie = false;
        this.listMovie = true;
        this.isDtInitialized = false;
        this.movieList = [];
        this.apiService.getDATA("movieDetails/getAllActive").subscribe((result) => {
            if (result.success == true) {
                if (result.object != undefined && result.object != null) {
                    let movielist = result.object;
                    let mvlist = [];
                    movielist.forEach((mv) => {
                        mvlist.push({ "movieId": mv.movieId, "title": mv.title, "yearStarted": mv.yearStarted, "yearCompleted": mv.yearCompleted, "generesName": mv.generesName, "movieOrSerial": mv.movieOrSerial });
                    });
                    this.movieList = mvlist;
                    if (this.isDtInitialized) {
                        this.dtElement.dtInstance.then((dtInstance) => {
                            dtInstance.destroy();
                            this.dtTrigger.next();
                        });
                    }
                    else {
                        this.isDtInitialized = true;
                        this.dtTrigger.next();
                    }
                }
            }
        });
    }
    ngOnDestroy() {
        // Do not forget to unsubscribe the event
        this.dtTrigger.unsubscribe();
    }
    backtoList() {
        this.getAllMovies();
    }
    getMemberList(event) {
        let memberName = event.target.value;
        if (memberName != "" && memberName.length > 2) {
            let memName = {
                "firstName": memberName
            };
            this.apiService.Create("member/getMemberDetailsByMemberName", memName).subscribe(data => {
                let memList = [];
                let memdata = data.object;
                if (memdata != null && memdata != undefined) {
                    memdata.forEach(ml => {
                        memList.push({ "id": ml.membershipId, "itemName": ml.firstName, "profileImage": ml.profileImage });
                    });
                    this.memberList = memList;
                }
            });
        }
    }
    selectedMemId(memdata) {
        this.selectedMemWebPageId = memdata.webPageId;
    }
    getProfessionList(event) {
        let profName = event.target.value;
        if (profName != "" && profName.length > 2) {
            let professionName = {
                "title": profName
            };
            this.apiService.Create("profession/getAllProfessionByName", professionName).subscribe((data) => {
                let proList = [];
                let prodata = data.object;
                if (prodata != null && prodata != undefined) {
                    prodata.forEach(pd => {
                        if (pd.individualInstitute === "Individual") {
                            proList.push({ "id": pd.professionId, "itemName": pd.title });
                        }
                    });
                    this.professionList = proList;
                }
            });
        }
    }
    selectedProfId(profdata) {
        this.selectedProfessionId = profdata.professionId;
    }
    getGeners() {
        this.apiService.getDATA("masterGeners/getAll").subscribe((data) => {
            if (data.object.masterGenersDtoList != null && data.object.masterGenersDtoList != undefined) {
                this.gl = data.object.masterGenersDtoList;
                this.gl.forEach((gnli) => {
                    this.glist.push({ "id": gnli.genersId, "itemName": gnli.name });
                });
                this.geners_list = this.glist;
            }
        });
    }
    //#region 1st poster capture
    firstPosterUpload(e) {
        this.loaderService.display(true);
        this.imageChangedEvent1 = e;
        $('#file-upload').removeAttr('src');
        this.create_movie.filename = "";
        this.create_movie.filetype = "";
        this.create_movie.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG" || extention == "png" || extention == "PNG") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.create_movie.filename = file.name;
                    this.create_movie.filetype = file.type;
                    // const csv: string = reader.result as string;
                    // this.adminPage.profileImage = csv.replace("data:image/jpeg;base64,", "");
                    this.create_movie.imagePath = reader.result;
                };
                // this.masterGalleryForm.controls.imagePath.setValue(this.addcreation.imagePath);
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG" && extention != "PNG" && extention != "png") {
                this.create_movie.filename = "";
                this.create_movie.filetype = "";
                this.create_movie.imagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Please Upload the valid file");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.create_movie.filename = "";
                this.create_movie.filetype = "";
                this.create_movie.imagePath = "";
                // this.adminPage.profileImagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Document size should be less than 10MB");
                return;
            }
        }
    }
    firstimageCropped(event) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 300000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.croppedImage1 = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMovieForm.controls.imagePath.setValue(this.croppedImage1);
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 80).then(result => {
                this.croppedImage1 = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMovieForm.controls.imagePath.setValue(this.croppedImage1);
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.croppedImage1 = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMovieForm.controls.imagePath.setValue(this.croppedImage1);
            });
        }
    }
    firstimageLoaded() {
        // show cropper
    }
    firstcropperReady() {
        // cropper ready
    }
    firstloadImageFailed() {
        // show message
    }
    //#endregion 1st poster capture
    //#region 2nd poster capture
    secondPosterUpload(e) {
        this.loaderService.display(true);
        this.imageChangedEvent2 = e;
        $('#file-upload').removeAttr('src');
        this.create_movie.filename = "";
        this.create_movie.filetype = "";
        this.create_movie.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG" || extention == "png" || extention == "PNG") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.create_movie.filename = file.name;
                    this.create_movie.filetype = file.type;
                    // const csv: string = reader.result as string;
                    // this.adminPage.profileImage = csv.replace("data:image/jpeg;base64,", "");
                    this.create_movie.imagePath = reader.result;
                };
                // this.masterGalleryForm.controls.imagePath.setValue(this.addcreation.imagePath);
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG" && extention != "PNG" && extention != "png") {
                this.create_movie.filename = "";
                this.create_movie.filetype = "";
                this.create_movie.imagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Please Upload the valid file");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.create_movie.filename = "";
                this.create_movie.filetype = "";
                this.create_movie.imagePath = "";
                // this.adminPage.profileImagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Document size should be less than 10MB");
                return;
            }
        }
    }
    imageCropped(event) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 300000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.croppedImage2 = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMovieForm.controls.imagePath.setValue(this.croppedImage2);
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 80).then(result => {
                this.croppedImage2 = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMovieForm.controls.imagePath.setValue(this.croppedImage2);
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.croppedImage2 = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.basicMovieForm.controls.imagePath.setValue(this.croppedImage2);
            });
        }
    }
    imageLoaded() {
        // show cropper
    }
    cropperReady() {
        // cropper ready
    }
    loadImageFailed() {
        // show message
    }
    editMovie(id) {
        this.GenerateForm();
        this.geners_data = [];
        this.enableEditMovie = true;
        this.listMovie = false;
        this.movieid = id;
        let movId = {
            "movieId": this.movieid
        };
        this.apiService.Create("MovieListShow/getByMovieId", movId).subscribe((result) => {
            // console.log(result);
            if (result.success == true) {
                if (result.object != undefined && result.object != null) {
                    if (result.object.movieDetailsDtoList != null && result.object.movieDetailsDtoList != undefined) {
                        let basicData = result.object.movieDetailsDtoList[0];
                        this.create_movie.title = basicData.title;
                        this.create_movie.shortSynopsis = basicData.shortSynopsis;
                        this.create_movie.synopsis = basicData.synopsis;
                        this.create_movie.movieOrSerial = basicData.movieOrSerial;
                        this.create_movie.movieType = basicData.movieType;
                        if (basicData.movieImagesDtoList != null && basicData.movieImagesDtoList != undefined) {
                            let imgPoster = [];
                            basicData.movieImagesDtoList.forEach((img) => {
                                imgPoster.push({ "movieImageId": img.movieImageId, "poster": img.poster });
                            });
                            this.posters = imgPoster;
                            this.croppedImage1 = this.posters[0].poster;
                            this.croppedImage2 = this.posters[1].poster;
                        }
                        if (basicData.movieTechnicalDetailsDtoList != null && basicData.movieTechnicalDetailsDtoList != undefined) {
                            let technicalData = [];
                            basicData.movieTechnicalDetailsDtoList.forEach((tech) => {
                                technicalData.push({ "id": tech.refGenersId, "itemName": tech.generesName });
                            });
                            if (basicData.movieTechnicalDetailsDtoList[0].yearCompleted == "1970-01-01 05:30:00.0") {
                                basicData.movieTechnicalDetailsDtoList[0].yearCompleted = "";
                            }
                            else {
                                this.create_movie.yearCompleted = this.datepipe.transform(basicData.movieTechnicalDetailsDtoList[0].yearCompleted, "dd-MM-yyyy");
                            }
                            this.geners_data = technicalData;
                            // this.create_movie.yearStarted = basicData.movieTechnicalDetailsDtoList[0].yearStarted;
                            // this.create_movie.yearCompleted = basicData.movieTechnicalDetailsDtoList[0].yearCompleted;
                            this.create_movie.yearStarted = this.datepipe.transform(basicData.movieTechnicalDetailsDtoList[0].yearStarted, "dd-MM-yyyy");
                            this.create_movie.yearCompleted = this.datepipe.transform(basicData.movieTechnicalDetailsDtoList[0].yearCompleted, "dd-MM-yyyy");
                            this.create_movie.otherTechnicalDetails = basicData.movieTechnicalDetailsDtoList[0].otherTechnicalDetails;
                        }
                    }
                    const control1 = this.productionHouseForm.controls['prodHouseRows'];
                    while (control1.controls.length > 0) {
                        this.removeProductionHouseRow(0);
                    }
                    if (result.object.movieProductionHouseDto != null && result.object.movieProductionHouseDto != undefined) {
                        if (result.object.movieProductionHouseDto.length > 0) {
                            let prodHouseDetails = result.object.movieProductionHouseDto;
                            if (prodHouseDetails != undefined && prodHouseDetails != null) {
                                if (prodHouseDetails.length > 0) {
                                    for (let value of this.productionHouseForm.value.prodHouseRows) {
                                        this.removeProductionHouseRow(0);
                                    }
                                    let currentmemberList = [];
                                    for (var i = 0; i < prodHouseDetails.length; i++) {
                                        this.addProductionHouseRow();
                                        const control = this.productionHouseForm.controls['prodHouseRows'];
                                        control.controls[i].get('productionId').setValue(prodHouseDetails[i].productionId);
                                        if (prodHouseDetails[i].refMemberId > 0) {
                                            this.movieList.push({ "productionId": prodHouseDetails[i].productionId, "id": prodHouseDetails[i].refMemberId, "itemName": prodHouseDetails[i].memberName, "profileImage": prodHouseDetails[i].memberImage });
                                        }
                                        else {
                                            control.controls[i].get('memberName').setValue(prodHouseDetails[i].memberName);
                                            this.movieList.push({ "productionId": "", "id": "", "itemName": "", "profileImage": "" });
                                        }
                                    }
                                    this.selectedItems = [];
                                    for (var i = 0; i < prodHouseDetails.length; i++) {
                                        let curr = this.movieList.filter(aa => aa.id == parseInt(prodHouseDetails[i].refMemberId))[0];
                                        if (curr.id != "") {
                                            this.selectedItems.push(Array.of(curr));
                                        }
                                        else {
                                            this.selectedItems.push(Array.of({ "productionId": "", "id": "", "itemName": "", "profileImage": "" }));
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            this.addProductionHouseRow();
                        }
                    }
                    else {
                        this.addProductionHouseRow();
                    }
                    const control2 = this.producerForm.controls['producerRow'];
                    while (control2.controls.length > 0) {
                        this.removeProducerRow(0);
                    }
                    if (result.object.movieProducerDto != null && result.object.movieProducerDto != undefined) {
                        if (result.object.movieProducerDto.length > 0) {
                            let prodDetails = result.object.movieProducerDto;
                            if (prodDetails != undefined && prodDetails != null) {
                                if (prodDetails.length > 0) {
                                    for (let value of this.producerForm.value.producerRow) {
                                        this.removeProducerRow(0);
                                    }
                                    let currentmemberList = [];
                                    for (var i = 0; i < prodDetails.length; i++) {
                                        this.addProducerRow();
                                        const control = this.producerForm.controls['producerRow'];
                                        control.controls[i].get('producerId').setValue(prodDetails[i].producerId);
                                        if (prodDetails[i].refMemberId > 0) {
                                            currentmemberList.push({ "producerId": prodDetails[i].producerId, "id": prodDetails[i].refMemberId, "itemName": prodDetails[i].memberName, "profileImage": prodDetails[i].memberImage });
                                        }
                                        else {
                                            control.controls[i].get('memberName').setValue(prodDetails[i].memberName);
                                            currentmemberList.push({ "producerId": "", "id": "", "itemName": "", "profileImage": "" });
                                        }
                                    }
                                    this.selectedProducerItems = [];
                                    for (var i = 0; i < prodDetails.length; i++) {
                                        let curr = currentmemberList.filter(aa => aa.id == parseInt(prodDetails[i].refMemberId))[0];
                                        if (curr.id != "") {
                                            this.selectedProducerItems.push(Array.of(curr));
                                        }
                                        else {
                                            this.selectedProducerItems.push(Array.of({ "producerId": "", "id": "", "itemName": "", "profileImage": "" }));
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            this.addProducerRow();
                        }
                    }
                    else {
                        this.addProducerRow();
                    }
                    const control3 = this.writerForm.controls['writerRow'];
                    while (control3.controls.length > 0) {
                        this.removeWriterRow(0);
                    }
                    if (result.object.movieWriterDto != null && result.object.movieWriterDto != undefined) {
                        if (result.object.movieWriterDto.length > 0) {
                            let writerDetails = result.object.movieWriterDto;
                            if (writerDetails != undefined && writerDetails != null) {
                                if (writerDetails.length > 0) {
                                    for (let value of this.writerForm.value.writerRow) {
                                        this.removeWriterRow(0);
                                    }
                                    let currentmemberList = [];
                                    for (var i = 0; i < writerDetails.length; i++) {
                                        this.addWriterRow();
                                        const control = this.writerForm.controls['writerRow'];
                                        control.controls[i].get('writerId').setValue(writerDetails[i].writerId);
                                        if (writerDetails[i].refMemberId > 0) {
                                            currentmemberList.push({ "writerId": writerDetails[i].writerId, "id": writerDetails[i].refMemberId, "itemName": writerDetails[i].memberName, "profileImage": writerDetails[i].memberImage });
                                        }
                                        else {
                                            control.controls[i].get('memberName').setValue(writerDetails[i].memberName);
                                            currentmemberList.push({ "writerId": "", "id": "", "itemName": "", "profileImage": "" });
                                        }
                                    }
                                    this.selectedWriterItems = [];
                                    for (var i = 0; i < writerDetails.length; i++) {
                                        let curr = currentmemberList.filter(aa => aa.id == parseInt(writerDetails[i].refMemberId))[0];
                                        if (curr.id != "") {
                                            this.selectedWriterItems.push(Array.of(curr));
                                        }
                                        else {
                                            this.selectedWriterItems.push(Array.of({}));
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            this.addWriterRow();
                        }
                    }
                    else {
                        this.addWriterRow();
                    }
                    const control4 = this.directorForm.controls['directorRow'];
                    while (control4.controls.length > 0) {
                        this.removeDirectorRow(0);
                    }
                    if (result.object.movieDirectorDto != null && result.object.movieDirectorDto != undefined) {
                        if (result.object.movieDirectorDto.length > 0) {
                            let directorDetails = result.object.movieDirectorDto;
                            if (directorDetails != undefined && directorDetails != null) {
                                if (directorDetails.length > 0) {
                                    for (let value of this.directorForm.value.directorRow) {
                                        this.removeDirectorRow(0);
                                    }
                                    let currentmemberList = [];
                                    for (var i = 0; i < directorDetails.length; i++) {
                                        this.addDirectorRow();
                                        const control = this.directorForm.controls['directorRow'];
                                        control.controls[i].get('directorId').setValue(directorDetails[i].directorId);
                                        if (directorDetails[i].refMemberId > 0) {
                                            currentmemberList.push({ "directorId": directorDetails[i].directorId, "id": directorDetails[i].refMemberId, "itemName": directorDetails[i].memberName, "profileImage": directorDetails[i].memberImage });
                                        }
                                        else {
                                            control.controls[i].get('memberName').setValue(directorDetails[i].memberName);
                                            currentmemberList.push({ "directorId": "", "id": "", "itemName": "", "profileImage": "" });
                                        }
                                    }
                                    this.selectedDirectorItems = [];
                                    for (var i = 0; i < directorDetails.length; i++) {
                                        let curr = currentmemberList.filter(aa => aa.id == parseInt(directorDetails[i].refMemberId))[0];
                                        if (curr.id != "") {
                                            this.selectedDirectorItems.push(Array.of(curr));
                                        }
                                        else {
                                            this.selectedDirectorItems.push(Array.of({}));
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            this.addDirectorRow();
                        }
                    }
                    else {
                        this.addDirectorRow();
                    }
                    const control5 = this.musicDirectorForm.controls['musicDirectorRow'];
                    while (control5.controls.length > 0) {
                        this.removeMusicDirectorRow(0);
                    }
                    if (result.object.movieMusicDirectorDto != null && result.object.movieMusicDirectorDto != undefined) {
                        if (result.object.movieMusicDirectorDto.length > 0) {
                            let musicDirectorDetails = result.object.movieMusicDirectorDto;
                            if (musicDirectorDetails != undefined && musicDirectorDetails != null) {
                                if (musicDirectorDetails.length > 0) {
                                    for (let value of this.musicDirectorForm.value.musicDirectorRow) {
                                        this.removeMusicDirectorRow(0);
                                    }
                                    let currentmemberList = [];
                                    for (var i = 0; i < musicDirectorDetails.length; i++) {
                                        this.addMusicDirectorRow();
                                        const control = this.musicDirectorForm.controls['musicDirectorRow'];
                                        control.controls[i].get('musicDirectorId').setValue(musicDirectorDetails[i].musicDirectorId);
                                        if (musicDirectorDetails[i].refMemberId > 0) {
                                            currentmemberList.push({ "musicDirectorId": musicDirectorDetails[i].musicDirectorId, "id": musicDirectorDetails[i].refMemberId, "itemName": musicDirectorDetails[i].memberName, "profileImage": musicDirectorDetails[i].memberImage });
                                        }
                                        else {
                                            control.controls[i].get('memberName').setValue(musicDirectorDetails[i].memberName);
                                            currentmemberList.push({ "musicDirectorId": "", "id": "", "itemName": "", "profileImage": "" });
                                        }
                                    }
                                    this.selectedMusicDirectorItems = [];
                                    for (var i = 0; i < musicDirectorDetails.length; i++) {
                                        let curr = currentmemberList.filter(aa => aa.id == parseInt(musicDirectorDetails[i].refMemberId))[0];
                                        if (curr.id != "") {
                                            this.selectedMusicDirectorItems.push(Array.of(curr));
                                        }
                                        else {
                                            this.selectedMusicDirectorItems.push(Array.of({}));
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            this.addMusicDirectorRow();
                        }
                    }
                    else {
                        this.addMusicDirectorRow();
                    }
                    const control6 = this.starringForm.controls['starringRow'];
                    while (control6.controls.length > 0) {
                        this.removeStarringRow(0);
                    }
                    if (result.object.movieStarringDto != null && result.object.movieStarringDto != undefined) {
                        if (result.object.movieStarringDto.length > 0) {
                            let staringDetails = result.object.movieStarringDto;
                            if (staringDetails != undefined && staringDetails != null) {
                                if (staringDetails.length > 0) {
                                    for (let value of this.starringForm.value.starringRow) {
                                        this.removeStarringRow(0);
                                    }
                                    let currentmemberList = [];
                                    for (var i = 0; i < staringDetails.length; i++) {
                                        this.addStarringRow();
                                        const control = this.starringForm.controls['starringRow'];
                                        control.controls[i].get('starringId').setValue(staringDetails[i].starringId);
                                        if (staringDetails[i].refMemberId > 0) {
                                            currentmemberList.push({ "starringId": staringDetails[i].starringId, "id": staringDetails[i].refMemberId, "itemName": staringDetails[i].memberName, "profileImage": staringDetails[i].memberImage });
                                        }
                                        else {
                                            control.controls[i].get('memberName').setValue(staringDetails[i].memberName);
                                            currentmemberList.push({ "starringId": "", "id": "", "itemName": "", "profileImage": "" });
                                        }
                                    }
                                    this.selectedStaringItems = [];
                                    for (var i = 0; i < staringDetails.length; i++) {
                                        let curr = currentmemberList.filter(aa => aa.id == parseInt(staringDetails[i].refMemberId))[0];
                                        if (curr.id != "") {
                                            this.selectedStaringItems.push(Array.of(curr));
                                        }
                                        else {
                                            this.selectedStaringItems.push(Array.of({}));
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            this.addStarringRow();
                        }
                    }
                    else {
                        this.addStarringRow();
                    }
                    const control7 = this.TechnicianForm.controls['technicianHeads'];
                    while (control7.controls.length > 0) {
                        this.removeTechnicianHead(0);
                    }
                    if (result.object.masterTechniciansTypeDto != null && result.object.masterTechniciansTypeDto != undefined) {
                        if (result.object.masterTechniciansTypeDto.length > 0) {
                            let technicianDetails = result.object.masterTechniciansTypeDto;
                            debugger;
                            if (technicianDetails != undefined && technicianDetails != null) {
                                if (technicianDetails.length > 0) {
                                    for (let value of this.TechnicianForm.value.technicianHeads) {
                                        this.removeTechnicianHead(0);
                                    }
                                    let currentTechHeadList = [];
                                    this.selectedTechHeadItems = [];
                                    this.selectedTechnicianHeadTechnicianItems = [];
                                    for (var i = 0; i < technicianDetails.length; i++) {
                                        this.addTechnicianHead();
                                        const control = this.TechnicianForm.controls['technicianHeads'];
                                        control.controls[i].get('techTypeId').setValue(technicianDetails[i].techTypeId);
                                        control.controls[i].get('seqNo').setValue(technicianDetails[i].seqNo);
                                        if (technicianDetails[i].refProfessionId > 0) {
                                            currentTechHeadList.push({ "id": technicianDetails[i].refProfessionId, "itemName": technicianDetails[i].technicianTypeName });
                                            let curr = currentTechHeadList.filter(aa => aa.id == parseInt(technicianDetails[i].refProfessionId))[0];
                                            if (curr.id != "") {
                                                this.selectedTechHeadItems.push(Array.of(curr));
                                            }
                                            else {
                                                this.selectedTechHeadItems.push(Array.of({}));
                                            }
                                        }
                                        else {
                                            control.controls[i].get('technicianTypeNameIfNot').setValue(technicianDetails[i].technicianTypeName);
                                            control.controls[i].get('seqNo').setValue(technicianDetails[i].seqNo);
                                            currentTechHeadList.push({ "id": "", "itemName": technicianDetails[i].technicianTypeName });
                                            this.selectedTechHeadItems.push(Array.of({}));
                                        }
                                        let MovieTechniciansList = technicianDetails[i].masterMovieTechniciansDtoList;
                                        console.log(JSON.stringify(MovieTechniciansList));
                                        if (MovieTechniciansList != null && MovieTechniciansList != undefined) {
                                            if (MovieTechniciansList.length > 0) {
                                                //  debugger;
                                                // for (let value of this.TechnicianForm.value.technicianHeads[i].technicians) {
                                                //   this.removeTechnicianHeadTechnician(i,1);
                                                // }
                                                let currentmemberList = [];
                                                let Cur = [];
                                                this.selectedTechnicianHeadTechnicianItems.push(Array.of({}));
                                                // this.addTechnicianHeadTechnician(i);
                                                for (var j = 0; j < MovieTechniciansList.length; j++) {
                                                    if (j > 0) {
                                                        this.addTechnicianHeadTechnician(i);
                                                    }
                                                    const control = this.TechnicianForm.controls['technicianHeads'];
                                                    const technicians = control.controls[i].get('technicians');
                                                    if (MovieTechniciansList[j].refMemberId > 0) {
                                                        technicians.controls[j].get('movieTechId').setValue(MovieTechniciansList[j].movieTechId);
                                                        technicians.controls[j].get('seqNo').setValue(MovieTechniciansList[j].seqNo);
                                                        currentmemberList.push({ "movieTechId": MovieTechniciansList[j].movieTechId, "id": MovieTechniciansList[j].refMemberId, "itemName": MovieTechniciansList[j].memberName, "profileImage": MovieTechniciansList[j].memberImage });
                                                        technicians.controls[j].get('technicianName').setValue(Array.of({ "movieTechId": MovieTechniciansList[j].movieTechId, "id": MovieTechniciansList[j].refMemberId, "itemName": MovieTechniciansList[j].memberName, "profileImage": MovieTechniciansList[j].memberImage }));
                                                        let curr = currentmemberList.filter(aa => aa.id == parseInt(MovieTechniciansList[j].refMemberId))[0];
                                                        if (curr.id != "") {
                                                            //console.log( this.selectedTechnicianHeadTechnicianItems);
                                                            //   this.selectedTechnicianHeadTechnicianItems[i].push(Array.of(curr));
                                                            // Cur.push(Array.of(curr));
                                                        }
                                                        else {
                                                            //  this.selectedTechnicianHeadTechnicianItems[i].push(Array.of({}));
                                                            //Cur.push(Array.of({}));
                                                            // technicians.controls[j].get('technicianName').setValue(Array.of({}));
                                                        }
                                                    }
                                                    else {
                                                        technicians.controls[j].get('technicianNameIfNot').setValue(MovieTechniciansList[j].memberName);
                                                        technicians.controls[j].get('movieTechId').setValue(MovieTechniciansList[j].movieTechId);
                                                        technicians.controls[j].get('seqNo').setValue(MovieTechniciansList[j].seqNo);
                                                        currentmemberList.push({ "movieTechId": MovieTechniciansList[j].movieTechId, "id": "", "itemName": MovieTechniciansList[j].memberName });
                                                    }
                                                }
                                            }
                                            // else {
                                            //   this.addTechnicianHeadTechnician(i);
                                            // }
                                        }
                                        // else {
                                        //   this.addTechnicianHeadTechnician(i);
                                        // }
                                    }
                                }
                            }
                        }
                        else {
                            this.addTechnicianHead();
                        }
                    }
                    else {
                        this.addTechnicianHead();
                    }
                    const control8 = this.galleryForm.controls['galleryRow'];
                    while (control8.controls.length > 0) {
                        this.deleteGalleryRow(0);
                    }
                    if (result.object.movieGallaryDto != null && result.object.movieGallaryDto != undefined) {
                        if (result.object.movieGallaryDto.length > 0) {
                            let galleryDetails = result.object.movieGallaryDto;
                            for (let value of this.galleryForm.value.galleryRow) {
                                this.deleteGalleryRow(0);
                            }
                            if (galleryDetails != undefined && galleryDetails != null) {
                                if (galleryDetails.length > 0) {
                                    for (var i = 0; i < galleryDetails.length; i++) {
                                        this.addgalleryRow();
                                        const control = this.galleryForm.controls['galleryRow'];
                                        let movieImgPath = galleryDetails[i].movieImgPath;
                                        if (movieImgPath != "" && movieImgPath != undefined && movieImgPath != null) {
                                            control.controls[i].get('galaryPath').setValue(movieImgPath);
                                            this.galImg[i] = movieImgPath;
                                        }
                                        else {
                                            control.controls[i].get('galaryPath').setValue("");
                                            this.galImg[i] = "";
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            this.addgalleryRow();
                        }
                    }
                    else {
                        this.addgalleryRow();
                    }
                    const control9 = this.articleForm.controls['articleRow'];
                    while (control9.controls.length > 0) {
                        this.deleteArticleRow(0);
                    }
                    if (result.object.movieImgArticleDto != null && result.object.movieImgArticleDto != undefined) {
                        if (result.object.movieImgArticleDto.length > 0) {
                            let imageArticleDetails = result.object.movieImgArticleDto;
                            for (let value of this.articleForm.value.articleRow) {
                                this.deleteArticleRow(0);
                            }
                            if (imageArticleDetails != undefined && imageArticleDetails != null) {
                                if (imageArticleDetails.length > 0) {
                                    for (var i = 0; i < imageArticleDetails.length; i++) {
                                        this.addarticleRow();
                                        const control = this.articleForm.controls['articleRow'];
                                        let imgArticlePath = imageArticleDetails[i].imgArticlePath;
                                        if (imgArticlePath != "" && imgArticlePath != undefined && imgArticlePath != null) {
                                            control.controls[i].get('articlePath').setValue(imgArticlePath);
                                            this.articleImg[i] = imgArticlePath;
                                        }
                                        else {
                                            control.controls[i].get('articlePath').setValue("");
                                            this.articleImg[i] = "";
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            this.addarticleRow();
                        }
                    }
                    else {
                        this.addarticleRow();
                    }
                    const control10 = this.articlePdfForm.controls['articlePdfRow'];
                    while (control10.controls.length > 0) {
                        this.deleteArticlePdfRow(0);
                    }
                    if (result.object.moviePdfArticleDto != null && result.object.moviePdfArticleDto != undefined) {
                        if (result.object.moviePdfArticleDto.length > 0) {
                            let pdfDetails = result.object.moviePdfArticleDto;
                            for (let value of this.articlePdfForm.value.articlePdfRow) {
                                this.deleteArticlePdfRow(0);
                            }
                            if (pdfDetails != undefined && pdfDetails != null) {
                                if (pdfDetails.length > 0) {
                                    for (var i = 0; i < pdfDetails.length; i++) {
                                        this.addarticlePdfRow();
                                        const control = this.articlePdfForm.controls['articlePdfRow'];
                                        let pdfPath = pdfDetails[i].pdfPath;
                                        if (pdfPath != "" && pdfPath != undefined && pdfPath != null) {
                                            control.controls[i].get('articlePdfPath').setValue(pdfPath);
                                            this.articlePdf[i] = pdfPath;
                                        }
                                        else {
                                            control.controls[i].get('articlePdfPath').setValue("");
                                            this.articlePdf[i] = "";
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            this.addarticlePdfRow();
                        }
                    }
                    else {
                        this.addarticlePdfRow();
                    }
                    const control11 = this.memberOpinionForm.controls['memberOpinionRow'];
                    while (control11.controls.length > 0) {
                        this.removeMemberOpinionRow(0);
                    }
                    if (result.object.movieOpinionDto != undefined && result.object.movieOpinionDto != null) {
                        if (result.object.movieOpinionDto.length > 0) {
                            let otherOpinions = result.object.movieOpinionDto;
                            for (let value of this.memberOpinionForm.value.memberOpinionRow) {
                                this.removeMemberOpinionRow(0);
                            }
                            let currentmemberList = [];
                            for (var i = 0; i < otherOpinions.length; i++) {
                                this.addMemberOpinionRow();
                                const control = this.memberOpinionForm.controls['memberOpinionRow'];
                                // control.controls[i].get('movieOpinionId').setValue(otherOpinions[i].movieOpinionId);
                                control.controls[i].get('memberOpinionDescription').setValue(otherOpinions[i].description);
                                // control.controls[i].get('otherMemberImage').setValue(otherOpinions[i].memberImage);
                                // control.controls[i].get('memberOpinionName').setValue(otherOpinions[i].refMembershipId);
                                currentmemberList.push({
                                    "id": otherOpinions[i].refMembershipId, "itemName": otherOpinions[i].memberName, "profileImage": otherOpinions[i].memberImage,
                                    "memberOpinionDescription": otherOpinions[i].description
                                });
                            }
                            this.selectedOpenionItems = [];
                            for (var i = 0; i < otherOpinions.length; i++) {
                                let curr = currentmemberList.filter(aa => aa.id == parseInt(otherOpinions[i].refMembershipId))[0];
                                if (curr.id != "") {
                                    this.selectedOpenionItems.push(Array.of(curr));
                                }
                                else {
                                    this.selectedOpenionItems.push(Array.of({}));
                                }
                            }
                        }
                        else {
                            this.addMemberOpinionRow();
                        }
                    }
                    else {
                        this.addMemberOpinionRow();
                    }
                    const control12 = this.videoForm.controls['videoRow'];
                    while (control12.controls.length > 0) {
                        this.deleteVideoRow(0);
                    }
                    if (result.object.movieVideosDto != undefined && result.object.movieVideosDto != null) {
                        if (result.object.movieVideosDto.length > 0) {
                            for (let value of this.videoForm.value.videoRow) {
                                this.deleteVideoRow(0);
                            }
                            let movieVideos = result.object.movieVideosDto;
                            for (var i = 0; i < movieVideos.length; i++) {
                                this.addVideoRowInPosition();
                                const control = this.videoForm.controls['videoRow'];
                                control.controls[i].get('videoName').setValue(movieVideos[i].videoName);
                                control.controls[i].get('videoURL').setValue(movieVideos[i].videoUrl);
                            }
                        }
                        else {
                            this.addVideoRowInPosition();
                        }
                    }
                    else {
                        this.addVideoRowInPosition();
                    }
                    if (result.object.movieSocialMediaLinkDto != undefined && result.object.movieSocialMediaLinkDto != null) {
                        debugger;
                        if (result.object.movieSocialMediaLinkDto.length > 0) {
                            let sociallinks = result.object.movieSocialMediaLinkDto;
                            for (var i = 0; i < this.socialMediaLinks.length; i++) {
                                for (var j = 0; j < sociallinks.length; j++) {
                                    if (this.socialMediaLinks[i].socialLinksId == sociallinks[j].refSocialLinkId) {
                                        this.socialMediaLinks[i].socialLinksUrl = sociallinks[j].socialLinkUrl;
                                        const control = this.socialMediaForm.controls['socialLinkRow'];
                                        control.controls[i].get('socialLinksUrl').setValue(sociallinks[j].socialLinkUrl);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        });
    }
    basicSaveMovie() {
        this.loaderService.display(true);
        if (this.geners_data != null && this.geners_data != undefined) {
            if (this.geners_data.length > 0) {
                let listIds = new Array();
                this.geners_data.forEach(gd => {
                    if (gd.id > 0) {
                        listIds.push(gd.id);
                    }
                });
                this.create_movie.refGenersId = listIds;
            }
        }
        let moviePosters = [{ "poster": this.croppedImage1 }, { "poster": this.croppedImage2 }];
        let stdate = this.create_movie.yearStarted;
        let datecmpl = this.create_movie.yearCompleted;
        if (datecmpl == null && datecmpl == undefined) {
            datecmpl = "";
        }
        if (this.basicMovieForm.valid) {
            let data = {
                "movieId": this.movieid,
                "title": this.create_movie.title,
                "shortSynopsis": this.create_movie.shortSynopsis,
                "synopsis": this.create_movie.synopsis,
                "refGenersId": this.create_movie.refGenersId,
                "otherTechnicalDetails": this.create_movie.otherTechnicalDetails,
                "movieOrSerial": this.create_movie.movieOrSerial,
                "movieType": this.create_movie.movieType,
                "yearStarted": stdate,
                "yearCompleted": datecmpl,
                "movieImagesDtos": moviePosters
            };
            this.apiService.Create("movieDetails/save", data).subscribe((result) => {
                this.loaderService.display(false);
                if (result.success == true) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                        position: 'top-end',
                        icon: 'success',
                        title: result.message,
                        showConfirmButton: false,
                        timer: 1500
                    });
                }
                else {
                    this.loaderService.display(false);
                    console.log(result.message);
                }
            });
        }
        else {
            this.loaderService.display(false);
            this.apiService.validateAllFormFields(this.basicMovieForm);
            sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire("Please enter all the fields");
        }
    }
    clearBasicDetails() {
        this.create_movie.title = "",
            this.create_movie.shortSynopsis = "",
            this.create_movie.synopsis = "",
            this.create_movie.refGenersId = "",
            this.create_movie.movieType = 'trending',
            this.create_movie.movieOrSerial = 'movie',
            this.create_movie.otherTechnicalDetails = "",
            this.create_movie.yearStarted = "",
            this.create_movie.yearCompleted = "",
            this.croppedImage1 = "",
            this.imageChangedEvent1 = "",
            this.croppedImage2 = "",
            this.imageChangedEvent2 = "",
            this.geners_data = "";
    }
    initProdHouseRows() {
        return this.fb.group({
            productionId: [''],
            prodHouseTitle: [''],
            memberName: ['']
        });
    }
    getProductionHouseRows(productionHouseForm) {
        return productionHouseForm.get('prodHouseRows').controls;
    }
    addProductionHouseRow() {
        const control = this.productionHouseForm.controls['prodHouseRows'];
        control.push(this.initProdHouseRows());
    }
    removeProductionHouseRow(index) {
        const control = this.productionHouseForm.controls['prodHouseRows'];
        control.removeAt(index);
        this.selectedItems.splice(index, 1);
    }
    saveProductionHouse() {
        let prodHouseData = [];
        this.loaderService.display(true);
        for (let val of this.productionHouseForm.value.prodHouseRows) {
            if (val != undefined && val != null) {
                if (val.memberName !== "") {
                    prodHouseData.push({ "productionId": "", "refMemberId": 0, "refMovieId": this.movieid, "memberName": val.memberName });
                }
                else {
                    prodHouseData.push({ "productionId": "", "refMemberId": val.prodHouseTitle[0].id, "refMovieId": this.movieid, "memberName": val.prodHouseTitle[0].itemName });
                }
            }
        }
        ;
        let movieProductionDatas = {
            "refMovieId": this.movieid,
            "movieProductionHouseDtos": prodHouseData
        };
        this.apiService.Create("movieProduction/saveproductionhouse", movieProductionDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    clearProductionHouse() {
        this.productionHouseForm.reset();
    }
    initProducerRow() {
        return this.fb.group({
            producerId: [''],
            producerName: [''],
            memberName: ['']
        });
    }
    getProducerRow(producerForm) {
        return producerForm.get('producerRow').controls;
    }
    addProducerRow() {
        const control = this.producerForm.controls['producerRow'];
        control.push(this.initProducerRow());
    }
    removeProducerRow(index) {
        const control = this.producerForm.controls['producerRow'];
        control.removeAt(index);
        this.selectedProducerItems.splice(index, 1);
    }
    saveProducer() {
        let producerData = [];
        this.loaderService.display(true);
        for (let val of this.producerForm.value.producerRow) {
            if (val != undefined && val != null) {
                if (val.memberName !== "") {
                    producerData.push({ "producerId": "", "refMovieId": this.movieid, "refMemberId": 0, "memberName": val.memberName });
                }
                else {
                    producerData.push({ "producerId": "", "refMovieId": this.movieid, "refMemberId": val.producerName[0].id, "memberName": val.producerName[0].itemName });
                }
            }
        }
        ;
        let movieProducerDatas = {
            "refMovieId": this.movieid,
            "movieProducerDtos": producerData
        };
        this.apiService.Create("movieProducer/saveproducer", movieProducerDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    clearProducer() {
        this.producerForm.reset();
    }
    initWriterRow() {
        return this.fb.group({
            writerId: [''],
            writerName: [''],
            memberName: ['']
        });
    }
    getWriterRow(writerForm) {
        return writerForm.get('writerRow').controls;
    }
    addWriterRow() {
        const control = this.writerForm.controls['writerRow'];
        control.push(this.initWriterRow());
    }
    removeWriterRow(index) {
        const control = this.writerForm.controls['writerRow'];
        control.removeAt(index);
        this.selectedWriterItems.splice(index, 1);
    }
    saveWriter() {
        let witerData = [];
        this.loaderService.display(true);
        for (let value of this.writerForm.value.writerRow) {
            if (value.memberName !== "") {
                witerData.push({ "writerId": "", "refMemberId": 0, "refMovieId": this.movieid, "memberName": value.memberName });
            }
            else {
                witerData.push({ "writerId": "", "refMemberId": value.writerName[0].id, "refMovieId": this.movieid, "memberName": value.writerName[0].itemName });
            }
        }
        ;
        let writerDatas = {
            "refMovieId": this.movieid,
            "movieWriterDtos": witerData
        };
        this.apiService.Create("movieWriter/savewriter", writerDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    clearWriter() {
        this.writerForm.reset();
    }
    initDirectorRow() {
        return this.fb.group({
            directorId: [''],
            directorName: [''],
            memberName: ['']
        });
    }
    getDirectorRow(directorForm) {
        return directorForm.get('directorRow').controls;
    }
    addDirectorRow() {
        const control = this.directorForm.controls['directorRow'];
        control.push(this.initDirectorRow());
    }
    removeDirectorRow(index) {
        const control = this.directorForm.controls['directorRow'];
        control.removeAt(index);
        this.selectedDirectorItems.splice(index, 1);
    }
    saveDirector() {
        let directorData = [];
        this.loaderService.display(true);
        for (let value of this.directorForm.value.directorRow) {
            if (value.memberName !== "") {
                directorData.push({ "directorId": "", "refMemberId": 0, "refMovieId": this.movieid, "memberName": value.memberName });
            }
            else {
                directorData.push({ "directorId": "", "refMemberId": value.directorName[0].id, "refMovieId": this.movieid, "memberName": value.directorName[0].itemName });
            }
        }
        ;
        let directorDatas = {
            "refMovieId": this.movieid,
            "movieDirectorDtos": directorData
        };
        this.apiService.Create("movieDirector/savedirector", directorDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    clearDirector() {
        this.directorForm.reset();
    }
    //Music Director Form
    initMusicDirectorRow() {
        return this.fb.group({
            musicDirectorId: [''],
            musicDirectorName: [''],
            memberName: ['']
        });
    }
    getMusicDirectorRow(musicDirectorForm) {
        return musicDirectorForm.get('musicDirectorRow').controls;
    }
    addMusicDirectorRow() {
        const control = this.musicDirectorForm.controls['musicDirectorRow'];
        control.push(this.initMusicDirectorRow());
    }
    removeMusicDirectorRow(index) {
        const control = this.musicDirectorForm.controls['musicDirectorRow'];
        control.removeAt(index);
        this.selectedMusicDirectorItems.splice(index, 1);
    }
    saveMusicDirector() {
        let musicDirectorData = [];
        for (let value of this.musicDirectorForm.value.musicDirectorRow) {
            if (value.memberName !== "") {
                musicDirectorData.push({ "refMemberId": 0, "refMovieId": this.movieid, "memberName": value.memberName });
            }
            else {
                musicDirectorData.push({ "refMemberId": value.musicDirectorName[0].id, "refMovieId": this.movieid, "memberName": value.musicDirectorName[0].itemName });
            }
        }
        ;
        let movieMusicDirectorDatas = {
            "refMovieId": this.movieid,
            "movieMusicDirectorDtos": musicDirectorData
        };
        this.loaderService.display(true);
        this.apiService.Create("movieMusicdirector/savemusicdirector", movieMusicDirectorDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    clearMusicDirector() {
        this.musicDirectorForm.reset();
    }
    initStarringRow() {
        return this.fb.group({
            starringId: [''],
            starringName: [''],
            memberName: ['']
        });
    }
    getStarringRow(starringForm) {
        return starringForm.get('starringRow').controls;
    }
    addStarringRow() {
        const control = this.starringForm.controls['starringRow'];
        control.push(this.initStarringRow());
    }
    removeStarringRow(index) {
        const control = this.starringForm.controls['starringRow'];
        control.removeAt(index);
        this.selectedStaringItems.splice(index, 1);
    }
    saveStarring() {
        let starringData = [];
        this.loaderService.display(true);
        for (let value of this.starringForm.value.starringRow) {
            if (value.memberName !== "") {
                starringData.push({ "refMemberId": 0, "refMovieId": this.movieid, "memberName": value.memberName });
            }
            else {
                starringData.push({ "refMemberId": value.starringName[0].id, "refMovieId": this.movieid, "memberName": value.starringName[0].itemName });
            }
        }
        ;
        let movieStarDatas = {
            "refMovieId": this.movieid,
            "movieStarringDtos": starringData
        };
        this.apiService.Create("movieStarring/savestarring", movieStarDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    clearStarring() {
        this.starringForm.reset();
    }
    // Gallery Fom
    initGalleryRow() {
        return this.fb.group({
            movieGalId: [''],
            galaryPath: [''],
            galaryfakePath: ['']
        });
    }
    getGalleryRow(galleryForm) {
        return galleryForm.get('galleryRow').controls;
    }
    addGalleryRowInPosition(index) {
        const control = this.galleryForm.controls['galleryRow'];
        control.insert(index + 1, this.initGalleryRow());
        this.galImg.splice(index + 1, 0, "");
        this.imageChangedEventGalary.splice(index + 1, 0, "");
    }
    addgalleryRow() {
        const control = this.galleryForm.controls['galleryRow'];
        control.push(this.initGalleryRow());
    }
    deleteGalleryRow(index) {
        this.galImg.splice(index, 1);
        this.imageChangedEventGalary.splice(index, 1);
        const control = this.galleryForm.controls['galleryRow'];
        control.removeAt(index);
    }
    galleryImageUpload(e, seqNo) {
        this.imageChangedEventGalary[seqNo] = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") && e.target.files[0].size <= 10000000) // 2097152 bytes = 2MB
             {
                this.loaderService.display(true);
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.galImg[seqNo] = reader.result;
                    this.imageChangedEventGalary[seqNo] = e;
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG") {
                this.galImg[seqNo] = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.galImg[seqNo] = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire("Document size should be less than 10MB");
                return;
            }
        }
    }
    imageCroppedGalary(event, seqNo) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.loaderService.display(false);
                this.galImg[seqNo] = "";
                if (this.imageChangedEventGalary[seqNo]) {
                    const ctrl = this.galleryForm.controls['galleryRow'];
                    ctrl.controls[seqNo].get('galaryPath').setValue(result);
                    this.galImg[seqNo] = result;
                }
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                this.loaderService.display(false);
                this.galImg[seqNo] = "";
                if (this.imageChangedEventGalary[seqNo]) {
                    const ctrl = this.galleryForm.controls['galleryRow'];
                    ctrl.controls[seqNo].get('galaryPath').setValue(result);
                    this.galImg[seqNo] = result;
                }
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.loaderService.display(false);
                this.galImg[seqNo] = "";
                if (this.imageChangedEventGalary[seqNo]) {
                    const ctrl = this.galleryForm.controls['galleryRow'];
                    ctrl.controls[seqNo].get('galaryPath').setValue(result);
                    this.galImg[seqNo] = result;
                }
            });
        }
    }
    imageLoadedGalary() {
        // show cropper
    }
    cropperReadyGalary() {
        // cropper ready
    }
    loadImageFailedGalary() {
        // show message
    }
    saveGallery() {
        let galleryData = [];
        this.loaderService.display(true);
        for (let value of this.galleryForm.value.galleryRow) {
            if (value.galaryPath != null && value.galaryPath != undefined) {
                galleryData.push({ "movieGalId": "", "movieId": this.movieid, "movieImgTitle": "", "seqNo": "1", "movieImgPath": value.galaryPath });
            }
        }
        let galleryDatas = {
            "movieId": this.movieid,
            "movieGallaryDtos": galleryData
        };
        this.apiService.Create("moviegallery/savegallary", galleryDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    initArticleRow() {
        return this.fb.group({
            movieArticleId: [''],
            articlePath: [''],
            articlefakePath: ['']
        });
    }
    getArticleRow(articleForm) {
        return articleForm.get('articleRow').controls;
    }
    addArticleRowInPosition(index) {
        const control = this.articleForm.controls['articleRow'];
        control.insert(index + 1, this.initArticleRow());
        this.articleImg.splice(index + 1, 0, "");
    }
    addarticleRow() {
        const control = this.articleForm.controls['articleRow'];
        control.push(this.initArticleRow());
    }
    deleteArticleRow(index) {
        this.articleImg.splice(index, 1);
        const control = this.articleForm.controls['articleRow'];
        control.removeAt(index);
    }
    multipartArticleUpload(e, seqNo) {
        if (e.target.files && e.target.files[0]) {
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            let file = e.target.files[0];
            var extention = nameArray[nameArray.length - 1];
            // if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") && e.target.files[0].size <= 10000000)  // 2097152 bytes = 2MB
            // {
            //   this.loaderService.display(true);
            //   var date = new Date();
            //   var uploadFor = "Article" + (Number(seqNo) + 1) + date.getFullYear() + date.getMonth() + date.getDate() + date.getHours() + date.getMinutes() + date.getSeconds();
            //   let formData = new FormData();
            //   let data = {
            //     "mobile": "Movie" + 2,
            //     "for": uploadFor
            //   };
            //   formData.append("file", e.target.files[0]);
            //   formData.append("info", new Blob([JSON.stringify(data)], {
            //     type: "application/json"
            //   }));
            //   this.apiService.saveFormData("file/upload", formData).subscribe(data1 => {
            //     if (data1.success == true) {
            //       this.articleImg[seqNo] = "";
            //       const ctrl = <FormArray>this.articleForm.controls['articleRow'];
            //       ctrl.controls[seqNo].get('articlePath').setValue(data1.object);
            //       this.articleImg[seqNo] = data1.object;
            //     }
            //     this.loaderService.display(false);
            //   })
            // }
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") && e.target.files[0].size <= 200000) // 2097152 bytes = 2MB
             {
                this.loaderService.display(true);
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.articleImg[seqNo] = "";
                    const ctrl = this.articleForm.controls['articleRow'];
                    ctrl.controls[seqNo].get('articlePath').setValue(reader.result);
                    this.articleImg[seqNo] = reader.result;
                    // this.imageChangedEventGalary[seqNo] = e;
                    this.loaderService.display(false);
                };
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG") {
                this.articleImg[seqNo] = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 200000) {
                this.articleImg[seqNo] = "";
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire("Image size should be less than 200KB");
                return;
            }
        }
    }
    saveImageArticle() {
        let imageArticleData = [];
        this.loaderService.display(true);
        for (let value of this.articleForm.value.articleRow) {
            if (value.articlePath != null && value.articlePath != undefined) {
                imageArticleData.push({ "movieArticleId": "", "movieId": this.movieid, "imgArticleTitle": "", "imgArticlePath": value.articlePath });
            }
        }
        let imageArticleDatas = {
            "movieId": this.movieid,
            "movieImgArticleDtos": imageArticleData
        };
        this.apiService.Create("movieimgarticle/saveimgarticle", imageArticleDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    initArticlePdfRow() {
        return this.fb.group({
            pdfArticleId: [''],
            articlePdfPath: [''],
            articlepdffakePath: ['']
        });
    }
    getArticlePdfRow(articlePdfForm) {
        return articlePdfForm.get('articlePdfRow').controls;
    }
    addArticlePdfRowInPosition(index) {
        const control = this.articlePdfForm.controls['articlePdfRow'];
        control.insert(index + 1, this.initArticlePdfRow());
        this.articlePdf.splice(index + 1, 0, "");
    }
    addarticlePdfRow() {
        const control = this.articlePdfForm.controls['articlePdfRow'];
        control.push(this.initArticlePdfRow());
    }
    deleteArticlePdfRow(index) {
        this.articlePdf.splice(index, 1);
        const control = this.articlePdfForm.controls['articlePdfRow'];
        control.removeAt(index);
    }
    multipartArticlePdfUpload(e, seqNo) {
        if (e.target.files && e.target.files[0] && e.target.files[0].size <= 1024000) {
            this.loaderService.display(true);
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if (extention == "pdf" || extention == "PDF") {
                // var date = new Date();
                // var uploadFor = "ArticlePdf" + (Number(seqNo) + 1) + date.getFullYear() + date.getMonth() + date.getDate() + date.getHours() + date.getMinutes() + date.getSeconds();
                // let formData = new FormData();
                // let data = {
                //   "mobile": "Movie" + 2,
                //   "for": uploadFor
                // };
                // formData.append("file", e.target.files[0]);
                // formData.append("info", new Blob([JSON.stringify(data)], {
                //   type: "application/json"
                // }));
                // this.apiService.saveFormData("file/upload", formData).subscribe(data1 => {
                //   if (data1.success == true) {
                //     this.articlePdf[seqNo] = "";
                //     const ctrl = <FormArray>this.articlePdfForm.controls['articlePdfRow'];
                //     ctrl.controls[seqNo].get('articlePdfPath').setValue(data1.object);
                //     this.articlePdf[seqNo] = data1.object;
                //   }
                //   this.loaderService.display(false);
                // })
                this.loaderService.display(true);
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.articlePdf[seqNo] = "";
                    const ctrl = this.articlePdfForm.controls['articlePdfRow'];
                    ctrl.controls[seqNo].get('articlePdfPath').setValue(reader.result);
                    this.articlePdf[seqNo] = reader.result;
                    this.loaderService.display(false);
                };
            }
            else {
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire("Please Upload the valid PDF file");
                return;
            }
        }
        else {
            this.loaderService.display(false);
            sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire("Please Upload PDF size less than 1MB");
            return;
        }
    }
    savePdfArticle() {
        let pdfArticleData = [];
        this.loaderService.display(true);
        for (let value of this.articlePdfForm.value.articlePdfRow) {
            if (value.articlePdfPath != null && value.articlePdfPath != undefined) {
                pdfArticleData.push({ "pdfArticleId": "", "movieId": this.movieid, "pdfTitle": "", "pdfPath": value.articlePdfPath });
            }
        }
        let pdfArticleDatas = {
            "movieId": this.movieid,
            "moviePdfArticleDtos": pdfArticleData
        };
        this.apiService.Create("moviepdfarticle/savepdfarticle", pdfArticleDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    initMemberOpinionRow() {
        return this.fb.group({
            movieOpinionId: [''],
            memberOpinionName: [''],
            otherMemberImage: [''],
            memberOpinionDescription: ['']
        });
    }
    getMemberOpinionRow(memberOpinionForm) {
        return memberOpinionForm.get('memberOpinionRow').controls;
    }
    addMemberOpinionRow() {
        const control = this.memberOpinionForm.controls['memberOpinionRow'];
        control.push(this.initMemberOpinionRow());
    }
    removeMemberOpinionRow(index) {
        const control = this.memberOpinionForm.controls['memberOpinionRow'];
        control.removeAt(index);
        this.selectedOpenionItems.splice(index, 1);
    }
    saveMemberOpenion() {
        this.loaderService.display(true);
        let memberOpenionData = [];
        for (let value of this.memberOpinionForm.value.memberOpinionRow) {
            if (value.memberOpinionDescription != null && value.memberOpinionDescription != undefined && value.memberOpinionName != null && value.memberOpinionName) {
                memberOpenionData.push({ "movieOpinionId": "", "movieId": this.movieid, "refMembershipId": value.memberOpinionName[0].id, "description": value.memberOpinionDescription });
            }
        }
        let openionDatas = {
            "movieId": this.movieid,
            "movieOpinionDtos": memberOpenionData
        };
        this.apiService.Create("movieopinion/saveopinion", openionDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    clearMemberOpenion() {
        this.memberOpinionForm.reset();
    }
    initVideoRow() {
        return this.fb.group({
            videoName: [''],
            videoURL: ['']
        });
    }
    getVideoRow(videoForm) {
        return videoForm.get('videoRow').controls;
    }
    addVideoRowInPosition() {
        const control = this.videoForm.controls['videoRow'];
        control.push(this.initVideoRow());
    }
    deleteVideoRow(index) {
        const control = this.videoForm.controls['videoRow'];
        control.removeAt(index);
    }
    saveMovieVideos() {
        let movieVideos = [];
        this.loaderService.display(true);
        for (let value of this.videoForm.value.videoRow) {
            if (value.videoName != null && value.videoName != undefined && value.videoURL != undefined && value.videoURL != null) {
                movieVideos.push({ "movieVideoId": "", "movieId": this.movieid, "videoName": value.videoName, "videoUrl": value.videoURL });
            }
        }
        let videoDatas = {
            "movieId": this.movieid,
            "movieVideosDtos": movieVideos
        };
        this.apiService.Create("movievideos/savevideo", videoDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    clearMovieVideos() {
        this.videoForm.reset();
    }
    getSocialMediaLinks() {
        this.socialMediaLinks = [];
        this.apiService.getDATA("detailsDto/getAll").subscribe((result) => {
            if (result.success == true) {
                if (result.object.socialLinksDtoList != null && result.object.socialLinksDtoList != undefined) {
                    this.socialMediaLinks = result.object.socialLinksDtoList;
                    for (var i = 0; i < this.socialMediaLinks.length; i++) {
                        this.addNewsocialLinkDetails();
                        const control = this.socialMediaForm.controls['socialLinkRow'];
                        control.controls[i].get('socialLinksUrl').setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(6), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(200)]);
                        control.controls[i].get('socialLinksUrl').updateValueAndValidity();
                    }
                }
            }
        });
    }
    //#endregion for social media links
    initSocialLinkRow() {
        return this.fb.group({
            socialLinksUrl: [''],
        });
    }
    getsocialLinkDetails(Form) {
        return Form.get('socialLinkRow').controls;
    }
    addNewsocialLinkDetails() {
        const control = this.socialMediaForm.controls['socialLinkRow'];
        control.push(this.initSocialLinkRow());
    }
    saveSocialMedias() {
        let socialmedias = [];
        this.loaderService.display(true);
        this.socialMediaLinks.forEach(social => {
            if (social.socialLinksUrl != "" && social.socialLinksUrl != undefined) {
                socialmedias.push({ "movieId": this.movieid, "refSocialLinkId": social.socialLinksId, "socialLinkUrl": social.socialLinksUrl });
            }
        });
        let socialMediaDatas = {
            "movieId": this.movieid,
            "movieSocialMediaLinkDtos": socialmedias
        };
        this.apiService.Create("moviesocialmedialink/savelinks", socialMediaDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    clearSocialMedias() {
        this.socialMediaForm.reset();
    }
    //#endregion for  start
    gettechnicianHeads() {
        return this.TechnicianForm.get("technicianHeads");
    }
    newTechnicianHeads() {
        return this.fb.group({
            techTypeId: '',
            technicianTypeName: '',
            technicianTypeNameIfNot: '',
            seqNo: '',
            technicians: this.fb.array([this.newTechnician()])
        });
    }
    addTechnicianHead() {
        //  Adding a TechnicianHead
        this.gettechnicianHeads().push(this.newTechnicianHeads());
    }
    removeTechnicianHead(TechIndex) {
        this.gettechnicianHeads().removeAt(TechIndex);
    }
    getTechnicians(TechIndex) {
        return this.gettechnicianHeads().at(TechIndex).get("technicians");
    }
    newTechnician() {
        return this.fb.group({
            refMemberId: '',
            technicianName: [],
            movieTechId: '',
            seqNo: '',
            technicianNameIfNot: ''
        });
    }
    addTechnicianHeadTechnician(TechIndex) {
        //  this.selectedTechnicianHeadTechnicianItems[TechIndex];
        this.getTechnicians(TechIndex).push(this.newTechnician());
    }
    removeTechnicianHeadTechnician(TechIndex, technicianNameIndex) {
        this.getTechnicians(TechIndex).removeAt(technicianNameIndex);
    }
    onClearTechnicians(TechIndex) {
        this.gettechnicianHeads().removeAt(TechIndex);
    }
    onTechniciansSubmit(TechIndex) {
        //console.log(this.gettechnicianHeads().controls[TechIndex].value)
        let techTypeId = 0;
        let techniciansData = this.gettechnicianHeads().controls[TechIndex].value;
        let techmem = techniciansData.technicians;
        let techData = [];
        if (techmem != undefined && techmem != null) {
            for (let value of techmem) {
                if (value.technicianName !== "" && value.technicianName !== null && value.technicianName !== undefined) {
                    techData.push({ "movieTechId": value.movieTechId, "refMemberId": value.technicianName[0].id, "seqNo": value.seqNo });
                }
                else {
                    techData.push({ "movieTechId": value.movieTechId, "refMemberId": "", "memberName": value.technicianNameIfNot, "seqNo": value.seqNo });
                }
            }
        }
        let techDatas;
        if (techniciansData.technicianTypeName == null || techniciansData.technicianTypeName == undefined || techniciansData.technicianTypeName == "") {
            techDatas = {
                "techTypeId": techniciansData.techTypeId,
                "refMovieId": this.movieid,
                "refProfessionId": "",
                "technicianTypeName": techniciansData.technicianTypeNameIfNot,
                "masterMovieTechniciansDtos": techData,
                "seqNo": techniciansData.seqNo
            };
        }
        else {
            techDatas = {
                "techTypeId": techniciansData.techTypeId,
                "refMovieId": this.movieid,
                "refProfessionId": techniciansData.technicianTypeName[0].id,
                "technicianTypeName": techniciansData.technicianTypeNameIfNot,
                "masterMovieTechniciansDtos": techData,
                "seqNo": techniciansData.seqNo
            };
        }
        // console.log(JSON.stringify(techDatas));
        this.loaderService.display(true);
        this.apiService.Create("MasterTechniciansType/save", techDatas).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
    deleteMovie(id) {
        let movId = {
            "movieId": id
        };
        this.loaderService.display(true);
        this.apiService.Create("movieDetails/deletebyId", movId).subscribe((result) => {
            this.loaderService.display(false);
            if (result.success == true) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_10___default.a.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
                this.getAllMovies();
            }
            else {
                this.loaderService.display(false);
                console.log(result.message);
            }
        });
    }
};
MovielistComponent.ctorParameters = () => [
    { type: src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_8__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
    { type: ngx_image_compress__WEBPACK_IMPORTED_MODULE_6__["NgxImageCompressService"] },
    { type: src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_9__["LoaderService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_1__["DatePipe"] },
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_4__["DomSanitizer"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Compiler"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewChild"])(angular_datatables__WEBPACK_IMPORTED_MODULE_5__["DataTableDirective"], { static: false })
], MovielistComponent.prototype, "dtElement", void 0);
MovielistComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
        selector: 'app-movielist',
        template: __webpack_require__(/*! raw-loader!./movielist.component.html */ "./node_modules/raw-loader/index.js!./src/app/movie/movielist/movielist.component.html"),
        styles: [__webpack_require__(/*! ./movielist.component.scss */ "./src/app/movie/movielist/movielist.component.scss")]
    })
], MovielistComponent);



/***/ }),

/***/ "./src/app/movie/movienews/movienews.component.scss":
/*!**********************************************************!*\
  !*** ./src/app/movie/movienews/movienews.component.scss ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-header {\n  background-color: #2d3e50;\n  color: #fbe116;\n}\n\n.btn1 {\n  border: 2px solid gray;\n  color: gray;\n  background-color: white;\n  padding: 4px 8px;\n  border-radius: 8px;\n  font-size: 15px;\n  font-weight: bold;\n}\n\n.upload-btn-wrapper {\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.upload-btn-wrapper input[type=file] {\n  font-size: 100px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  opacity: 0;\n}\n\n.pro1pic {\n  height: auto;\n  width: 100%;\n  margin: auto;\n  display: block;\n}\n\n.pro2pic {\n  height: auto;\n  width: 107%;\n  margin: auto;\n  display: block;\n}\n\n.pro3pic {\n  height: auto;\n  width: 119%;\n  margin: auto;\n  display: block;\n}\n\n.newsth {\n  text-align: center;\n}\n\n.fa-pencil-square-o {\n  color: #000f92;\n  font-size: 20px;\n}\n\n.fa-trash {\n  color: #ff0000;\n  font-size: 21px;\n}\n\n.actdeacbtn {\n  padding: 0% 2%;\n  font-size: 12px;\n  margin-right: 1%;\n}\n\n.ddname {\n  font-size: 74%;\n  font-weight: 700;\n  font-family: \"Noto Sans Kannada\", sans-serif;\n  margin-left: 1%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3d0aGFtL0RvY3VtZW50cy9zaW5pZ2hhbWFhZG1pbnBvcnRhbHV4LW1hc3Rlci9zcmMvYXBwL21vdmllL21vdmllbmV3cy9tb3ZpZW5ld3MuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vdmllL21vdmllbmV3cy9tb3ZpZW5ld3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtFQUNBLGNBQUE7QUNDSjs7QURFQTtFQUNJLHNCQUFBO0VBQ0EsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxnQkFBQTtFQUNBLHFCQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsT0FBQTtFQUNBLE1BQUE7RUFDQSxVQUFBO0FDQ0o7O0FERUE7RUFDSSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxrQkFBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7RUFDQSxlQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0FDQ0o7O0FEQ0E7RUFDSSxjQUFBO0VBQ0EsZ0JBQUE7RUFDQSw0Q0FBQTtFQUNBLGVBQUE7QUNFSiIsImZpbGUiOiJzcmMvYXBwL21vdmllL21vdmllbmV3cy9tb3ZpZW5ld3MuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gICAgY29sb3I6ICNmYmUxMTY7XG59XG5cbi5idG4xIHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCBncmF5O1xuICAgIGNvbG9yOiBncmF5O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDRweCA4cHg7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnVwbG9hZC1idG4td3JhcHBlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9XCJmaWxlXCJdIHtcbiAgICBmb250LXNpemU6IDEwMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICBvcGFjaXR5OiAwO1xufVxuXG4ucHJvMXBpYyB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnBybzJwaWMge1xuICAgIGhlaWdodDogYXV0bztcbiAgICB3aWR0aDogMTA3JTtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5wcm8zcGljIHtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgd2lkdGg6IDExOSU7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ubmV3c3RoIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5mYS1wZW5jaWwtc3F1YXJlLW8ge1xuICAgIGNvbG9yOiByZ2IoMCwgMTUsIDE0Nik7XG4gICAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uZmEtdHJhc2gge1xuICAgIGNvbG9yOiAjZmYwMDAwO1xuICAgIGZvbnQtc2l6ZTogMjFweDtcbn1cblxuLmFjdGRlYWNidG4ge1xuICAgIHBhZGRpbmc6IDAlIDIlO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDElO1xufVxuLmRkbmFtZSB7XG4gICAgZm9udC1zaXplOiA3NCU7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBmb250LWZhbWlseTogXCJOb3RvIFNhbnMgS2FubmFkYVwiLCBzYW5zLXNlcmlmO1xuICAgIG1hcmdpbi1sZWZ0OiAxJTtcbn1cbiIsIi5jYXJkLWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyZDNlNTA7XG4gIGNvbG9yOiAjZmJlMTE2O1xufVxuXG4uYnRuMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gIGNvbG9yOiBncmF5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogNHB4IDhweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51cGxvYWQtYnRuLXdyYXBwZXIgaW5wdXRbdHlwZT1maWxlXSB7XG4gIGZvbnQtc2l6ZTogMTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBvcGFjaXR5OiAwO1xufVxuXG4ucHJvMXBpYyB7XG4gIGhlaWdodDogYXV0bztcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5wcm8ycGljIHtcbiAgaGVpZ2h0OiBhdXRvO1xuICB3aWR0aDogMTA3JTtcbiAgbWFyZ2luOiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnBybzNwaWMge1xuICBoZWlnaHQ6IGF1dG87XG4gIHdpZHRoOiAxMTklO1xuICBtYXJnaW46IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ubmV3c3RoIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZmEtcGVuY2lsLXNxdWFyZS1vIHtcbiAgY29sb3I6ICMwMDBmOTI7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLmZhLXRyYXNoIHtcbiAgY29sb3I6ICNmZjAwMDA7XG4gIGZvbnQtc2l6ZTogMjFweDtcbn1cblxuLmFjdGRlYWNidG4ge1xuICBwYWRkaW5nOiAwJSAyJTtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBtYXJnaW4tcmlnaHQ6IDElO1xufVxuXG4uZGRuYW1lIHtcbiAgZm9udC1zaXplOiA3NCU7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtZmFtaWx5OiBcIk5vdG8gU2FucyBLYW5uYWRhXCIsIHNhbnMtc2VyaWY7XG4gIG1hcmdpbi1sZWZ0OiAxJTtcbn0iXX0= */"

/***/ }),

/***/ "./src/app/movie/movienews/movienews.component.ts":
/*!********************************************************!*\
  !*** ./src/app/movie/movienews/movienews.component.ts ***!
  \********************************************************/
/*! exports provided: MovienewsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MovienewsComponent", function() { return MovienewsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var ngx_image_compress__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-image-compress */ "./node_modules/ngx-image-compress/fesm2015/ngx-image-compress.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/core/_services/api.service */ "./src/app/core/_services/api.service.ts");
/* harmony import */ var src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/core/_services/loader.service */ "./src/app/core/_services/loader.service.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _movienews__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./movienews */ "./src/app/movie/movienews/movienews.ts");









let MovienewsComponent = class MovienewsComponent {
    constructor(apiService, fb, loaderService, imageCompress) {
        this.apiService = apiService;
        this.fb = fb;
        this.loaderService = loaderService;
        this.imageCompress = imageCompress;
        this.movienews = new _movienews__WEBPACK_IMPORTED_MODULE_8__["Movienews"]();
        this.movieList = [];
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.selectedItems = [];
        this.isDtInitialized = false;
        this.modules = {};
        this.imageChangedEvent71 = '';
        this.imageChangedEvent72 = '';
        this.imageChangedEvent73 = '';
        this.imageChangedEvent74 = '';
        this.imageChangedEvent75 = '';
        this.imageChangedEvent76 = '';
        this.imageChangedEvent77 = '';
        this.imageSendArr07 = [];
        this.userCroppedPhoto = ''; // image crop
        this.movienewsalldata = [];
        this.movieNewsForm = this.fb.group({
            MovieName: [''],
            newsTitle: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(300), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(2)])],
            newsDescription: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].maxLength(8000), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(2)])],
            newsTemplateId: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            userName: [''],
            userImage: [''],
            newsImagePath: [''],
            imagePath31: [''],
            imagePath32: [''],
            imagePath33: [''],
            imagePath71: [''],
            imagePath72: [''],
            imagePath73: [''],
            imagePath74: [''],
            imagePath75: [''],
            imagePath76: [''],
            imagePath77: [''],
        });
        this.modules = {
            'toolbar': [
                ['bold', 'italic', 'underline', 'strike'],
                [{ 'header': 1 }, { 'header': 2 }],
                [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                // [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript
                // [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
                // [{ 'direction': 'rtl' }],                         // text direction
                [{ 'size': ['small', false, 'large', 'huge'] }],
                // [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                [{ 'color': [] }, { 'background': [] }],
                [{ 'font': [] }],
                [{ 'align': [] }],
            ]
        };
    }
    ngOnInit() {
        this.movieNewsSettings = {
            text: 'Select',
            singleSelection: true,
            enableSearchFilter: true,
            classes: "myclass custom-class",
            searchPlaceholderText: 'Search ',
            badgeShowLimit: 5,
            groupBy: "category"
        };
        this.movienews.newsTemplateId = '1';
        this.getAllMovieNews();
    }
    getMovieList(event) {
        let movieName = event.target.value;
        let movieNameSearch = {
            "title": movieName
        };
        this.loaderService.display(true);
        this.apiService.Create("movieDetails/searchmovie", movieNameSearch).subscribe(data => {
            this.loaderService.display(false);
            let memList = [];
            let memdata = data.object;
            if (memdata != null && memdata != undefined) {
                memdata.forEach(ml => {
                    memList.push({ "id": ml.movieId, "itemName": ml.title, "profileImage": ml.movieImagesDtoList[0].poster });
                });
                this.movieList = memList;
            }
        });
    }
    selectedMovieId(memdata) {
        this.selectedMoviesId = memdata.id;
    }
    fileChangeEventProfile(e, seqno) {
        this.loaderService.display(true);
        this.imageChangedEvent71 = "";
        this.imageChangedEvent72 = "";
        this.imageChangedEvent73 = "";
        this.imageChangedEvent74 = "";
        this.imageChangedEvent75 = "";
        this.imageChangedEvent76 = "";
        this.imageChangedEvent77 = "";
        var orientation = 1;
        this.movienews.filename = "";
        this.movienews.filetype = "";
        if (e.target.files && e.target.files[0]) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if ((extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") && e.target.files[0].size <= 10000000) // 10000000 bytes = 10MB 
             {
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    if (seqno == 1) {
                        this.url1 = reader.result;
                        this.imageChangedEvent71 = e;
                    }
                    else if (seqno == 2) {
                        this.url2 = reader.result;
                        this.imageChangedEvent72 = e;
                    }
                    else if (seqno == 3) {
                        this.url3 = reader.result;
                        this.imageChangedEvent73 = e;
                    }
                    else if (seqno == 4) {
                        this.url4 = reader.result;
                        this.imageChangedEvent74 = e;
                    }
                    else if (seqno == 5) {
                        this.url5 = reader.result;
                        this.imageChangedEvent75 = e;
                    }
                    else if (seqno == 6) {
                        this.url6 = reader.result;
                        this.imageChangedEvent76 = e;
                    }
                    else if (seqno == 7) {
                        this.url7 = reader.result;
                        this.imageChangedEvent77 = e;
                    }
                    this.movienews.filename = file.name;
                    this.movienews.filetype = file.type;
                    //this.adminPage.profileImagePath = this.adminPage.imageBase64String;
                    //this.model.user_imagepath = this.model.imageBase64String;
                };
                // console.log("====>"+this.profileMember.imageBase64String);
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "JPG" && extention != "jpg") {
                this.movienews.filename = "";
                this.movienews.filetype = "";
                // this.profileMember.imageBase64String = "";
                // this.adminPage.profileImagePath = this.adminPage.imageBase64String;
                //  $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Image format should be jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.movienews.filename = "";
                this.movienews.filetype = "";
                // this.profileMember.imageBase64String = "";
                // this.adminPage.profileImagePath = "";
                //  $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                alert("Document size should be less than 10MB");
                return;
            }
        }
    }
    //cropped image 
    imageCroppedProfile(event, seqno) {
        var orientation = 1;
        this.imageCompress.compressFile(event.base64, orientation, 80, 80).then(result => {
            if (this.imageChangedEvent71) {
                this.url1 = result;
            }
            else if (this.imageChangedEvent72) {
                this.url2 = result;
            }
            else if (this.imageChangedEvent73) {
                this.url3 = result;
            }
            else if (this.imageChangedEvent74) {
                this.url4 = result;
            }
            else if (this.imageChangedEvent75) {
                this.url5 = result;
            }
            else if (this.imageChangedEvent76) {
                this.url6 = result;
            }
            else if (this.imageChangedEvent77) {
                this.url7 = result;
            }
            this.loaderService.display(false);
            const csv = result;
            // this.profileMember.imageBase64String = csv.replace("data:image/jpeg;base64,", "");
            let cur = [];
            cur = this.imageSendArr07.filter((temp) => temp.seqNum == seqno);
            if (cur.length > 0) {
                this.imageSendArr07.forEach(da => {
                    if (da.seqNum == seqno) {
                        da.imagePath = csv;
                    }
                });
            }
            else {
                let obj = {
                    "imagePath": csv,
                    "seqNum": seqno
                };
                this.imageSendArr07.push(obj);
            }
        });
    }
    imageLoadedProfile() {
        // show cropper
    }
    cropperReadyProfile() {
        // cropper ready
    }
    loadImageFailedProfile() {
        // show message
    }
    //upload file
    authorPhoto(e) {
        $('#file-upload').removeAttr('src');
        this.movienews.filename = "";
        this.movienews.filetype = "";
        this.movienews.imageBase64String = "";
        //this.adminPage.profileImagePath = "";
        if (e.target.files && e.target.files[0] && e.target.files[0].size <= 10000000) {
            let file = e.target.files[0];
            var filename = e.target.files[0].name.toString();
            var nameArray = filename.split('.');
            var extention = nameArray[nameArray.length - 1];
            if (extention == "JPEG" || extention == "jpeg" || extention == "jpg" || extention == "JPG") // 10000000 bytes = 10MB 
             {
                this.loaderService.display(true);
                this.imageChangedEvent = e; // image crop
                let reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => {
                    this.movienews.filename = file.name;
                    this.movienews.filetype = file.type;
                    // const csv: string = reader.result as string;
                    // this.adminPage.profileImage = csv.replace("data:image/jpeg;base64,", "");
                    this.movienews.userImage = reader.result;
                };
                this.movieNewsForm.controls.userImage.setValue(this.movienews.userImage);
            }
            else if (extention != "JPEG" && extention != "jpeg" && extention != "jpg" && extention != "JPG") {
                this.movienews.filename = "";
                this.movienews.filetype = "";
                this.movienews.userImage = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Image Format Should be Only jpeg or jpg");
                return;
            }
            else if (e.target.files[0].size > 10000000) {
                this.movienews.filename = "";
                this.movienews.filetype = "";
                this.movienews.userImage = "";
                // this.adminPage.profileImagePath = "";
                $('#file-upload').removeAttr('src');
                this.loaderService.display(false);
                sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire("Image size should be less than 10MB");
                return;
            }
        }
    }
    userPhotoCropped(event) {
        var orientation = -1;
        var imgResultBeforeCompress;
        imgResultBeforeCompress = event.base64;
        let isbc = this.imageCompress.byteCount(imgResultBeforeCompress);
        if (isbc < 200000) {
            this.imageCompress.compressFile(event.base64, orientation, 90, 88).then(result => {
                this.userCroppedPhoto = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.movieNewsForm.controls.userImage.setValue(this.userCroppedPhoto);
            });
        }
        else if (isbc > 200000 && isbc < 5000000) {
            this.imageCompress.compressFile(event.base64, orientation, 40, 40).then(result => {
                this.userCroppedPhoto = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.movieNewsForm.controls.userImage.setValue(this.userCroppedPhoto);
            });
        }
        else if (isbc > 3000000 && isbc < 10000000) {
            this.imageCompress.compressFile(event.base64, orientation, 35, 35).then(result => {
                this.userCroppedPhoto = result;
                this.loaderService.display(false);
                // this.adminPage.profileImage = this.croppedImage;
                this.movieNewsForm.controls.userImage.setValue(this.userCroppedPhoto);
            });
        }
    }
    imageLoaded() {
        // show cropper
    }
    cropperReady() {
        // cropper ready
    }
    loadImageFailed() {
        // show message
    }
    OnSubmit() {
        if ((this.movienews.userName == null || this.movienews.userName == undefined || this.movienews.userName == "") && (this.movienews.userImage == "" || this.movienews.userImage == null || this.movienews.userImage == undefined)) {
            this.movienews.userName = "";
            this.movienews.userImage = "";
        }
        if (this.movieNewsForm.valid) {
            if (this.movienews.newsTemplateId == '1') {
                this.movienews.movie_news_photosDtos = this.imageSendArr07;
            }
            else if (this.movienews.newsTemplateId == '3') {
                this.movienews.movie_news_photosDtos = this.imageSendArr07;
            }
            else if (this.movienews.newsTemplateId == '7') {
                this.movienews.movie_news_photosDtos = this.imageSendArr07;
            }
            let Data;
            let dd = [];
            if (this.movienews.newsTemplateId == '1') {
                dd.push({ "movieNewsPhotoId": this.movienews.newsPhotoId71, "newsImagePath": this.url1 });
            }
            else if (this.movienews.newsTemplateId == '3') {
                dd.push({ "movieNewsPhotoId": this.movienews.newsPhotoId71, "newsImagePath": this.url1 }, { "movieNewsPhotoId": this.movienews.newsPhotoId72, "newsImagePath": this.url2 }, { "movieNewsPhotoId": this.movienews.newsPhotoId73, "newsImagePath": this.url3 });
            }
            else if (this.movienews.newsTemplateId == '7') {
                dd.push({ "movieNewsPhotoId": this.movienews.newsPhotoId71, "newsImagePath": this.url1 }, { "movieNewsPhotoId": this.movienews.newsPhotoId72, "newsImagePath": this.url2 }, { "movieNewsPhotoId": this.movienews.newsPhotoId73, "newsImagePath": this.url3 }, { "movieNewsPhotoId": this.movienews.newsPhotoId74, "newsImagePath": this.url4 }, { "movieNewsPhotoId": this.movienews.newsPhotoId75, "newsImagePath": this.url5 }, { "movieNewsPhotoId": this.movienews.newsPhotoId76, "newsImagePath": this.url6 }, { "movieNewsPhotoId": this.movienews.newsPhotoId77, "newsImagePath": this.url7 });
            }
            Data = {
                "movieNewsId": this.movienews.movieNewsId,
                "movieId": this.selectedMoviesId,
                "newsTitle": this.movienews.newsTitle,
                "newsDescription": this.movienews.newsDescription,
                "newsTemplateId": this.movienews.newsTemplateId,
                "newsType": "Movie news",
                "seqNo": "1",
                "userName": this.movienews.userName,
                "userImage": this.userCroppedPhoto,
                "movie_news_photosDtos": dd
            };
            this.loaderService.display(true);
            this.apiService.Create("movienews/save", Data).subscribe(data => {
                this.loaderService.display(false);
                if (data.object != "" && data.object != undefined) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
                    this.ngOnInit();
                    this.clearMemberNewsForm();
                }
                else {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
                }
            });
        }
    }
    clearMemberNewsForm() {
        this.movienews.movieNewsId = null;
        this.movienews.newsType = 'Movie News';
        this.movienews.newsTitle = "";
        this.movienews.newsDescription = "";
        this.movienews.seqNo = null;
        this.movienews.newsTemplateId = '1';
        // this.imageChangedEvent01 = "";
        // this.url01 = "";
        this.croppedImage = null;
        // this.imageChangedEvent31 = "";
        // this.url31 = '';
        // this.imageChangedEvent32 = "";
        // this.url32 = '';
        // this.imageChangedEvent33 = '';
        // this.url33 = '';
        this.imageChangedEvent71 = "";
        this.url1 = '';
        this.imageChangedEvent72 = "";
        this.url2 = '';
        this.imageChangedEvent73 = "";
        this.url3 = '';
        this.imageChangedEvent74 = "";
        this.url4 = '';
        this.imageChangedEvent75 = "";
        this.url5 = '';
        this.imageChangedEvent76 = "";
        this.url6 = '';
        this.imageChangedEvent77 = "";
        this.url7 = '';
        this.movienews.userName = null;
        this.userCroppedPhoto = null;
    }
    getAllMovieNews() {
        this.apiService.getDATA("movienews/getAll").subscribe(data => {
            // let movienewsdata = data.object.movieNewsDtoList;
            // if (movienewsdata != null && movienewsdata != undefined) {
            //   this.movienewsalldata = movienewsdata;
            // }
            let movienewsdata = data.object;
            let mnlist = [];
            movienewsdata.forEach((mn) => {
                mnlist.push({ "movieNewsId": mn.movieNewsId, "title": mn.title, "newsTitle": mn.newsTitle, "newsTemplateId": mn.newsTemplateId });
            });
            this.movienewsalldata = mnlist;
            if (this.isDtInitialized) {
                this.dtElement.dtInstance.then((dtInstance) => {
                    dtInstance.destroy();
                    this.dtTrigger.next();
                });
            }
            else {
                this.isDtInitialized = true;
                this.dtTrigger.next();
            }
        });
    }
    editMovieNews(eid) {
        debugger;
        this.selectedItems = [];
        let movieid = {
            "refmovieNewsId": eid
        };
        this.loaderService.display(true);
        this.apiService.Create("movieNewsPhotos/getByRefMovieNewsId", movieid).subscribe(data => {
            this.loaderService.display(false);
            if (data.success == true) {
                if (data.object.newsTemplateId == '1') {
                    this.movienews.movieNewsId = eid;
                    this.movienews.newsTitle = data.object.newsTitle;
                    this.movienews.newsDescription = data.object.newsDescription;
                    this.movienews.seqNo = data.object.seqNo;
                    this.movienews.newsType = data.object.newsType;
                    this.movienews.newsTemplateId = '1';
                    this.url1 = data.object.movienewsphotosDtoList[0].newsImagePath;
                    this.movienews.newsPhotoId71 = data.object.movienewsphotosDtoList[0].movieNewsPhotoId;
                    this.movienews.userName = data.object.userName;
                    this.userCroppedPhoto = data.object.userImage;
                    this.selectedMoviesId = data.object.movieId;
                    this.selectedMovie = [{ "id": data.object.movieId, "itemName": data.object.title }];
                }
                else if (data.object.newsTemplateId == '3') {
                    this.movienews.movieNewsId = eid;
                    this.movienews.newsTitle = data.object.newsTitle;
                    this.movienews.newsDescription = data.object.newsDescription;
                    this.movienews.seqNo = data.object.seqNo;
                    this.movienews.newsType = data.object.newsType;
                    this.movienews.newsTemplateId = '3';
                    this.url1 = data.object.movienewsphotosDtoList[0].newsImagePath;
                    this.movienews.newsPhotoId71 = data.object.movienewsphotosDtoList[0].movieNewsPhotoId;
                    this.url2 = data.object.movienewsphotosDtoList[1].newsImagePath;
                    this.movienews.newsPhotoId72 = data.object.movienewsphotosDtoList[1].movieNewsPhotoId;
                    this.url3 = data.object.movienewsphotosDtoList[2].newsImagePath;
                    this.movienews.newsPhotoId73 = data.object.movienewsphotosDtoList[2].movieNewsPhotoId;
                    this.movienews.userName = data.object.userName;
                    this.userCroppedPhoto = data.object.userImage;
                    this.selectedMoviesId = data.object.movieId;
                    this.selectedMovie = [{ "id": data.object.movieId, "itemName": data.object.title }];
                }
                else if (data.object.newsTemplateId == '7') {
                    this.movienews.movieNewsId = eid;
                    this.movienews.newsTitle = data.object.newsTitle;
                    this.movienews.newsDescription = data.object.newsDescription;
                    this.movienews.seqNo = data.object.seqNo;
                    this.movienews.newsType = data.object.newsType;
                    this.movienews.newsTemplateId = '7';
                    this.url1 = data.object.movienewsphotosDtoList[0].newsImagePath;
                    this.movienews.newsPhotoId71 = data.object.movienewsphotosDtoList[0].movieNewsPhotoId;
                    this.url2 = data.object.movienewsphotosDtoList[1].newsImagePath;
                    this.movienews.newsPhotoId72 = data.object.movienewsphotosDtoList[1].movieNewsPhotoId;
                    this.url3 = data.object.movienewsphotosDtoList[2].newsImagePath;
                    this.movienews.newsPhotoId73 = data.object.movienewsphotosDtoList[2].movieNewsPhotoId;
                    this.url4 = data.object.movienewsphotosDtoList[3].newsImagePath;
                    this.movienews.newsPhotoId74 = data.object.movienewsphotosDtoList[3].movieNewsPhotoId;
                    this.url5 = data.object.movienewsphotosDtoList[4].newsImagePath;
                    this.movienews.newsPhotoId75 = data.object.movienewsphotosDtoList[4].movieNewsPhotoId;
                    this.url6 = data.object.movieNewsDtoList[5].newsImagePath;
                    this.movienews.newsPhotoId76 = data.object.movieNewsDtoList[5].movieNewsPhotoId;
                    this.url7 = data.object.movienewsphotosDtoList[6].newsImagePath;
                    this.movienews.newsPhotoId77 = data.object.movienewsphotosDtoList[6].movieNewsPhotoId;
                    this.movienews.userName = data.object.userName;
                    this.userCroppedPhoto = data.object.userImage;
                    this.selectedMoviesId = data.object.movieId;
                    this.selectedMovie = [{ "id": data.object.movieId, "itemName": data.object.title }];
                }
            }
        }, error => {
            this.loaderService.display(false);
        });
    }
    deleteMovieNews(deldata) {
        let movienewsid = deldata;
        let moviedata = {
            "movieNewsId": movienewsid
        };
        this.loaderService.display(true);
        this.apiService.Create("movienews/deleteById", moviedata).subscribe(data => {
            this.loaderService.display(false);
            if (data != undefined) {
                if (data.success) {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_7___default.a.fire(data.message);
                    this.ngOnInit();
                }
            }
        });
    }
};
MovienewsComponent.ctorParameters = () => [
    { type: src_app_core_services_api_service__WEBPACK_IMPORTED_MODULE_5__["ApiService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: src_app_core_services_loader_service__WEBPACK_IMPORTED_MODULE_6__["LoaderService"] },
    { type: ngx_image_compress__WEBPACK_IMPORTED_MODULE_3__["NgxImageCompressService"] }
];
MovienewsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-movienews',
        template: __webpack_require__(/*! raw-loader!./movienews.component.html */ "./node_modules/raw-loader/index.js!./src/app/movie/movienews/movienews.component.html"),
        styles: [__webpack_require__(/*! ./movienews.component.scss */ "./src/app/movie/movienews/movienews.component.scss")]
    })
], MovienewsComponent);



/***/ }),

/***/ "./src/app/movie/movienews/movienews.ts":
/*!**********************************************!*\
  !*** ./src/app/movie/movienews/movienews.ts ***!
  \**********************************************/
/*! exports provided: Movienews */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Movienews", function() { return Movienews; });
class Movienews {
    constructor() {
        //  refWebPageId: number;
        this.movie_news_photosDtos = [];
    }
}


/***/ }),

/***/ "./src/app/sanitize-html.pipe.ts":
/*!***************************************!*\
  !*** ./src/app/sanitize-html.pipe.ts ***!
  \***************************************/
/*! exports provided: SanitizeHtmlPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SanitizeHtmlPipe", function() { return SanitizeHtmlPipe; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");



let SanitizeHtmlPipe = class SanitizeHtmlPipe {
    constructor(_sanitizer) {
        this._sanitizer = _sanitizer;
    }
    transform(value) {
        return this._sanitizer.bypassSecurityTrustResourceUrl('data:image/png;base64, ' + value);
    }
};
SanitizeHtmlPipe.ctorParameters = () => [
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__["DomSanitizer"] }
];
SanitizeHtmlPipe = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Pipe"])({
        name: 'sanitizeHtml'
    })
], SanitizeHtmlPipe);



/***/ }),

/***/ "./src/app/services/account.service.ts":
/*!*********************************************!*\
  !*** ./src/app/services/account.service.ts ***!
  \*********************************************/
/*! exports provided: AccountService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountService", function() { return AccountService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");






let AccountService = class AccountService {
    //private baseUrllogin : string = "http://43.247.156.175:8080/sinighama/staff/login";
    constructor(Http, router) {
        this.Http = Http;
        this.router = router;
        //private baseUrllogin : string = "http://localhost:6060/staff/login";
        this.baseUrllogin = "https://sinilinux.azurewebsites.net/staff/login";
        this.loginStatus = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"](this.chechLoginStatus());
        this.currentUserSubject = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"](JSON.parse(localStorage.getItem('staffLogin')));
        this.currentUser = this.currentUserSubject.asObservable();
    }
    get currentUserValue() {
        return this.currentUserSubject.value;
    }
    Login(mobile, password) {
        localStorage.clear();
        return this.Http.post(this.baseUrllogin, { mobile, password }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(object => {
            if (object != null) {
                localStorage.setItem('loginStatus', '1');
                localStorage.setItem("staffLogin", JSON.stringify(object));
                //this.loginStatus.next(true);
                //this.router.navigate(['/home']);
                this.currentUserSubject.next(object);
                return object;
            }
            else {
                this.loginStatus.next(false);
                this.router.navigate(['/']);
            }
            //return object;
        }));
    }
    LogOut() {
        localStorage.removeItem('staffLogin');
        this.currentUserSubject.next(null);
    }
    get isLoggesIn() {
        return this.loginStatus.asObservable();
    }
    get currentRoleId() {
        return this.UserRoleId.asObservable();
    }
    chechLoginStatus() {
        return false;
    }
};
AccountService.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"] }
];
AccountService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
], AccountService);



/***/ }),

/***/ "./src/environments/environment.ts":
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
// This file can be replaced during build by using the `fileReplacements` array.
// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.
const environment = {
    production: false
};
/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */
// import 'zone.js/dist/zone-error';  // Included with Angular CLI.


/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "./node_modules/@angular/platform-browser-dynamic/fesm2015/platform-browser-dynamic.js");
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/app.module */ "./src/app/app.module.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./environments/environment */ "./src/environments/environment.ts");




if (_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["enableProdMode"])();
}
Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__["platformBrowserDynamic"])().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_2__["AppModule"])
    .catch(err => console.error(err));


/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Users/gowtham/Documents/sinighamaadminportalux-master/src/main.ts */"./src/main.ts");


/***/ }),

/***/ 1:
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 2:
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 3:
/*!************************!*\
  !*** stream (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main-es2015.js.map